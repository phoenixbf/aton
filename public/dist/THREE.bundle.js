/*! For license information please see THREE.bundle.js.LICENSE.txt */
(()=>{"use strict";var t={983:t=>{t.exports="data:application/wasm;base64,"}},e={};function n(i){var r=e[i];if(void 0!==r)return r.exports;var s=e[i]={exports:{}};return t[i](s,s.exports,n),s.exports}n.m=t,n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.b=document&&document.baseURI||self.location.href;var i={};n.r(i),n.d(i,{ACESFilmicToneMapping:()=>At,AddEquation:()=>T,AddOperation:()=>at,AdditiveAnimationBlendMode:()=>Je,AdditiveBlending:()=>b,AgXToneMapping:()=>dt,AlphaFormat:()=>jt,AlwaysCompare:()=>Rn,AlwaysDepth:()=>K,AlwaysStencilFunc:()=>_n,AmbientLight:()=>Kh,AnimationAction:()=>GA,AnimationClip:()=>vh,AnimationLoader:()=>Sh,AnimationMixer:()=>VA,AnimationObjectGroup:()=>zA,AnimationUtils:()=>ah,ArcCurve:()=>Ql,ArrayCamera:()=>yA,ArrowHelper:()=>qu,AttachedBindMode:()=>gt,Audio:()=>bA,AudioAnalyser:()=>DA,AudioContext:()=>uA,AudioListener:()=>_A,AudioLoader:()=>dA,AxesHelper:()=>Yu,BackSide:()=>I,BasicDepthPacking:()=>Ze,BasicShadowMap:()=>m,BatchedMesh:()=>zo,Bone:()=>Ka,BooleanKeyframeTrack:()=>uh,Box2:()=>ou,Box3:()=>Hi,Box3Helper:()=>Ou,BoxGeometry:()=>Zs,BoxHelper:()=>ku,BufferAttribute:()=>Cs,BufferGeometry:()=>Ns,BufferGeometryLoader:()=>rA,ByteType:()=>Ft,Cache:()=>Ch,Camera:()=>ra,CameraHelper:()=>Lu,CanvasTexture:()=>gl,CapsuleGeometry:()=>yl,CatmullRomCurve3:()=>Fl,CineonToneMapping:()=>ht,CircleGeometry:()=>vl,ClampToEdgeWrapping:()=>wt,Clock:()=>vA,Color:()=>ls,ColorKeyframeTrack:()=>dh,ColorManagement:()=>_i,CompressedArrayTexture:()=>dl,CompressedCubeTexture:()=>pl,CompressedTexture:()=>ul,CompressedTextureLoader:()=>Mh,ConeGeometry:()=>Cl,ConstantAlphaFactor:()=>J,ConstantColorFactor:()=>Y,Controls:()=>Ju,CubeCamera:()=>ha,CubeReflectionMapping:()=>yt,CubeRefractionMapping:()=>vt,CubeTexture:()=>Aa,CubeTextureLoader:()=>Dh,CubeUVReflectionMapping:()=>It,CubicBezierCurve:()=>zl,CubicBezierCurve3:()=>Gl,CubicInterpolant:()=>lh,CullFaceBack:()=>p,CullFaceFront:()=>g,CullFaceFrontBack:()=>f,CullFaceNone:()=>d,Curve:()=>Ml,CurvePath:()=>jl,CustomBlending:()=>M,CustomToneMapping:()=>ut,CylinderGeometry:()=>xl,Cylindrical:()=>ru,Data3DTexture:()=>zi,DataArrayTexture:()=>ki,DataTexture:()=>Za,DataTextureLoader:()=>Rh,DataUtils:()=>ms,DecrementStencilOp:()=>pn,DecrementWrapStencilOp:()=>fn,DefaultLoadingManager:()=>Eh,DepthFormat:()=>Zt,DepthStencilFormat:()=>$t,DepthTexture:()=>fl,DetachedBindMode:()=>ft,DirectionalLight:()=>Xh,DirectionalLightHelper:()=>Ru,DiscreteInterpolant:()=>hh,DodecahedronGeometry:()=>El,DoubleSide:()=>E,DstAlphaFactor:()=>z,DstColorFactor:()=>H,DynamicCopyUsage:()=>zn,DynamicDrawUsage:()=>Pn,DynamicReadUsage:()=>Nn,EdgesGeometry:()=>Sl,EllipseCurve:()=>Tl,EqualCompare:()=>Sn,EqualDepth:()=>tt,EqualStencilFunc:()=>xn,EquirectangularReflectionMapping:()=>xt,EquirectangularRefractionMapping:()=>Ct,Euler:()=>br,EventDispatcher:()=>Xn,ExternalTexture:()=>ml,ExtrudeGeometry:()=>Bc,FileLoader:()=>Bh,Float16BufferAttribute:()=>Ms,Float32BufferAttribute:()=>Ts,FloatType:()=>Gt,Fog:()=>ma,FogExp2:()=>fa,FramebufferTexture:()=>Al,FrontSide:()=>C,Frustum:()=>vo,FrustumArray:()=>Io,GLBufferAttribute:()=>XA,GLSL1:()=>Hn,GLSL3:()=>Vn,GreaterCompare:()=>Tn,GreaterDepth:()=>nt,GreaterEqualCompare:()=>Dn,GreaterEqualDepth:()=>et,GreaterEqualStencilFunc:()=>wn,GreaterStencilFunc:()=>In,GridHelper:()=>Su,Group:()=>da,HalfFloatType:()=>Ht,HemisphereLight:()=>Lh,HemisphereLightHelper:()=>Bu,IcosahedronGeometry:()=>Mc,ImageBitmapLoader:()=>hA,ImageLoader:()=>Qh,ImageUtils:()=>Mi,IncrementStencilOp:()=>dn,IncrementWrapStencilOp:()=>gn,InstancedBufferAttribute:()=>no,InstancedBufferGeometry:()=>iA,InstancedInterleavedBuffer:()=>jA,InstancedMesh:()=>ho,Int16BufferAttribute:()=>_s,Int32BufferAttribute:()=>Bs,Int8BufferAttribute:()=>Is,IntType:()=>Ot,InterleavedBuffer:()=>va,InterleavedBufferAttribute:()=>Ca,Interpolant:()=>oh,InterpolateDiscrete:()=>ze,InterpolateLinear:()=>Ge,InterpolateSmooth:()=>He,InterpolationSamplingMode:()=>jn,InterpolationSamplingType:()=>Jn,InvertStencilOp:()=>mn,KeepStencilOp:()=>An,KeyframeTrack:()=>Ah,LOD:()=>Oa,LatheGeometry:()=>Tc,Layers:()=>Br,LessCompare:()=>Bn,LessDepth:()=>Z,LessEqualCompare:()=>Mn,LessEqualDepth:()=>$,LessEqualStencilFunc:()=>Cn,LessStencilFunc:()=>vn,Light:()=>Ph,LightProbe:()=>tA,Line:()=>Xo,Line3:()=>gu,LineBasicMaterial:()=>Go,LineCurve:()=>Hl,LineCurve3:()=>Vl,LineDashedMaterial:()=>th,LineLoop:()=>el,LineSegments:()=>tl,LinearFilter:()=>Qt,LinearInterpolant:()=>ch,LinearMipMapLinearFilter:()=>Pt,LinearMipMapNearestFilter:()=>Rt,LinearMipmapLinearFilter:()=>Ut,LinearMipmapNearestFilter:()=>Dt,LinearSRGBColorSpace:()=>on,LinearToneMapping:()=>lt,LinearTransfer:()=>ln,Loader:()=>wh,LoaderUtils:()=>nA,LoadingManager:()=>Ih,LoopOnce:()=>Ne,LoopPingPong:()=>Oe,LoopRepeat:()=>ke,MOUSE:()=>A,Material:()=>As,MaterialLoader:()=>eA,MathUtils:()=>oi,Matrix2:()=>su,Matrix3:()=>di,Matrix4:()=>fr,MaxEquation:()=>U,Mesh:()=>Xs,MeshBasicMaterial:()=>us,MeshDepthMaterial:()=>Kc,MeshDistanceMaterial:()=>Zc,MeshLambertMaterial:()=>Xc,MeshMatcapMaterial:()=>$c,MeshNormalMaterial:()=>jc,MeshPhongMaterial:()=>Wc,MeshPhysicalMaterial:()=>Yc,MeshStandardMaterial:()=>qc,MeshToonMaterial:()=>Jc,MinEquation:()=>R,MirroredRepeatWrapping:()=>_t,MixOperation:()=>st,MultiplyBlending:()=>S,MultiplyOperation:()=>rt,NearestFilter:()=>bt,NearestMipMapLinearFilter:()=>Tt,NearestMipMapNearestFilter:()=>St,NearestMipmapLinearFilter:()=>Mt,NearestMipmapNearestFilter:()=>Bt,NeutralToneMapping:()=>pt,NeverCompare:()=>bn,NeverDepth:()=>X,NeverStencilFunc:()=>yn,NoBlending:()=>w,NoColorSpace:()=>sn,NoToneMapping:()=>ot,NormalAnimationBlendMode:()=>We,NormalBlending:()=>_,NotEqualCompare:()=>Qn,NotEqualDepth:()=>it,NotEqualStencilFunc:()=>En,NumberKeyframeTrack:()=>ph,Object3D:()=>Hr,ObjectLoader:()=>sA,ObjectSpaceNormalMap:()=>rn,OctahedronGeometry:()=>Qc,OneFactor:()=>L,OneMinusConstantAlphaFactor:()=>j,OneMinusConstantColorFactor:()=>W,OneMinusDstAlphaFactor:()=>G,OneMinusDstColorFactor:()=>V,OneMinusSrcAlphaFactor:()=>O,OneMinusSrcColorFactor:()=>N,OrthographicCamera:()=>Jh,PCFShadowMap:()=>y,PCFSoftShadowMap:()=>v,PMREMGenerator:()=>Id,Path:()=>Xl,PerspectiveCamera:()=>la,Plane:()=>go,PlaneGeometry:()=>Dc,PlaneHelper:()=>zu,PointLight:()=>Wh,PointLightHelper:()=>Eu,Points:()=>ol,PointsMaterial:()=>nl,PolarGridHelper:()=>Mu,PolyhedronGeometry:()=>Il,PositionalAudio:()=>QA,PropertyBinding:()=>OA,PropertyMixer:()=>RA,QuadraticBezierCurve:()=>ql,QuadraticBezierCurve3:()=>Yl,Quaternion:()=>ci,QuaternionKeyframeTrack:()=>fh,QuaternionLinearInterpolant:()=>gh,RED_GREEN_RGTC2_Format:()=>Le,RED_RGTC1_Format:()=>Ue,REVISION:()=>h,RGBADepthPacking:()=>$e,RGBAFormat:()=>Kt,RGBAIntegerFormat:()=>se,RGBA_ASTC_10x10_Format:()=>Se,RGBA_ASTC_10x5_Format:()=>_e,RGBA_ASTC_10x6_Format:()=>be,RGBA_ASTC_10x8_Format:()=>Be,RGBA_ASTC_12x10_Format:()=>Me,RGBA_ASTC_12x12_Format:()=>Te,RGBA_ASTC_4x4_Format:()=>me,RGBA_ASTC_5x4_Format:()=>ye,RGBA_ASTC_5x5_Format:()=>ve,RGBA_ASTC_6x5_Format:()=>xe,RGBA_ASTC_6x6_Format:()=>Ce,RGBA_ASTC_8x5_Format:()=>Ie,RGBA_ASTC_8x6_Format:()=>Ee,RGBA_ASTC_8x8_Format:()=>we,RGBA_BPTC_Format:()=>Qe,RGBA_ETC2_EAC_Format:()=>fe,RGBA_PVRTC_2BPPV1_Format:()=>de,RGBA_PVRTC_4BPPV1_Format:()=>ue,RGBA_S3TC_DXT1_Format:()=>oe,RGBA_S3TC_DXT3_Format:()=>le,RGBA_S3TC_DXT5_Format:()=>ce,RGBDepthPacking:()=>tn,RGBFormat:()=>Xt,RGBIntegerFormat:()=>re,RGB_BPTC_SIGNED_Format:()=>De,RGB_BPTC_UNSIGNED_Format:()=>Re,RGB_ETC1_Format:()=>pe,RGB_ETC2_Format:()=>ge,RGB_PVRTC_2BPPV1_Format:()=>Ae,RGB_PVRTC_4BPPV1_Format:()=>he,RGB_S3TC_DXT1_Format:()=>ae,RGDepthPacking:()=>en,RGFormat:()=>ne,RGIntegerFormat:()=>ie,RawShaderMaterial:()=>Vc,Ray:()=>gr,Raycaster:()=>ZA,RectAreaLight:()=>Zh,RedFormat:()=>te,RedIntegerFormat:()=>ee,ReinhardToneMapping:()=>ct,RenderTarget:()=>Fi,RenderTarget3D:()=>qA,RepeatWrapping:()=>Et,ReplaceStencilOp:()=>un,ReverseSubtractEquation:()=>D,RingGeometry:()=>Rc,SIGNED_RED_GREEN_RGTC2_Format:()=>Fe,SIGNED_RED_RGTC1_Format:()=>Pe,SRGBColorSpace:()=>an,SRGBTransfer:()=>cn,Scene:()=>ya,ShaderChunk:()=>$u,ShaderLib:()=>ed,ShaderMaterial:()=>ia,ShadowMaterial:()=>Hc,Shape:()=>Kl,ShapeGeometry:()=>Uc,ShapePath:()=>Wu,ShapeUtils:()=>wc,ShortType:()=>Nt,Skeleton:()=>eo,SkeletonHelper:()=>Cu,SkinnedMesh:()=>Xa,Source:()=>Qi,Sphere:()=>or,SphereGeometry:()=>Pc,Spherical:()=>iu,SphericalHarmonics3:()=>$h,SplineCurve:()=>Wl,SpotLight:()=>Gh,SpotLightHelper:()=>mu,Sprite:()=>La,SpriteMaterial:()=>Ia,SrcAlphaFactor:()=>k,SrcAlphaSaturateFactor:()=>q,SrcColorFactor:()=>F,StaticCopyUsage:()=>On,StaticDrawUsage:()=>Un,StaticReadUsage:()=>Fn,StereoCamera:()=>mA,StreamCopyUsage:()=>Gn,StreamDrawUsage:()=>Ln,StreamReadUsage:()=>kn,StringKeyframeTrack:()=>mh,SubtractEquation:()=>Q,SubtractiveBlending:()=>B,TOUCH:()=>u,TangentSpaceNormalMap:()=>nn,TetrahedronGeometry:()=>Lc,Texture:()=>Pi,TextureLoader:()=>Uh,TextureUtils:()=>Xu,Timer:()=>eu,TimestampQuery:()=>Wn,TorusGeometry:()=>Fc,TorusKnotGeometry:()=>Nc,Triangle:()=>is,TriangleFanDrawMode:()=>Ke,TriangleStripDrawMode:()=>Xe,TrianglesDrawMode:()=>je,TubeGeometry:()=>kc,UVMapping:()=>mt,Uint16BufferAttribute:()=>bs,Uint32BufferAttribute:()=>Ss,Uint8BufferAttribute:()=>Es,Uint8ClampedBufferAttribute:()=>ws,Uniform:()=>YA,UniformsGroup:()=>JA,UniformsLib:()=>td,UniformsUtils:()=>na,UnsignedByteType:()=>Lt,UnsignedInt101111Type:()=>Jt,UnsignedInt248Type:()=>Yt,UnsignedInt5999Type:()=>Wt,UnsignedIntType:()=>zt,UnsignedShort4444Type:()=>Vt,UnsignedShort5551Type:()=>qt,UnsignedShortType:()=>kt,VSMShadowMap:()=>x,Vector2:()=>li,Vector3:()=>hi,Vector4:()=>Li,VectorKeyframeTrack:()=>yh,VideoFrameTexture:()=>hl,VideoTexture:()=>cl,WebGL3DRenderTarget:()=>Gi,WebGLArrayRenderTarget:()=>Oi,WebGLCoordinateSystem:()=>qn,WebGLCubeRenderTarget:()=>ua,WebGLRenderTarget:()=>Ni,WebGLRenderer:()=>Tg,WebGLUtils:()=>Eg,WebGPUCoordinateSystem:()=>Yn,WebXRController:()=>ga,WireframeGeometry:()=>Oc,WrapAroundEnding:()=>Ye,ZeroCurvatureEnding:()=>Ve,ZeroFactor:()=>P,ZeroSlopeEnding:()=>qe,ZeroStencilOp:()=>hn,createCanvasElement:()=>vi});var r={};n.r(r),n.d(r,{ru:()=>Kf,_c:()=>Zf});var s={};n.r(s);var a={};n.r(a),n.d(a,{bvh_distance_functions:()=>gS,bvh_ray_functions:()=>fS,bvh_struct_definitions:()=>mS,common_functions:()=>pS});var o={};n.r(o),n.d(o,{AVERAGE:()=>Dw,BVHShaderGLSL:()=>a,CENTER:()=>Qw,CONTAINED:()=>Lw,ExtendedTriangle:()=>S_,FloatVertexAttributeTexture:()=>JB,INTERSECTED:()=>Pw,IntVertexAttributeTexture:()=>WB,MeshBVH:()=>pB,MeshBVHHelper:()=>UB,MeshBVHUniformStruct:()=>jB,NOT_INTERSECTED:()=>Uw,OrientedBox:()=>M_,SAH:()=>Rw,StaticGeometryGenerator:()=>dS,UIntVertexAttributeTexture:()=>YB,VertexAttributeTexture:()=>qB,acceleratedRaycast:()=>wB,computeBatchedBoundsTree:()=>MB,computeBoundsTree:()=>BB,disposeBatchedBoundsTree:()=>TB,disposeBoundsTree:()=>SB,estimateMemoryInBytes:()=>zB,getBVHExtremes:()=>OB,getJSONStructure:()=>HB,getTriangleHitPointInfo:()=>ob,shaderDistanceFunction:()=>vS,shaderIntersectFunction:()=>xS,shaderStructs:()=>yS,validateBounds:()=>GB});var l={};n.r(l),n.d(l,{B3DMLoader:()=>nT,B3DMLoaderBase:()=>aM,CAMERA_FRAME:()=>RM,CMPTLoader:()=>CT,CMPTLoaderBase:()=>cM,CameraTransitionManager:()=>sD,ENU_FRAME:()=>DM,Ellipsoid:()=>PM,EllipsoidRegion:()=>ZM,EnvironmentControls:()=>UQ,FAILED:()=>ES,GeoUtils:()=>mM,GlobeControls:()=>XQ,I3DMLoader:()=>xT,I3DMLoaderBase:()=>oM,LOADED:()=>BS,LOADING:()=>_S,LRUCache:()=>CS,LoaderBase:()=>NS,LoaderUtils:()=>FS,MemoryUtils:()=>eT,OBB:()=>zM,OBJECT_FRAME:()=>UM,PARSING:()=>bS,PNTSLoader:()=>oT,PNTSLoaderBase:()=>lM,PriorityQueue:()=>IS,TilesRenderer:()=>XT,TilesRendererBase:()=>eM,TraversalUtils:()=>DS,UNLOADED:()=>wS,WGS84_ELLIPSOID:()=>LM,WGS84_FLATTENING:()=>MS,WGS84_HEIGHT:()=>TS,WGS84_RADIUS:()=>SS});var c={};n.r(c),n.d(c,{FINGER_TIPS:()=>yG,FpsMovement:()=>SG,HANDS:()=>xG,Hand:()=>vG,HandMovement:()=>IG,JOINT_IDS:()=>AG,JOINT_INDEX:()=>dG,JOINT_RADIUS:()=>pG,JOINT_SEGMENTS:()=>gG,JOINT_SEGMENT_STEPS:()=>fG,JOINT_TIPS:()=>mG,JointEnum:()=>hG,LN_SCALE_MAX:()=>TR,LN_SCALE_MIN:()=>MR,NUM_JOINTS:()=>uG,PackedSplats:()=>wz,PlyReader:()=>VO,PointerControls:()=>MG,Readback:()=>gO,RgbaArray:()=>mO,Sint8ToFloat:()=>KP,SparkControls:()=>BG,SparkRenderer:()=>Lz,SparkViewpoint:()=>Tz,SplatAccumulator:()=>Rz,SplatEdit:()=>bO,SplatEditRgbaBlendMode:()=>IO,SplatEditSdf:()=>wO,SplatEditSdfType:()=>xO,SplatEdits:()=>BO,SplatFileType:()=>gz,SplatGenerator:()=>UO,SplatLoader:()=>dz,SplatMesh:()=>LO,SplatModifier:()=>DO,SplatSkinning:()=>Wz,SplatTransformer:()=>RO,SpzReader:()=>Gz,SpzWriter:()=>qz,Uint8ToFloat:()=>XP,VRButton:()=>cG,XrHands:()=>CG,constructAxes:()=>Zz,constructGrid:()=>Kz,constructSpherePoints:()=>$z,defines:()=>kR,dyno:()=>dO,flipPixels:()=>lL,floatToSint8:()=>jP,floatToUint8:()=>JP,fromHalf:()=>WP,generators:()=>rG,getSplatFileType:()=>fz,imageSplats:()=>eG,isAndroid:()=>aL,isMobile:()=>sL,isOculus:()=>oL,isPcSogs:()=>yz,modifiers:()=>oG,pixelsToPngUrl:()=>cL,setPackedSplat:()=>tL,textSplats:()=>tG,toHalf:()=>YP,transcodeSpz:()=>Yz,unpackSplat:()=>iL,unpackSplats:()=>xz,utils:()=>wL});const h="180",A={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},u={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},d=0,p=1,g=2,f=3,m=0,y=1,v=2,x=3,C=0,I=1,E=2,w=0,_=1,b=2,B=3,S=4,M=5,T=100,Q=101,D=102,R=103,U=104,P=200,L=201,F=202,N=203,k=204,O=205,z=206,G=207,H=208,V=209,q=210,Y=211,W=212,J=213,j=214,X=0,K=1,Z=2,$=3,tt=4,et=5,nt=6,it=7,rt=0,st=1,at=2,ot=0,lt=1,ct=2,ht=3,At=4,ut=5,dt=6,pt=7,gt="attached",ft="detached",mt=300,yt=301,vt=302,xt=303,Ct=304,It=306,Et=1e3,wt=1001,_t=1002,bt=1003,Bt=1004,St=1004,Mt=1005,Tt=1005,Qt=1006,Dt=1007,Rt=1007,Ut=1008,Pt=1008,Lt=1009,Ft=1010,Nt=1011,kt=1012,Ot=1013,zt=1014,Gt=1015,Ht=1016,Vt=1017,qt=1018,Yt=1020,Wt=35902,Jt=35899,jt=1021,Xt=1022,Kt=1023,Zt=1026,$t=1027,te=1028,ee=1029,ne=1030,ie=1031,re=1032,se=1033,ae=33776,oe=33777,le=33778,ce=33779,he=35840,Ae=35841,ue=35842,de=35843,pe=36196,ge=37492,fe=37496,me=37808,ye=37809,ve=37810,xe=37811,Ce=37812,Ie=37813,Ee=37814,we=37815,_e=37816,be=37817,Be=37818,Se=37819,Me=37820,Te=37821,Qe=36492,De=36494,Re=36495,Ue=36283,Pe=36284,Le=36285,Fe=36286,Ne=2200,ke=2201,Oe=2202,ze=2300,Ge=2301,He=2302,Ve=2400,qe=2401,Ye=2402,We=2500,Je=2501,je=0,Xe=1,Ke=2,Ze=3200,$e=3201,tn=3202,en=3203,nn=0,rn=1,sn="",an="srgb",on="srgb-linear",ln="linear",cn="srgb",hn=0,An=7680,un=7681,dn=7682,pn=7683,gn=34055,fn=34056,mn=5386,yn=512,vn=513,xn=514,Cn=515,In=516,En=517,wn=518,_n=519,bn=512,Bn=513,Sn=514,Mn=515,Tn=516,Qn=517,Dn=518,Rn=519,Un=35044,Pn=35048,Ln=35040,Fn=35045,Nn=35049,kn=35041,On=35046,zn=35050,Gn=35042,Hn="100",Vn="300 es",qn=2e3,Yn=2001,Wn={COMPUTE:"compute",RENDER:"render"},Jn={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},jn={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};class Xn{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return void 0!==n&&void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){const n=this._listeners;if(void 0===n)return;const i=n[t];if(void 0!==i){const t=i.indexOf(e);-1!==t&&i.splice(t,1)}}dispatchEvent(t){const e=this._listeners;if(void 0===e)return;const n=e[t.type];if(void 0!==n){t.target=this;const e=n.slice(0);for(let n=0,i=e.length;n<i;n++)e[n].call(this,t);t.target=null}}}const Kn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Zn=1234567;const $n=Math.PI/180,ti=180/Math.PI;function ei(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(Kn[255&t]+Kn[t>>8&255]+Kn[t>>16&255]+Kn[t>>24&255]+"-"+Kn[255&e]+Kn[e>>8&255]+"-"+Kn[e>>16&15|64]+Kn[e>>24&255]+"-"+Kn[63&n|128]+Kn[n>>8&255]+"-"+Kn[n>>16&255]+Kn[n>>24&255]+Kn[255&i]+Kn[i>>8&255]+Kn[i>>16&255]+Kn[i>>24&255]).toLowerCase()}function ni(t,e,n){return Math.max(e,Math.min(n,t))}function ii(t,e){return(t%e+e)%e}function ri(t,e,n){return(1-n)*t+n*e}function si(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function ai(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}const oi={DEG2RAD:$n,RAD2DEG:ti,generateUUID:ei,clamp:ni,euclideanModulo:ii,mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:ri,damp:function(t,e,n,i){return ri(t,e,1-Math.exp(-n*i))},pingpong:function(t,e=1){return e-Math.abs(ii(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){void 0!==t&&(Zn=t);let e=Zn+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(t){return t*$n},radToDeg:function(t){return t*ti},isPowerOfTwo:function(t){return!(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,r){const s=Math.cos,a=Math.sin,o=s(n/2),l=a(n/2),c=s((e+i)/2),h=a((e+i)/2),A=s((e-i)/2),u=a((e-i)/2),d=s((i-e)/2),p=a((i-e)/2);switch(r){case"XYX":t.set(o*h,l*A,l*u,o*c);break;case"YZY":t.set(l*u,o*h,l*A,o*c);break;case"ZXZ":t.set(l*A,l*u,o*h,o*c);break;case"XZX":t.set(o*h,l*p,l*d,o*c);break;case"YXY":t.set(l*d,o*h,l*p,o*c);break;case"ZYZ":t.set(l*p,l*d,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},normalize:ai,denormalize:si};class li{constructor(t=0,e=0){li.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=ni(this.x,t.x,e.x),this.y=ni(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=ni(this.x,t,e),this.y=ni(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ni(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ni(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,s=this.y-t.y;return this.x=r*n-s*i+t.x,this.y=r*i+s*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ci{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,s,a){let o=n[i+0],l=n[i+1],c=n[i+2],h=n[i+3];const A=r[s+0],u=r[s+1],d=r[s+2],p=r[s+3];if(0===a)return t[e+0]=o,t[e+1]=l,t[e+2]=c,void(t[e+3]=h);if(1===a)return t[e+0]=A,t[e+1]=u,t[e+2]=d,void(t[e+3]=p);if(h!==p||o!==A||l!==u||c!==d){let t=1-a;const e=o*A+l*u+c*d+h*p,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),s=Math.atan2(r,e*n);t=Math.sin(t*s)/r,a=Math.sin(a*s)/r}const r=a*n;if(o=o*t+A*r,l=l*t+u*r,c=c*t+d*r,h=h*t+p*r,t===1-a){const t=1/Math.sqrt(o*o+l*l+c*c+h*h);o*=t,l*=t,c*=t,h*=t}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,s){const a=n[i],o=n[i+1],l=n[i+2],c=n[i+3],h=r[s],A=r[s+1],u=r[s+2],d=r[s+3];return t[e]=a*d+c*h+o*u-l*A,t[e+1]=o*d+c*A+l*h-a*u,t[e+2]=l*d+c*u+a*A-o*h,t[e+3]=c*d-a*h-o*A-l*u,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,r=t._z,s=t._order,a=Math.cos,o=Math.sin,l=a(n/2),c=a(i/2),h=a(r/2),A=o(n/2),u=o(i/2),d=o(r/2);switch(s){case"XYZ":this._x=A*c*h+l*u*d,this._y=l*u*h-A*c*d,this._z=l*c*d+A*u*h,this._w=l*c*h-A*u*d;break;case"YXZ":this._x=A*c*h+l*u*d,this._y=l*u*h-A*c*d,this._z=l*c*d-A*u*h,this._w=l*c*h+A*u*d;break;case"ZXY":this._x=A*c*h-l*u*d,this._y=l*u*h+A*c*d,this._z=l*c*d+A*u*h,this._w=l*c*h-A*u*d;break;case"ZYX":this._x=A*c*h-l*u*d,this._y=l*u*h+A*c*d,this._z=l*c*d-A*u*h,this._w=l*c*h+A*u*d;break;case"YZX":this._x=A*c*h+l*u*d,this._y=l*u*h+A*c*d,this._z=l*c*d-A*u*h,this._w=l*c*h-A*u*d;break;case"XZY":this._x=A*c*h-l*u*d,this._y=l*u*h-A*c*d,this._z=l*c*d+A*u*h,this._w=l*c*h+A*u*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],s=e[1],a=e[5],o=e[9],l=e[2],c=e[6],h=e[10],A=n+a+h;if(A>0){const t=.5/Math.sqrt(A+1);this._w=.25/t,this._x=(c-o)*t,this._y=(r-l)*t,this._z=(s-i)*t}else if(n>a&&n>h){const t=2*Math.sqrt(1+n-a-h);this._w=(c-o)/t,this._x=.25*t,this._y=(i+s)/t,this._z=(r+l)/t}else if(a>h){const t=2*Math.sqrt(1+a-n-h);this._w=(r-l)/t,this._x=(i+s)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+h-n-a);this._w=(s-i)/t,this._x=(r+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-8?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(ni(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,s=t._w,a=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+s*a+i*l-r*o,this._y=i*c+s*o+r*a-n*l,this._z=r*c+s*l+n*o-i*a,this._w=s*c-n*a-i*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,s=this._w;let a=s*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=n,this._y=i,this._z=r,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this}const l=Math.sqrt(o),c=Math.atan2(l,a),h=Math.sin((1-e)*c)/l,A=Math.sin(e*c)/l;return this._w=s*h+this._w*A,this._x=n*h+this._x*A,this._y=i*h+this._y*A,this._z=r*h+this._z*A,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class hi{constructor(t=0,e=0,n=0){hi.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(ui.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(ui.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,s=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*s,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*s,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*s,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,s=t.y,a=t.z,o=t.w,l=2*(s*i-a*n),c=2*(a*e-r*i),h=2*(r*n-s*e);return this.x=e+o*l+s*h-a*c,this.y=n+o*c+a*l-r*h,this.z=i+o*h+r*c-s*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=ni(this.x,t.x,e.x),this.y=ni(this.y,t.y,e.y),this.z=ni(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=ni(this.x,t,e),this.y=ni(this.y,t,e),this.z=ni(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ni(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,s=e.x,a=e.y,o=e.z;return this.x=i*o-r*a,this.y=r*s-n*o,this.z=n*a-i*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Ai.copy(this).projectOnVector(t),this.sub(Ai)}reflect(t){return this.sub(Ai.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ni(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=2*Math.random()-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ai=new hi,ui=new ci;class di{constructor(t,e,n,i,r,s,a,o,l){di.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,n,i,r,s,a,o,l)}set(t,e,n,i,r,s,a,o,l){const c=this.elements;return c[0]=t,c[1]=i,c[2]=a,c[3]=e,c[4]=r,c[5]=o,c[6]=n,c[7]=s,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,s=n[0],a=n[3],o=n[6],l=n[1],c=n[4],h=n[7],A=n[2],u=n[5],d=n[8],p=i[0],g=i[3],f=i[6],m=i[1],y=i[4],v=i[7],x=i[2],C=i[5],I=i[8];return r[0]=s*p+a*m+o*x,r[3]=s*g+a*y+o*C,r[6]=s*f+a*v+o*I,r[1]=l*p+c*m+h*x,r[4]=l*g+c*y+h*C,r[7]=l*f+c*v+h*I,r[2]=A*p+u*m+d*x,r[5]=A*g+u*y+d*C,r[8]=A*f+u*v+d*I,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8];return e*s*c-e*a*l-n*r*c+n*a*o+i*r*l-i*s*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8],h=c*s-a*l,A=a*o-c*r,u=l*r-s*o,d=e*h+n*A+i*u;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const p=1/d;return t[0]=h*p,t[1]=(i*l-c*n)*p,t[2]=(a*n-i*s)*p,t[3]=A*p,t[4]=(c*e-i*o)*p,t[5]=(i*r-a*e)*p,t[6]=u*p,t[7]=(n*o-l*e)*p,t[8]=(s*e-n*r)*p,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,s,a){const o=Math.cos(r),l=Math.sin(r);return this.set(n*o,n*l,-n*(o*s+l*a)+s+t,-i*l,i*o,-i*(-l*s+o*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(pi.makeScale(t,e)),this}rotate(t){return this.premultiply(pi.makeRotation(-t)),this}translate(t,e){return this.premultiply(pi.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const pi=new di;function gi(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}const fi={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function mi(t,e){return new fi[t](e)}function yi(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function vi(){const t=yi("canvas");return t.style.display="block",t}const xi={};function Ci(t){t in xi||(xi[t]=!0,console.warn(t))}const Ii=(new di).set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Ei=(new di).set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function wi(){const t={enabled:!0,workingColorSpace:on,spaces:{},convert:function(t,e,n){return!1!==this.enabled&&e!==n&&e&&n?(this.spaces[e].transfer===cn&&(t.r=bi(t.r),t.g=bi(t.g),t.b=bi(t.b)),this.spaces[e].primaries!==this.spaces[n].primaries&&(t.applyMatrix3(this.spaces[e].toXYZ),t.applyMatrix3(this.spaces[n].fromXYZ)),this.spaces[n].transfer===cn&&(t.r=Bi(t.r),t.g=Bi(t.g),t.b=Bi(t.b)),t):t},workingToColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},colorSpaceToWorking:function(t,e){return this.convert(t,e,this.workingColorSpace)},getPrimaries:function(t){return this.spaces[t].primaries},getTransfer:function(t){return t===sn?ln:this.spaces[t].transfer},getToneMappingMode:function(t){return this.spaces[t].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(t,e=this.workingColorSpace){return t.fromArray(this.spaces[e].luminanceCoefficients)},define:function(t){Object.assign(this.spaces,t)},_getMatrix:function(t,e,n){return t.copy(this.spaces[e].toXYZ).multiply(this.spaces[n].fromXYZ)},_getDrawingBufferColorSpace:function(t){return this.spaces[t].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(t=this.workingColorSpace){return this.spaces[t].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(e,n){return Ci("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),t.workingToColorSpace(e,n)},toWorkingColorSpace:function(e,n){return Ci("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),t.colorSpaceToWorking(e,n)}},e=[.64,.33,.3,.6,.15,.06],n=[.2126,.7152,.0722],i=[.3127,.329];return t.define({[on]:{primaries:e,whitePoint:i,transfer:ln,toXYZ:Ii,fromXYZ:Ei,luminanceCoefficients:n,workingColorSpaceConfig:{unpackColorSpace:an},outputColorSpaceConfig:{drawingBufferColorSpace:an}},[an]:{primaries:e,whitePoint:i,transfer:cn,toXYZ:Ii,fromXYZ:Ei,luminanceCoefficients:n,outputColorSpaceConfig:{drawingBufferColorSpace:an}}}),t}const _i=wi();function bi(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Bi(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}let Si;class Mi{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{void 0===Si&&(Si=yi("canvas")),Si.width=t.width,Si.height=t.height;const e=Si.getContext("2d");t instanceof ImageData?e.putImageData(t,0,0):e.drawImage(t,0,0,t.width,t.height),n=Si}return n.toDataURL(e)}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=yi("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let t=0;t<r.length;t++)r[t]=255*bi(r[t]/255);return n.putImageData(i,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*bi(e[t]/255)):e[t]=bi(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Ti=0;class Qi{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Ti++}),this.uuid=ei(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight,0):e instanceof VideoFrame?t.set(e.displayHeight,e.displayWidth,0):null!==e?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let t;if(Array.isArray(i)){t=[];for(let e=0,n=i.length;e<n;e++)i[e].isDataTexture?t.push(Di(i[e].image)):t.push(Di(i[e]))}else t=Di(i);n.url=t}return e||(t.images[this.uuid]=n),n}}function Di(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?Mi.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ri=0;const Ui=new hi;class Pi extends Xn{constructor(t=Pi.DEFAULT_IMAGE,e=Pi.DEFAULT_MAPPING,n=wt,i=wt,r=Qt,s=Ut,a=Kt,o=Lt,l=Pi.DEFAULT_ANISOTROPY,c=sn){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ri++}),this.uuid=ei(),this.name="",this.source=new Qi(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new li(0,0),this.repeat=new li(1,1),this.center=new li(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new di,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Ui).x}get height(){return this.source.getSize(Ui).y}get depth(){return this.source.getSize(Ui).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(void 0===n){console.warn(`THREE.Texture.setValues(): parameter '${e}' has value of undefined.`);continue}const i=this[e];void 0!==i?i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[e]=n:console.warn(`THREE.Texture.setValues(): property '${e}' does not exist.`)}}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==mt)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Et:t.x=t.x-Math.floor(t.x);break;case wt:t.x=t.x<0?0:1;break;case _t:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case Et:t.y=t.y-Math.floor(t.y);break;case wt:t.y=t.y<0?0:1;break;case _t:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){!0===t&&this.pmremVersion++}}Pi.DEFAULT_IMAGE=null,Pi.DEFAULT_MAPPING=mt,Pi.DEFAULT_ANISOTROPY=1;class Li{constructor(t=0,e=0,n=0,i=1){Li.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i+s[12]*r,this.y=s[1]*e+s[5]*n+s[9]*i+s[13]*r,this.z=s[2]*e+s[6]*n+s[10]*i+s[14]*r,this.w=s[3]*e+s[7]*n+s[11]*i+s[15]*r,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const s=.01,a=.1,o=t.elements,l=o[0],c=o[4],h=o[8],A=o[1],u=o[5],d=o[9],p=o[2],g=o[6],f=o[10];if(Math.abs(c-A)<s&&Math.abs(h-p)<s&&Math.abs(d-g)<s){if(Math.abs(c+A)<a&&Math.abs(h+p)<a&&Math.abs(d+g)<a&&Math.abs(l+u+f-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(u+1)/2,m=(f+1)/2,y=(c+A)/4,v=(h+p)/4,x=(d+g)/4;return t>o&&t>m?t<s?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(t),i=y/n,r=v/n):o>m?o<s?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(o),n=y/i,r=x/i):m<s?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(m),n=v/r,i=x/r),this.set(n,i,r,e),this}let m=Math.sqrt((g-d)*(g-d)+(h-p)*(h-p)+(A-c)*(A-c));return Math.abs(m)<.001&&(m=1),this.x=(g-d)/m,this.y=(h-p)/m,this.z=(A-c)/m,this.w=Math.acos((l+u+f-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=ni(this.x,t.x,e.x),this.y=ni(this.y,t.y,e.y),this.z=ni(this.z,t.z,e.z),this.w=ni(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=ni(this.x,t,e),this.y=ni(this.y,t,e),this.z=ni(this.z,t,e),this.w=ni(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ni(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Fi extends Xn{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Qt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new Li(0,0,t,e),this.scissorTest=!1,this.viewport=new Li(0,0,t,e);const i={width:t,height:e,depth:n.depth},r=new Pi(i);this.textures=[];const s=n.count;for(let t=0;t<s;t++)this.textures[t]=r.clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:Qt,generateMipmaps:!1,flipY:!1,internalFormat:null};void 0!==t.mapping&&(e.mapping=t.mapping),void 0!==t.wrapS&&(e.wrapS=t.wrapS),void 0!==t.wrapT&&(e.wrapT=t.wrapT),void 0!==t.wrapR&&(e.wrapR=t.wrapR),void 0!==t.magFilter&&(e.magFilter=t.magFilter),void 0!==t.minFilter&&(e.minFilter=t.minFilter),void 0!==t.format&&(e.format=t.format),void 0!==t.type&&(e.type=t.type),void 0!==t.anisotropy&&(e.anisotropy=t.anisotropy),void 0!==t.colorSpace&&(e.colorSpace=t.colorSpace),void 0!==t.flipY&&(e.flipY=t.flipY),void 0!==t.generateMipmaps&&(e.generateMipmaps=t.generateMipmaps),void 0!==t.internalFormat&&(e.internalFormat=t.internalFormat);for(let t=0;t<this.textures.length;t++)this.textures[t].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){null!==this._depthTexture&&(this._depthTexture.renderTarget=null),null!==t&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const n=Object.assign({},t.textures[e].image);this.textures[e].source=new Qi(n)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ni extends Fi{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class ki extends Pi{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=bt,this.minFilter=bt,this.wrapR=wt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class Oi extends Ni{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new ki(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class zi extends Pi{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=bt,this.minFilter=bt,this.wrapR=wt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Gi extends Ni{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new zi(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Hi{constructor(t=new hi(1/0,1/0,1/0),e=new hi(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(qi.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(qi.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=qi.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(void 0!==n){const i=n.getAttribute("position");if(!0===e&&void 0!==i&&!0!==t.isInstancedMesh)for(let e=0,n=i.count;e<n;e++)!0===t.isMesh?t.getVertexPosition(e,qi):qi.fromBufferAttribute(i,e),qi.applyMatrix4(t.matrixWorld),this.expandByPoint(qi);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),Yi.copy(t.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),Yi.copy(n.boundingBox)),Yi.applyMatrix4(t.matrixWorld),this.union(Yi)}const i=t.children;for(let t=0,n=i.length;t<n;t++)this.expandByObject(i[t],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,qi),qi.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter($i),tr.subVectors(this.max,$i),Wi.subVectors(t.a,$i),Ji.subVectors(t.b,$i),ji.subVectors(t.c,$i),Xi.subVectors(Ji,Wi),Ki.subVectors(ji,Ji),Zi.subVectors(Wi,ji);let e=[0,-Xi.z,Xi.y,0,-Ki.z,Ki.y,0,-Zi.z,Zi.y,Xi.z,0,-Xi.x,Ki.z,0,-Ki.x,Zi.z,0,-Zi.x,-Xi.y,Xi.x,0,-Ki.y,Ki.x,0,-Zi.y,Zi.x,0];return!!ir(e,Wi,Ji,ji,tr)&&(e=[1,0,0,0,1,0,0,0,1],!!ir(e,Wi,Ji,ji,tr)&&(er.crossVectors(Xi,Ki),e=[er.x,er.y,er.z],ir(e,Wi,Ji,ji,tr)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,qi).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(qi).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Vi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Vi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Vi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Vi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Vi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Vi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Vi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Vi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Vi)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const Vi=[new hi,new hi,new hi,new hi,new hi,new hi,new hi,new hi],qi=new hi,Yi=new Hi,Wi=new hi,Ji=new hi,ji=new hi,Xi=new hi,Ki=new hi,Zi=new hi,$i=new hi,tr=new hi,er=new hi,nr=new hi;function ir(t,e,n,i,r){for(let s=0,a=t.length-3;s<=a;s+=3){nr.fromArray(t,s);const a=r.x*Math.abs(nr.x)+r.y*Math.abs(nr.y)+r.z*Math.abs(nr.z),o=e.dot(nr),l=n.dot(nr),c=i.dot(nr);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>a)return!1}return!0}const rr=new Hi,sr=new hi,ar=new hi;class or{constructor(t=new hi,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):rr.setFromPoints(t).getCenter(n);let i=0;for(let e=0,r=t.length;e<r;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;sr.subVectors(t,this.center);const e=sr.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.addScaledVector(sr,n/t),this.radius+=n}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(ar.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(sr.copy(t.center).add(ar)),this.expandByPoint(sr.copy(t.center).sub(ar))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}const lr=new hi,cr=new hi,hr=new hi,Ar=new hi,ur=new hi,dr=new hi,pr=new hi;class gr{constructor(t=new hi,e=new hi(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,lr)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=lr.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(lr.copy(this.origin).addScaledVector(this.direction,e),lr.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){cr.copy(t).add(e).multiplyScalar(.5),hr.copy(e).sub(t).normalize(),Ar.copy(this.origin).sub(cr);const r=.5*t.distanceTo(e),s=-this.direction.dot(hr),a=Ar.dot(this.direction),o=-Ar.dot(hr),l=Ar.lengthSq(),c=Math.abs(1-s*s);let h,A,u,d;if(c>0)if(h=s*o-a,A=s*a-o,d=r*c,h>=0)if(A>=-d)if(A<=d){const t=1/c;h*=t,A*=t,u=h*(h+s*A+2*a)+A*(s*h+A+2*o)+l}else A=r,h=Math.max(0,-(s*A+a)),u=-h*h+A*(A+2*o)+l;else A=-r,h=Math.max(0,-(s*A+a)),u=-h*h+A*(A+2*o)+l;else A<=-d?(h=Math.max(0,-(-s*r+a)),A=h>0?-r:Math.min(Math.max(-r,-o),r),u=-h*h+A*(A+2*o)+l):A<=d?(h=0,A=Math.min(Math.max(-r,-o),r),u=A*(A+2*o)+l):(h=Math.max(0,-(s*r+a)),A=h>0?r:Math.min(Math.max(-r,-o),r),u=-h*h+A*(A+2*o)+l);else A=s>0?-r:r,h=Math.max(0,-(s*A+a)),u=-h*h+A*(A+2*o)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(cr).addScaledVector(hr,A),u}intersectSphere(t,e){lr.subVectors(t.center,this.origin);const n=lr.dot(this.direction),i=lr.dot(lr)-n*n,r=t.radius*t.radius;if(i>r)return null;const s=Math.sqrt(r-i),a=n-s,o=n+s;return o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return!(t.radius<0)&&this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,s,a,o;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,A=this.origin;return l>=0?(n=(t.min.x-A.x)*l,i=(t.max.x-A.x)*l):(n=(t.max.x-A.x)*l,i=(t.min.x-A.x)*l),c>=0?(r=(t.min.y-A.y)*c,s=(t.max.y-A.y)*c):(r=(t.max.y-A.y)*c,s=(t.min.y-A.y)*c),n>s||r>i?null:((r>n||isNaN(n))&&(n=r),(s<i||isNaN(i))&&(i=s),h>=0?(a=(t.min.z-A.z)*h,o=(t.max.z-A.z)*h):(a=(t.max.z-A.z)*h,o=(t.min.z-A.z)*h),n>o||a>i?null:((a>n||n!=n)&&(n=a),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,lr)}intersectTriangle(t,e,n,i,r){ur.subVectors(e,t),dr.subVectors(n,t),pr.crossVectors(ur,dr);let s,a=this.direction.dot(pr);if(a>0){if(i)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}Ar.subVectors(this.origin,t);const o=s*this.direction.dot(dr.crossVectors(Ar,dr));if(o<0)return null;const l=s*this.direction.dot(ur.cross(Ar));if(l<0)return null;if(o+l>a)return null;const c=-s*Ar.dot(pr);return c<0?null:this.at(c/a,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class fr{constructor(t,e,n,i,r,s,a,o,l,c,h,A,u,d,p,g){fr.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,n,i,r,s,a,o,l,c,h,A,u,d,p,g)}set(t,e,n,i,r,s,a,o,l,c,h,A,u,d,p,g){const f=this.elements;return f[0]=t,f[4]=e,f[8]=n,f[12]=i,f[1]=r,f[5]=s,f[9]=a,f[13]=o,f[2]=l,f[6]=c,f[10]=h,f[14]=A,f[3]=u,f[7]=d,f[11]=p,f[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new fr).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/mr.setFromMatrixColumn(t,0).length(),r=1/mr.setFromMatrixColumn(t,1).length(),s=1/mr.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*s,e[9]=n[9]*s,e[10]=n[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,s=Math.cos(n),a=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=s*c,n=s*h,i=a*c,r=a*h;e[0]=o*c,e[4]=-o*h,e[8]=l,e[1]=n+i*l,e[5]=t-r*l,e[9]=-a*o,e[2]=r-t*l,e[6]=i+n*l,e[10]=s*o}else if("YXZ"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t+r*a,e[4]=i*a-n,e[8]=s*l,e[1]=s*h,e[5]=s*c,e[9]=-a,e[2]=n*a-i,e[6]=r+t*a,e[10]=s*o}else if("ZXY"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t-r*a,e[4]=-s*h,e[8]=i+n*a,e[1]=n+i*a,e[5]=s*c,e[9]=r-t*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if("ZYX"===t.order){const t=s*c,n=s*h,i=a*c,r=a*h;e[0]=o*c,e[4]=i*l-n,e[8]=t*l+r,e[1]=o*h,e[5]=r*l+t,e[9]=n*l-i,e[2]=-l,e[6]=a*o,e[10]=s*o}else if("YZX"===t.order){const t=s*o,n=s*l,i=a*o,r=a*l;e[0]=o*c,e[4]=r-t*h,e[8]=i*h+n,e[1]=h,e[5]=s*c,e[9]=-a*c,e[2]=-l*c,e[6]=n*h+i,e[10]=t-r*h}else if("XZY"===t.order){const t=s*o,n=s*l,i=a*o,r=a*l;e[0]=o*c,e[4]=-h,e[8]=l*c,e[1]=t*h+r,e[5]=s*c,e[9]=n*h-i,e[2]=i*h-n,e[6]=a*c,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(vr,t,xr)}lookAt(t,e,n){const i=this.elements;return Er.subVectors(t,e),0===Er.lengthSq()&&(Er.z=1),Er.normalize(),Cr.crossVectors(n,Er),0===Cr.lengthSq()&&(1===Math.abs(n.z)?Er.x+=1e-4:Er.z+=1e-4,Er.normalize(),Cr.crossVectors(n,Er)),Cr.normalize(),Ir.crossVectors(Er,Cr),i[0]=Cr.x,i[4]=Ir.x,i[8]=Er.x,i[1]=Cr.y,i[5]=Ir.y,i[9]=Er.y,i[2]=Cr.z,i[6]=Ir.z,i[10]=Er.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,s=n[0],a=n[4],o=n[8],l=n[12],c=n[1],h=n[5],A=n[9],u=n[13],d=n[2],p=n[6],g=n[10],f=n[14],m=n[3],y=n[7],v=n[11],x=n[15],C=i[0],I=i[4],E=i[8],w=i[12],_=i[1],b=i[5],B=i[9],S=i[13],M=i[2],T=i[6],Q=i[10],D=i[14],R=i[3],U=i[7],P=i[11],L=i[15];return r[0]=s*C+a*_+o*M+l*R,r[4]=s*I+a*b+o*T+l*U,r[8]=s*E+a*B+o*Q+l*P,r[12]=s*w+a*S+o*D+l*L,r[1]=c*C+h*_+A*M+u*R,r[5]=c*I+h*b+A*T+u*U,r[9]=c*E+h*B+A*Q+u*P,r[13]=c*w+h*S+A*D+u*L,r[2]=d*C+p*_+g*M+f*R,r[6]=d*I+p*b+g*T+f*U,r[10]=d*E+p*B+g*Q+f*P,r[14]=d*w+p*S+g*D+f*L,r[3]=m*C+y*_+v*M+x*R,r[7]=m*I+y*b+v*T+x*U,r[11]=m*E+y*B+v*Q+x*P,r[15]=m*w+y*S+v*D+x*L,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],s=t[1],a=t[5],o=t[9],l=t[13],c=t[2],h=t[6],A=t[10],u=t[14];return t[3]*(+r*o*h-i*l*h-r*a*A+n*l*A+i*a*u-n*o*u)+t[7]*(+e*o*u-e*l*A+r*s*A-i*s*u+i*l*c-r*o*c)+t[11]*(+e*l*h-e*a*u-r*s*h+n*s*u+r*a*c-n*l*c)+t[15]*(-i*a*c-e*o*h+e*a*A+i*s*h-n*s*A+n*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8],h=t[9],A=t[10],u=t[11],d=t[12],p=t[13],g=t[14],f=t[15],m=h*g*l-p*A*l+p*o*u-a*g*u-h*o*f+a*A*f,y=d*A*l-c*g*l-d*o*u+s*g*u+c*o*f-s*A*f,v=c*p*l-d*h*l+d*a*u-s*p*u-c*a*f+s*h*f,x=d*h*o-c*p*o-d*a*A+s*p*A+c*a*g-s*h*g,C=e*m+n*y+i*v+r*x;if(0===C)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const I=1/C;return t[0]=m*I,t[1]=(p*A*r-h*g*r-p*i*u+n*g*u+h*i*f-n*A*f)*I,t[2]=(a*g*r-p*o*r+p*i*l-n*g*l-a*i*f+n*o*f)*I,t[3]=(h*o*r-a*A*r-h*i*l+n*A*l+a*i*u-n*o*u)*I,t[4]=y*I,t[5]=(c*g*r-d*A*r+d*i*u-e*g*u-c*i*f+e*A*f)*I,t[6]=(d*o*r-s*g*r-d*i*l+e*g*l+s*i*f-e*o*f)*I,t[7]=(s*A*r-c*o*r+c*i*l-e*A*l-s*i*u+e*o*u)*I,t[8]=v*I,t[9]=(d*h*r-c*p*r-d*n*u+e*p*u+c*n*f-e*h*f)*I,t[10]=(s*p*r-d*a*r+d*n*l-e*p*l-s*n*f+e*a*f)*I,t[11]=(c*a*r-s*h*r-c*n*l+e*h*l+s*n*u-e*a*u)*I,t[12]=x*I,t[13]=(c*p*i-d*h*i+d*n*A-e*p*A-c*n*g+e*h*g)*I,t[14]=(d*a*i-s*p*i-d*n*o+e*p*o+s*n*g-e*a*g)*I,t[15]=(s*h*i-c*a*i+c*n*o-e*h*o-s*n*A+e*a*A)*I,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,s=t.x,a=t.y,o=t.z,l=r*s,c=r*a;return this.set(l*s+n,l*a-i*o,l*o+i*a,0,l*a+i*o,c*a+n,c*o-i*s,0,l*o-i*a,c*o+i*s,r*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,s){return this.set(1,n,r,0,t,1,s,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,s=e._y,a=e._z,o=e._w,l=r+r,c=s+s,h=a+a,A=r*l,u=r*c,d=r*h,p=s*c,g=s*h,f=a*h,m=o*l,y=o*c,v=o*h,x=n.x,C=n.y,I=n.z;return i[0]=(1-(p+f))*x,i[1]=(u+v)*x,i[2]=(d-y)*x,i[3]=0,i[4]=(u-v)*C,i[5]=(1-(A+f))*C,i[6]=(g+m)*C,i[7]=0,i[8]=(d+y)*I,i[9]=(g-m)*I,i[10]=(1-(A+p))*I,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=mr.set(i[0],i[1],i[2]).length();const s=mr.set(i[4],i[5],i[6]).length(),a=mr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],yr.copy(this);const o=1/r,l=1/s,c=1/a;return yr.elements[0]*=o,yr.elements[1]*=o,yr.elements[2]*=o,yr.elements[4]*=l,yr.elements[5]*=l,yr.elements[6]*=l,yr.elements[8]*=c,yr.elements[9]*=c,yr.elements[10]*=c,e.setFromRotationMatrix(yr),n.x=r,n.y=s,n.z=a,this}makePerspective(t,e,n,i,r,s,a=qn,o=!1){const l=this.elements,c=2*r/(e-t),h=2*r/(n-i),A=(e+t)/(e-t),u=(n+i)/(n-i);let d,p;if(o)d=r/(s-r),p=s*r/(s-r);else if(a===qn)d=-(s+r)/(s-r),p=-2*s*r/(s-r);else{if(a!==Yn)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);d=-s/(s-r),p=-s*r/(s-r)}return l[0]=c,l[4]=0,l[8]=A,l[12]=0,l[1]=0,l[5]=h,l[9]=u,l[13]=0,l[2]=0,l[6]=0,l[10]=d,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(t,e,n,i,r,s,a=qn,o=!1){const l=this.elements,c=2/(e-t),h=2/(n-i),A=-(e+t)/(e-t),u=-(n+i)/(n-i);let d,p;if(o)d=1/(s-r),p=s/(s-r);else if(a===qn)d=-2/(s-r),p=-(s+r)/(s-r);else{if(a!==Yn)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);d=-1/(s-r),p=-r/(s-r)}return l[0]=c,l[4]=0,l[8]=0,l[12]=A,l[1]=0,l[5]=h,l[9]=0,l[13]=u,l[2]=0,l[6]=0,l[10]=d,l[14]=p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const mr=new hi,yr=new fr,vr=new hi(0,0,0),xr=new hi(1,1,1),Cr=new hi,Ir=new hi,Er=new hi,wr=new fr,_r=new ci;class br{constructor(t=0,e=0,n=0,i=br.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],s=i[4],a=i[8],o=i[1],l=i[5],c=i[9],h=i[2],A=i[6],u=i[10];switch(e){case"XYZ":this._y=Math.asin(ni(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,u),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(A,l),this._z=0);break;case"YXZ":this._x=Math.asin(-ni(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,u),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(ni(A,-1,1)),Math.abs(A)<.9999999?(this._y=Math.atan2(-h,u),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-ni(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(A,u),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(ni(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,u));break;case"XZY":this._z=Math.asin(-ni(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(A,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-c,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return wr.makeRotationFromQuaternion(t),this.setFromRotationMatrix(wr,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return _r.setFromEuler(this),this.setFromQuaternion(_r,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}br.DEFAULT_ORDER="XYZ";class Br{constructor(){this.mask=1}set(t){this.mask=1<<t>>>0}enable(t){this.mask|=1<<t}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t}disable(t){this.mask&=~(1<<t)}disableAll(){this.mask=0}test(t){return 0!==(this.mask&t.mask)}isEnabled(t){return!!(this.mask&1<<t)}}let Sr=0;const Mr=new hi,Tr=new ci,Qr=new fr,Dr=new hi,Rr=new hi,Ur=new hi,Pr=new ci,Lr=new hi(1,0,0),Fr=new hi(0,1,0),Nr=new hi(0,0,1),kr={type:"added"},Or={type:"removed"},zr={type:"childadded",child:null},Gr={type:"childremoved",child:null};class Hr extends Xn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Sr++}),this.uuid=ei(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Hr.DEFAULT_UP.clone();const t=new hi,e=new br,n=new ci,i=new hi(1,1,1);e._onChange(function(){n.setFromEuler(e,!1)}),n._onChange(function(){e.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new fr},normalMatrix:{value:new di}}),this.matrix=new fr,this.matrixWorld=new fr,this.matrixAutoUpdate=Hr.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Hr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Br,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Tr.setFromAxisAngle(t,e),this.quaternion.multiply(Tr),this}rotateOnWorldAxis(t,e){return Tr.setFromAxisAngle(t,e),this.quaternion.premultiply(Tr),this}rotateX(t){return this.rotateOnAxis(Lr,t)}rotateY(t){return this.rotateOnAxis(Fr,t)}rotateZ(t){return this.rotateOnAxis(Nr,t)}translateOnAxis(t,e){return Mr.copy(t).applyQuaternion(this.quaternion),this.position.add(Mr.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Lr,t)}translateY(t){return this.translateOnAxis(Fr,t)}translateZ(t){return this.translateOnAxis(Nr,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Qr.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Dr.copy(t):Dr.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Rr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Qr.lookAt(Rr,Dr,this.up):Qr.lookAt(Dr,Rr,this.up),this.quaternion.setFromRotationMatrix(Qr),i&&(Qr.extractRotation(i.matrixWorld),Tr.setFromRotationMatrix(Qr),this.quaternion.premultiply(Tr.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(kr),zr.child=t,this.dispatchEvent(zr),zr.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Or),Gr.child=t,this.dispatchEvent(Gr),Gr.child=null),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Qr.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Qr.multiply(t.parent.matrixWorld)),t.applyMatrix4(Qr),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(kr),zr.child=t,this.dispatchEvent(zr),zr.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let r=0,s=i.length;r<s;r++)i[r].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Rr,t,Ur),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Rr,Pr,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};function r(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox?t.boundingBox.toJSON():void 0,boundingSphere:t.boundingSphere?t.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(t=>({...t})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(t),i.indirectTexture=this._indirectTexture.toJSON(t),null!==this._colorsTexture&&(i.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(i.boundingSphere=this.boundingSphere.toJSON()),null!==this.boundingBox&&(i.boundingBox=this.boundingBox.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];r(t.shapes,i)}else r(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(r(t.materials,this.material[n]));i.material=e}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(r(t.animations,n))}}if(e){const e=s(t.geometries),i=s(t.materials),r=s(t.textures),a=s(t.images),o=s(t.shapes),l=s(t.skeletons),c=s(t.animations),h=s(t.nodes);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),a.length>0&&(n.images=a),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c),h.length>0&&(n.nodes=h)}return n.object=i,n;function s(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}Hr.DEFAULT_UP=new hi(0,1,0),Hr.DEFAULT_MATRIX_AUTO_UPDATE=!0,Hr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Vr=new hi,qr=new hi,Yr=new hi,Wr=new hi,Jr=new hi,jr=new hi,Xr=new hi,Kr=new hi,Zr=new hi,$r=new hi,ts=new Li,es=new Li,ns=new Li;class is{constructor(t=new hi,e=new hi,n=new hi){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Vr.subVectors(t,e),i.cross(Vr);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Vr.subVectors(i,e),qr.subVectors(n,e),Yr.subVectors(t,e);const s=Vr.dot(Vr),a=Vr.dot(qr),o=Vr.dot(Yr),l=qr.dot(qr),c=qr.dot(Yr),h=s*l-a*a;if(0===h)return r.set(0,0,0),null;const A=1/h,u=(l*o-a*c)*A,d=(s*c-a*o)*A;return r.set(1-u-d,d,u)}static containsPoint(t,e,n,i){return null!==this.getBarycoord(t,e,n,i,Wr)&&Wr.x>=0&&Wr.y>=0&&Wr.x+Wr.y<=1}static getInterpolation(t,e,n,i,r,s,a,o){return null===this.getBarycoord(t,e,n,i,Wr)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(r,Wr.x),o.addScaledVector(s,Wr.y),o.addScaledVector(a,Wr.z),o)}static getInterpolatedAttribute(t,e,n,i,r,s){return ts.setScalar(0),es.setScalar(0),ns.setScalar(0),ts.fromBufferAttribute(t,e),es.fromBufferAttribute(t,n),ns.fromBufferAttribute(t,i),s.setScalar(0),s.addScaledVector(ts,r.x),s.addScaledVector(es,r.y),s.addScaledVector(ns,r.z),s}static isFrontFacing(t,e,n,i){return Vr.subVectors(n,e),qr.subVectors(t,e),Vr.cross(qr).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Vr.subVectors(this.c,this.b),qr.subVectors(this.a,this.b),.5*Vr.cross(qr).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return is.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return is.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,r){return is.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return is.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return is.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let s,a;Jr.subVectors(i,n),jr.subVectors(r,n),Kr.subVectors(t,n);const o=Jr.dot(Kr),l=jr.dot(Kr);if(o<=0&&l<=0)return e.copy(n);Zr.subVectors(t,i);const c=Jr.dot(Zr),h=jr.dot(Zr);if(c>=0&&h<=c)return e.copy(i);const A=o*h-c*l;if(A<=0&&o>=0&&c<=0)return s=o/(o-c),e.copy(n).addScaledVector(Jr,s);$r.subVectors(t,r);const u=Jr.dot($r),d=jr.dot($r);if(d>=0&&u<=d)return e.copy(r);const p=u*l-o*d;if(p<=0&&l>=0&&d<=0)return a=l/(l-d),e.copy(n).addScaledVector(jr,a);const g=c*d-u*h;if(g<=0&&h-c>=0&&u-d>=0)return Xr.subVectors(r,i),a=(h-c)/(h-c+(u-d)),e.copy(i).addScaledVector(Xr,a);const f=1/(g+p+A);return s=p*f,a=A*f,e.copy(n).addScaledVector(Jr,s).addScaledVector(jr,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const rs={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ss={h:0,s:0,l:0},as={h:0,s:0,l:0};function os(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}class ls{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(void 0===e&&void 0===n){const e=t;e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=an){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,_i.colorSpaceToWorking(this,e),this}setRGB(t,e,n,i=_i.workingColorSpace){return this.r=t,this.g=e,this.b=n,_i.colorSpaceToWorking(this,i),this}setHSL(t,e,n,i=_i.workingColorSpace){if(t=ii(t,1),e=ni(e,0,1),n=ni(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=os(r,i,t+1/3),this.g=os(r,i,t),this.b=os(r,i,t-1/3)}return _i.colorSpaceToWorking(this,i),this}setStyle(t,e=an){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const s=i[1],a=i[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=i[1],r=n.length;if(3===r)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(6===r)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=an){const n=rs[t.toLowerCase()];return void 0!==n?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=bi(t.r),this.g=bi(t.g),this.b=bi(t.b),this}copyLinearToSRGB(t){return this.r=Bi(t.r),this.g=Bi(t.g),this.b=Bi(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=an){return _i.workingToColorSpace(cs.copy(this),t),65536*Math.round(ni(255*cs.r,0,255))+256*Math.round(ni(255*cs.g,0,255))+Math.round(ni(255*cs.b,0,255))}getHexString(t=an){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=_i.workingColorSpace){_i.workingToColorSpace(cs.copy(this),e);const n=cs.r,i=cs.g,r=cs.b,s=Math.max(n,i,r),a=Math.min(n,i,r);let o,l;const c=(a+s)/2;if(a===s)o=0,l=0;else{const t=s-a;switch(l=c<=.5?t/(s+a):t/(2-s-a),s){case n:o=(i-r)/t+(i<r?6:0);break;case i:o=(r-n)/t+2;break;case r:o=(n-i)/t+4}o/=6}return t.h=o,t.s=l,t.l=c,t}getRGB(t,e=_i.workingColorSpace){return _i.workingToColorSpace(cs.copy(this),e),t.r=cs.r,t.g=cs.g,t.b=cs.b,t}getStyle(t=an){_i.workingToColorSpace(cs.copy(this),t);const e=cs.r,n=cs.g,i=cs.b;return t!==an?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*n)},${Math.round(255*i)})`}offsetHSL(t,e,n){return this.getHSL(ss),this.setHSL(ss.h+t,ss.s+e,ss.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(ss),t.getHSL(as);const n=ri(ss.h,as.h,e),i=ri(ss.s,as.s,e),r=ri(ss.l,as.l,e);return this.setHSL(n,i,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*i,this.g=r[1]*e+r[4]*n+r[7]*i,this.b=r[2]*e+r[5]*n+r[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const cs=new ls;ls.NAMES=rs;let hs=0;class As extends Xn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:hs++}),this.uuid=ei(),this.name="",this.type="Material",this.blending=_,this.side=C,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=k,this.blendDst=O,this.blendEquation=T,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new ls(0,0,0),this.blendAlpha=0,this.depthFunc=$,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=_n,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=An,this.stencilZFail=An,this.stencilZPass=An,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`)}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(n.sheenColorMap=this.sheenColorMap.toJSON(t).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(n.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(t).uuid),void 0!==this.dispersion&&(n.dispersion=this.dispersion),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapRotation&&(n.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==_&&(n.blending=this.blending),this.side!==C&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),this.blendSrc!==k&&(n.blendSrc=this.blendSrc),this.blendDst!==O&&(n.blendDst=this.blendDst),this.blendEquation!==T&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==$&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==_n&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==An&&(n.stencilFail=this.stencilFail),this.stencilZFail!==An&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==An&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),e){const e=i(t.textures),r=i(t.images);e.length>0&&(n.textures=e),r.length>0&&(n.images=r)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}class us extends As{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ls(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new br,this.combine=rt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const ds=ps();function ps(){const t=new ArrayBuffer(4),e=new Float32Array(t),n=new Uint32Array(t),i=new Uint32Array(512),r=new Uint32Array(512);for(let t=0;t<256;++t){const e=t-127;e<-27?(i[t]=0,i[256|t]=32768,r[t]=24,r[256|t]=24):e<-14?(i[t]=1024>>-e-14,i[256|t]=1024>>-e-14|32768,r[t]=-e-1,r[256|t]=-e-1):e<=15?(i[t]=e+15<<10,i[256|t]=e+15<<10|32768,r[t]=13,r[256|t]=13):e<128?(i[t]=31744,i[256|t]=64512,r[t]=24,r[256|t]=24):(i[t]=31744,i[256|t]=64512,r[t]=13,r[256|t]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let t=1;t<1024;++t){let e=t<<13,n=0;for(;!(8388608&e);)e<<=1,n-=8388608;e&=-8388609,n+=947912704,s[t]=e|n}for(let t=1024;t<2048;++t)s[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)a[t]=t<<23;a[31]=1199570944,a[32]=2147483648;for(let t=33;t<63;++t)a[t]=2147483648+(t-32<<23);a[63]=3347054592;for(let t=1;t<64;++t)32!==t&&(o[t]=1024);return{floatView:e,uint32View:n,baseTable:i,shiftTable:r,mantissaTable:s,exponentTable:a,offsetTable:o}}function gs(t){Math.abs(t)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),t=ni(t,-65504,65504),ds.floatView[0]=t;const e=ds.uint32View[0],n=e>>23&511;return ds.baseTable[n]+((8388607&e)>>ds.shiftTable[n])}function fs(t){const e=t>>10;return ds.uint32View[0]=ds.mantissaTable[ds.offsetTable[e]+(1023&t)]+ds.exponentTable[e],ds.floatView[0]}class ms{static toHalfFloat(t){return gs(t)}static fromHalfFloat(t){return fs(t)}}const ys=new hi,vs=new li;let xs=0;class Cs{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:xs++}),this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=n,this.usage=Un,this.updateRanges=[],this.gpuType=Gt,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)vs.fromBufferAttribute(this,e),vs.applyMatrix3(t),this.setXY(e,vs.x,vs.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)ys.fromBufferAttribute(this,e),ys.applyMatrix3(t),this.setXYZ(e,ys.x,ys.y,ys.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)ys.fromBufferAttribute(this,e),ys.applyMatrix4(t),this.setXYZ(e,ys.x,ys.y,ys.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)ys.fromBufferAttribute(this,e),ys.applyNormalMatrix(t),this.setXYZ(e,ys.x,ys.y,ys.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)ys.fromBufferAttribute(this,e),ys.transformDirection(t),this.setXYZ(e,ys.x,ys.y,ys.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=si(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ai(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=si(e,this.array)),e}setX(t,e){return this.normalized&&(e=ai(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=si(e,this.array)),e}setY(t,e){return this.normalized&&(e=ai(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=si(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ai(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=si(e,this.array)),e}setW(t,e){return this.normalized&&(e=ai(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ai(e,this.array),n=ai(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ai(e,this.array),n=ai(n,this.array),i=ai(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=ai(e,this.array),n=ai(n,this.array),i=ai(i,this.array),r=ai(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==Un&&(t.usage=this.usage),t}}class Is extends Cs{constructor(t,e,n){super(new Int8Array(t),e,n)}}class Es extends Cs{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class ws extends Cs{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class _s extends Cs{constructor(t,e,n){super(new Int16Array(t),e,n)}}class bs extends Cs{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Bs extends Cs{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Ss extends Cs{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Ms extends Cs{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=fs(this.array[t*this.itemSize]);return this.normalized&&(e=si(e,this.array)),e}setX(t,e){return this.normalized&&(e=ai(e,this.array)),this.array[t*this.itemSize]=gs(e),this}getY(t){let e=fs(this.array[t*this.itemSize+1]);return this.normalized&&(e=si(e,this.array)),e}setY(t,e){return this.normalized&&(e=ai(e,this.array)),this.array[t*this.itemSize+1]=gs(e),this}getZ(t){let e=fs(this.array[t*this.itemSize+2]);return this.normalized&&(e=si(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ai(e,this.array)),this.array[t*this.itemSize+2]=gs(e),this}getW(t){let e=fs(this.array[t*this.itemSize+3]);return this.normalized&&(e=si(e,this.array)),e}setW(t,e){return this.normalized&&(e=ai(e,this.array)),this.array[t*this.itemSize+3]=gs(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ai(e,this.array),n=ai(n,this.array)),this.array[t+0]=gs(e),this.array[t+1]=gs(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ai(e,this.array),n=ai(n,this.array),i=ai(i,this.array)),this.array[t+0]=gs(e),this.array[t+1]=gs(n),this.array[t+2]=gs(i),this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=ai(e,this.array),n=ai(n,this.array),i=ai(i,this.array),r=ai(r,this.array)),this.array[t+0]=gs(e),this.array[t+1]=gs(n),this.array[t+2]=gs(i),this.array[t+3]=gs(r),this}}class Ts extends Cs{constructor(t,e,n){super(new Float32Array(t),e,n)}}let Qs=0;const Ds=new fr,Rs=new Hr,Us=new hi,Ps=new Hi,Ls=new Hi,Fs=new hi;class Ns extends Xn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Qs++}),this.uuid=ei(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(gi(t)?Ss:bs)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new di).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ds.makeRotationFromQuaternion(t),this.applyMatrix4(Ds),this}rotateX(t){return Ds.makeRotationX(t),this.applyMatrix4(Ds),this}rotateY(t){return Ds.makeRotationY(t),this.applyMatrix4(Ds),this}rotateZ(t){return Ds.makeRotationZ(t),this.applyMatrix4(Ds),this}translate(t,e,n){return Ds.makeTranslation(t,e,n),this.applyMatrix4(Ds),this}scale(t,e,n){return Ds.makeScale(t,e,n),this.applyMatrix4(Ds),this}lookAt(t){return Rs.lookAt(t),Rs.updateMatrix(),this.applyMatrix4(Rs.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Us).negate(),this.translate(Us.x,Us.y,Us.z),this}setFromPoints(t){const e=this.getAttribute("position");if(void 0===e){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}this.setAttribute("position",new Ts(e,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const n=t[i];e.setXYZ(i,n.x,n.y,n.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Hi);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new hi(-1/0,-1/0,-1/0),new hi(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Ps.setFromBufferAttribute(n),this.morphTargetsRelative?(Fs.addVectors(this.boundingBox.min,Ps.min),this.boundingBox.expandByPoint(Fs),Fs.addVectors(this.boundingBox.max,Ps.max),this.boundingBox.expandByPoint(Fs)):(this.boundingBox.expandByPoint(Ps.min),this.boundingBox.expandByPoint(Ps.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new or);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new hi,1/0);if(t){const n=this.boundingSphere.center;if(Ps.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Ls.setFromBufferAttribute(n),this.morphTargetsRelative?(Fs.addVectors(Ps.min,Ls.min),Ps.expandByPoint(Fs),Fs.addVectors(Ps.max,Ls.max),Ps.expandByPoint(Fs)):(Ps.expandByPoint(Ls.min),Ps.expandByPoint(Ls.max))}Ps.getCenter(n);let i=0;for(let e=0,r=t.count;e<r;e++)Fs.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(Fs));if(e)for(let r=0,s=e.length;r<s;r++){const s=e[r],a=this.morphTargetsRelative;for(let e=0,r=s.count;e<r;e++)Fs.fromBufferAttribute(s,e),a&&(Us.fromBufferAttribute(t,e),Fs.add(Us)),i=Math.max(i,n.distanceToSquared(Fs))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.position,i=e.normal,r=e.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Cs(new Float32Array(4*n.count),4));const s=this.getAttribute("tangent"),a=[],o=[];for(let t=0;t<n.count;t++)a[t]=new hi,o[t]=new hi;const l=new hi,c=new hi,h=new hi,A=new li,u=new li,d=new li,p=new hi,g=new hi;function f(t,e,i){l.fromBufferAttribute(n,t),c.fromBufferAttribute(n,e),h.fromBufferAttribute(n,i),A.fromBufferAttribute(r,t),u.fromBufferAttribute(r,e),d.fromBufferAttribute(r,i),c.sub(l),h.sub(l),u.sub(A),d.sub(A);const s=1/(u.x*d.y-d.x*u.y);isFinite(s)&&(p.copy(c).multiplyScalar(d.y).addScaledVector(h,-u.y).multiplyScalar(s),g.copy(h).multiplyScalar(u.x).addScaledVector(c,-d.x).multiplyScalar(s),a[t].add(p),a[e].add(p),a[i].add(p),o[t].add(g),o[e].add(g),o[i].add(g))}let m=this.groups;0===m.length&&(m=[{start:0,count:t.count}]);for(let e=0,n=m.length;e<n;++e){const n=m[e],i=n.start;for(let e=i,r=i+n.count;e<r;e+=3)f(t.getX(e+0),t.getX(e+1),t.getX(e+2))}const y=new hi,v=new hi,x=new hi,C=new hi;function I(t){x.fromBufferAttribute(i,t),C.copy(x);const e=a[t];y.copy(e),y.sub(x.multiplyScalar(x.dot(e))).normalize(),v.crossVectors(C,e);const n=v.dot(o[t])<0?-1:1;s.setXYZW(t,y.x,y.y,y.z,n)}for(let e=0,n=m.length;e<n;++e){const n=m[e],i=n.start;for(let e=i,r=i+n.count;e<r;e+=3)I(t.getX(e+0)),I(t.getX(e+1)),I(t.getX(e+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Cs(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new hi,r=new hi,s=new hi,a=new hi,o=new hi,l=new hi,c=new hi,h=new hi;if(t)for(let A=0,u=t.count;A<u;A+=3){const u=t.getX(A+0),d=t.getX(A+1),p=t.getX(A+2);i.fromBufferAttribute(e,u),r.fromBufferAttribute(e,d),s.fromBufferAttribute(e,p),c.subVectors(s,r),h.subVectors(i,r),c.cross(h),a.fromBufferAttribute(n,u),o.fromBufferAttribute(n,d),l.fromBufferAttribute(n,p),a.add(c),o.add(c),l.add(c),n.setXYZ(u,a.x,a.y,a.z),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(p,l.x,l.y,l.z)}else for(let t=0,a=e.count;t<a;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),c.subVectors(s,r),h.subVectors(i,r),c.cross(h),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Fs.fromBufferAttribute(t,e),Fs.normalize(),t.setXYZ(e,Fs.x,Fs.y,Fs.z)}toNonIndexed(){function t(t,e){const n=t.array,i=t.itemSize,r=t.normalized,s=new n.constructor(e.length*i);let a=0,o=0;for(let r=0,l=e.length;r<l;r++){a=t.isInterleavedBufferAttribute?e[r]*t.data.stride+t.offset:e[r]*i;for(let t=0;t<i;t++)s[o++]=n[a++]}return new Cs(s,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Ns,n=this.index.array,i=this.attributes;for(const r in i){const s=t(i[r],n);e.setAttribute(r,s)}const r=this.morphAttributes;for(const i in r){const s=[],a=r[i];for(let e=0,i=a.length;e<i;e++){const i=t(a[e],n);s.push(i)}e.morphAttributes[i]=s}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let t=0,n=s.length;t<n;t++){const n=s[t];e.addGroup(n.start,n.count,n.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e];t.data.attributes[e]=i.toJSON(t.data)}const i={};let r=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],s=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];s.push(i.toJSON(t.data))}s.length>0&&(i[e]=s,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(t.data.boundingSphere=a.toJSON()),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone());const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const r=t.morphAttributes;for(const t in r){const n=[],i=r[t];for(let t=0,r=i.length;t<r;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let t=0,e=s.length;t<e;t++){const e=s[t];this.addGroup(e.start,e.count,e.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ks=new fr,Os=new gr,zs=new or,Gs=new hi,Hs=new hi,Vs=new hi,qs=new hi,Ys=new hi,Ws=new hi,Js=new hi,js=new hi;class Xs extends Hr{constructor(t=new Ns,e=new us){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,s=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(r&&a){Ws.set(0,0,0);for(let n=0,i=r.length;n<i;n++){const i=a[n],o=r[n];0!==i&&(Ys.fromBufferAttribute(o,t),s?Ws.addScaledVector(Ys,i):Ws.addScaledVector(Ys.sub(e),i))}e.add(Ws)}return e}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0!==i){if(null===n.boundingSphere&&n.computeBoundingSphere(),zs.copy(n.boundingSphere),zs.applyMatrix4(r),Os.copy(t.ray).recast(t.near),!1===zs.containsPoint(Os.origin)){if(null===Os.intersectSphere(zs,Gs))return;if(Os.origin.distanceToSquared(Gs)>(t.far-t.near)**2)return}ks.copy(r).invert(),Os.copy(t.ray).applyMatrix4(ks),null!==n.boundingBox&&!1===Os.intersectsBox(n.boundingBox)||this._computeIntersections(t,e,Os)}}_computeIntersections(t,e,n){let i;const r=this.geometry,s=this.material,a=r.index,o=r.attributes.position,l=r.attributes.uv,c=r.attributes.uv1,h=r.attributes.normal,A=r.groups,u=r.drawRange;if(null!==a)if(Array.isArray(s))for(let r=0,o=A.length;r<o;r++){const o=A[r],d=s[o.materialIndex];for(let r=Math.max(o.start,u.start),s=Math.min(a.count,Math.min(o.start+o.count,u.start+u.count));r<s;r+=3)i=Ks(this,d,t,n,l,c,h,a.getX(r),a.getX(r+1),a.getX(r+2)),i&&(i.faceIndex=Math.floor(r/3),i.face.materialIndex=o.materialIndex,e.push(i))}else for(let r=Math.max(0,u.start),o=Math.min(a.count,u.start+u.count);r<o;r+=3)i=Ks(this,s,t,n,l,c,h,a.getX(r),a.getX(r+1),a.getX(r+2)),i&&(i.faceIndex=Math.floor(r/3),e.push(i));else if(void 0!==o)if(Array.isArray(s))for(let r=0,a=A.length;r<a;r++){const a=A[r],d=s[a.materialIndex];for(let r=Math.max(a.start,u.start),s=Math.min(o.count,Math.min(a.start+a.count,u.start+u.count));r<s;r+=3)i=Ks(this,d,t,n,l,c,h,r,r+1,r+2),i&&(i.faceIndex=Math.floor(r/3),i.face.materialIndex=a.materialIndex,e.push(i))}else for(let r=Math.max(0,u.start),a=Math.min(o.count,u.start+u.count);r<a;r+=3)i=Ks(this,s,t,n,l,c,h,r,r+1,r+2),i&&(i.faceIndex=Math.floor(r/3),e.push(i))}}function Ks(t,e,n,i,r,s,a,o,l,c){t.getVertexPosition(o,Hs),t.getVertexPosition(l,Vs),t.getVertexPosition(c,qs);const h=function(t,e,n,i,r,s,a,o){let l;if(l=e.side===I?i.intersectTriangle(a,s,r,!0,o):i.intersectTriangle(r,s,a,e.side===C,o),null===l)return null;js.copy(o),js.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(js);return c<n.near||c>n.far?null:{distance:c,point:js.clone(),object:t}}(t,e,n,i,Hs,Vs,qs,Js);if(h){const t=new hi;is.getBarycoord(Js,Hs,Vs,qs,t),r&&(h.uv=is.getInterpolatedAttribute(r,o,l,c,t,new li)),s&&(h.uv1=is.getInterpolatedAttribute(s,o,l,c,t,new li)),a&&(h.normal=is.getInterpolatedAttribute(a,o,l,c,t,new hi),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const e={a:o,b:l,c,normal:new hi,materialIndex:0};is.getNormal(Hs,Vs,qs,e.normal),h.face=e,h.barycoord=t}return h}class Zs extends Ns{constructor(t=1,e=1,n=1,i=1,r=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:s};const a=this;i=Math.floor(i),r=Math.floor(r),s=Math.floor(s);const o=[],l=[],c=[],h=[];let A=0,u=0;function d(t,e,n,i,r,s,d,p,g,f,m){const y=s/g,v=d/f,x=s/2,C=d/2,I=p/2,E=g+1,w=f+1;let _=0,b=0;const B=new hi;for(let s=0;s<w;s++){const a=s*v-C;for(let o=0;o<E;o++){const A=o*y-x;B[t]=A*i,B[e]=a*r,B[n]=I,l.push(B.x,B.y,B.z),B[t]=0,B[e]=0,B[n]=p>0?1:-1,c.push(B.x,B.y,B.z),h.push(o/g),h.push(1-s/f),_+=1}}for(let t=0;t<f;t++)for(let e=0;e<g;e++){const n=A+e+E*t,i=A+e+E*(t+1),r=A+(e+1)+E*(t+1),s=A+(e+1)+E*t;o.push(n,i,s),o.push(i,r,s),b+=6}a.addGroup(u,b,m),u+=b,A+=_}d("z","y","x",-1,-1,n,e,t,s,r,0),d("z","y","x",1,-1,n,e,-t,s,r,1),d("x","z","y",1,1,t,n,e,i,s,2),d("x","z","y",1,-1,t,n,-e,i,s,3),d("x","y","z",1,-1,t,e,n,i,r,4),d("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new Ts(l,3)),this.setAttribute("normal",new Ts(c,3)),this.setAttribute("uv",new Ts(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Zs(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function $s(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[n][i]=null):e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function ta(t){const e={};for(let n=0;n<t.length;n++){const i=$s(t[n]);for(const t in i)e[t]=i[t]}return e}function ea(t){const e=t.getRenderTarget();return null===e?t.outputColorSpace:!0===e.isXRRenderTarget?e.texture.colorSpace:_i.workingColorSpace}const na={clone:$s,merge:ta};class ia extends As{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=$s(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class ra extends Hr{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new fr,this.projectionMatrix=new fr,this.projectionMatrixInverse=new fr,this.coordinateSystem=qn,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const sa=new hi,aa=new li,oa=new li;class la extends ra{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*ti*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*$n*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*ti*Math.atan(Math.tan(.5*$n*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){sa.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(sa.x,sa.y).multiplyScalar(-t/sa.z),sa.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(sa.x,sa.y).multiplyScalar(-t/sa.z)}getViewSize(t,e){return this.getViewBounds(t,aa,oa),e.subVectors(oa,aa)}setViewOffset(t,e,n,i,r,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*$n*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,a=s.fullHeight;r+=s.offsetX*i/t,e-=s.offsetY*n/a,i*=s.width/t,n*=s.height/a}const a=this.filmOffset;0!==a&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const ca=-90;class ha extends Hr{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new la(ca,1,t,e);i.layers=this.layers,this.add(i);const r=new la(ca,1,t,e);r.layers=this.layers,this.add(r);const s=new la(ca,1,t,e);s.layers=this.layers,this.add(s);const a=new la(ca,1,t,e);a.layers=this.layers,this.add(a);const o=new la(ca,1,t,e);o.layers=this.layers,this.add(o);const l=new la(ca,1,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,r,s,a,o]=e;for(const t of e)this.remove(t);if(t===qn)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),s.up.set(0,0,1),s.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(t!==Yn)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),s.up.set(0,0,-1),s.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const t of e)this.add(t),t.updateMatrixWorld()}update(t,e){null===this.parent&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[r,s,a,o,l,c]=this.children,h=t.getRenderTarget(),A=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.xr.enabled;t.xr.enabled=!1;const p=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,r),t.setRenderTarget(n,1,i),t.render(e,s),t.setRenderTarget(n,2,i),t.render(e,a),t.setRenderTarget(n,3,i),t.render(e,o),t.setRenderTarget(n,4,i),t.render(e,l),n.texture.generateMipmaps=p,t.setRenderTarget(n,5,i),t.render(e,c),t.setRenderTarget(h,A,u),t.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class Aa extends Pi{constructor(t=[],e=yt,n,i,r,s,a,o,l,c){super(t,e,n,i,r,s,a,o,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class ua extends Ni{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new Aa(i),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={tEquirect:{value:null}},i="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",r="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",s=new Zs(5,5,5),a=new ia({name:"CubemapFromEquirect",uniforms:$s(n),vertexShader:i,fragmentShader:r,side:I,blending:w});a.uniforms.tEquirect.value=e;const o=new Xs(s,a),l=e.minFilter;return e.minFilter===Ut&&(e.minFilter=Qt),new ha(1,10,this).update(t,o),e.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(t,e=!0,n=!0,i=!0){const r=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,n,i);t.setRenderTarget(r)}}class da extends Hr{constructor(){super(),this.isGroup=!0,this.type="Group"}}const pa={type:"move"};class ga{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new da,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new da,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new hi,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new hi),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new da,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new hi,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new hi),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){s=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,n),r=this._getHandJoint(l,i);null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.matrixWorldNeedsUpdate=!0,r.jointRadius=t.radius),r.visible=null!==t}const i=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],a=i.position.distanceTo(r.position),o=.02,c=.005;l.inputState.pinching&&a>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&a<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));null!==a&&(i=e.getPose(t.targetRaySpace,n),null===i&&null!==r&&(i=r),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(pa)))}return null!==a&&(a.visible=null!==i),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==s),this}_getHandJoint(t,e){if(void 0===t.joints[e.jointName]){const n=new da;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class fa{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new ls(t),this.density=e}clone(){return new fa(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class ma{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new ls(t),this.near=e,this.far=n}clone(){return new ma(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class ya extends Hr{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new br,this.environmentIntensity=1,this.environmentRotation=new br,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class va{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=Un,this.updateRanges=[],this.version=0,this.uuid=ei()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ei()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ei()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const xa=new hi;class Ca{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)xa.fromBufferAttribute(this,e),xa.applyMatrix4(t),this.setXYZ(e,xa.x,xa.y,xa.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)xa.fromBufferAttribute(this,e),xa.applyNormalMatrix(t),this.setXYZ(e,xa.x,xa.y,xa.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)xa.fromBufferAttribute(this,e),xa.transformDirection(t),this.setXYZ(e,xa.x,xa.y,xa.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=si(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ai(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=ai(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=ai(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=ai(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=ai(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=si(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=si(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=si(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=si(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=ai(e,this.array),n=ai(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=ai(e,this.array),n=ai(n,this.array),i=ai(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.normalized&&(e=ai(e,this.array),n=ai(n,this.array),i=ai(i,this.array),r=ai(r,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Cs(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Ca(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Ia extends As{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new ls(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let Ea;const wa=new hi,_a=new hi,ba=new hi,Ba=new li,Sa=new li,Ma=new fr,Ta=new hi,Qa=new hi,Da=new hi,Ra=new li,Ua=new li,Pa=new li;class La extends Hr{constructor(t=new Ia){if(super(),this.isSprite=!0,this.type="Sprite",void 0===Ea){Ea=new Ns;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new va(t,5);Ea.setIndex([0,1,2,0,2,3]),Ea.setAttribute("position",new Ca(e,3,0,!1)),Ea.setAttribute("uv",new Ca(e,2,3,!1))}this.geometry=Ea,this.material=t,this.center=new li(.5,.5),this.count=1}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),_a.setFromMatrixScale(this.matrixWorld),Ma.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),ba.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&_a.multiplyScalar(-ba.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;Fa(Ta.set(-.5,-.5,0),ba,s,_a,i,r),Fa(Qa.set(.5,-.5,0),ba,s,_a,i,r),Fa(Da.set(.5,.5,0),ba,s,_a,i,r),Ra.set(0,0),Ua.set(1,0),Pa.set(1,1);let a=t.ray.intersectTriangle(Ta,Qa,Da,!1,wa);if(null===a&&(Fa(Qa.set(-.5,.5,0),ba,s,_a,i,r),Ua.set(0,1),a=t.ray.intersectTriangle(Ta,Da,Qa,!1,wa),null===a))return;const o=t.ray.origin.distanceTo(wa);o<t.near||o>t.far||e.push({distance:o,point:wa.clone(),uv:is.getInterpolation(wa,Ta,Qa,Da,Ra,Ua,Pa,new li),face:null,object:this})}copy(t,e){return super.copy(t,e),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Fa(t,e,n,i,r,s){Ba.subVectors(t,n).addScalar(.5).multiply(i),void 0!==r?(Sa.x=s*Ba.x-r*Ba.y,Sa.y=r*Ba.x+s*Ba.y):Sa.copy(Ba),t.copy(e),t.x+=Sa.x,t.y+=Sa.y,t.applyMatrix4(Ma)}const Na=new hi,ka=new hi;class Oa extends Hr{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let t=0,n=e.length;t<n;t++){const n=e[t];this.addLevel(n.object.clone(),n.distance,n.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let r;for(r=0;r<i.length&&!(e<i[r].distance);r++);return i.splice(r,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const t=e.splice(n,1);return this.remove(t[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let i=e[n].distance;if(e[n].object.visible&&(i-=i*e[n].hysteresis),t<i)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){Na.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(Na);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){Na.setFromMatrixPosition(t.matrixWorld),ka.setFromMatrixPosition(this.matrixWorld);const n=Na.distanceTo(ka)/t.zoom;let i,r;for(e[0].object.visible=!0,i=1,r=e.length;i<r;i++){let t=e[i].distance;if(e[i].object.visible&&(t-=t*e[i].hysteresis),!(n>=t))break;e[i-1].object.visible=!1,e[i].object.visible=!0}for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let t=0,i=n.length;t<i;t++){const i=n[t];e.object.levels.push({object:i.object.uuid,distance:i.distance,hysteresis:i.hysteresis})}return e}}const za=new hi,Ga=new Li,Ha=new Li,Va=new hi,qa=new fr,Ya=new hi,Wa=new or,Ja=new fr,ja=new gr;class Xa extends Xs{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=gt,this.bindMatrix=new fr,this.bindMatrixInverse=new fr,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;null===this.boundingBox&&(this.boundingBox=new Hi),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let t=0;t<e.count;t++)this.getVertexPosition(t,Ya),this.boundingBox.expandByPoint(Ya)}computeBoundingSphere(){const t=this.geometry;null===this.boundingSphere&&(this.boundingSphere=new or),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let t=0;t<e.count;t++)this.getVertexPosition(t,Ya),this.boundingSphere.expandByPoint(Ya)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;void 0!==n&&(null===this.boundingSphere&&this.computeBoundingSphere(),Wa.copy(this.boundingSphere),Wa.applyMatrix4(i),!1!==t.ray.intersectsSphere(Wa)&&(Ja.copy(i).invert(),ja.copy(t.ray).applyMatrix4(Ja),null!==this.boundingBox&&!1===ja.intersectsBox(this.boundingBox)||this._computeIntersections(t,e,ja)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Li,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===gt?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===ft?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;Ga.fromBufferAttribute(i.attributes.skinIndex,t),Ha.fromBufferAttribute(i.attributes.skinWeight,t),za.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const i=Ha.getComponent(t);if(0!==i){const r=Ga.getComponent(t);qa.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),e.addScaledVector(Va.copy(za).applyMatrix4(qa),i)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Ka extends Hr{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Za extends Pi{constructor(t=null,e=1,n=1,i,r,s,a,o,l=bt,c=bt,h,A){super(null,s,a,o,l,c,i,r,h,A),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const $a=new fr,to=new fr;class eo{constructor(t=[],e=[]){this.uuid=ei(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new fr)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new fr;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let i=0,r=t.length;i<r;i++){const r=t[i]?t[i].matrixWorld:to;$a.multiplyMatrices(r,e[i]),$a.toArray(n,16*i)}null!==i&&(i.needsUpdate=!0)}clone(){return new eo(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=4*Math.ceil(t/4),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new Za(e,t,t,Kt,Gt);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const i=t.bones[n];let r=e[i];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),r=new Ka),this.bones.push(r),this.boneInverses.push((new fr).fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,r=e.length;i<r;i++){const r=e[i];t.bones.push(r.uuid);const s=n[i];t.boneInverses.push(s.toArray())}return t}}class no extends Cs{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const io=new fr,ro=new fr,so=[],ao=new Hi,oo=new fr,lo=new Xs,co=new or;class ho extends Xs{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new no(new Float32Array(16*n),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let t=0;t<n;t++)this.setMatrixAt(t,oo)}computeBoundingBox(){const t=this.geometry,e=this.count;null===this.boundingBox&&(this.boundingBox=new Hi),null===t.boundingBox&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,io),ao.copy(t.boundingBox).applyMatrix4(io),this.boundingBox.union(ao)}computeBoundingSphere(){const t=this.geometry,e=this.count;null===this.boundingSphere&&(this.boundingSphere=new or),null===t.boundingSphere&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,io),co.copy(t.boundingSphere).applyMatrix4(io),this.boundingSphere.union(co)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),null!==t.morphTexture&&(this.morphTexture=t.morphTexture.clone()),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,r=t*(n.length+1)+1;for(let t=0;t<n.length;t++)n[t]=i[r+t]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(lo.geometry=this.geometry,lo.material=this.material,void 0!==lo.material&&(null===this.boundingSphere&&this.computeBoundingSphere(),co.copy(this.boundingSphere),co.applyMatrix4(n),!1!==t.ray.intersectsSphere(co)))for(let r=0;r<i;r++){this.getMatrixAt(r,io),ro.multiplyMatrices(n,io),lo.matrixWorld=ro,lo.raycast(t,so);for(let t=0,n=so.length;t<n;t++){const n=so[t];n.instanceId=r,n.object=this,e.push(n)}so.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new no(new Float32Array(3*this.instanceMatrix.count).fill(1),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;null===this.morphTexture&&(this.morphTexture=new Za(new Float32Array(i*this.count),i,this.count,te,Gt));const r=this.morphTexture.source.data.data;let s=0;for(let t=0;t<n.length;t++)s+=n[t];const a=this.geometry.morphTargetsRelative?1:1-s,o=i*t;r[o]=a,r.set(n,o+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),null!==this.morphTexture&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Ao=new hi,uo=new hi,po=new di;class go{constructor(t=new hi(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=Ao.subVectors(n,e).cross(uo.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(Ao),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(t.start).addScaledVector(n,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||po.getNormalMatrix(t),i=this.coplanarPoint(Ao).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const fo=new or,mo=new li(.5,.5),yo=new hi;class vo{constructor(t=new go,e=new go,n=new go,i=new go,r=new go,s=new go){this.planes=[t,e,n,i,r,s]}set(t,e,n,i,r,s){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(s),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=qn,n=!1){const i=this.planes,r=t.elements,s=r[0],a=r[1],o=r[2],l=r[3],c=r[4],h=r[5],A=r[6],u=r[7],d=r[8],p=r[9],g=r[10],f=r[11],m=r[12],y=r[13],v=r[14],x=r[15];if(i[0].setComponents(l-s,u-c,f-d,x-m).normalize(),i[1].setComponents(l+s,u+c,f+d,x+m).normalize(),i[2].setComponents(l+a,u+h,f+p,x+y).normalize(),i[3].setComponents(l-a,u-h,f-p,x-y).normalize(),n)i[4].setComponents(o,A,g,v).normalize(),i[5].setComponents(l-o,u-A,f-g,x-v).normalize();else if(i[4].setComponents(l-o,u-A,f-g,x-v).normalize(),e===qn)i[5].setComponents(l+o,u+A,f+g,x+v).normalize();else{if(e!==Yn)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);i[5].setComponents(o,A,g,v).normalize()}return this}intersectsObject(t){if(void 0!==t.boundingSphere)null===t.boundingSphere&&t.computeBoundingSphere(),fo.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;null===e.boundingSphere&&e.computeBoundingSphere(),fo.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(fo)}intersectsSprite(t){fo.center.set(0,0,0);const e=mo.distanceTo(t.center);return fo.radius=.7071067811865476+e,fo.applyMatrix4(t.matrixWorld),this.intersectsSphere(fo)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(yo.x=i.normal.x>0?t.max.x:t.min.x,yo.y=i.normal.y>0?t.max.y:t.min.y,yo.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(yo)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}const xo=new fr,Co=new vo;class Io{constructor(){this.coordinateSystem=qn}intersectsObject(t,e){if(!e.isArrayCamera||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(xo.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Co.setFromProjectionMatrix(xo,i.coordinateSystem,i.reversedDepth),Co.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(xo.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Co.setFromProjectionMatrix(xo,i.coordinateSystem,i.reversedDepth),Co.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(xo.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Co.setFromProjectionMatrix(xo,i.coordinateSystem,i.reversedDepth),Co.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(xo.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Co.setFromProjectionMatrix(xo,i.coordinateSystem,i.reversedDepth),Co.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(xo.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Co.setFromProjectionMatrix(xo,i.coordinateSystem,i.reversedDepth),Co.containsPoint(t))return!0}return!1}clone(){return new Io}}function Eo(t,e){return t-e}function wo(t,e){return t.z-e.z}function _o(t,e){return e.z-t.z}class bo{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,i){const r=this.pool,s=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const a=r[this.index];s.push(a),this.index++,a.start=t,a.count=e,a.z=n,a.index=i}reset(){this.list.length=0,this.index=0}}const Bo=new fr,So=new ls(1,1,1),Mo=new vo,To=new Io,Qo=new Hi,Do=new or,Ro=new hi,Uo=new hi,Po=new hi,Lo=new bo,Fo=new Xs,No=[];function ko(t,e,n=0){const i=e.itemSize;if(t.isInterleavedBufferAttribute||t.array.constructor!==e.array.constructor){const r=t.count;for(let s=0;s<r;s++)for(let r=0;r<i;r++)e.setComponent(s+n,r,t.getComponent(s,r))}else e.array.set(t.array,n*i);e.needsUpdate=!0}function Oo(t,e){if(t.constructor!==e.constructor){const n=Math.min(t.length,e.length);for(let i=0;i<n;i++)e[i]=t[i]}else{const n=Math.min(t.length,e.length);e.set(new t.constructor(t.buffer,0,n))}}class zo extends Xs{constructor(t,e,n=2*e,i){super(new Ns,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(4*this._maxInstanceCount);t=4*Math.ceil(t/4),t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new Za(e,t,t,Kt,Gt);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new Za(e,t,t,ee,zt);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new Za(e,t,t,Kt,Gt);n.colorSpace=_i.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(!1===this._geometryInitialized){for(const i in t.attributes){const r=t.getAttribute(i),{array:s,itemSize:a,normalized:o}=r,l=new s.constructor(n*a),c=new Cs(l,a,o);e.setAttribute(i,c)}if(null!==t.getIndex()){const t=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new Cs(t,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(Boolean(t.getIndex())!==Boolean(e.getIndex()))throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=t.getAttribute(n),r=e.getAttribute(n);if(i.itemSize!==r.itemSize||i.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||!1===e[t].active)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||!1===e[t].active)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Hi);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(!1===e[n].active)continue;const i=e[n].geometryIndex;this.getMatrixAt(n,Bo),this.getBoundingBoxAt(i,Qo).applyMatrix4(Bo),t.union(Qo)}}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new or);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(!1===e[n].active)continue;const i=e[n].geometryIndex;this.getMatrixAt(n,Bo),this.getBoundingSphereAt(i,Do).applyMatrix4(Bo),t.union(Do)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&0===this._availableInstanceIds.length)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const e={visible:!0,active:!0,geometryIndex:t};let n=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Eo),n=this._availableInstanceIds.shift(),this._instanceInfo[n]=e):(n=this._instanceInfo.length,this._instanceInfo.push(e));const i=this._matricesTexture;Bo.identity().toArray(i.image.data,16*n),i.needsUpdate=!0;const r=this._colorsTexture;return r&&(So.toArray(r.image.data,4*n),r.needsUpdate=!0),this._visibilityChanged=!0,n}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=-1===e?t.getAttribute("position").count:e;const s=t.getIndex();if(null!==s&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=-1===n?s.count:n),-1!==i.indexStart&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let a;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Eo),a=this._availableGeometryIds.shift(),r[a]=i):(a=this._geometryCount,this._geometryCount++,r.push(i)),this.setGeometryAt(a,t),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,a}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=null!==n.getIndex(),r=n.getIndex(),s=e.getIndex(),a=this._geometryInfo[t];if(i&&s.count>a.reservedIndexCount||e.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const o=a.vertexStart,l=a.reservedVertexCount;a.vertexCount=e.getAttribute("position").count;for(const t in n.attributes){const i=e.getAttribute(t),r=n.getAttribute(t);ko(i,r,o);const s=i.itemSize;for(let t=i.count,e=l;t<e;t++){const e=o+t;for(let t=0;t<s;t++)r.setComponent(e,t,0)}r.needsUpdate=!0,r.addUpdateRange(o*s,l*s)}if(i){const t=a.indexStart,n=a.reservedIndexCount;a.indexCount=e.getIndex().count;for(let e=0;e<s.count;e++)r.setX(t+e,o+s.getX(e));for(let e=s.count,i=n;e<i;e++)r.setX(t+e,o);r.needsUpdate=!0,r.addUpdateRange(t,a.reservedIndexCount)}return a.start=i?a.indexStart:a.vertexStart,a.count=i?a.indexCount:a.vertexCount,a.boundingBox=null,null!==e.boundingBox&&(a.boundingBox=e.boundingBox.clone()),a.boundingSphere=null,null!==e.boundingSphere&&(a.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||!1===e[t].active)return this;const n=this._instanceInfo;for(let e=0,i=n.length;e<i;e++)n[e].active&&n[e].geometryIndex===t&&this.deleteInstance(e);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,i=n.map((t,e)=>e).sort((t,e)=>n[t].vertexStart-n[e].vertexStart),r=this.geometry;for(let s=0,a=n.length;s<a;s++){const a=i[s],o=n[a];if(!1!==o.active){if(null!==r.index){if(o.indexStart!==e){const{indexStart:n,vertexStart:i,reservedIndexCount:s}=o,a=r.index,l=a.array,c=t-i;for(let t=n;t<n+s;t++)l[t]=l[t]+c;a.array.copyWithin(e,n,n+s),a.addUpdateRange(e,s),o.indexStart=e}e+=o.reservedIndexCount}if(o.vertexStart!==t){const{vertexStart:e,reservedVertexCount:n}=o,i=r.attributes;for(const r in i){const s=i[r],{array:a,itemSize:o}=s;a.copyWithin(t*o,e*o,(e+n)*o),s.addUpdateRange(t*o,n*o)}o.vertexStart=t}t+=o.reservedVertexCount,o.start=r.index?o.indexStart:o.vertexStart,this._nextIndexStart=r.index?o.indexStart+o.reservedIndexCount:0,this._nextVertexStart=o.vertexStart+o.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(null===i.boundingBox){const t=new Hi,e=n.index,r=n.attributes.position;for(let n=i.start,s=i.start+i.count;n<s;n++){let i=n;e&&(i=e.getX(i)),t.expandByPoint(Ro.fromBufferAttribute(r,i))}i.boundingBox=t}return e.copy(i.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(null===i.boundingSphere){const e=new or;this.getBoundingBoxAt(t,Qo),Qo.getCenter(e.center);const r=n.index,s=n.attributes.position;let a=0;for(let t=i.start,n=i.start+i.count;t<n;t++){let n=t;r&&(n=r.getX(n)),Ro.fromBufferAttribute(s,n),a=Math.max(a,e.center.distanceToSquared(Ro))}e.radius=Math.sqrt(a),i.boundingSphere=e}return e.copy(i.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,i=this._matricesTexture.image.data;return e.toArray(i,16*t),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,16*t)}setColorAt(t,e){return this.validateInstanceId(t),null===this._colorsTexture&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,4*t),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,4*t)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e||(this._instanceInfo[t].visible=e,this._visibilityChanged=!0),this}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(Eo);e[e.length-1]===n.length-1;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const i=new Int32Array(t),r=new Int32Array(t);Oo(this._multiDrawCounts,i),Oo(this._multiDrawStarts,r),this._multiDrawCounts=i,this._multiDrawStarts=r,this._maxInstanceCount=t;const s=this._indirectTexture,a=this._matricesTexture,o=this._colorsTexture;s.dispose(),this._initIndirectTexture(),Oo(s.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),Oo(a.image.data,this._matricesTexture.image.data),o&&(o.dispose(),this._initColorsTexture(),Oo(o.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(t=>t.active);if(Math.max(...n.map(t=>t.vertexStart+t.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(t=>t.indexStart+t.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const i=this.geometry;i.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new Ns,this._initializeGeometry(i));const r=this.geometry;i.index&&Oo(i.index.array,r.index.array);for(const t in i.attributes)Oo(i.attributes[t].array,r.attributes[t].array)}raycast(t,e){const n=this._instanceInfo,i=this._geometryInfo,r=this.matrixWorld,s=this.geometry;Fo.material=this.material,Fo.geometry.index=s.index,Fo.geometry.attributes=s.attributes,null===Fo.geometry.boundingBox&&(Fo.geometry.boundingBox=new Hi),null===Fo.geometry.boundingSphere&&(Fo.geometry.boundingSphere=new or);for(let s=0,a=n.length;s<a;s++){if(!n[s].visible||!n[s].active)continue;const a=n[s].geometryIndex,o=i[a];Fo.geometry.setDrawRange(o.start,o.count),this.getMatrixAt(s,Fo.matrixWorld).premultiply(r),this.getBoundingBoxAt(a,Fo.geometry.boundingBox),this.getBoundingSphereAt(a,Fo.geometry.boundingSphere),Fo.raycast(t,No);for(let t=0,n=No.length;t<n;t++){const n=No[t];n.object=this,n.batchId=s,e.push(n)}No.length=0}Fo.material=null,Fo.geometry.index=null,Fo.geometry.attributes={},Fo.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=null!==t.boundingBox?t.boundingBox.clone():null,this.boundingSphere=null!==t.boundingSphere?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(t=>({...t,boundingBox:null!==t.boundingBox?t.boundingBox.clone():null,boundingSphere:null!==t.boundingSphere?t.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(t=>({...t})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),null!==this._colorsTexture&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,null!==this._colorsTexture&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,i,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const s=i.getIndex(),a=null===s?1:s.array.BYTES_PER_ELEMENT,o=this._instanceInfo,l=this._multiDrawStarts,c=this._multiDrawCounts,h=this._geometryInfo,A=this.perObjectFrustumCulled,u=this._indirectTexture,d=u.image.data,p=n.isArrayCamera?To:Mo;A&&!n.isArrayCamera&&(Bo.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Mo.setFromProjectionMatrix(Bo,n.coordinateSystem,n.reversedDepth));let g=0;if(this.sortObjects){Bo.copy(this.matrixWorld).invert(),Ro.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Bo),Uo.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Bo);for(let t=0,e=o.length;t<e;t++)if(o[t].visible&&o[t].active){const e=o[t].geometryIndex;this.getMatrixAt(t,Bo),this.getBoundingSphereAt(e,Do).applyMatrix4(Bo);let i=!1;if(A&&(i=!p.intersectsSphere(Do,n)),!i){const n=h[e],i=Po.subVectors(Do.center,Ro).dot(Uo);Lo.push(n.start,n.count,i,t)}}const t=Lo.list,e=this.customSort;null===e?t.sort(r.transparent?_o:wo):e.call(this,t,n);for(let e=0,n=t.length;e<n;e++){const n=t[e];l[g]=n.start*a,c[g]=n.count,d[g]=n.index,g++}Lo.reset()}else for(let t=0,e=o.length;t<e;t++)if(o[t].visible&&o[t].active){const e=o[t].geometryIndex;let i=!1;if(A&&(this.getMatrixAt(t,Bo),this.getBoundingSphereAt(e,Do).applyMatrix4(Bo),i=!p.intersectsSphere(Do,n)),!i){const n=h[e];l[g]=n.start*a,c[g]=n.count,d[g]=t,g++}}u.needsUpdate=!0,this._multiDrawCount=g,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,r,s){this.onBeforeRender(t,null,i,r,s)}}class Go extends As{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ls(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Ho=new hi,Vo=new hi,qo=new fr,Yo=new gr,Wo=new or,Jo=new hi,jo=new hi;class Xo extends Hr{constructor(t=new Ns,e=new Go){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)Ho.fromBufferAttribute(e,t-1),Vo.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=Ho.distanceTo(Vo);t.setAttribute("lineDistance",new Ts(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Wo.copy(n.boundingSphere),Wo.applyMatrix4(i),Wo.radius+=r,!1===t.ray.intersectsSphere(Wo))return;qo.copy(i).invert(),Yo.copy(t.ray).applyMatrix4(qo);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=this.isLineSegments?2:1,c=n.index,h=n.attributes.position;if(null!==c){const n=Math.max(0,s.start),i=Math.min(c.count,s.start+s.count);for(let r=n,s=i-1;r<s;r+=l){const n=c.getX(r),i=c.getX(r+1),s=Ko(this,t,Yo,o,n,i,r);s&&e.push(s)}if(this.isLineLoop){const r=c.getX(i-1),s=c.getX(n),a=Ko(this,t,Yo,o,r,s,i-1);a&&e.push(a)}}else{const n=Math.max(0,s.start),i=Math.min(h.count,s.start+s.count);for(let r=n,s=i-1;r<s;r+=l){const n=Ko(this,t,Yo,o,r,r+1,r);n&&e.push(n)}if(this.isLineLoop){const r=Ko(this,t,Yo,o,i-1,n,i-1);r&&e.push(r)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function Ko(t,e,n,i,r,s,a){const o=t.geometry.attributes.position;if(Ho.fromBufferAttribute(o,r),Vo.fromBufferAttribute(o,s),n.distanceSqToSegment(Ho,Vo,Jo,jo)>i)return;Jo.applyMatrix4(t.matrixWorld);const l=e.ray.origin.distanceTo(Jo);return l<e.near||l>e.far?void 0:{distance:l,point:jo.clone().applyMatrix4(t.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:t}}const Zo=new hi,$o=new hi;class tl extends Xo{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)Zo.fromBufferAttribute(e,t),$o.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Zo.distanceTo($o);t.setAttribute("lineDistance",new Ts(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class el extends Xo{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class nl extends As{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ls(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const il=new fr,rl=new gr,sl=new or,al=new hi;class ol extends Hr{constructor(t=new Ns,e=new nl){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),sl.copy(n.boundingSphere),sl.applyMatrix4(i),sl.radius+=r,!1===t.ray.intersectsSphere(sl))return;il.copy(i).invert(),rl.copy(t.ray).applyMatrix4(il);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=n.index,c=n.attributes.position;if(null!==l)for(let n=Math.max(0,s.start),r=Math.min(l.count,s.start+s.count);n<r;n++){const r=l.getX(n);al.fromBufferAttribute(c,r),ll(al,r,o,i,t,e,this)}else for(let n=Math.max(0,s.start),r=Math.min(c.count,s.start+s.count);n<r;n++)al.fromBufferAttribute(c,n),ll(al,n,o,i,t,e,this)}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function ll(t,e,n,i,r,s,a){const o=rl.distanceSqToPoint(t);if(o<n){const n=new hi;rl.closestPointToPoint(t,n),n.applyMatrix4(i);const l=r.ray.origin.distanceTo(n);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}class cl extends Pi{constructor(t,e,n,i,r=Qt,s=Qt,a,o,l){super(t,e,n,i,r,s,a,o,l),this.isVideoTexture=!0,this.generateMipmaps=!1,this._requestVideoFrameCallbackId=0;const c=this;"requestVideoFrameCallback"in t&&(this._requestVideoFrameCallbackId=t.requestVideoFrameCallback(function e(){c.needsUpdate=!0,c._requestVideoFrameCallbackId=t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}dispose(){0!==this._requestVideoFrameCallbackId&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId),super.dispose()}}class hl extends cl{constructor(t,e,n,i,r,s,a,o){super({},t,e,n,i,r,s,a,o),this.isVideoFrameTexture=!0}update(){}clone(){return(new this.constructor).copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class Al extends Pi{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=bt,this.minFilter=bt,this.generateMipmaps=!1,this.needsUpdate=!0}}class ul extends Pi{constructor(t,e,n,i,r,s,a,o,l,c,h,A){super(null,s,a,o,l,c,i,r,h,A),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class dl extends ul{constructor(t,e,n,i,r,s){super(t,e,n,r,s),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=wt,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class pl extends ul{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,yt),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class gl extends Pi{constructor(t,e,n,i,r,s,a,o,l){super(t,e,n,i,r,s,a,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class fl extends Pi{constructor(t,e,n=zt,i,r,s,a=bt,o=bt,l,c=Zt,h=1){if(c!==Zt&&c!==$t)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super({width:t,height:e,depth:h},i,r,s,a,o,c,n,l),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new Qi(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return null!==this.compareFunction&&(e.compareFunction=this.compareFunction),e}}class ml extends Pi{constructor(t=null){super(),this.sourceTexture=t,this.isExternalTexture=!0}copy(t){return super.copy(t),this.sourceTexture=t.sourceTexture,this}}class yl extends Ns{constructor(t=1,e=1,n=4,i=8,r=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:i,heightSegments:r},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),r=Math.max(1,Math.floor(r));const s=[],a=[],o=[],l=[],c=e/2,h=Math.PI/2*t,A=e,u=2*h+A,d=2*n+r,p=i+1,g=new hi,f=new hi;for(let m=0;m<=d;m++){let y=0,v=0,x=0,C=0;if(m<=n){const e=m/n,i=e*Math.PI/2;v=-c-t*Math.cos(i),x=t*Math.sin(i),C=-t*Math.cos(i),y=e*h}else if(m<=n+r){const i=(m-n)/r;v=i*e-c,x=t,C=0,y=h+i*A}else{const e=(m-n-r)/n,i=e*Math.PI/2;v=c+t*Math.sin(i),x=t*Math.cos(i),C=t*Math.sin(i),y=h+A+e*h}const I=Math.max(0,Math.min(1,y/u));let E=0;0===m?E=.5/i:m===d&&(E=-.5/i);for(let t=0;t<=i;t++){const e=t/i,n=e*Math.PI*2,r=Math.sin(n),s=Math.cos(n);f.x=-x*s,f.y=v,f.z=x*r,a.push(f.x,f.y,f.z),g.set(-x*s,C,x*r),g.normalize(),o.push(g.x,g.y,g.z),l.push(e+E,I)}if(m>0){const t=(m-1)*p;for(let e=0;e<i;e++){const n=t+e,i=t+e+1,r=m*p+e,a=m*p+e+1;s.push(n,i,r),s.push(i,a,r)}}}this.setIndex(s),this.setAttribute("position",new Ts(a,3)),this.setAttribute("normal",new Ts(o,3)),this.setAttribute("uv",new Ts(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new yl(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class vl extends Ns{constructor(t=1,e=32,n=0,i=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const r=[],s=[],a=[],o=[],l=new hi,c=new li;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let r=0,h=3;r<=e;r++,h+=3){const A=n+r/e*i;l.x=t*Math.cos(A),l.y=t*Math.sin(A),s.push(l.x,l.y,l.z),a.push(0,0,1),c.x=(s[h]/t+1)/2,c.y=(s[h+1]/t+1)/2,o.push(c.x,c.y)}for(let t=1;t<=e;t++)r.push(t,t+1,0);this.setIndex(r),this.setAttribute("position",new Ts(s,3)),this.setAttribute("normal",new Ts(a,3)),this.setAttribute("uv",new Ts(o,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new vl(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class xl extends Ns{constructor(t=1,e=1,n=1,i=32,r=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o};const l=this;i=Math.floor(i),r=Math.floor(r);const c=[],h=[],A=[],u=[];let d=0;const p=[],g=n/2;let f=0;function m(n){const r=d,s=new li,p=new hi;let m=0;const y=!0===n?t:e,v=!0===n?1:-1;for(let t=1;t<=i;t++)h.push(0,g*v,0),A.push(0,v,0),u.push(.5,.5),d++;const x=d;for(let t=0;t<=i;t++){const e=t/i*o+a,n=Math.cos(e),r=Math.sin(e);p.x=y*r,p.y=g*v,p.z=y*n,h.push(p.x,p.y,p.z),A.push(0,v,0),s.x=.5*n+.5,s.y=.5*r*v+.5,u.push(s.x,s.y),d++}for(let t=0;t<i;t++){const e=r+t,i=x+t;!0===n?c.push(i,i+1,e):c.push(i+1,i,e),m+=3}l.addGroup(f,m,!0===n?1:2),f+=m}!function(){const s=new hi,m=new hi;let y=0;const v=(e-t)/n;for(let l=0;l<=r;l++){const c=[],f=l/r,y=f*(e-t)+t;for(let t=0;t<=i;t++){const e=t/i,r=e*o+a,l=Math.sin(r),p=Math.cos(r);m.x=y*l,m.y=-f*n+g,m.z=y*p,h.push(m.x,m.y,m.z),s.set(l,v,p).normalize(),A.push(s.x,s.y,s.z),u.push(e,1-f),c.push(d++)}p.push(c)}for(let n=0;n<i;n++)for(let i=0;i<r;i++){const s=p[i][n],a=p[i+1][n],o=p[i+1][n+1],l=p[i][n+1];(t>0||0!==i)&&(c.push(s,a,l),y+=3),(e>0||i!==r-1)&&(c.push(a,o,l),y+=3)}l.addGroup(f,y,0),f+=y}(),!1===s&&(t>0&&m(!0),e>0&&m(!1)),this.setIndex(c),this.setAttribute("position",new Ts(h,3)),this.setAttribute("normal",new Ts(A,3)),this.setAttribute("uv",new Ts(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new xl(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Cl extends xl{constructor(t=1,e=1,n=32,i=1,r=!1,s=0,a=2*Math.PI){super(0,t,e,n,i,r,s,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:a}}static fromJSON(t){return new Cl(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Il extends Ns{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const r=[],s=[];function a(t,e,n,i){const r=i+1,s=[];for(let i=0;i<=r;i++){s[i]=[];const a=t.clone().lerp(n,i/r),o=e.clone().lerp(n,i/r),l=r-i;for(let t=0;t<=l;t++)s[i][t]=0===t&&i===r?a:a.clone().lerp(o,t/l)}for(let t=0;t<r;t++)for(let e=0;e<2*(r-t)-1;e++){const n=Math.floor(e/2);e%2==0?(o(s[t][n+1]),o(s[t+1][n]),o(s[t][n])):(o(s[t][n+1]),o(s[t+1][n+1]),o(s[t+1][n]))}}function o(t){r.push(t.x,t.y,t.z)}function l(e,n){const i=3*e;n.x=t[i+0],n.y=t[i+1],n.z=t[i+2]}function c(t,e,n,i){i<0&&1===t.x&&(s[e]=t.x-1),0===n.x&&0===n.z&&(s[e]=i/2/Math.PI+.5)}function h(t){return Math.atan2(t.z,-t.x)}function A(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}!function(t){const n=new hi,i=new hi,r=new hi;for(let s=0;s<e.length;s+=3)l(e[s+0],n),l(e[s+1],i),l(e[s+2],r),a(n,i,r,t)}(i),function(t){const e=new hi;for(let n=0;n<r.length;n+=3)e.x=r[n+0],e.y=r[n+1],e.z=r[n+2],e.normalize().multiplyScalar(t),r[n+0]=e.x,r[n+1]=e.y,r[n+2]=e.z}(n),function(){const t=new hi;for(let e=0;e<r.length;e+=3){t.x=r[e+0],t.y=r[e+1],t.z=r[e+2];const n=h(t)/2/Math.PI+.5,i=A(t)/Math.PI+.5;s.push(n,1-i)}(function(){const t=new hi,e=new hi,n=new hi,i=new hi,a=new li,o=new li,l=new li;for(let A=0,u=0;A<r.length;A+=9,u+=6){t.set(r[A+0],r[A+1],r[A+2]),e.set(r[A+3],r[A+4],r[A+5]),n.set(r[A+6],r[A+7],r[A+8]),a.set(s[u+0],s[u+1]),o.set(s[u+2],s[u+3]),l.set(s[u+4],s[u+5]),i.copy(t).add(e).add(n).divideScalar(3);const d=h(i);c(a,u+0,t,d),c(o,u+2,e,d),c(l,u+4,n,d)}})(),function(){for(let t=0;t<s.length;t+=6){const e=s[t+0],n=s[t+2],i=s[t+4],r=Math.max(e,n,i),a=Math.min(e,n,i);r>.9&&a<.1&&(e<.2&&(s[t+0]+=1),n<.2&&(s[t+2]+=1),i<.2&&(s[t+4]+=1))}}()}(),this.setAttribute("position",new Ts(r,3)),this.setAttribute("normal",new Ts(r.slice(),3)),this.setAttribute("uv",new Ts(s,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Il(t.vertices,t.indices,t.radius,t.details)}}class El extends Il{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new El(t.radius,t.detail)}}const wl=new hi,_l=new hi,bl=new hi,Bl=new is;class Sl extends Ns{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},null!==t){const n=4,i=Math.pow(10,n),r=Math.cos($n*e),s=t.getIndex(),a=t.getAttribute("position"),o=s?s.count:a.count,l=[0,0,0],c=["a","b","c"],h=new Array(3),A={},u=[];for(let t=0;t<o;t+=3){s?(l[0]=s.getX(t),l[1]=s.getX(t+1),l[2]=s.getX(t+2)):(l[0]=t,l[1]=t+1,l[2]=t+2);const{a:e,b:n,c:o}=Bl;if(e.fromBufferAttribute(a,l[0]),n.fromBufferAttribute(a,l[1]),o.fromBufferAttribute(a,l[2]),Bl.getNormal(bl),h[0]=`${Math.round(e.x*i)},${Math.round(e.y*i)},${Math.round(e.z*i)}`,h[1]=`${Math.round(n.x*i)},${Math.round(n.y*i)},${Math.round(n.z*i)}`,h[2]=`${Math.round(o.x*i)},${Math.round(o.y*i)},${Math.round(o.z*i)}`,h[0]!==h[1]&&h[1]!==h[2]&&h[2]!==h[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=h[t],i=h[e],s=Bl[c[t]],a=Bl[c[e]],o=`${n}_${i}`,d=`${i}_${n}`;d in A&&A[d]?(bl.dot(A[d].normal)<=r&&(u.push(s.x,s.y,s.z),u.push(a.x,a.y,a.z)),A[d]=null):o in A||(A[o]={index0:l[t],index1:l[e],normal:bl.clone()})}}for(const t in A)if(A[t]){const{index0:e,index1:n}=A[t];wl.fromBufferAttribute(a,e),_l.fromBufferAttribute(a,n),u.push(wl.x,wl.y,wl.z),u.push(_l.x,_l.y,_l.z)}this.setAttribute("position",new Ts(u,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class Ml{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let s=1;s<=t;s++)n=this.getPoint(s/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let i=0;const r=n.length;let s;s=e||t*n[r-1];let a,o=0,l=r-1;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),a=n[i]-s,a<0)o=i+1;else{if(!(a>0)){l=i;break}l=i-1}if(i=l,n[i]===s)return i/(r-1);const c=n[i];return(i+(s-c)/(n[i+1]-c))/(r-1)}getTangent(t,e){const n=1e-4;let i=t-n,r=t+n;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),a=this.getPoint(r),o=e||(s.isVector2?new li:new hi);return o.copy(a).sub(s).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new hi,i=[],r=[],s=[],a=new hi,o=new fr;for(let e=0;e<=t;e++){const n=e/t;i[e]=this.getTangentAt(n,new hi)}r[0]=new hi,s[0]=new hi;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),h=Math.abs(i[0].y),A=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),A<=l&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),s[0].crossVectors(i[0],r[0]);for(let e=1;e<=t;e++){if(r[e]=r[e-1].clone(),s[e]=s[e-1].clone(),a.crossVectors(i[e-1],i[e]),a.length()>Number.EPSILON){a.normalize();const t=Math.acos(ni(i[e-1].dot(i[e]),-1,1));r[e].applyMatrix4(o.makeRotationAxis(a,t))}s[e].crossVectors(i[e],r[e])}if(!0===e){let e=Math.acos(ni(r[0].dot(r[t]),-1,1));e/=t,i[0].dot(a.crossVectors(r[0],r[t]))>0&&(e=-e);for(let n=1;n<=t;n++)r[n].applyMatrix4(o.makeRotationAxis(i[n],e*n)),s[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:s}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Tl extends Ml{constructor(t=0,e=0,n=1,i=1,r=0,s=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(t,e=new li){const n=e,i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=s?0:i),!0!==this.aClockwise||s||(r===i?r=-i:r-=i);const a=this.aStartAngle+t*r;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,i=l-this.aY;o=n*t-i*e+this.aX,l=n*e+i*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class Ql extends Tl{constructor(t,e,n,i,r,s){super(t,e,n,n,i,r,s),this.isArcCurve=!0,this.type="ArcCurve"}}function Dl(){let t=0,e=0,n=0,i=0;function r(r,s,a,o){t=r,e=a,n=-3*r+3*s-2*a-o,i=2*r-2*s+a+o}return{initCatmullRom:function(t,e,n,i,s){r(e,n,s*(n-t),s*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,s,a,o){let l=(e-t)/s-(n-t)/(s+a)+(n-e)/a,c=(n-e)/a-(i-e)/(a+o)+(i-n)/o;l*=a,c*=a,r(e,n,l,c)},calc:function(r){const s=r*r;return t+e*r+n*s+i*(s*r)}}}const Rl=new hi,Ul=new Dl,Pl=new Dl,Ll=new Dl;class Fl extends Ml{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new hi){const n=e,i=this.points,r=i.length,s=(r-(this.closed?0:1))*t;let a,o,l=Math.floor(s),c=s-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:0===c&&l===r-1&&(l=r-2,c=1),this.closed||l>0?a=i[(l-1)%r]:(Rl.subVectors(i[0],i[1]).add(i[0]),a=Rl);const h=i[l%r],A=i[(l+1)%r];if(this.closed||l+2<r?o=i[(l+2)%r]:(Rl.subVectors(i[r-1],i[r-2]).add(i[r-1]),o=Rl),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(a.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(A),t),i=Math.pow(A.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),Ul.initNonuniformCatmullRom(a.x,h.x,A.x,o.x,e,n,i),Pl.initNonuniformCatmullRom(a.y,h.y,A.y,o.y,e,n,i),Ll.initNonuniformCatmullRom(a.z,h.z,A.z,o.z,e,n,i)}else"catmullrom"===this.curveType&&(Ul.initCatmullRom(a.x,h.x,A.x,o.x,this.tension),Pl.initCatmullRom(a.y,h.y,A.y,o.y,this.tension),Ll.initCatmullRom(a.z,h.z,A.z,o.z,this.tension));return n.set(Ul.calc(c),Pl.calc(c),Ll.calc(c)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new hi).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Nl(t,e,n,i,r){const s=.5*(i-e),a=.5*(r-n),o=t*t;return(2*n-2*i+s+a)*(t*o)+(-3*n+3*i-2*s-a)*o+s*t+n}function kl(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function Ol(t,e,n,i,r){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,r)}class zl extends Ml{constructor(t=new li,e=new li,n=new li,i=new li){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new li){const n=e,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return n.set(Ol(t,i.x,r.x,s.x,a.x),Ol(t,i.y,r.y,s.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Gl extends Ml{constructor(t=new hi,e=new hi,n=new hi,i=new hi){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new hi){const n=e,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return n.set(Ol(t,i.x,r.x,s.x,a.x),Ol(t,i.y,r.y,s.y,a.y),Ol(t,i.z,r.z,s.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Hl extends Ml{constructor(t=new li,e=new li){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new li){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new li){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Vl extends Ml{constructor(t=new hi,e=new hi){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new hi){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new hi){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ql extends Ml{constructor(t=new li,e=new li,n=new li){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new li){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(kl(t,i.x,r.x,s.x),kl(t,i.y,r.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Yl extends Ml{constructor(t=new hi,e=new hi,n=new hi){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new hi){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(kl(t,i.x,r.x,s.x),kl(t,i.y,r.y,s.y),kl(t,i.z,r.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Wl extends Ml{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new li){const n=e,i=this.points,r=(i.length-1)*t,s=Math.floor(r),a=r-s,o=i[0===s?s:s-1],l=i[s],c=i[s>i.length-2?i.length-1:s+1],h=i[s>i.length-3?i.length-1:s+2];return n.set(Nl(a,o.x,l.x,c.x,h.x),Nl(a,o.y,l.y,c.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new li).fromArray(n))}return this}}var Jl=Object.freeze({__proto__:null,ArcCurve:Ql,CatmullRomCurve3:Fl,CubicBezierCurve:zl,CubicBezierCurve3:Gl,EllipseCurve:Tl,LineCurve:Hl,LineCurve3:Vl,QuadraticBezierCurve:ql,QuadraticBezierCurve3:Yl,SplineCurve:Wl});class jl extends Ml{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=!0===t.isVector2?"LineCurve":"LineCurve3";this.curves.push(new Jl[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const t=i[r]-n,s=this.curves[r],a=s.getLength(),o=0===a?0:1-t/a;return s.getPointAt(o,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],a=s.isEllipseCurve?2*t:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?t*s.points.length:t,o=s.getPoints(a);for(let t=0;t<o.length;t++){const i=o[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Jl[n.type]).fromJSON(n))}return this}}class Xl extends jl{constructor(t){super(),this.type="Path",this.currentPoint=new li,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Hl(this.currentPoint.clone(),new li(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new ql(this.currentPoint.clone(),new li(t,e),new li(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,s){const a=new zl(this.currentPoint.clone(),new li(t,e),new li(n,i),new li(r,s));return this.curves.push(a),this.currentPoint.set(r,s),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Wl(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,s){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,n,i,r,s),this}absarc(t,e,n,i,r,s){return this.absellipse(t,e,n,n,i,r,s),this}ellipse(t,e,n,i,r,s,a,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,i,r,s,a,o),this}absellipse(t,e,n,i,r,s,a,o){const l=new Tl(t,e,n,i,r,s,a,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Kl extends Xl{constructor(t){super(t),this.uuid=ei(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new Xl).fromJSON(n))}return this}}function Zl(t,e,n,i,r){let s;if(r===function(t,e,n,i){let r=0;for(let s=e,a=n-i;s<n;s+=i)r+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return r}(t,e,n,i)>0)for(let r=e;r<n;r+=i)s=xc(r/i|0,t[r],t[r+1],s);else for(let r=n-i;r>=e;r-=i)s=xc(r/i|0,t[r],t[r+1],s);return s&&pc(s,s.next)&&(Cc(s),s=s.next),s}function $l(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!pc(i,i.next)&&0!==dc(i.prev,i,i.next))i=i.next;else{if(Cc(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function tc(t,e,n,i,r,s,a){if(!t)return;!a&&s&&function(t,e,n,i){let r=t;do{0===r.z&&(r.z=lc(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,n=1;do{let i,r=t;t=null;let s=null;for(e=0;r;){e++;let a=r,o=0;for(let t=0;t<n&&(o++,a=a.nextZ,a);t++);let l=n;for(;o>0||l>0&&a;)0!==o&&(0===l||!a||r.z<=a.z)?(i=r,r=r.nextZ,o--):(i=a,a=a.nextZ,l--),s?s.nextZ=i:t=i,i.prevZ=s,s=i;r=a}s.nextZ=null,n*=2}while(e>1)}(r)}(t,i,r,s);let o=t;for(;t.prev!==t.next;){const l=t.prev,c=t.next;if(s?nc(t,i,r,s):ec(t))e.push(l.i,t.i,c.i),Cc(t),t=c.next,o=c.next;else if((t=c)===o){a?1===a?tc(t=ic($l(t),e),e,n,i,r,s,2):2===a&&rc(t,e,n,i,r,s):tc($l(t),e,n,i,r,s,1);break}}}function ec(t){const e=t.prev,n=t,i=t.next;if(dc(e,n,i)>=0)return!1;const r=e.x,s=n.x,a=i.x,o=e.y,l=n.y,c=i.y,h=Math.min(r,s,a),A=Math.min(o,l,c),u=Math.max(r,s,a),d=Math.max(o,l,c);let p=i.next;for(;p!==e;){if(p.x>=h&&p.x<=u&&p.y>=A&&p.y<=d&&Ac(r,o,s,l,a,c,p.x,p.y)&&dc(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function nc(t,e,n,i){const r=t.prev,s=t,a=t.next;if(dc(r,s,a)>=0)return!1;const o=r.x,l=s.x,c=a.x,h=r.y,A=s.y,u=a.y,d=Math.min(o,l,c),p=Math.min(h,A,u),g=Math.max(o,l,c),f=Math.max(h,A,u),m=lc(d,p,e,n,i),y=lc(g,f,e,n,i);let v=t.prevZ,x=t.nextZ;for(;v&&v.z>=m&&x&&x.z<=y;){if(v.x>=d&&v.x<=g&&v.y>=p&&v.y<=f&&v!==r&&v!==a&&Ac(o,h,l,A,c,u,v.x,v.y)&&dc(v.prev,v,v.next)>=0)return!1;if(v=v.prevZ,x.x>=d&&x.x<=g&&x.y>=p&&x.y<=f&&x!==r&&x!==a&&Ac(o,h,l,A,c,u,x.x,x.y)&&dc(x.prev,x,x.next)>=0)return!1;x=x.nextZ}for(;v&&v.z>=m;){if(v.x>=d&&v.x<=g&&v.y>=p&&v.y<=f&&v!==r&&v!==a&&Ac(o,h,l,A,c,u,v.x,v.y)&&dc(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;x&&x.z<=y;){if(x.x>=d&&x.x<=g&&x.y>=p&&x.y<=f&&x!==r&&x!==a&&Ac(o,h,l,A,c,u,x.x,x.y)&&dc(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}function ic(t,e){let n=t;do{const i=n.prev,r=n.next.next;!pc(i,r)&&gc(i,n,n.next,r)&&yc(i,r)&&yc(r,i)&&(e.push(i.i,n.i,r.i),Cc(n),Cc(n.next),n=t=r),n=n.next}while(n!==t);return $l(n)}function rc(t,e,n,i,r,s){let a=t;do{let t=a.next.next;for(;t!==a.prev;){if(a.i!==t.i&&uc(a,t)){let o=vc(a,t);return a=$l(a,a.next),o=$l(o,o.next),tc(a,e,n,i,r,s,0),void tc(o,e,n,i,r,s,0)}t=t.next}a=a.next}while(a!==t)}function sc(t,e){let n=t.x-e.x;return 0===n&&(n=t.y-e.y,0===n)&&(n=(t.next.y-t.y)/(t.next.x-t.x)-(e.next.y-e.y)/(e.next.x-e.x)),n}function ac(t,e){const n=function(t,e){let n=e;const i=t.x,r=t.y;let s,a=-1/0;if(pc(t,n))return n;do{if(pc(t,n.next))return n.next;if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const t=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=i&&t>a&&(a=t,s=n.x<n.next.x?n:n.next,t===i))return s}n=n.next}while(n!==e);if(!s)return null;const o=s,l=s.x,c=s.y;let h=1/0;n=s;do{if(i>=n.x&&n.x>=l&&i!==n.x&&hc(r<c?i:a,r,l,c,r<c?a:i,r,n.x,n.y)){const e=Math.abs(r-n.y)/(i-n.x);yc(n,t)&&(e<h||e===h&&(n.x>s.x||n.x===s.x&&oc(s,n)))&&(s=n,h=e)}n=n.next}while(n!==o);return s}(t,e);if(!n)return e;const i=vc(n,t);return $l(i,i.next),$l(n,n.next)}function oc(t,e){return dc(t.prev,t,e.prev)<0&&dc(e.next,t,t.next)<0}function lc(t,e,n,i,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-n)*r|0)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-i)*r|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function cc(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function hc(t,e,n,i,r,s,a,o){return(r-a)*(e-o)>=(t-a)*(s-o)&&(t-a)*(i-o)>=(n-a)*(e-o)&&(n-a)*(s-o)>=(r-a)*(i-o)}function Ac(t,e,n,i,r,s,a,o){return!(t===a&&e===o)&&hc(t,e,n,i,r,s,a,o)}function uc(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&gc(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(yc(t,e)&&yc(e,t)&&function(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,s=(t.y+e.y)/2;do{n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(dc(t.prev,t,e.prev)||dc(t,e.prev,e))||pc(t,e)&&dc(t.prev,t,t.next)>0&&dc(e.prev,e,e.next)>0)}function dc(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function pc(t,e){return t.x===e.x&&t.y===e.y}function gc(t,e,n,i){const r=mc(dc(t,e,n)),s=mc(dc(t,e,i)),a=mc(dc(n,i,t)),o=mc(dc(n,i,e));return r!==s&&a!==o||!(0!==r||!fc(t,n,e))||!(0!==s||!fc(t,i,e))||!(0!==a||!fc(n,t,i))||!(0!==o||!fc(n,e,i))}function fc(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function mc(t){return t>0?1:t<0?-1:0}function yc(t,e){return dc(t.prev,t,t.next)<0?dc(t,e,t.next)>=0&&dc(t,t.prev,e)>=0:dc(t,e,t.prev)<0||dc(t,t.next,e)<0}function vc(t,e){const n=Ic(t.i,t.x,t.y),i=Ic(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function xc(t,e,n,i){const r=Ic(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Cc(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Ic(t,e,n){return{i:t,x:e,y:n,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}class Ec{static triangulate(t,e,n=2){return function(t,e,n=2){const i=e&&e.length,r=i?e[0]*n:t.length;let s=Zl(t,0,r,n,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,c;if(i&&(s=function(t,e,n,i){const r=[];for(let n=0,s=e.length;n<s;n++){const a=Zl(t,e[n]*i,n<s-1?e[n+1]*i:t.length,i,!1);a===a.next&&(a.steiner=!0),r.push(cc(a))}r.sort(sc);for(let t=0;t<r.length;t++)n=ac(r[t],n);return n}(t,e,s,n)),t.length>80*n){o=1/0,l=1/0;let e=-1/0,i=-1/0;for(let s=n;s<r;s+=n){const n=t[s],r=t[s+1];n<o&&(o=n),r<l&&(l=r),n>e&&(e=n),r>i&&(i=r)}c=Math.max(e-o,i-l),c=0!==c?32767/c:0}return tc(s,a,n,o,l,c,0),a}(t,e,n)}}class wc{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return.5*n}static isClockWise(t){return wc.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];_c(t),bc(n,t);let s=t.length;e.forEach(_c);for(let t=0;t<e.length;t++)i.push(s),s+=e[t].length,bc(n,e[t]);const a=Ec.triangulate(n,i);for(let t=0;t<a.length;t+=3)r.push(a.slice(t,t+3));return r}}function _c(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function bc(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Bc extends Ns{constructor(t=new Kl([new li(.5,.5),new li(-.5,.5),new li(-.5,-.5),new li(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let e=0,n=t.length;e<n;e++)s(t[e]);function s(t){const s=[],a=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1,l=void 0!==e.depth?e.depth:1;let c=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:.2,A=void 0!==e.bevelSize?e.bevelSize:h-.1,u=void 0!==e.bevelOffset?e.bevelOffset:0,d=void 0!==e.bevelSegments?e.bevelSegments:3;const p=e.extrudePath,g=void 0!==e.UVGenerator?e.UVGenerator:Sc;let f,m,y,v,x,C=!1;p&&(f=p.getSpacedPoints(o),C=!0,c=!1,m=p.computeFrenetFrames(o,!1),y=new hi,v=new hi,x=new hi),c||(d=0,h=0,A=0,u=0);const I=t.extractPoints(a);let E=I.shape;const w=I.holes;if(!wc.isClockWise(E)){E=E.reverse();for(let t=0,e=w.length;t<e;t++){const e=w[t];wc.isClockWise(e)&&(w[t]=e.reverse())}}function _(t){const e=1e-10*1e-10;let n=t[0];for(let i=1;i<=t.length;i++){const r=i%t.length,s=t[r],a=s.x-n.x,o=s.y-n.y,l=a*a+o*o,c=Math.max(Math.abs(s.x),Math.abs(s.y),Math.abs(n.x),Math.abs(n.y));l<=e*c*c?(t.splice(r,1),i--):n=s}}_(E),w.forEach(_);const b=w.length,B=E;for(let t=0;t<b;t++){const e=w[t];E=E.concat(e)}function S(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().addScaledVector(e,n)}const M=E.length;function T(t,e,n){let i,r,s;const a=t.x-e.x,o=t.y-e.y,l=n.x-t.x,c=n.y-t.y,h=a*a+o*o,A=a*c-o*l;if(Math.abs(A)>Number.EPSILON){const A=Math.sqrt(h),u=Math.sqrt(l*l+c*c),d=e.x-o/A,p=e.y+a/A,g=((n.x-c/u-d)*c-(n.y+l/u-p)*l)/(a*c-o*l);i=d+a*g-t.x,r=p+o*g-t.y;const f=i*i+r*r;if(f<=2)return new li(i,r);s=Math.sqrt(f/2)}else{let t=!1;a>Number.EPSILON?l>Number.EPSILON&&(t=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(c)&&(t=!0),t?(i=-o,r=a,s=Math.sqrt(h)):(i=a,r=o,s=Math.sqrt(h/2))}return new li(i/s,r/s)}const Q=[];for(let t=0,e=B.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),Q[t]=T(B[t],B[n],B[i]);const D=[];let R,U,P=Q.concat();for(let t=0,e=b;t<e;t++){const e=w[t];R=[];for(let t=0,n=e.length,i=n-1,r=t+1;t<n;t++,i++,r++)i===n&&(i=0),r===n&&(r=0),R[t]=T(e[t],e[i],e[r]);D.push(R),P=P.concat(R)}if(0===d)U=wc.triangulateShape(B,w);else{const t=[],e=[];for(let n=0;n<d;n++){const i=n/d,r=h*Math.cos(i*Math.PI/2),s=A*Math.sin(i*Math.PI/2)+u;for(let e=0,n=B.length;e<n;e++){const n=S(B[e],Q[e],s);k(n.x,n.y,-r),0===i&&t.push(n)}for(let t=0,n=b;t<n;t++){const n=w[t];R=D[t];const a=[];for(let t=0,e=n.length;t<e;t++){const e=S(n[t],R[t],s);k(e.x,e.y,-r),0===i&&a.push(e)}0===i&&e.push(a)}}U=wc.triangulateShape(t,e)}const L=U.length,F=A+u;for(let t=0;t<M;t++){const e=c?S(E[t],P[t],F):E[t];C?(v.copy(m.normals[0]).multiplyScalar(e.x),y.copy(m.binormals[0]).multiplyScalar(e.y),x.copy(f[0]).add(v).add(y),k(x.x,x.y,x.z)):k(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<M;e++){const n=c?S(E[e],P[e],F):E[e];C?(v.copy(m.normals[t]).multiplyScalar(n.x),y.copy(m.binormals[t]).multiplyScalar(n.y),x.copy(f[t]).add(v).add(y),k(x.x,x.y,x.z)):k(n.x,n.y,l/o*t)}for(let t=d-1;t>=0;t--){const e=t/d,n=h*Math.cos(e*Math.PI/2),i=A*Math.sin(e*Math.PI/2)+u;for(let t=0,e=B.length;t<e;t++){const e=S(B[t],Q[t],i);k(e.x,e.y,l+n)}for(let t=0,e=w.length;t<e;t++){const e=w[t];R=D[t];for(let t=0,r=e.length;t<r;t++){const r=S(e[t],R[t],i);C?k(r.x,r.y+f[o-1].y,f[o-1].x+n):k(r.x,r.y,l+n)}}}function N(t,e){let n=t.length;for(;--n>=0;){const i=n;let r=n-1;r<0&&(r=t.length-1);for(let t=0,n=o+2*d;t<n;t++){const n=M*t,s=M*(t+1);z(e+i+n,e+r+n,e+r+s,e+i+s)}}}function k(t,e,n){s.push(t),s.push(e),s.push(n)}function O(t,e,r){G(t),G(e),G(r);const s=i.length/3,a=g.generateTopUV(n,i,s-3,s-2,s-1);H(a[0]),H(a[1]),H(a[2])}function z(t,e,r,s){G(t),G(e),G(s),G(e),G(r),G(s);const a=i.length/3,o=g.generateSideWallUV(n,i,a-6,a-3,a-2,a-1);H(o[0]),H(o[1]),H(o[3]),H(o[1]),H(o[2]),H(o[3])}function G(t){i.push(s[3*t+0]),i.push(s[3*t+1]),i.push(s[3*t+2])}function H(t){r.push(t.x),r.push(t.y)}!function(){const t=i.length/3;if(c){let t=0,e=M*t;for(let t=0;t<L;t++){const n=U[t];O(n[2]+e,n[1]+e,n[0]+e)}t=o+2*d,e=M*t;for(let t=0;t<L;t++){const n=U[t];O(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<L;t++){const e=U[t];O(e[2],e[1],e[0])}for(let t=0;t<L;t++){const e=U[t];O(e[0]+M*o,e[1]+M*o,e[2]+M*o)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;N(B,e),e+=B.length;for(let t=0,n=w.length;t<n;t++){const n=w[t];N(n,e),e+=n.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute("position",new Ts(i,3)),this.setAttribute("uv",new Ts(r,2)),this.computeVertexNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);return n.options=Object.assign({},e),void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const r=e[t.shapes[i]];n.push(r)}const i=t.options.extrudePath;return void 0!==i&&(t.options.extrudePath=(new Jl[i.type]).fromJSON(i)),new Bc(n,t.options)}}const Sc={generateTopUV:function(t,e,n,i,r){const s=e[3*n],a=e[3*n+1],o=e[3*i],l=e[3*i+1],c=e[3*r],h=e[3*r+1];return[new li(s,a),new li(o,l),new li(c,h)]},generateSideWallUV:function(t,e,n,i,r,s){const a=e[3*n],o=e[3*n+1],l=e[3*n+2],c=e[3*i],h=e[3*i+1],A=e[3*i+2],u=e[3*r],d=e[3*r+1],p=e[3*r+2],g=e[3*s],f=e[3*s+1],m=e[3*s+2];return Math.abs(o-h)<Math.abs(a-c)?[new li(a,1-l),new li(c,1-A),new li(u,1-p),new li(g,1-m)]:[new li(o,1-l),new li(h,1-A),new li(d,1-p),new li(f,1-m)]}};class Mc extends Il{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Mc(t.radius,t.detail)}}class Tc extends Ns{constructor(t=[new li(0,-.5),new li(.5,0),new li(0,.5)],e=12,n=0,i=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=ni(i,0,2*Math.PI);const r=[],s=[],a=[],o=[],l=[],c=1/e,h=new hi,A=new li,u=new hi,d=new hi,p=new hi;let g=0,f=0;for(let e=0;e<=t.length-1;e++)switch(e){case 0:g=t[e+1].x-t[e].x,f=t[e+1].y-t[e].y,u.x=1*f,u.y=-g,u.z=0*f,p.copy(u),u.normalize(),o.push(u.x,u.y,u.z);break;case t.length-1:o.push(p.x,p.y,p.z);break;default:g=t[e+1].x-t[e].x,f=t[e+1].y-t[e].y,u.x=1*f,u.y=-g,u.z=0*f,d.copy(u),u.x+=p.x,u.y+=p.y,u.z+=p.z,u.normalize(),o.push(u.x,u.y,u.z),p.copy(d)}for(let r=0;r<=e;r++){const u=n+r*c*i,d=Math.sin(u),p=Math.cos(u);for(let n=0;n<=t.length-1;n++){h.x=t[n].x*d,h.y=t[n].y,h.z=t[n].x*p,s.push(h.x,h.y,h.z),A.x=r/e,A.y=n/(t.length-1),a.push(A.x,A.y);const i=o[3*n+0]*d,c=o[3*n+1],u=o[3*n+0]*p;l.push(i,c,u)}}for(let n=0;n<e;n++)for(let e=0;e<t.length-1;e++){const i=e+n*t.length,s=i,a=i+t.length,o=i+t.length+1,l=i+1;r.push(s,a,l),r.push(o,l,a)}this.setIndex(r),this.setAttribute("position",new Ts(s,3)),this.setAttribute("uv",new Ts(a,2)),this.setAttribute("normal",new Ts(l,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Tc(t.points,t.segments,t.phiStart,t.phiLength)}}class Qc extends Il{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Qc(t.radius,t.detail)}}class Dc extends Ns{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,s=e/2,a=Math.floor(n),o=Math.floor(i),l=a+1,c=o+1,h=t/a,A=e/o,u=[],d=[],p=[],g=[];for(let t=0;t<c;t++){const e=t*A-s;for(let n=0;n<l;n++){const i=n*h-r;d.push(i,-e,0),p.push(0,0,1),g.push(n/a),g.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<a;e++){const n=e+l*t,i=e+l*(t+1),r=e+1+l*(t+1),s=e+1+l*t;u.push(n,i,s),u.push(i,r,s)}this.setIndex(u),this.setAttribute("position",new Ts(d,3)),this.setAttribute("normal",new Ts(p,3)),this.setAttribute("uv",new Ts(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Dc(t.width,t.height,t.widthSegments,t.heightSegments)}}class Rc extends Ns{constructor(t=.5,e=1,n=32,i=1,r=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s},n=Math.max(3,n);const a=[],o=[],l=[],c=[];let h=t;const A=(e-t)/(i=Math.max(1,i)),u=new hi,d=new li;for(let t=0;t<=i;t++){for(let t=0;t<=n;t++){const i=r+t/n*s;u.x=h*Math.cos(i),u.y=h*Math.sin(i),o.push(u.x,u.y,u.z),l.push(0,0,1),d.x=(u.x/e+1)/2,d.y=(u.y/e+1)/2,c.push(d.x,d.y)}h+=A}for(let t=0;t<i;t++){const e=t*(n+1);for(let t=0;t<n;t++){const i=t+e,r=i,s=i+n+1,o=i+n+2,l=i+1;a.push(r,s,l),a.push(s,o,l)}}this.setIndex(a),this.setAttribute("position",new Ts(o,3)),this.setAttribute("normal",new Ts(l,3)),this.setAttribute("uv",new Ts(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Rc(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class Uc extends Ns{constructor(t=new Kl([new li(0,.5),new li(-.5,-.5),new li(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],s=[];let a=0,o=0;if(!1===Array.isArray(t))l(t);else for(let e=0;e<t.length;e++)l(t[e]),this.addGroup(a,o,e),a+=o,o=0;function l(t){const a=i.length/3,l=t.extractPoints(e);let c=l.shape;const h=l.holes;!1===wc.isClockWise(c)&&(c=c.reverse());for(let t=0,e=h.length;t<e;t++){const e=h[t];!0===wc.isClockWise(e)&&(h[t]=e.reverse())}const A=wc.triangulateShape(c,h);for(let t=0,e=h.length;t<e;t++){const e=h[t];c=c.concat(e)}for(let t=0,e=c.length;t<e;t++){const e=c[t];i.push(e.x,e.y,0),r.push(0,0,1),s.push(e.x,e.y)}for(let t=0,e=A.length;t<e;t++){const e=A[t],i=e[0]+a,r=e[1]+a,s=e[2]+a;n.push(i,r,s),o+=3}}this.setIndex(n),this.setAttribute("position",new Ts(i,3)),this.setAttribute("normal",new Ts(r,3)),this.setAttribute("uv",new Ts(s,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const r=e[t.shapes[i]];n.push(r)}return new Uc(n,t.curveSegments)}}class Pc extends Ns{constructor(t=1,e=32,n=16,i=0,r=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:s,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const o=Math.min(s+a,Math.PI);let l=0;const c=[],h=new hi,A=new hi,u=[],d=[],p=[],g=[];for(let u=0;u<=n;u++){const f=[],m=u/n;let y=0;0===u&&0===s?y=.5/e:u===n&&o===Math.PI&&(y=-.5/e);for(let n=0;n<=e;n++){const o=n/e;h.x=-t*Math.cos(i+o*r)*Math.sin(s+m*a),h.y=t*Math.cos(s+m*a),h.z=t*Math.sin(i+o*r)*Math.sin(s+m*a),d.push(h.x,h.y,h.z),A.copy(h).normalize(),p.push(A.x,A.y,A.z),g.push(o+y,1-m),f.push(l++)}c.push(f)}for(let t=0;t<n;t++)for(let i=0;i<e;i++){const e=c[t][i+1],r=c[t][i],a=c[t+1][i],l=c[t+1][i+1];(0!==t||s>0)&&u.push(e,r,l),(t!==n-1||o<Math.PI)&&u.push(r,a,l)}this.setIndex(u),this.setAttribute("position",new Ts(d,3)),this.setAttribute("normal",new Ts(p,3)),this.setAttribute("uv",new Ts(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Pc(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Lc extends Il{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Lc(t.radius,t.detail)}}class Fc extends Ns{constructor(t=1,e=.4,n=12,i=48,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const s=[],a=[],o=[],l=[],c=new hi,h=new hi,A=new hi;for(let s=0;s<=n;s++)for(let u=0;u<=i;u++){const d=u/i*r,p=s/n*Math.PI*2;h.x=(t+e*Math.cos(p))*Math.cos(d),h.y=(t+e*Math.cos(p))*Math.sin(d),h.z=e*Math.sin(p),a.push(h.x,h.y,h.z),c.x=t*Math.cos(d),c.y=t*Math.sin(d),A.subVectors(h,c).normalize(),o.push(A.x,A.y,A.z),l.push(u/i),l.push(s/n)}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*t+e-1,r=(i+1)*(t-1)+e-1,a=(i+1)*(t-1)+e,o=(i+1)*t+e;s.push(n,r,o),s.push(r,a,o)}this.setIndex(s),this.setAttribute("position",new Ts(a,3)),this.setAttribute("normal",new Ts(o,3)),this.setAttribute("uv",new Ts(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Fc(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Nc extends Ns{constructor(t=1,e=.4,n=64,i=8,r=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:r,q:s},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],l=[],c=[],h=new hi,A=new hi,u=new hi,d=new hi,p=new hi,g=new hi,f=new hi;for(let a=0;a<=n;++a){const y=a/n*r*Math.PI*2;m(y,r,s,t,u),m(y+.01,r,s,t,d),g.subVectors(d,u),f.addVectors(d,u),p.crossVectors(g,f),f.crossVectors(p,g),p.normalize(),f.normalize();for(let t=0;t<=i;++t){const r=t/i*Math.PI*2,s=-e*Math.cos(r),d=e*Math.sin(r);h.x=u.x+(s*f.x+d*p.x),h.y=u.y+(s*f.y+d*p.y),h.z=u.z+(s*f.z+d*p.z),o.push(h.x,h.y,h.z),A.subVectors(h,u).normalize(),l.push(A.x,A.y,A.z),c.push(a/n),c.push(t/i)}}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),r=(i+1)*t+(e-1),s=(i+1)*t+e,o=(i+1)*(t-1)+e;a.push(n,r,o),a.push(r,s,o)}function m(t,e,n,i,r){const s=Math.cos(t),a=Math.sin(t),o=n/e*t,l=Math.cos(o);r.x=i*(2+l)*.5*s,r.y=i*(2+l)*a*.5,r.z=i*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new Ts(o,3)),this.setAttribute("normal",new Ts(l,3)),this.setAttribute("uv",new Ts(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Nc(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class kc extends Ns{constructor(t=new Yl(new hi(-1,-1,0),new hi(-1,1,0),new hi(1,1,0)),e=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r};const s=t.computeFrenetFrames(e,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const a=new hi,o=new hi,l=new li;let c=new hi;const h=[],A=[],u=[],d=[];function p(r){c=t.getPointAt(r/e,c);const l=s.normals[r],u=s.binormals[r];for(let t=0;t<=i;t++){const e=t/i*Math.PI*2,r=Math.sin(e),s=-Math.cos(e);o.x=s*l.x+r*u.x,o.y=s*l.y+r*u.y,o.z=s*l.z+r*u.z,o.normalize(),A.push(o.x,o.y,o.z),a.x=c.x+n*o.x,a.y=c.y+n*o.y,a.z=c.z+n*o.z,h.push(a.x,a.y,a.z)}}!function(){for(let t=0;t<e;t++)p(t);p(!1===r?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=i;n++)l.x=t/e,l.y=n/i,u.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),r=(i+1)*t+(e-1),s=(i+1)*t+e,a=(i+1)*(t-1)+e;d.push(n,r,a),d.push(r,s,a)}}()}(),this.setIndex(d),this.setAttribute("position",new Ts(h,3)),this.setAttribute("normal",new Ts(A,3)),this.setAttribute("uv",new Ts(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new kc((new Jl[t.path.type]).fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Oc extends Ns{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},null!==t){const e=[],n=new Set,i=new hi,r=new hi;if(null!==t.index){const s=t.attributes.position,a=t.index;let o=t.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let t=0,l=o.length;t<l;++t){const l=o[t],c=l.start;for(let t=c,o=c+l.count;t<o;t+=3)for(let o=0;o<3;o++){const l=a.getX(t+o),c=a.getX(t+(o+1)%3);i.fromBufferAttribute(s,l),r.fromBufferAttribute(s,c),!0===zc(i,r,n)&&(e.push(i.x,i.y,i.z),e.push(r.x,r.y,r.z))}}}else{const s=t.attributes.position;for(let t=0,a=s.count/3;t<a;t++)for(let a=0;a<3;a++){const o=3*t+a,l=3*t+(a+1)%3;i.fromBufferAttribute(s,o),r.fromBufferAttribute(s,l),!0===zc(i,r,n)&&(e.push(i.x,i.y,i.z),e.push(r.x,r.y,r.z))}}this.setAttribute("position",new Ts(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function zc(t,e,n){const i=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,r=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;return!0!==n.has(i)&&!0!==n.has(r)&&(n.add(i),n.add(r),!0)}var Gc=Object.freeze({__proto__:null,BoxGeometry:Zs,CapsuleGeometry:yl,CircleGeometry:vl,ConeGeometry:Cl,CylinderGeometry:xl,DodecahedronGeometry:El,EdgesGeometry:Sl,ExtrudeGeometry:Bc,IcosahedronGeometry:Mc,LatheGeometry:Tc,OctahedronGeometry:Qc,PlaneGeometry:Dc,PolyhedronGeometry:Il,RingGeometry:Rc,ShapeGeometry:Uc,SphereGeometry:Pc,TetrahedronGeometry:Lc,TorusGeometry:Fc,TorusKnotGeometry:Nc,TubeGeometry:kc,WireframeGeometry:Oc});class Hc extends As{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new ls(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Vc extends ia{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class qc extends As{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new ls(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ls(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=nn,this.normalScale=new li(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new br,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Yc extends qc{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new li(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return ni(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new ls(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new ls(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ls(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class Wc extends As{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new ls(16777215),this.specular=new ls(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ls(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=nn,this.normalScale=new li(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new br,this.combine=rt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Jc extends As{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ls(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ls(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=nn,this.normalScale=new li(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class jc extends As{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=nn,this.normalScale=new li(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Xc extends As{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new ls(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ls(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=nn,this.normalScale=new li(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new br,this.combine=rt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Kc extends As{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Ze,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Zc extends As{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class $c extends As{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ls(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=nn,this.normalScale=new li(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class th extends Go{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function eh(t,e){return t&&t.constructor!==e?"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t):t}function nh(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function ih(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort(function(e,n){return t[e]-t[n]}),n}function rh(t,e,n){const i=t.length,r=new t.constructor(i);for(let s=0,a=0;a!==i;++s){const i=n[s]*e;for(let n=0;n!==e;++n)r[a++]=t[i+n]}return r}function sh(t,e,n,i){let r=1,s=t[0];for(;void 0!==s&&void 0===s[i];)s=t[r++];if(void 0===s)return;let a=s[i];if(void 0!==a)if(Array.isArray(a))do{a=s[i],void 0!==a&&(e.push(s.time),n.push(...a)),s=t[r++]}while(void 0!==s);else if(void 0!==a.toArray)do{a=s[i],void 0!==a&&(e.push(s.time),a.toArray(n,n.length)),s=t[r++]}while(void 0!==s);else do{a=s[i],void 0!==a&&(e.push(s.time),n.push(a)),s=t[r++]}while(void 0!==s)}class ah{static convertArray(t,e){return eh(t,e)}static isTypedArray(t){return nh(t)}static getKeyframeOrder(t){return ih(t)}static sortedArray(t,e,n){return rh(t,e,n)}static flattenJSON(t,e,n,i){sh(t,e,n,i)}static subclip(t,e,n,i,r=30){return function(t,e,n,i,r=30){const s=t.clone();s.name=e;const a=[];for(let t=0;t<s.tracks.length;++t){const e=s.tracks[t],o=e.getValueSize(),l=[],c=[];for(let t=0;t<e.times.length;++t){const s=e.times[t]*r;if(!(s<n||s>=i)){l.push(e.times[t]);for(let n=0;n<o;++n)c.push(e.values[t*o+n])}}0!==l.length&&(e.times=eh(l,e.times.constructor),e.values=eh(c,e.values.constructor),a.push(e))}s.tracks=a;let o=1/0;for(let t=0;t<s.tracks.length;++t)o>s.tracks[t].times[0]&&(o=s.tracks[t].times[0]);for(let t=0;t<s.tracks.length;++t)s.tracks[t].shift(-1*o);return s.resetDuration(),s}(t,e,n,i,r)}static makeClipAdditive(t,e=0,n=t,i=30){return function(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,s=e/i;for(let e=0;e<r;++e){const i=n.tracks[e],r=i.ValueTypeName;if("bool"===r||"string"===r)continue;const a=t.tracks.find(function(t){return t.name===i.name&&t.ValueTypeName===r});if(void 0===a)continue;let o=0;const l=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let c=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=h/3);const A=i.times.length-1;let u;if(s<=i.times[0]){const t=o,e=l-o;u=i.values.slice(t,e)}else if(s>=i.times[A]){const t=A*l+o,e=t+l-o;u=i.values.slice(t,e)}else{const t=i.createInterpolant(),e=o,n=l-o;t.evaluate(s),u=t.resultBuffer.slice(e,n)}"quaternion"===r&&(new ci).fromArray(u).normalize().conjugate().toArray(u);const d=a.times.length;for(let t=0;t<d;++t){const e=t*h+c;if("quaternion"===r)ci.multiplyQuaternionsFlat(a.values,e,u,0,a.values,e);else{const t=h-2*c;for(let n=0;n<t;++n)a.values[e+n]-=u[n]}}}return t.blendMode=Je,t}(t,e,n,i)}}class oh{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];t:{e:{let s;n:{i:if(!(t<i)){for(let s=n+2;;){if(void 0===i){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===s)break;if(r=i,i=e[++n],t<i)break e}s=e.length;break n}if(!(t>=r)){const a=e[1];t<a&&(n=2,r=a);for(let s=n-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(n===s)break;if(i=r,r=e[--n-1],t>=r)break e}s=n,n=0;break n}break t}for(;n<s;){const i=n+s>>>1;t<e[i]?s=i:n=i+1}if(i=e[n],r=e[n-1],void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let t=0;t!==i;++t)e[t]=n[r+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class lh extends oh{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ve,endingEnd:Ve}}intervalChanged_(t,e,n){const i=this.parameterPositions;let r=t-2,s=t+1,a=i[r],o=i[s];if(void 0===a)switch(this.getSettings_().endingStart){case qe:r=t,a=2*e-n;break;case Ye:r=i.length-2,a=e+i[r]-i[r+1];break;default:r=t,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case qe:s=t,o=2*n-e;break;case Ye:s=1,o=n+i[1]-i[0];break;default:s=t-1,o=e}const l=.5*(n-e),c=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-n),this._offsetPrev=r*c,this._offsetNext=s*c}interpolate_(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=this._offsetPrev,h=this._offsetNext,A=this._weightPrev,u=this._weightNext,d=(n-e)/(i-e),p=d*d,g=p*d,f=-A*g+2*A*p-A*d,m=(1+A)*g+(-1.5-2*A)*p+(-.5+A)*d+1,y=(-1-u)*g+(1.5+u)*p+.5*d,v=u*g-u*p;for(let t=0;t!==a;++t)r[t]=f*s[c+t]+m*s[l+t]+y*s[o+t]+v*s[h+t];return r}}class ch extends oh{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=(n-e)/(i-e),h=1-c;for(let t=0;t!==a;++t)r[t]=s[l+t]*h+s[o+t]*c;return r}}class hh extends oh{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class Ah{constructor(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=eh(e,this.TimeBufferType),this.values=eh(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:eh(t.times,Array),values:eh(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new hh(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new ch(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new lh(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case ze:e=this.InterpolantFactoryMethodDiscrete;break;case Ge:e=this.InterpolantFactoryMethodLinear;break;case He:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ze;case this.InterpolantFactoryMethodLinear:return Ge;case this.InterpolantFactoryMethodSmooth:return He}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let r=0,s=i-1;for(;r!==i&&n[r]<t;)++r;for(;-1!==s&&n[s]>e;)--s;if(++s,0!==r||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const t=this.getValueSize();this.times=n.slice(r,s),this.values=this.values.slice(r*t,s*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let e=0;e!==r;e++){const i=n[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==s&&s>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,s),t=!1;break}s=i}if(void 0!==i&&nh(i))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===He,r=t.length-1;let s=1;for(let a=1;a<r;++a){let r=!1;const o=t[a];if(o!==t[a+1]&&(1!==a||o!==t[0]))if(i)r=!0;else{const t=a*n,i=t-n,s=t+n;for(let a=0;a!==n;++a){const n=e[t+a];if(n!==e[i+a]||n!==e[s+a]){r=!0;break}}}if(r){if(a!==s){t[s]=t[a];const i=a*n,r=s*n;for(let t=0;t!==n;++t)e[r+t]=e[i+t]}++s}}if(r>0){t[s]=t[r];for(let t=r*n,i=s*n,a=0;a!==n;++a)e[i+a]=e[t+a];++s}return s!==t.length?(this.times=t.slice(0,s),this.values=e.slice(0,s*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}Ah.prototype.ValueTypeName="",Ah.prototype.TimeBufferType=Float32Array,Ah.prototype.ValueBufferType=Float32Array,Ah.prototype.DefaultInterpolation=Ge;class uh extends Ah{constructor(t,e,n){super(t,e,n)}}uh.prototype.ValueTypeName="bool",uh.prototype.ValueBufferType=Array,uh.prototype.DefaultInterpolation=ze,uh.prototype.InterpolantFactoryMethodLinear=void 0,uh.prototype.InterpolantFactoryMethodSmooth=void 0;class dh extends Ah{constructor(t,e,n,i){super(t,e,n,i)}}dh.prototype.ValueTypeName="color";class ph extends Ah{constructor(t,e,n,i){super(t,e,n,i)}}ph.prototype.ValueTypeName="number";class gh extends oh{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(n-e)/(i-e);let l=t*a;for(let t=l+a;l!==t;l+=4)ci.slerpFlat(r,0,s,l-a,s,l,o);return r}}class fh extends Ah{constructor(t,e,n,i){super(t,e,n,i)}InterpolantFactoryMethodLinear(t){return new gh(this.times,this.values,this.getValueSize(),t)}}fh.prototype.ValueTypeName="quaternion",fh.prototype.InterpolantFactoryMethodSmooth=void 0;class mh extends Ah{constructor(t,e,n){super(t,e,n)}}mh.prototype.ValueTypeName="string",mh.prototype.ValueBufferType=Array,mh.prototype.DefaultInterpolation=ze,mh.prototype.InterpolantFactoryMethodLinear=void 0,mh.prototype.InterpolantFactoryMethodSmooth=void 0;class yh extends Ah{constructor(t,e,n,i){super(t,e,n,i)}}yh.prototype.ValueTypeName="vector";class vh{constructor(t="",e=-1,n=[],i=We){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=ei(),this.userData={},this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let t=0,r=n.length;t!==r;++t)e.push(xh(n[t]).scale(i));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r.userData=JSON.parse(t.userData||"{}"),r}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode,userData:JSON.stringify(t.userData)};for(let t=0,i=n.length;t!==i;++t)e.push(Ah.toJSON(n[t]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const r=e.length,s=[];for(let t=0;t<r;t++){let a=[],o=[];a.push((t+r-1)%r,t,(t+1)%r),o.push(0,1,0);const l=ih(a);a=rh(a,1,l),o=rh(o,1,l),i||0!==a[0]||(a.push(r),o.push(o[0])),s.push(new ph(".morphTargetInfluences["+e[t].name+"]",a,o).scale(1/n))}return new this(t,-1,s)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],s=n.name.match(r);if(s&&s.length>1){const t=s[1];let e=i[t];e||(i[t]=e=[]),e.push(n)}}const s=[];for(const t in i)s.push(this.CreateFromMorphTargetSequence(t,i[t],e,n));return s}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,i,r){if(0!==n.length){const s=[],a=[];sh(n,s,a,i),0!==s.length&&r.push(new t(e,s,a))}},i=[],r=t.name||"default",s=t.fps||30,a=t.blendMode;let o=t.length||-1;const l=t.hierarchy||[];for(let t=0;t<l.length;t++){const r=l[t].keys;if(r&&0!==r.length)if(r[0].morphTargets){const t={};let e;for(e=0;e<r.length;e++)if(r[e].morphTargets)for(let n=0;n<r[e].morphTargets.length;n++)t[r[e].morphTargets[n]]=-1;for(const n in t){const t=[],s=[];for(let i=0;i!==r[e].morphTargets.length;++i){const i=r[e];t.push(i.time),s.push(i.morphTarget===n?1:0)}i.push(new ph(".morphTargetInfluence["+n+"]",t,s))}o=t.length*s}else{const s=".bones["+e[t].name+"]";n(yh,s+".position",r,"pos",i),n(fh,s+".quaternion",r,"rot",i),n(yh,s+".scale",r,"scl",i)}}return 0===i.length?null:new this(r,o,i,a)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());const e=new this.constructor(this.name,this.duration,t,this.blendMode);return e.userData=JSON.parse(JSON.stringify(this.userData)),e}toJSON(){return this.constructor.toJSON(this)}}function xh(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ph;case"vector":case"vector2":case"vector3":case"vector4":return yh;case"color":return dh;case"quaternion":return fh;case"bool":case"boolean":return uh;case"string":return mh}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];sh(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const Ch={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class Ih{constructor(t,e,n){const i=this;let r,s=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.abortController=new AbortController,this.itemStart=function(t){o++,!1===s&&void 0!==i.onStart&&i.onStart(t,a,o),s=!0},this.itemEnd=function(t){a++,void 0!==i.onProgress&&i.onProgress(t,a,o),a===o&&(s=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],i=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const Eh=new Ih;class wh{constructor(t){this.manager=void 0!==t?t:Eh,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,r){n.load(t,i,e,r)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}abort(){return this}}wh.DEFAULT_MATERIAL_NAME="__DEFAULT";const _h={};class bh extends Error{constructor(t,e){super(t),this.response=e}}class Bh extends wh{constructor(t){super(t),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=Ch.get(`file:${t}`);if(void 0!==r)return this.manager.itemStart(t),setTimeout(()=>{e&&e(r),this.manager.itemEnd(t)},0),r;if(void 0!==_h[t])return void _h[t].push({onLoad:e,onProgress:n,onError:i});_h[t]=[],_h[t].push({onLoad:e,onProgress:n,onError:i});const s=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:"function"==typeof AbortSignal.any?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),a=this.mimeType,o=this.responseType;fetch(s).then(e=>{if(200===e.status||0===e.status){if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===e.body||void 0===e.body.getReader)return e;const n=_h[t],i=e.body.getReader(),r=e.headers.get("X-File-Size")||e.headers.get("Content-Length"),s=r?parseInt(r):0,a=0!==s;let o=0;const l=new ReadableStream({start(t){!function e(){i.read().then(({done:i,value:r})=>{if(i)t.close();else{o+=r.byteLength;const i=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:s});for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onProgress&&e.onProgress(i)}t.enqueue(r),e()}},e=>{t.error(e)})}()}});return new Response(l)}throw new bh(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`,e)}).then(t=>{switch(o){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then(t=>(new DOMParser).parseFromString(t,a));case"json":return t.json();default:if(""===a)return t.text();{const e=/charset="?([^;"\s]*)"?/i.exec(a),n=e&&e[1]?e[1].toLowerCase():void 0,i=new TextDecoder(n);return t.arrayBuffer().then(t=>i.decode(t))}}}).then(e=>{Ch.add(`file:${t}`,e);const n=_h[t];delete _h[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onLoad&&i.onLoad(e)}}).catch(e=>{const n=_h[t];if(void 0===n)throw this.manager.itemError(t),e;delete _h[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class Sh extends wh{constructor(t){super(t)}load(t,e,n,i){const r=this,s=new Bh(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=vh.parse(t[n]);e.push(i)}return e}}class Mh extends wh{constructor(t){super(t)}load(t,e,n,i){const r=this,s=[],a=new ul,o=new Bh(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials);let l=0;function c(c){o.load(t[c],function(t){const n=r.parse(t,!0);s[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(a.minFilter=Qt),a.image=s,a.format=n.format,a.needsUpdate=!0,e&&e(a))},n,i)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)c(e);else o.load(t,function(t){const n=r.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){s[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)s[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),s[e].format=n.format,s[e].width=n.width,s[e].height=n.height}a.image=s}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=Qt),a.format=n.format,a.needsUpdate=!0,e&&e(a)},n,i);return a}}const Th=new WeakMap;class Qh extends wh{constructor(t){super(t)}load(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Ch.get(`image:${t}`);if(void 0!==s){if(!0===s.complete)r.manager.itemStart(t),setTimeout(function(){e&&e(s),r.manager.itemEnd(t)},0);else{let t=Th.get(s);void 0===t&&(t=[],Th.set(s,t)),t.push({onLoad:e,onError:i})}return s}const a=yi("img");function o(){c(),e&&e(this);const n=Th.get(this)||[];for(let t=0;t<n.length;t++){const e=n[t];e.onLoad&&e.onLoad(this)}Th.delete(this),r.manager.itemEnd(t)}function l(e){c(),i&&i(e),Ch.remove(`image:${t}`);const n=Th.get(this)||[];for(let t=0;t<n.length;t++){const i=n[t];i.onError&&i.onError(e)}Th.delete(this),r.manager.itemError(t),r.manager.itemEnd(t)}function c(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),Ch.add(`image:${t}`,a),r.manager.itemStart(t),a.src=t,a}}class Dh extends wh{constructor(t){super(t)}load(t,e,n,i){const r=new Aa;r.colorSpace=an;const s=new Qh(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;function o(n){s.load(t[n],function(t){r.images[n]=t,a++,6===a&&(r.needsUpdate=!0,e&&e(r))},void 0,i)}for(let e=0;e<t.length;++e)o(e);return r}}class Rh extends wh{constructor(t){super(t)}load(t,e,n,i){const r=this,s=new Za,a=new Bh(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(t,function(t){let n;try{n=r.parse(t)}catch(t){if(void 0===i)return void console.error(t);i(t)}void 0!==n.image?s.image=n.image:void 0!==n.data&&(s.image.width=n.width,s.image.height=n.height,s.image.data=n.data),s.wrapS=void 0!==n.wrapS?n.wrapS:wt,s.wrapT=void 0!==n.wrapT?n.wrapT:wt,s.magFilter=void 0!==n.magFilter?n.magFilter:Qt,s.minFilter=void 0!==n.minFilter?n.minFilter:Qt,s.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.colorSpace&&(s.colorSpace=n.colorSpace),void 0!==n.flipY&&(s.flipY=n.flipY),void 0!==n.format&&(s.format=n.format),void 0!==n.type&&(s.type=n.type),void 0!==n.mipmaps&&(s.mipmaps=n.mipmaps,s.minFilter=Ut),1===n.mipmapCount&&(s.minFilter=Qt),void 0!==n.generateMipmaps&&(s.generateMipmaps=n.generateMipmaps),s.needsUpdate=!0,e&&e(s,n)},n,i),s}}class Uh extends wh{constructor(t){super(t)}load(t,e,n,i){const r=new Pi,s=new Qh(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,function(t){r.image=t,r.needsUpdate=!0,void 0!==e&&e(r)},n,i),r}}class Ph extends Hr{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new ls(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(e.object.target=this.target.uuid),e}}class Lh extends Ph{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Hr.DEFAULT_UP),this.updateMatrix(),this.groundColor=new ls(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const Fh=new fr,Nh=new hi,kh=new hi;class Oh{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new li(512,512),this.mapType=Lt,this.map=null,this.mapPass=null,this.matrix=new fr,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new vo,this._frameExtents=new li(1,1),this._viewportCount=1,this._viewports=[new Li(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Nh.setFromMatrixPosition(t.matrixWorld),e.position.copy(Nh),kh.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(kh),e.updateMatrixWorld(),Fh.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Fh,e.coordinateSystem,e.reversedDepth),e.reversedDepth?n.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Fh)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 1!==this.intensity&&(t.intensity=this.intensity),0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class zh extends Oh{constructor(){super(new la(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(t){const e=this.camera,n=2*ti*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,r=t.distance||e.far;n===e.fov&&i===e.aspect&&r===e.far||(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class Gh extends Ph{constructor(t,e,n=0,i=Math.PI/3,r=0,s=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Hr.DEFAULT_UP),this.updateMatrix(),this.target=new Hr,this.distance=n,this.angle=i,this.penumbra=r,this.decay=s,this.map=null,this.shadow=new zh}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const Hh=new fr,Vh=new hi,qh=new hi;class Yh extends Oh{constructor(){super(new la(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new li(4,2),this._viewportCount=6,this._viewports=[new Li(2,1,1,1),new Li(0,1,1,1),new Li(3,1,1,1),new Li(1,1,1,1),new Li(3,0,1,1),new Li(1,0,1,1)],this._cubeDirections=[new hi(1,0,0),new hi(-1,0,0),new hi(0,0,1),new hi(0,0,-1),new hi(0,1,0),new hi(0,-1,0)],this._cubeUps=[new hi(0,1,0),new hi(0,1,0),new hi(0,1,0),new hi(0,1,0),new hi(0,0,1),new hi(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Vh.setFromMatrixPosition(t.matrixWorld),n.position.copy(Vh),qh.copy(n.position),qh.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(qh),n.updateMatrixWorld(),i.makeTranslation(-Vh.x,-Vh.y,-Vh.z),Hh.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Hh,n.coordinateSystem,n.reversedDepth)}}class Wh extends Ph{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Yh}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class Jh extends ra{constructor(t=-1,e=1,n=1,i=-1,r=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,s=n+t,a=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,s=r+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}class jh extends Oh{constructor(){super(new Jh(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Xh extends Ph{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Hr.DEFAULT_UP),this.updateMatrix(),this.target=new Hr,this.shadow=new jh}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Kh extends Ph{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Zh extends Ph{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class $h{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new hi)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.282095),e.addScaledVector(s[1],.488603*i),e.addScaledVector(s[2],.488603*r),e.addScaledVector(s[3],.488603*n),e.addScaledVector(s[4],n*i*1.092548),e.addScaledVector(s[5],i*r*1.092548),e.addScaledVector(s[6],.315392*(3*r*r-1)),e.addScaledVector(s[7],n*r*1.092548),e.addScaledVector(s[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.886227),e.addScaledVector(s[1],1.023328*i),e.addScaledVector(s[2],1.023328*r),e.addScaledVector(s[3],1.023328*n),e.addScaledVector(s[4],.858086*n*i),e.addScaledVector(s[5],.858086*i*r),e.addScaledVector(s[6],.743125*r*r-.247708),e.addScaledVector(s[7],.858086*n*r),e.addScaledVector(s[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}class tA extends Ph{constructor(t=new $h,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class eA extends wh{constructor(t){super(t),this.textures={}}load(t,e,n,i){const r=this,s=new Bh(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const i=this.createMaterialFromType(t.type);if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&void 0!==i.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.sheen&&(i.sheen=t.sheen),void 0!==t.sheenColor&&(i.sheenColor=(new ls).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(i.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==i.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==i.specular&&i.specular.setHex(t.specular),void 0!==t.specularIntensity&&(i.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==i.specularColor&&i.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearcoat&&(i.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(i.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.dispersion&&(i.dispersion=t.dispersion),void 0!==t.iridescence&&(i.iridescence=t.iridescence),void 0!==t.iridescenceIOR&&(i.iridescenceIOR=t.iridescenceIOR),void 0!==t.iridescenceThicknessRange&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),void 0!==t.transmission&&(i.transmission=t.transmission),void 0!==t.thickness&&(i.thickness=t.thickness),void 0!==t.attenuationDistance&&(i.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==i.attenuationColor&&i.attenuationColor.setHex(t.attenuationColor),void 0!==t.anisotropy&&(i.anisotropy=t.anisotropy),void 0!==t.anisotropyRotation&&(i.anisotropyRotation=t.anisotropyRotation),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.combine&&(i.combine=t.combine),void 0!==t.side&&(i.side=t.side),void 0!==t.shadowSide&&(i.shadowSide=t.shadowSide),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.alphaHash&&(i.alphaHash=t.alphaHash),void 0!==t.depthFunc&&(i.depthFunc=t.depthFunc),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.blendSrc&&(i.blendSrc=t.blendSrc),void 0!==t.blendDst&&(i.blendDst=t.blendDst),void 0!==t.blendEquation&&(i.blendEquation=t.blendEquation),void 0!==t.blendSrcAlpha&&(i.blendSrcAlpha=t.blendSrcAlpha),void 0!==t.blendDstAlpha&&(i.blendDstAlpha=t.blendDstAlpha),void 0!==t.blendEquationAlpha&&(i.blendEquationAlpha=t.blendEquationAlpha),void 0!==t.blendColor&&void 0!==i.blendColor&&i.blendColor.setHex(t.blendColor),void 0!==t.blendAlpha&&(i.blendAlpha=t.blendAlpha),void 0!==t.stencilWriteMask&&(i.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(i.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(i.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(i.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(i.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(i.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(i.stencilZPass=t.stencilZPass),void 0!==t.stencilWrite&&(i.stencilWrite=t.stencilWrite),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),void 0!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.polygonOffset&&(i.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(i.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(i.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.alphaToCoverage&&(i.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(i.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.forceSinglePass&&(i.forceSinglePass=t.forceSinglePass),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.toneMapped&&(i.toneMapped=t.toneMapped),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const r=t.uniforms[e];switch(i.uniforms[e]={},r.type){case"t":i.uniforms[e].value=n(r.value);break;case"c":i.uniforms[e].value=(new ls).setHex(r.value);break;case"v2":i.uniforms[e].value=(new li).fromArray(r.value);break;case"v3":i.uniforms[e].value=(new hi).fromArray(r.value);break;case"v4":i.uniforms[e].value=(new Li).fromArray(r.value);break;case"m3":i.uniforms[e].value=(new di).fromArray(r.value);break;case"m4":i.uniforms[e].value=(new fr).fromArray(r.value);break;default:i.uniforms[e].value=r.value}}if(void 0!==t.defines&&(i.defines=t.defines),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.glslVersion&&(i.glslVersion=t.glslVersion),void 0!==t.extensions)for(const e in t.extensions)i.extensions[e]=t.extensions[e];if(void 0!==t.lights&&(i.lights=t.lights),void 0!==t.clipping&&(i.clipping=t.clipping),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=n(t.map)),void 0!==t.matcap&&(i.matcap=n(t.matcap)),void 0!==t.alphaMap&&(i.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(i.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(i.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),i.normalScale=(new li).fromArray(e)}return void 0!==t.displacementMap&&(i.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=n(t.specularMap)),void 0!==t.specularIntensityMap&&(i.specularIntensityMap=n(t.specularIntensityMap)),void 0!==t.specularColorMap&&(i.specularColorMap=n(t.specularColorMap)),void 0!==t.envMap&&(i.envMap=n(t.envMap)),void 0!==t.envMapRotation&&i.envMapRotation.fromArray(t.envMapRotation),void 0!==t.envMapIntensity&&(i.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(i.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(i.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(i.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(i.clearcoatNormalScale=(new li).fromArray(t.clearcoatNormalScale)),void 0!==t.iridescenceMap&&(i.iridescenceMap=n(t.iridescenceMap)),void 0!==t.iridescenceThicknessMap&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),void 0!==t.transmissionMap&&(i.transmissionMap=n(t.transmissionMap)),void 0!==t.thicknessMap&&(i.thicknessMap=n(t.thicknessMap)),void 0!==t.anisotropyMap&&(i.anisotropyMap=n(t.anisotropyMap)),void 0!==t.sheenColorMap&&(i.sheenColorMap=n(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return eA.createMaterialFromType(t)}static createMaterialFromType(t){return new{ShadowMaterial:Hc,SpriteMaterial:Ia,RawShaderMaterial:Vc,ShaderMaterial:ia,PointsMaterial:nl,MeshPhysicalMaterial:Yc,MeshStandardMaterial:qc,MeshPhongMaterial:Wc,MeshToonMaterial:Jc,MeshNormalMaterial:jc,MeshLambertMaterial:Xc,MeshDepthMaterial:Kc,MeshDistanceMaterial:Zc,MeshBasicMaterial:us,MeshMatcapMaterial:$c,LineDashedMaterial:th,LineBasicMaterial:Go,Material:As}[t]}}class nA{static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.slice(0,e+1)}static resolveURL(t,e){return"string"!=typeof t||""===t?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class iA extends Ns{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class rA extends wh{constructor(t){super(t)}load(t,e,n,i){const r=this,s=new Bh(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(n){try{e(r.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(t,i){if(void 0!==e[i])return e[i];const r=t.interleavedBuffers[i],s=function(t,e){if(void 0!==n[e])return n[e];const i=t.arrayBuffers[e],r=new Uint32Array(i).buffer;return n[e]=r,r}(t,r.buffer),a=mi(r.type,s),o=new va(a,r.stride);return o.uuid=r.uuid,e[i]=o,o}const r=t.isInstancedBufferGeometry?new iA:new Ns,s=t.data.index;if(void 0!==s){const t=mi(s.type,s.array);r.setIndex(new Cs(t,1))}const a=t.data.attributes;for(const e in a){const n=a[e];let s;if(n.isInterleavedBufferAttribute){const e=i(t.data,n.data);s=new Ca(e,n.itemSize,n.offset,n.normalized)}else{const t=mi(n.type,n.array);s=new(n.isInstancedBufferAttribute?no:Cs)(t,n.itemSize,n.normalized)}void 0!==n.name&&(s.name=n.name),void 0!==n.usage&&s.setUsage(n.usage),r.setAttribute(e,s)}const o=t.data.morphAttributes;if(o)for(const e in o){const n=o[e],s=[];for(let e=0,r=n.length;e<r;e++){const r=n[e];let a;if(r.isInterleavedBufferAttribute){const e=i(t.data,r.data);a=new Ca(e,r.itemSize,r.offset,r.normalized)}else{const t=mi(r.type,r.array);a=new Cs(t,r.itemSize,r.normalized)}void 0!==r.name&&(a.name=r.name),s.push(a)}r.morphAttributes[e]=s}t.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const l=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==l)for(let t=0,e=l.length;t!==e;++t){const e=l[t];r.addGroup(e.start,e.count,e.materialIndex)}const c=t.data.boundingSphere;return void 0!==c&&(r.boundingSphere=(new or).fromJSON(c)),t.name&&(r.name=t.name),t.userData&&(r.userData=t.userData),r}}class sA extends wh{constructor(t){super(t)}load(t,e,n,i){const r=this,s=""===this.path?nA.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||s;const a=new Bh(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(n){let s=null;try{s=JSON.parse(n)}catch(e){return void 0!==i&&i(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const a=s.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())return void 0!==i&&i(new Error("THREE.ObjectLoader: Can't load "+t)),void console.error("THREE.ObjectLoader: Can't load "+t);r.parse(s,e)},n,i)}async loadAsync(t,e){const n=""===this.path?nA.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||n;const i=new Bh(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials);const r=await i.loadAsync(t,e),s=JSON.parse(r),a=s.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+t);return await this.parseAsync(s)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,i),s=this.parseImages(t.images,function(){void 0!==e&&e(l)}),a=this.parseTextures(t.textures,s),o=this.parseMaterials(t.materials,a),l=this.parseObject(t.object,r,o,a,n),c=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,c),this.bindLightTargets(l),void 0!==e){let t=!1;for(const e in s)if(s[e].data instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),r=await this.parseImagesAsync(t.images),s=this.parseTextures(t.textures,r),a=this.parseMaterials(t.materials,s),o=this.parseObject(t.object,i,a,s,e),l=this.parseSkeletons(t.skeletons,o);return this.bindSkeletons(o,l),this.bindLightTargets(o),o}parseShapes(t){const e={};if(void 0!==t)for(let n=0,i=t.length;n<i;n++){const i=(new Kl).fromJSON(t[n]);e[i.uuid]=i}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(t){t.isBone&&(i[t.uuid]=t)}),void 0!==t)for(let e=0,r=t.length;e<r;e++){const r=(new eo).fromJSON(t[e],i);n[r.uuid]=r}return n}parseGeometries(t,e){const n={};if(void 0!==t){const i=new rA;for(let r=0,s=t.length;r<s;r++){let s;const a=t[r];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":s=i.parse(a);break;default:a.type in Gc?s=Gc[a.type].fromJSON(a,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),void 0!==a.userData&&(s.userData=a.userData),n[a.uuid]=s}}return n}parseMaterials(t,e){const n={},i={};if(void 0!==t){const r=new eA;r.setTextures(e);for(let e=0,s=t.length;e<s;e++){const s=t[e];void 0===n[s.uuid]&&(n[s.uuid]=r.parse(s)),i[s.uuid]=n[s.uuid]}}return i}parseAnimations(t){const e={};if(void 0!==t)for(let n=0;n<t.length;n++){const i=t[n],r=vh.parse(i);e[r.uuid]=r}return e}parseImages(t,e){const n=this,i={};let r;function s(t){if("string"==typeof t){const e=t;return function(t){return n.manager.itemStart(t),r.load(t,function(){n.manager.itemEnd(t)},void 0,function(){n.manager.itemError(t),n.manager.itemEnd(t)})}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e)}return t.data?{data:mi(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const n=new Ih(e);r=new Qh(n),r.setCrossOrigin(this.crossOrigin);for(let e=0,n=t.length;e<n;e++){const n=t[e],r=n.url;if(Array.isArray(r)){const t=[];for(let e=0,n=r.length;e<n;e++){const n=s(r[e]);null!==n&&(n instanceof HTMLImageElement?t.push(n):t.push(new Za(n.data,n.width,n.height)))}i[n.uuid]=new Qi(t)}else{const t=s(n.url);i[n.uuid]=new Qi(t)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function r(t){if("string"==typeof t){const n=t,r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:e.resourcePath+n;return await i.loadAsync(r)}return t.data?{data:mi(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){i=new Qh(this.manager),i.setCrossOrigin(this.crossOrigin);for(let e=0,i=t.length;e<i;e++){const i=t[e],s=i.url;if(Array.isArray(s)){const t=[];for(let e=0,n=s.length;e<n;e++){const n=s[e],i=await r(n);null!==i&&(i instanceof HTMLImageElement?t.push(i):t.push(new Za(i.data,i.width,i.height)))}n[i.uuid]=new Qi(t)}else{const t=await r(i.url);n[i.uuid]=new Qi(t)}}}return n}parseTextures(t,e){function n(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const i={};if(void 0!==t)for(let r=0,s=t.length;r<s;r++){const s=t[r];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===e[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);const a=e[s.image],o=a.data;let l;Array.isArray(o)?(l=new Aa,6===o.length&&(l.needsUpdate=!0)):(l=o&&o.data?new Za:new Pi,o&&(l.needsUpdate=!0)),l.source=a,l.uuid=s.uuid,void 0!==s.name&&(l.name=s.name),void 0!==s.mapping&&(l.mapping=n(s.mapping,aA)),void 0!==s.channel&&(l.channel=s.channel),void 0!==s.offset&&l.offset.fromArray(s.offset),void 0!==s.repeat&&l.repeat.fromArray(s.repeat),void 0!==s.center&&l.center.fromArray(s.center),void 0!==s.rotation&&(l.rotation=s.rotation),void 0!==s.wrap&&(l.wrapS=n(s.wrap[0],oA),l.wrapT=n(s.wrap[1],oA)),void 0!==s.format&&(l.format=s.format),void 0!==s.internalFormat&&(l.internalFormat=s.internalFormat),void 0!==s.type&&(l.type=s.type),void 0!==s.colorSpace&&(l.colorSpace=s.colorSpace),void 0!==s.minFilter&&(l.minFilter=n(s.minFilter,lA)),void 0!==s.magFilter&&(l.magFilter=n(s.magFilter,lA)),void 0!==s.anisotropy&&(l.anisotropy=s.anisotropy),void 0!==s.flipY&&(l.flipY=s.flipY),void 0!==s.generateMipmaps&&(l.generateMipmaps=s.generateMipmaps),void 0!==s.premultiplyAlpha&&(l.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(l.unpackAlignment=s.unpackAlignment),void 0!==s.compareFunction&&(l.compareFunction=s.compareFunction),void 0!==s.userData&&(l.userData=s.userData),i[s.uuid]=l}return i}parseObject(t,e,n,i,r){let s,a,o;function l(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function c(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let i=0,r=t.length;i<r;i++){const r=t[i];void 0===n[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),e.push(n[r])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}function h(t){return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined texture",t),i[t]}switch(t.type){case"Scene":s=new ya,void 0!==t.background&&(Number.isInteger(t.background)?s.background=new ls(t.background):s.background=h(t.background)),void 0!==t.environment&&(s.environment=h(t.environment)),void 0!==t.fog&&("Fog"===t.fog.type?s.fog=new ma(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(s.fog=new fa(t.fog.color,t.fog.density)),""!==t.fog.name&&(s.fog.name=t.fog.name)),void 0!==t.backgroundBlurriness&&(s.backgroundBlurriness=t.backgroundBlurriness),void 0!==t.backgroundIntensity&&(s.backgroundIntensity=t.backgroundIntensity),void 0!==t.backgroundRotation&&s.backgroundRotation.fromArray(t.backgroundRotation),void 0!==t.environmentIntensity&&(s.environmentIntensity=t.environmentIntensity),void 0!==t.environmentRotation&&s.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":s=new la(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(s.focus=t.focus),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.filmGauge&&(s.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(s.filmOffset=t.filmOffset),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case"OrthographicCamera":s=new Jh(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case"AmbientLight":s=new Kh(t.color,t.intensity);break;case"DirectionalLight":s=new Xh(t.color,t.intensity),s.target=t.target||"";break;case"PointLight":s=new Wh(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":s=new Zh(t.color,t.intensity,t.width,t.height);break;case"SpotLight":s=new Gh(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),s.target=t.target||"";break;case"HemisphereLight":s=new Lh(t.color,t.groundColor,t.intensity);break;case"LightProbe":s=(new tA).fromJSON(t);break;case"SkinnedMesh":a=l(t.geometry),o=c(t.material),s=new Xa(a,o),void 0!==t.bindMode&&(s.bindMode=t.bindMode),void 0!==t.bindMatrix&&s.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(s.skeleton=t.skeleton);break;case"Mesh":a=l(t.geometry),o=c(t.material),s=new Xs(a,o);break;case"InstancedMesh":a=l(t.geometry),o=c(t.material);const e=t.count,n=t.instanceMatrix,i=t.instanceColor;s=new ho(a,o,e),s.instanceMatrix=new no(new Float32Array(n.array),16),void 0!==i&&(s.instanceColor=new no(new Float32Array(i.array),i.itemSize));break;case"BatchedMesh":a=l(t.geometry),o=c(t.material),s=new zo(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,o),s.geometry=a,s.perObjectFrustumCulled=t.perObjectFrustumCulled,s.sortObjects=t.sortObjects,s._drawRanges=t.drawRanges,s._reservedRanges=t.reservedRanges,s._geometryInfo=t.geometryInfo.map(t=>{let e=null,n=null;return void 0!==t.boundingBox&&(e=(new Hi).fromJSON(t.boundingBox)),void 0!==t.boundingSphere&&(n=(new or).fromJSON(t.boundingSphere)),{...t,boundingBox:e,boundingSphere:n}}),s._instanceInfo=t.instanceInfo,s._availableInstanceIds=t._availableInstanceIds,s._availableGeometryIds=t._availableGeometryIds,s._nextIndexStart=t.nextIndexStart,s._nextVertexStart=t.nextVertexStart,s._geometryCount=t.geometryCount,s._maxInstanceCount=t.maxInstanceCount,s._maxVertexCount=t.maxVertexCount,s._maxIndexCount=t.maxIndexCount,s._geometryInitialized=t.geometryInitialized,s._matricesTexture=h(t.matricesTexture.uuid),s._indirectTexture=h(t.indirectTexture.uuid),void 0!==t.colorsTexture&&(s._colorsTexture=h(t.colorsTexture.uuid)),void 0!==t.boundingSphere&&(s.boundingSphere=(new or).fromJSON(t.boundingSphere)),void 0!==t.boundingBox&&(s.boundingBox=(new Hi).fromJSON(t.boundingBox));break;case"LOD":s=new Oa;break;case"Line":s=new Xo(l(t.geometry),c(t.material));break;case"LineLoop":s=new el(l(t.geometry),c(t.material));break;case"LineSegments":s=new tl(l(t.geometry),c(t.material));break;case"PointCloud":case"Points":s=new ol(l(t.geometry),c(t.material));break;case"Sprite":s=new La(c(t.material));break;case"Group":s=new da;break;case"Bone":s=new Ka;break;default:s=new Hr}if(s.uuid=t.uuid,void 0!==t.name&&(s.name=t.name),void 0!==t.matrix?(s.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(s.matrixAutoUpdate=t.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(void 0!==t.position&&s.position.fromArray(t.position),void 0!==t.rotation&&s.rotation.fromArray(t.rotation),void 0!==t.quaternion&&s.quaternion.fromArray(t.quaternion),void 0!==t.scale&&s.scale.fromArray(t.scale)),void 0!==t.up&&s.up.fromArray(t.up),void 0!==t.castShadow&&(s.castShadow=t.castShadow),void 0!==t.receiveShadow&&(s.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.intensity&&(s.shadow.intensity=t.shadow.intensity),void 0!==t.shadow.bias&&(s.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(s.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(s.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&s.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(s.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(s.visible=t.visible),void 0!==t.frustumCulled&&(s.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(s.renderOrder=t.renderOrder),void 0!==t.userData&&(s.userData=t.userData),void 0!==t.layers&&(s.layers.mask=t.layers),void 0!==t.children){const a=t.children;for(let t=0;t<a.length;t++)s.add(this.parseObject(a[t],e,n,i,r))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const n=e[t];s.animations.push(r[n])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(s.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],i=s.getObjectByProperty("uuid",n.object);void 0!==i&&s.addLevel(i,n.distance,n.hysteresis)}}return s}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse(function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const n=e[t.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(n,t.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);e.target=void 0!==i?i:new Hr}})}}const aA={UVMapping:mt,CubeReflectionMapping:yt,CubeRefractionMapping:vt,EquirectangularReflectionMapping:xt,EquirectangularRefractionMapping:Ct,CubeUVReflectionMapping:It},oA={RepeatWrapping:Et,ClampToEdgeWrapping:wt,MirroredRepeatWrapping:_t},lA={NearestFilter:bt,NearestMipmapNearestFilter:Bt,NearestMipmapLinearFilter:Mt,LinearFilter:Qt,LinearMipmapNearestFilter:Dt,LinearMipmapLinearFilter:Ut},cA=new WeakMap;class hA extends wh{constructor(t){super(t),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"},this._abortController=new AbortController}setOptions(t){return this.options=t,this}load(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Ch.get(`image-bitmap:${t}`);if(void 0!==s)return r.manager.itemStart(t),s.then?void s.then(n=>{if(!0!==cA.has(s))return e&&e(n),r.manager.itemEnd(t),n;i&&i(cA.get(s)),r.manager.itemError(t),r.manager.itemEnd(t)}):(setTimeout(function(){e&&e(s),r.manager.itemEnd(t)},0),s);const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,a.signal="function"==typeof AbortSignal.any?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal;const o=fetch(t,a).then(function(t){return t.blob()}).then(function(t){return createImageBitmap(t,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(n){return Ch.add(`image-bitmap:${t}`,n),e&&e(n),r.manager.itemEnd(t),n}).catch(function(e){i&&i(e),cA.set(o,e),Ch.remove(`image-bitmap:${t}`),r.manager.itemError(t),r.manager.itemEnd(t)});Ch.add(`image-bitmap:${t}`,o),r.manager.itemStart(t)}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}let AA;class uA{static getContext(){return void 0===AA&&(AA=new(window.AudioContext||window.webkitAudioContext)),AA}static setContext(t){AA=t}}class dA extends wh{constructor(t){super(t)}load(t,e,n,i){const r=this,s=new Bh(this.manager);function a(e){i?i(e):console.error(e),r.manager.itemError(t)}s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,function(t){try{const n=t.slice(0);uA.getContext().decodeAudioData(n,function(t){e(t)}).catch(a)}catch(t){a(t)}},n,i)}}const pA=new fr,gA=new fr,fA=new fr;class mA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new la,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new la,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,fA.copy(t.projectionMatrix);const n=e.eyeSep/2,i=n*e.near/e.focus,r=e.near*Math.tan($n*e.fov*.5)/e.zoom;let s,a;gA.elements[12]=-n,pA.elements[12]=n,s=-r*e.aspect+i,a=r*e.aspect+i,fA.elements[0]=2*e.near/(a-s),fA.elements[8]=(a+s)/(a-s),this.cameraL.projectionMatrix.copy(fA),s=-r*e.aspect-i,a=r*e.aspect-i,fA.elements[0]=2*e.near/(a-s),fA.elements[8]=(a+s)/(a-s),this.cameraR.projectionMatrix.copy(fA)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(gA),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(pA)}}class yA extends la{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class vA{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=performance.now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}const xA=new hi,CA=new ci,IA=new hi,EA=new hi,wA=new hi;class _A extends Hr{constructor(){super(),this.type="AudioListener",this.context=uA.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new vA}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(xA,CA,IA),EA.set(0,0,-1).applyQuaternion(CA),wA.set(0,1,0).applyQuaternion(CA),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(xA.x,t),e.positionY.linearRampToValueAtTime(xA.y,t),e.positionZ.linearRampToValueAtTime(xA.z,t),e.forwardX.linearRampToValueAtTime(EA.x,t),e.forwardY.linearRampToValueAtTime(EA.y,t),e.forwardZ.linearRampToValueAtTime(EA.z,t),e.upX.linearRampToValueAtTime(wA.x,t),e.upY.linearRampToValueAtTime(wA.y,t),e.upZ.linearRampToValueAtTime(wA.z,t)}else e.setPosition(xA.x,xA.y,xA.z),e.setOrientation(EA.x,EA.y,EA.z,wA.x,wA.y,wA.z)}}class bA extends Hr{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(t=0){if(!1!==this.hasPlaybackControl)return this._progress=0,null!==this.source&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(!1!==this._connected){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,!0===this.isPlaying&&void 0!==this.source.detune&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),"buffer"!==t.sourceType?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const BA=new hi,SA=new ci,MA=new hi,TA=new hi;class QA extends bA{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(BA,SA,MA),TA.set(0,0,1).applyQuaternion(SA);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(BA.x,t),e.positionY.linearRampToValueAtTime(BA.y,t),e.positionZ.linearRampToValueAtTime(BA.z,t),e.orientationX.linearRampToValueAtTime(TA.x,t),e.orientationY.linearRampToValueAtTime(TA.y,t),e.orientationZ.linearRampToValueAtTime(TA.z,t)}else e.setPosition(BA.x,BA.y,BA.z),e.setOrientation(TA.x,TA.y,TA.z)}}class DA{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class RA{constructor(t,e,n){let i,r,s;switch(this.binding=t,this.valueSize=n,e){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let s=this.cumulativeWeight;if(0===s){for(let t=0;t!==i;++t)n[r+t]=n[t];s=e}else{s+=e;const t=e/s;this._mixBufferRegion(n,r,0,t,i)}this.cumulativeWeight=s}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const t=e*this._origIndex;this._mixBufferRegion(n,i,t,1-r,e)}s>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let t=e,r=e+e;t!==r;++t)if(n[t]!==n[t+e]){a.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let t=n,r=i;t!==r;++t)e[t]=e[i+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,r){if(i>=.5)for(let i=0;i!==r;++i)t[e+i]=t[n+i]}_slerp(t,e,n,i){ci.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,r){const s=this._workIndex*r;ci.multiplyQuaternionsFlat(t,s,t,e,t,n),ci.slerpFlat(t,e,t,e,t,s,i)}_lerp(t,e,n,i,r){const s=1-i;for(let a=0;a!==r;++a){const r=e+a;t[r]=t[r]*s+t[n+a]*i}}_lerpAdditive(t,e,n,i,r){for(let s=0;s!==r;++s){const r=e+s;t[r]=t[r]+t[n+s]*i}}}const UA="\\[\\]\\.:\\/",PA=new RegExp("["+UA+"]","g"),LA="[^"+UA+"]",FA="[^"+UA.replace("\\.","")+"]",NA=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",LA)+/(WCOD+)?/.source.replace("WCOD",FA)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",LA)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",LA)+"$"),kA=["material","materials","bones","map"];class OA{constructor(t,e,n){this.path=e,this.parsedPath=n||OA.parseTrackName(e),this.node=OA.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new OA.Composite(t,e,n):new OA(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(PA,"")}static parseTrackName(t){const e=NA.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==kA.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const r=t[i];if(r.name===e||r.uuid===e)return r;const s=n(r.children);if(s)return s}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=OA.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const s=t[i];if(void 0===s){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let a=this.Versioning.None;this.targetObject=t,!0===t.isMaterial?a=this.Versioning.NeedsUpdate:!0===t.isObject3D&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}OA.Composite=class{constructor(t,e,n){const i=n||OA.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}},OA.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},OA.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},OA.prototype.GetterByBindingType=[OA.prototype._getValue_direct,OA.prototype._getValue_array,OA.prototype._getValue_arrayElement,OA.prototype._getValue_toArray],OA.prototype.SetterByBindingTypeAndVersioning=[[OA.prototype._setValue_direct,OA.prototype._setValue_direct_setNeedsUpdate,OA.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[OA.prototype._setValue_array,OA.prototype._setValue_array_setNeedsUpdate,OA.prototype._setValue_array_setMatrixWorldNeedsUpdate],[OA.prototype._setValue_arrayElement,OA.prototype._setValue_arrayElement_setNeedsUpdate,OA.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[OA.prototype._setValue_fromArray,OA.prototype._setValue_fromArray_setNeedsUpdate,OA.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class zA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ei(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let a,o=t.length,l=this.nCachedObjects_;for(let c=0,h=arguments.length;c!==h;++c){const h=arguments[c],A=h.uuid;let u=e[A];if(void 0===u){u=o++,e[A]=u,t.push(h);for(let t=0,e=s;t!==e;++t)r[t].push(new OA(h,n[t],i[t]))}else if(u<l){a=t[u];const o=--l,c=t[o];e[c.uuid]=u,t[u]=c,e[A]=o,t[o]=h;for(let t=0,e=s;t!==e;++t){const e=r[t],s=e[o];let a=e[u];e[u]=s,void 0===a&&(a=new OA(h,n[t],i[t])),e[o]=a}}else t[u]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s],o=a.uuid,l=e[o];if(void 0!==l&&l>=r){const s=r++,c=t[s];e[c.uuid]=l,t[l]=c,e[o]=s,t[s]=a;for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[s],r=e[l];e[l]=i,e[s]=r}}}this.nCachedObjects_=r}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,s=t.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a].uuid,l=e[o];if(void 0!==l)if(delete e[o],l<r){const a=--r,o=t[a],c=--s,h=t[c];e[o.uuid]=l,t[l]=o,e[h.uuid]=a,t[a]=h,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[a],r=e[c];e[l]=i,e[a]=r,e.pop()}}else{const r=--s,a=t[r];r>0&&(e[a.uuid]=l),t[l]=a,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t];e[l]=e[r],e.pop()}}}this.nCachedObjects_=r}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const r=this._bindings;if(void 0!==i)return r[i];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);i=r.length,n[t]=i,s.push(t),a.push(e),r.push(h);for(let n=c,i=o.length;n!==i;++n){const i=o[n];h[n]=new OA(i,t,e)}return h}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const i=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a];e[t[a]]=n,s[n]=o,s.pop(),r[n]=r[a],r.pop(),i[n]=i[a],i.pop()}}}class GA{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const r=e.tracks,s=r.length,a=new Array(s),o={endingStart:Ve,endingEnd:Ve};for(let t=0;t!==s;++t){const e=r[t].createInterpolant(null);a[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ke,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),!0===n){const n=this._clip.duration,i=t._clip.duration,r=i/n,s=n/i;t.warp(1,r,e),this.warp(s,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,r=i.time,s=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,o[1]=r+n,l[0]=t/s,l[1]=e/s,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled)return void this._updateWeight(t);const r=this._startTime;if(null!==r){const i=(t-r)*n;i<0||0===n?e=0:(this._startTime=null,e=n*i)}e*=this._updateTimeScale(t);const s=this._updateTime(e),a=this._updateWeight(t);if(a>0){const t=this._interpolants,e=this._propertyBindings;if(this.blendMode===Je)for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(s),e[n].accumulateAdditive(a);else for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(s),e[n].accumulate(i,a)}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,r=this._loopCount;const s=n===Oe;if(0===t)return-1===r||!s||1&~r?i:e-i;if(n===Ne){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,r+=Math.abs(n);const a=this.repetitions-r;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===a){const e=t<0;this._setEndings(e,!e,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(s&&!(1&~r))return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=qe,i.endingEnd=qe):(i.endingStart=t?this.zeroSlopeAtStart?qe:Ve:Ye,i.endingEnd=e?this.zeroSlopeAtEnd?qe:Ve:Ye)}_scheduleFading(t,e,n){const i=this._mixer,r=i.time;let s=this._weightInterpolant;null===s&&(s=i._lendControlInterpolant(),this._weightInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=r,o[0]=e,a[1]=r+t,o[1]=n,this}}const HA=new Float32Array(1);class VA extends Xn{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,s=t._propertyBindings,a=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let c=l[o];void 0===c&&(c={},l[o]=c);for(let t=0;t!==r;++t){const r=i[t],l=r.name;let h=c[l];if(void 0!==h)++h.referenceCount,s[t]=h;else{if(h=s[t],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,o,l));continue}const i=e&&e._propertyBindings[t].binding.parsedPath;h=new RA(OA.create(n,l,i),r.ValueTypeName,r.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,o,l),s[t]=h}a[t].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,r=this._actionsByClip;let s=r[e];if(void 0===s)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=s;else{const e=s.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),s.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,s=this._actionsByClip,a=s[r],o=a.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null,delete a.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete s[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[e];void 0===s&&(s={},i[e]=s),s[n]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,a=s[i],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[r],0===Object.keys(a).length&&delete s[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new ch(new Float32Array(2),new Float32Array(2),1,HA),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r}clipAction(t,e,n){const i=e||this._root,r=i.uuid;let s="string"==typeof t?vh.findByName(i,t):t;const a=null!==s?s.uuid:t,o=this._actionsByClip[a];let l=null;if(void 0===n&&(n=null!==s?s.blendMode:We),void 0!==o){const t=o.actionByRoot[r];if(void 0!==t&&t.blendMode===n)return t;l=o.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const c=new GA(this,s,e,n);return this._bindAction(c,l),this._addInactiveAction(c,a,r),c}existingAction(t,e){const n=e||this._root,i=n.uuid,r="string"==typeof t?vh.findByName(n,t):t,s=r?r.uuid:t,a=this._actionsByClip[s];return void 0!==a&&a.actionByRoot[i]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),s=this._accuIndex^=1;for(let a=0;a!==n;++a)e[a]._update(i,t,r,s);const a=this._bindings,o=this._nActiveBindings;for(let t=0;t!==o;++t)a[t].apply(s);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(void 0!==r){const t=r.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this._deactivateAction(i);const r=i._cacheIndex,s=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,s._cacheIndex=r,e[r]=s,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class qA extends Fi{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new zi(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class YA{constructor(t){this.value=t}clone(){return new YA(void 0===this.value.clone?this.value:this.value.clone())}}let WA=0;class JA extends Xn{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:WA++}),this.name="",this.usage=Un,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return-1!==e&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let t=0,n=e.length;t<n;t++){const n=Array.isArray(e[t])?e[t]:[e[t]];for(let t=0;t<n.length;t++)this.uniforms.push(n[t].clone())}return this}clone(){return(new this.constructor).copy(this)}}class jA extends va{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class XA{constructor(t,e,n,i,r,s=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.normalized=s,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const KA=new fr;class ZA{constructor(t,e,n=0,i=1/0){this.ray=new gr(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Br,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return KA.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(KA),this}intersectObject(t,e=!0,n=[]){return tu(t,this,n,e),n.sort($A),n}intersectObjects(t,e=!0,n=[]){for(let i=0,r=t.length;i<r;i++)tu(t[i],this,n,e);return n.sort($A),n}}function $A(t,e){return t.distance-e.distance}function tu(t,e,n,i){let r=!0;if(t.layers.test(e.layers)&&!1===t.raycast(e,n)&&(r=!1),!0===r&&!0===i){const i=t.children;for(let t=0,r=i.length;t<r;t++)tu(i[t],e,n,!0)}}class eu{constructor(){this._previousTime=0,this._currentTime=0,this._startTime=performance.now(),this._delta=0,this._elapsed=0,this._timescale=1,this._document=null,this._pageVisibilityHandler=null}connect(t){this._document=t,void 0!==t.hidden&&(this._pageVisibilityHandler=nu.bind(this),t.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))}disconnect(){null!==this._pageVisibilityHandler&&(this._document.removeEventListener("visibilitychange",this._pageVisibilityHandler),this._pageVisibilityHandler=null),this._document=null}getDelta(){return this._delta/1e3}getElapsed(){return this._elapsed/1e3}getTimescale(){return this._timescale}setTimescale(t){return this._timescale=t,this}reset(){return this._currentTime=performance.now()-this._startTime,this}dispose(){this.disconnect()}update(t){return null!==this._pageVisibilityHandler&&!0===this._document.hidden?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(void 0!==t?t:performance.now())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta),this}}function nu(){!1===this._document.hidden&&this.reset()}class iu{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=ni(this.phi,t,Math.PI-t),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(ni(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class ru{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}}class su{constructor(t,e,n,i){su.prototype.isMatrix2=!0,this.elements=[1,0,0,1],void 0!==t&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const r=this.elements;return r[0]=t,r[2]=e,r[1]=n,r[3]=i,this}}const au=new li;class ou{constructor(t=new li(1/0,1/0),e=new li(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=au.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,au).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const lu=new hi,cu=new hi,hu=new hi,Au=new hi,uu=new hi,du=new hi,pu=new hi;class gu{constructor(t=new hi,e=new hi){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){lu.subVectors(t,this.start),cu.subVectors(this.end,this.start);const n=cu.dot(cu);let i=cu.dot(lu)/n;return e&&(i=ni(i,0,1)),i}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}distanceSqToLine3(t,e=du,n=pu){const i=1e-8*1e-8;let r,s;const a=this.start,o=t.start,l=this.end,c=t.end;hu.subVectors(l,a),Au.subVectors(c,o),uu.subVectors(a,o);const h=hu.dot(hu),A=Au.dot(Au),u=Au.dot(uu);if(h<=i&&A<=i)return e.copy(a),n.copy(o),e.sub(n),e.dot(e);if(h<=i)r=0,s=u/A,s=ni(s,0,1);else{const t=hu.dot(uu);if(A<=i)s=0,r=ni(-t/h,0,1);else{const e=hu.dot(Au),n=h*A-e*e;r=0!==n?ni((e*u-t*A)/n,0,1):0,s=(e*r+u)/A,s<0?(s=0,r=ni(-t/h,0,1)):s>1&&(s=1,r=ni((e-t)/h,0,1))}}return e.copy(a).add(hu.multiplyScalar(r)),n.copy(o).add(Au.multiplyScalar(s)),e.sub(n),e.dot(e)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const fu=new hi;class mu extends Hr{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new Ns,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1,n=32;t<n;t++,e++){const r=t/n*Math.PI*2,s=e/n*Math.PI*2;i.push(Math.cos(r),Math.sin(r),1,Math.cos(s),Math.sin(s),1)}n.setAttribute("position",new Ts(i,3));const r=new Go({fog:!1,toneMapped:!1});this.cone=new tl(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),fu.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(fu),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const yu=new hi,vu=new fr,xu=new fr;class Cu extends tl{constructor(t){const e=Iu(t),n=new Ns,i=[],r=[];for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(0,0,0),r.push(0,0,0))}n.setAttribute("position",new Ts(i,3)),n.setAttribute("color",new Ts(r,3)),super(n,new Go({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1;const s=new ls(255),a=new ls(65280);this.setColors(s,a)}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");xu.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const r=e[t];r.parent&&r.parent.isBone&&(vu.multiplyMatrices(xu,r.matrixWorld),yu.setFromMatrixPosition(vu),i.setXYZ(n,yu.x,yu.y,yu.z),vu.multiplyMatrices(xu,r.parent.matrixWorld),yu.setFromMatrixPosition(vu),i.setXYZ(n+1,yu.x,yu.y,yu.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}setColors(t,e){const n=this.geometry.getAttribute("color");for(let i=0;i<n.count;i+=2)n.setXYZ(i,t.r,t.g,t.b),n.setXYZ(i+1,e.r,e.g,e.b);return n.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}function Iu(t){const e=[];!0===t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push(...Iu(t.children[n]));return e}class Eu extends Xs{constructor(t,e,n){super(new Pc(e,4,2),new us({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const wu=new hi,_u=new ls,bu=new ls;class Bu extends Hr{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Qc(e);i.rotateY(.5*Math.PI),this.material=new us({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),s=new Float32Array(3*r.count);i.setAttribute("color",new Cs(s,3)),this.add(new Xs(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");_u.copy(this.light.color),bu.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const i=t<n/2?_u:bu;e.setXYZ(t,i.r,i.g,i.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(wu.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Su extends tl{constructor(t=10,e=10,n=4473924,i=8947848){n=new ls(n),i=new ls(i);const r=e/2,s=t/e,a=t/2,o=[],l=[];for(let t=0,c=0,h=-a;t<=e;t++,h+=s){o.push(-a,0,h,a,0,h),o.push(h,0,-a,h,0,a);const e=t===r?n:i;e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3}const c=new Ns;c.setAttribute("position",new Ts(o,3)),c.setAttribute("color",new Ts(l,3)),super(c,new Go({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Mu extends tl{constructor(t=10,e=16,n=8,i=64,r=4473924,s=8947848){r=new ls(r),s=new ls(s);const a=[],o=[];if(e>1)for(let n=0;n<e;n++){const i=n/e*(2*Math.PI),l=Math.sin(i)*t,c=Math.cos(i)*t;a.push(0,0,0),a.push(l,0,c);const h=1&n?r:s;o.push(h.r,h.g,h.b),o.push(h.r,h.g,h.b)}for(let e=0;e<n;e++){const l=1&e?r:s,c=t-t/n*e;for(let t=0;t<i;t++){let e=t/i*(2*Math.PI),n=Math.sin(e)*c,r=Math.cos(e)*c;a.push(n,0,r),o.push(l.r,l.g,l.b),e=(t+1)/i*(2*Math.PI),n=Math.sin(e)*c,r=Math.cos(e)*c,a.push(n,0,r),o.push(l.r,l.g,l.b)}}const l=new Ns;l.setAttribute("position",new Ts(a,3)),l.setAttribute("color",new Ts(o,3)),super(l,new Go({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Tu=new hi,Qu=new hi,Du=new hi;class Ru extends Hr{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",void 0===e&&(e=1);let i=new Ns;i.setAttribute("position",new Ts([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const r=new Go({fog:!1,toneMapped:!1});this.lightPlane=new Xo(i,r),this.add(this.lightPlane),i=new Ns,i.setAttribute("position",new Ts([0,0,0,0,0,1],3)),this.targetLine=new Xo(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Tu.setFromMatrixPosition(this.light.matrixWorld),Qu.setFromMatrixPosition(this.light.target.matrixWorld),Du.subVectors(Qu,Tu),this.lightPlane.lookAt(Qu),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Qu),this.targetLine.scale.z=Du.length()}}const Uu=new hi,Pu=new ra;class Lu extends tl{constructor(t){const e=new Ns,n=new Go({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],s={};function a(t,e){o(t),o(e)}function o(t){i.push(0,0,0),r.push(0,0,0),void 0===s[t]&&(s[t]=[]),s[t].push(i.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),e.setAttribute("position",new Ts(i,3)),e.setAttribute("color",new Ts(r,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update();const l=new ls(16755200),c=new ls(16711680),h=new ls(43775),A=new ls(16777215),u=new ls(3355443);this.setColors(l,c,h,A,u)}setColors(t,e,n,i,r){const s=this.geometry.getAttribute("color");return s.setXYZ(0,t.r,t.g,t.b),s.setXYZ(1,t.r,t.g,t.b),s.setXYZ(2,t.r,t.g,t.b),s.setXYZ(3,t.r,t.g,t.b),s.setXYZ(4,t.r,t.g,t.b),s.setXYZ(5,t.r,t.g,t.b),s.setXYZ(6,t.r,t.g,t.b),s.setXYZ(7,t.r,t.g,t.b),s.setXYZ(8,t.r,t.g,t.b),s.setXYZ(9,t.r,t.g,t.b),s.setXYZ(10,t.r,t.g,t.b),s.setXYZ(11,t.r,t.g,t.b),s.setXYZ(12,t.r,t.g,t.b),s.setXYZ(13,t.r,t.g,t.b),s.setXYZ(14,t.r,t.g,t.b),s.setXYZ(15,t.r,t.g,t.b),s.setXYZ(16,t.r,t.g,t.b),s.setXYZ(17,t.r,t.g,t.b),s.setXYZ(18,t.r,t.g,t.b),s.setXYZ(19,t.r,t.g,t.b),s.setXYZ(20,t.r,t.g,t.b),s.setXYZ(21,t.r,t.g,t.b),s.setXYZ(22,t.r,t.g,t.b),s.setXYZ(23,t.r,t.g,t.b),s.setXYZ(24,e.r,e.g,e.b),s.setXYZ(25,e.r,e.g,e.b),s.setXYZ(26,e.r,e.g,e.b),s.setXYZ(27,e.r,e.g,e.b),s.setXYZ(28,e.r,e.g,e.b),s.setXYZ(29,e.r,e.g,e.b),s.setXYZ(30,e.r,e.g,e.b),s.setXYZ(31,e.r,e.g,e.b),s.setXYZ(32,n.r,n.g,n.b),s.setXYZ(33,n.r,n.g,n.b),s.setXYZ(34,n.r,n.g,n.b),s.setXYZ(35,n.r,n.g,n.b),s.setXYZ(36,n.r,n.g,n.b),s.setXYZ(37,n.r,n.g,n.b),s.setXYZ(38,i.r,i.g,i.b),s.setXYZ(39,i.r,i.g,i.b),s.setXYZ(40,r.r,r.g,r.b),s.setXYZ(41,r.r,r.g,r.b),s.setXYZ(42,r.r,r.g,r.b),s.setXYZ(43,r.r,r.g,r.b),s.setXYZ(44,r.r,r.g,r.b),s.setXYZ(45,r.r,r.g,r.b),s.setXYZ(46,r.r,r.g,r.b),s.setXYZ(47,r.r,r.g,r.b),s.setXYZ(48,r.r,r.g,r.b),s.setXYZ(49,r.r,r.g,r.b),s.needsUpdate=!0,this}update(){const t=this.geometry,e=this.pointMap;let n,i;if(Pu.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),!0===this.camera.reversedDepth)n=1,i=0;else if(this.camera.coordinateSystem===qn)n=-1,i=1;else{if(this.camera.coordinateSystem!==Yn)throw new Error("THREE.CameraHelper.update(): Invalid coordinate system: "+this.camera.coordinateSystem);n=0,i=1}Fu("c",e,t,Pu,0,0,n),Fu("t",e,t,Pu,0,0,i),Fu("n1",e,t,Pu,-1,-1,n),Fu("n2",e,t,Pu,1,-1,n),Fu("n3",e,t,Pu,-1,1,n),Fu("n4",e,t,Pu,1,1,n),Fu("f1",e,t,Pu,-1,-1,i),Fu("f2",e,t,Pu,1,-1,i),Fu("f3",e,t,Pu,-1,1,i),Fu("f4",e,t,Pu,1,1,i),Fu("u1",e,t,Pu,.7,1.1,n),Fu("u2",e,t,Pu,-.7,1.1,n),Fu("u3",e,t,Pu,0,2,n),Fu("cf1",e,t,Pu,-1,0,i),Fu("cf2",e,t,Pu,1,0,i),Fu("cf3",e,t,Pu,0,-1,i),Fu("cf4",e,t,Pu,0,1,i),Fu("cn1",e,t,Pu,-1,0,n),Fu("cn2",e,t,Pu,1,0,n),Fu("cn3",e,t,Pu,0,-1,n),Fu("cn4",e,t,Pu,0,1,n),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Fu(t,e,n,i,r,s,a){Uu.set(r,s,a).unproject(i);const o=e[t];if(void 0!==o){const t=n.getAttribute("position");for(let e=0,n=o.length;e<n;e++)t.setXYZ(o[e],Uu.x,Uu.y,Uu.z)}}const Nu=new Hi;class ku extends tl{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),r=new Ns;r.setIndex(new Cs(n,1)),r.setAttribute("position",new Cs(i,3)),super(r,new Go({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(void 0!==this.object&&Nu.setFromObject(this.object),Nu.isEmpty())return;const t=Nu.min,e=Nu.max,n=this.geometry.attributes.position,i=n.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=e.y,i[5]=e.z,i[6]=t.x,i[7]=t.y,i[8]=e.z,i[9]=e.x,i[10]=t.y,i[11]=e.z,i[12]=e.x,i[13]=e.y,i[14]=t.z,i[15]=t.x,i[16]=e.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=e.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ou extends tl{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Ns;i.setIndex(new Cs(n,1)),i.setAttribute("position",new Ts([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new Go({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class zu extends Xo{constructor(t,e=1,n=16776960){const i=n,r=new Ns;r.setAttribute("position",new Ts([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),r.computeBoundingSphere(),super(r,new Go({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const s=new Ns;s.setAttribute("position",new Ts([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),s.computeBoundingSphere(),this.add(new Xs(s,new us({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Gu=new hi;let Hu,Vu;class qu extends Hr{constructor(t=new hi(0,0,1),e=new hi(0,0,0),n=1,i=16776960,r=.2*n,s=.2*r){super(),this.type="ArrowHelper",void 0===Hu&&(Hu=new Ns,Hu.setAttribute("position",new Ts([0,0,0,0,1,0],3)),Vu=new Cl(.5,1,5,1),Vu.translate(0,-.5,0)),this.position.copy(e),this.line=new Xo(Hu,new Go({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Xs(Vu,new us({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,s)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Gu.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Gu,e)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Yu extends tl{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new Ns;n.setAttribute("position",new Ts(e,3)),n.setAttribute("color",new Ts([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(n,new Go({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(t,e,n){const i=new ls,r=this.geometry.attributes.color.array;return i.set(t),i.toArray(r,0),i.toArray(r,3),i.set(e),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Wu{constructor(){this.type="ShapePath",this.color=new ls,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Xl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,r,s){return this.currentPath.bezierCurveTo(t,e,n,i,r,s),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(t,e){const n=e.length;let i=!1;for(let r=n-1,s=0;s<n;r=s++){let n=e[r],a=e[s],o=a.x-n.x,l=a.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[s],o=-o,a=e[r],l=-l),t.y<n.y||t.y>a.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-o*(t.y-n.y);if(0===e)return!0;if(e<0)continue;i=!i}}else{if(t.y!==n.y)continue;if(a.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=a.x)return!0}}return i}const n=wc.isClockWise,i=this.subPaths;if(0===i.length)return[];let r,s,a;const o=[];if(1===i.length)return s=i[0],a=new Kl,a.curves=s.curves,o.push(a),o;let l=!n(i[0].getPoints());l=t?!l:l;const c=[],h=[];let A,u,d=[],p=0;h[p]=void 0,d[p]=[];for(let e=0,a=i.length;e<a;e++)s=i[e],A=s.getPoints(),r=n(A),r=t?!r:r,r?(!l&&h[p]&&p++,h[p]={s:new Kl,p:A},h[p].s.curves=s.curves,l&&p++,d[p]=[]):d[p].push({h:s,p:A[0]});if(!h[0])return function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n],r=new Kl;r.curves=i.curves,e.push(r)}return e}(i);if(h.length>1){let t=!1,n=0;for(let t=0,e=h.length;t<e;t++)c[t]=[];for(let i=0,r=h.length;i<r;i++){const r=d[i];for(let s=0;s<r.length;s++){const a=r[s];let o=!0;for(let r=0;r<h.length;r++)e(a.p,h[r].p)&&(i!==r&&n++,o?(o=!1,c[r].push(a)):t=!0);o&&c[i].push(a)}}n>0&&!1===t&&(d=c)}for(let t=0,e=h.length;t<e;t++){a=h[t].s,o.push(a),u=d[t];for(let t=0,e=u.length;t<e;t++)a.holes.push(u[t].h)}return o}}class Ju extends Xn{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){void 0!==t?(null!==this.domElement&&this.disconnect(),this.domElement=t):console.warn("THREE.Controls: connect() now requires an element.")}disconnect(){}dispose(){}update(){}}function ju(t,e,n,i){const r=function(t){switch(t){case Lt:case Ft:return{byteLength:1,components:1};case kt:case Nt:case Ht:return{byteLength:2,components:1};case Vt:case qt:return{byteLength:2,components:4};case zt:case Ot:case Gt:return{byteLength:4,components:1};case Wt:case Jt:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${t}.`)}(i);switch(n){case jt:return t*e;case te:case ee:return t*e/r.components*r.byteLength;case ne:case ie:return t*e*2/r.components*r.byteLength;case Xt:return t*e*3/r.components*r.byteLength;case Kt:case se:return t*e*4/r.components*r.byteLength;case ae:case oe:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case le:case ce:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case Ae:case de:return Math.max(t,16)*Math.max(e,8)/4;case he:case ue:return Math.max(t,8)*Math.max(e,8)/2;case pe:case ge:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case fe:case me:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case ye:return Math.floor((t+4)/5)*Math.floor((e+3)/4)*16;case ve:return Math.floor((t+4)/5)*Math.floor((e+4)/5)*16;case xe:return Math.floor((t+5)/6)*Math.floor((e+4)/5)*16;case Ce:return Math.floor((t+5)/6)*Math.floor((e+5)/6)*16;case Ie:return Math.floor((t+7)/8)*Math.floor((e+4)/5)*16;case Ee:return Math.floor((t+7)/8)*Math.floor((e+5)/6)*16;case we:return Math.floor((t+7)/8)*Math.floor((e+7)/8)*16;case _e:return Math.floor((t+9)/10)*Math.floor((e+4)/5)*16;case be:return Math.floor((t+9)/10)*Math.floor((e+5)/6)*16;case Be:return Math.floor((t+9)/10)*Math.floor((e+7)/8)*16;case Se:return Math.floor((t+9)/10)*Math.floor((e+9)/10)*16;case Me:return Math.floor((t+11)/12)*Math.floor((e+9)/10)*16;case Te:return Math.floor((t+11)/12)*Math.floor((e+11)/12)*16;case Qe:case De:case Re:return Math.ceil(t/4)*Math.ceil(e/4)*16;case Ue:case Pe:return Math.ceil(t/4)*Math.ceil(e/4)*8;case Le:case Fe:return Math.ceil(t/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${n} format.`)}class Xu{static contain(t,e){return function(t,e){const n=t.image&&t.image.width?t.image.width/t.image.height:1;return n>e?(t.repeat.x=1,t.repeat.y=n/e,t.offset.x=0,t.offset.y=(1-t.repeat.y)/2):(t.repeat.x=e/n,t.repeat.y=1,t.offset.x=(1-t.repeat.x)/2,t.offset.y=0),t}(t,e)}static cover(t,e){return function(t,e){const n=t.image&&t.image.width?t.image.width/t.image.height:1;return n>e?(t.repeat.x=e/n,t.repeat.y=1,t.offset.x=(1-t.repeat.x)/2,t.offset.y=0):(t.repeat.x=1,t.repeat.y=n/e,t.offset.x=0,t.offset.y=(1-t.repeat.y)/2),t}(t,e)}static fill(t){return function(t){return t.repeat.x=1,t.repeat.y=1,t.offset.x=0,t.offset.y=0,t}(t)}static getByteLength(t,e,n,i){return ju(t,e,n,i)}}function Ku(){let t=null,e=!1,n=null,i=null;function r(e,s){n(e,s),i=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function Zu(t){const e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);const i=e.get(n);i&&(t.deleteBuffer(i.buffer),e.delete(n))},update:function(n,i){if(n.isInterleavedBufferAttribute&&(n=n.data),n.isGLBufferAttribute){const t=e.get(n);return void((!t||t.version<n.version)&&e.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version}))}const r=e.get(n);if(void 0===r)e.set(n,function(e,n){const i=e.array,r=e.usage,s=i.byteLength,a=t.createBuffer();let o;if(t.bindBuffer(n,a),t.bufferData(n,i,r),e.onUploadCallback(),i instanceof Float32Array)o=t.FLOAT;else if("undefined"!=typeof Float16Array&&i instanceof Float16Array)o=t.HALF_FLOAT;else if(i instanceof Uint16Array)o=e.isFloat16BufferAttribute?t.HALF_FLOAT:t.UNSIGNED_SHORT;else if(i instanceof Int16Array)o=t.SHORT;else if(i instanceof Uint32Array)o=t.UNSIGNED_INT;else if(i instanceof Int32Array)o=t.INT;else if(i instanceof Int8Array)o=t.BYTE;else if(i instanceof Uint8Array)o=t.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);o=t.UNSIGNED_BYTE}return{buffer:a,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version,size:s}}(n,i));else if(r.version<n.version){if(r.size!==n.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(e,n,i){const r=n.array,s=n.updateRanges;if(t.bindBuffer(i,e),0===s.length)t.bufferSubData(i,0,r);else{s.sort((t,e)=>t.start-e.start);let e=0;for(let t=1;t<s.length;t++){const n=s[e],i=s[t];i.start<=n.start+n.count+1?n.count=Math.max(n.count,i.start+i.count-n.start):(++e,s[e]=i)}s.length=e+1;for(let e=0,n=s.length;e<n;e++){const n=s[e];t.bufferSubData(i,n.start*r.BYTES_PER_ELEMENT,r,n.start,n.count)}n.clearUpdateRanges()}n.onUploadCallback()}(r.buffer,n,i),r.version=n.version}}}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:h}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=h);const $u={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\n\t\tint x = i % size;\n\t\tint y = i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\n\t\tint j = int( i );\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\n\t\temissiveColor = sRGBTransferEOTF( emissiveColor );\n\t#endif\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"vec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferEOTF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGARITHMIC_DEPTH_BUFFER\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGARITHMIC_DEPTH_BUFFER\n\tvFragDepth = 1.0 + gl_Position.w;\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af = modf( v * PackFactors.a, vuf );\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf = modf( v * PackFactors.b, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf = modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\tfloat depth = unpackRGBAToDepth( texture2D( depths, uv ) );\n\t\t#ifdef USE_REVERSED_DEPTH_BUFFER\n\t\t\treturn step( depth, compare );\n\t\t#else\n\t\t\treturn step( compare, depth );\n\t\t#endif\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow( sampler2D shadow, vec2 uv, float compare ) {\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\t#ifdef USE_REVERSED_DEPTH_BUFFER\n\t\t\tfloat hard_shadow = step( distribution.x, compare );\n\t\t#else\n\t\t\tfloat hard_shadow = step( compare, distribution.x );\n\t\t#endif\n\t\tif ( hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow = 1.0;\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength = length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow = (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression = 0.8 - 0.04;\n\tconst float Desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min( color.r, min( color.g, color.b ) );\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max( color.r, max( color.g, color.b ) );\n\tif ( peak < StartCompression ) return color;\n\tfloat d = 1. - StartCompression;\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords += 1.0;\n\t\t\t\trefractionCoords /= 2.0;\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /= 3.0;\n\t\t#else\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords += 1.0;\n\t\t\trefractionCoords /= 2.0;\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t#endif\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\t#ifdef USE_REVERSED_DEPTH_BUFFER\n\t\tfloat fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];\n\t#else\n\t\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;\n\t#endif\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING == 3202\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING == 3203\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix[ 3 ];\n\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},td={common:{diffuse:{value:new ls(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new di},alphaMap:{value:null},alphaMapTransform:{value:new di},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new di}},envmap:{envMap:{value:null},envMapRotation:{value:new di},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new di}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new di}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new di},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new di},normalScale:{value:new li(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new di},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new di}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new di}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new di}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ls(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ls(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new di},alphaTest:{value:0},uvTransform:{value:new di}},sprite:{diffuse:{value:new ls(16777215)},opacity:{value:1},center:{value:new li(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new di},alphaMap:{value:null},alphaMapTransform:{value:new di},alphaTest:{value:0}}},ed={basic:{uniforms:ta([td.common,td.specularmap,td.envmap,td.aomap,td.lightmap,td.fog]),vertexShader:$u.meshbasic_vert,fragmentShader:$u.meshbasic_frag},lambert:{uniforms:ta([td.common,td.specularmap,td.envmap,td.aomap,td.lightmap,td.emissivemap,td.bumpmap,td.normalmap,td.displacementmap,td.fog,td.lights,{emissive:{value:new ls(0)}}]),vertexShader:$u.meshlambert_vert,fragmentShader:$u.meshlambert_frag},phong:{uniforms:ta([td.common,td.specularmap,td.envmap,td.aomap,td.lightmap,td.emissivemap,td.bumpmap,td.normalmap,td.displacementmap,td.fog,td.lights,{emissive:{value:new ls(0)},specular:{value:new ls(1118481)},shininess:{value:30}}]),vertexShader:$u.meshphong_vert,fragmentShader:$u.meshphong_frag},standard:{uniforms:ta([td.common,td.envmap,td.aomap,td.lightmap,td.emissivemap,td.bumpmap,td.normalmap,td.displacementmap,td.roughnessmap,td.metalnessmap,td.fog,td.lights,{emissive:{value:new ls(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:$u.meshphysical_vert,fragmentShader:$u.meshphysical_frag},toon:{uniforms:ta([td.common,td.aomap,td.lightmap,td.emissivemap,td.bumpmap,td.normalmap,td.displacementmap,td.gradientmap,td.fog,td.lights,{emissive:{value:new ls(0)}}]),vertexShader:$u.meshtoon_vert,fragmentShader:$u.meshtoon_frag},matcap:{uniforms:ta([td.common,td.bumpmap,td.normalmap,td.displacementmap,td.fog,{matcap:{value:null}}]),vertexShader:$u.meshmatcap_vert,fragmentShader:$u.meshmatcap_frag},points:{uniforms:ta([td.points,td.fog]),vertexShader:$u.points_vert,fragmentShader:$u.points_frag},dashed:{uniforms:ta([td.common,td.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:$u.linedashed_vert,fragmentShader:$u.linedashed_frag},depth:{uniforms:ta([td.common,td.displacementmap]),vertexShader:$u.depth_vert,fragmentShader:$u.depth_frag},normal:{uniforms:ta([td.common,td.bumpmap,td.normalmap,td.displacementmap,{opacity:{value:1}}]),vertexShader:$u.meshnormal_vert,fragmentShader:$u.meshnormal_frag},sprite:{uniforms:ta([td.sprite,td.fog]),vertexShader:$u.sprite_vert,fragmentShader:$u.sprite_frag},background:{uniforms:{uvTransform:{value:new di},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:$u.background_vert,fragmentShader:$u.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new di}},vertexShader:$u.backgroundCube_vert,fragmentShader:$u.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:$u.cube_vert,fragmentShader:$u.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:$u.equirect_vert,fragmentShader:$u.equirect_frag},distanceRGBA:{uniforms:ta([td.common,td.displacementmap,{referencePosition:{value:new hi},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:$u.distanceRGBA_vert,fragmentShader:$u.distanceRGBA_frag},shadow:{uniforms:ta([td.lights,td.fog,{color:{value:new ls(0)},opacity:{value:1}}]),vertexShader:$u.shadow_vert,fragmentShader:$u.shadow_frag}};ed.physical={uniforms:ta([ed.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new di},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new di},clearcoatNormalScale:{value:new li(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new di},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new di},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new di},sheen:{value:0},sheenColor:{value:new ls(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new di},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new di},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new di},transmissionSamplerSize:{value:new li},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new di},attenuationDistance:{value:0},attenuationColor:{value:new ls(0)},specularColor:{value:new ls(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new di},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new di},anisotropyVector:{value:new li},anisotropyMap:{value:null},anisotropyMapTransform:{value:new di}}]),vertexShader:$u.meshphysical_vert,fragmentShader:$u.meshphysical_frag};const nd={r:0,b:0,g:0},id=new br,rd=new fr;function sd(t,e,n,i,r,s,a){const o=new ls(0);let l,c,h=!0===s?0:1,A=null,u=0,d=null;function p(t){let i=!0===t.isScene?t.background:null;return i&&i.isTexture&&(i=(t.backgroundBlurriness>0?n:e).get(i)),i}function g(e,n){e.getRGB(nd,ea(t)),i.buffers.color.setClear(nd.r,nd.g,nd.b,n,a)}return{getClearColor:function(){return o},setClearColor:function(t,e=1){o.set(t),h=e,g(o,h)},getClearAlpha:function(){return h},setClearAlpha:function(t){h=t,g(o,h)},render:function(e){let n=!1;const r=p(e);null===r?g(o,h):r&&r.isColor&&(g(r,1),n=!0);const s=t.xr.getEnvironmentBlendMode();"additive"===s?i.buffers.color.setClear(0,0,0,1,a):"alpha-blend"===s&&i.buffers.color.setClear(0,0,0,0,a),(t.autoClear||n)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil))},addToRenderList:function(e,n){const i=p(n);i&&(i.isCubeTexture||i.mapping===It)?(void 0===c&&(c=new Xs(new Zs(1,1,1),new ia({name:"BackgroundCubeMaterial",uniforms:$s(ed.backgroundCube.uniforms),vertexShader:ed.backgroundCube.vertexShader,fragmentShader:ed.backgroundCube.fragmentShader,side:I,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(c)),id.copy(n.backgroundRotation),id.x*=-1,id.y*=-1,id.z*=-1,i.isCubeTexture&&!1===i.isRenderTargetTexture&&(id.y*=-1,id.z*=-1),c.material.uniforms.envMap.value=i,c.material.uniforms.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,c.material.uniforms.backgroundBlurriness.value=n.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,c.material.uniforms.backgroundRotation.value.setFromMatrix4(rd.makeRotationFromEuler(id)),c.material.toneMapped=_i.getTransfer(i.colorSpace)!==cn,A===i&&u===i.version&&d===t.toneMapping||(c.material.needsUpdate=!0,A=i,u=i.version,d=t.toneMapping),c.layers.enableAll(),e.unshift(c,c.geometry,c.material,0,0,null)):i&&i.isTexture&&(void 0===l&&(l=new Xs(new Dc(2,2),new ia({name:"BackgroundMaterial",uniforms:$s(ed.background.uniforms),vertexShader:ed.background.vertexShader,fragmentShader:ed.background.fragmentShader,side:C,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(l)),l.material.uniforms.t2D.value=i,l.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,l.material.toneMapped=_i.getTransfer(i.colorSpace)!==cn,!0===i.matrixAutoUpdate&&i.updateMatrix(),l.material.uniforms.uvTransform.value.copy(i.matrix),A===i&&u===i.version&&d===t.toneMapping||(l.material.needsUpdate=!0,A=i,u=i.version,d=t.toneMapping),l.layers.enableAll(),e.unshift(l,l.geometry,l.material,0,0,null))},dispose:function(){void 0!==c&&(c.geometry.dispose(),c.material.dispose(),c=void 0),void 0!==l&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}}}function ad(t,e){const n=t.getParameter(t.MAX_VERTEX_ATTRIBS),i={},r=c(null);let s=r,a=!1;function o(e){return t.bindVertexArray(e)}function l(e){return t.deleteVertexArray(e)}function c(t){const e=[],i=[],r=[];for(let t=0;t<n;t++)e[t]=0,i[t]=0,r[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:i,attributeDivisors:r,object:t,attributes:{},index:null}}function h(){const t=s.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function A(t){u(t,0)}function u(e,n){const i=s.newAttributes,r=s.enabledAttributes,a=s.attributeDivisors;i[e]=1,0===r[e]&&(t.enableVertexAttribArray(e),r[e]=1),a[e]!==n&&(t.vertexAttribDivisor(e,n),a[e]=n)}function d(){const e=s.newAttributes,n=s.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function p(e,n,i,r,s,a,o){!0===o?t.vertexAttribIPointer(e,n,i,s,a):t.vertexAttribPointer(e,n,i,r,s,a)}function g(){f(),a=!0,s!==r&&(s=r,o(s.object))}function f(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:function(n,r,l,g,f){let m=!1;const y=function(e,n,r){const s=!0===r.wireframe;let a=i[e.id];void 0===a&&(a={},i[e.id]=a);let o=a[n.id];void 0===o&&(o={},a[n.id]=o);let l=o[s];return void 0===l&&(l=c(t.createVertexArray()),o[s]=l),l}(g,l,r);s!==y&&(s=y,o(s.object)),m=function(t,e,n,i){const r=s.attributes,a=e.attributes;let o=0;const l=n.getAttributes();for(const e in l)if(l[e].location>=0){const n=r[e];let i=a[e];if(void 0===i&&("instanceMatrix"===e&&t.instanceMatrix&&(i=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(i=t.instanceColor)),void 0===n)return!0;if(n.attribute!==i)return!0;if(i&&n.data!==i.data)return!0;o++}return s.attributesNum!==o||s.index!==i}(n,g,l,f),m&&function(t,e,n,i){const r={},a=e.attributes;let o=0;const l=n.getAttributes();for(const e in l)if(l[e].location>=0){let n=a[e];void 0===n&&("instanceMatrix"===e&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(n=t.instanceColor));const i={};i.attribute=n,n&&n.data&&(i.data=n.data),r[e]=i,o++}s.attributes=r,s.attributesNum=o,s.index=i}(n,g,l,f),null!==f&&e.update(f,t.ELEMENT_ARRAY_BUFFER),(m||a)&&(a=!1,function(n,i,r,s){h();const a=s.attributes,o=r.getAttributes(),l=i.defaultAttributeValues;for(const i in o){const r=o[i];if(r.location>=0){let o=a[i];if(void 0===o&&("instanceMatrix"===i&&n.instanceMatrix&&(o=n.instanceMatrix),"instanceColor"===i&&n.instanceColor&&(o=n.instanceColor)),void 0!==o){const i=o.normalized,a=o.itemSize,l=e.get(o);if(void 0===l)continue;const c=l.buffer,h=l.type,d=l.bytesPerElement,g=h===t.INT||h===t.UNSIGNED_INT||o.gpuType===Ot;if(o.isInterleavedBufferAttribute){const e=o.data,l=e.stride,f=o.offset;if(e.isInstancedInterleavedBuffer){for(let t=0;t<r.locationSize;t++)u(r.location+t,e.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=e.meshPerAttribute*e.count)}else for(let t=0;t<r.locationSize;t++)A(r.location+t);t.bindBuffer(t.ARRAY_BUFFER,c);for(let t=0;t<r.locationSize;t++)p(r.location+t,a/r.locationSize,h,i,l*d,(f+a/r.locationSize*t)*d,g)}else{if(o.isInstancedBufferAttribute){for(let t=0;t<r.locationSize;t++)u(r.location+t,o.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let t=0;t<r.locationSize;t++)A(r.location+t);t.bindBuffer(t.ARRAY_BUFFER,c);for(let t=0;t<r.locationSize;t++)p(r.location+t,a/r.locationSize,h,i,a*d,a/r.locationSize*t*d,g)}}else if(void 0!==l){const e=l[i];if(void 0!==e)switch(e.length){case 2:t.vertexAttrib2fv(r.location,e);break;case 3:t.vertexAttrib3fv(r.location,e);break;case 4:t.vertexAttrib4fv(r.location,e);break;default:t.vertexAttrib1fv(r.location,e)}}}}d()}(n,r,l,g),null!==f&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.get(f).buffer))},reset:g,resetDefaultState:f,dispose:function(){g();for(const t in i){const e=i[t];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete i[t]}},releaseStatesOfGeometry:function(t){if(void 0===i[t.id])return;const e=i[t.id];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete i[t.id]},releaseStatesOfProgram:function(t){for(const e in i){const n=i[e];if(void 0===n[t.id])continue;const r=n[t.id];for(const t in r)l(r[t].object),delete r[t];delete n[t.id]}},initAttributes:h,enableAttribute:A,disableUnusedAttributes:d}}function od(t,e,n){let i;function r(e,r,s){0!==s&&(t.drawArraysInstanced(i,e,r,s),n.update(r,i,s))}this.setMode=function(t){i=t},this.render=function(e,r){t.drawArrays(i,e,r),n.update(r,i,1)},this.renderInstances=r,this.renderMultiDraw=function(t,r,s){if(0===s)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,t,0,r,0,s);let a=0;for(let t=0;t<s;t++)a+=r[t];n.update(a,i,1)},this.renderMultiDrawInstances=function(t,s,a,o){if(0===a)return;const l=e.get("WEBGL_multi_draw");if(null===l)for(let e=0;e<t.length;e++)r(t[e],s[e],o[e]);else{l.multiDrawArraysInstancedWEBGL(i,t,0,s,0,o,0,a);let e=0;for(let t=0;t<a;t++)e+=s[t]*o[t];n.update(e,i,1)}}}function ld(t,e,n,i){let r;function s(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a=void 0!==n.precision?n.precision:"highp";const o=s(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=!0===n.logarithmicDepthBuffer,c=!0===n.reversedDepthBuffer&&e.has("EXT_clip_control"),h=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),A=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");r=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:s,textureFormatReadable:function(e){return e===Kt||i.convert(e)===t.getParameter(t.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(n){const r=n===Ht&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(n!==Lt&&i.convert(n)!==t.getParameter(t.IMPLEMENTATION_COLOR_READ_TYPE)&&n!==Gt&&!r)},precision:a,logarithmicDepthBuffer:l,reversedDepthBuffer:c,maxTextures:h,maxVertexTextures:A,maxTextureSize:t.getParameter(t.MAX_TEXTURE_SIZE),maxCubemapSize:t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes:t.getParameter(t.MAX_VERTEX_ATTRIBS),maxVertexUniforms:t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings:t.getParameter(t.MAX_VARYING_VECTORS),maxFragmentUniforms:t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:A>0,maxSamples:t.getParameter(t.MAX_SAMPLES)}}function cd(t){const e=this;let n=null,i=0,r=!1,s=!1;const a=new go,o=new di,l={value:null,needsUpdate:!1};function c(t,n,i,r){const s=null!==t?t.length:0;let c=null;if(0!==s){if(c=l.value,!0!==r||null===c){const e=i+4*s,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===c||c.length<e)&&(c=new Float32Array(e));for(let e=0,n=i;e!==s;++e,n+=4)a.copy(t[e]).applyMatrix4(r,o),a.normal.toArray(c,n),c[n+3]=a.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=s,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e){const n=0!==t.length||e||0!==i||r;return r=e,i=t.length,n},this.beginShadows=function(){s=!0,c(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(t,e){n=c(t,e,0)},this.setState=function(a,o,h){const A=a.clippingPlanes,u=a.clipIntersection,d=a.clipShadows,p=t.get(a);if(!r||null===A||0===A.length||s&&!d)s?c(null):(l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0);else{const t=s?0:i,e=4*t;let r=p.clippingState||null;l.value=r,r=c(A,o,e,h);for(let t=0;t!==e;++t)r[t]=n[t];p.clippingState=r,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=t}}}function hd(t){let e=new WeakMap;function n(t,e){return e===xt?t.mapping=yt:e===Ct&&(t.mapping=vt),t}function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const s=r.mapping;if(s===xt||s===Ct){if(e.has(r))return n(e.get(r).texture,r.mapping);{const s=r.image;if(s&&s.height>0){const a=new ua(s.height);return a.fromEquirectangularTexture(t,r),e.set(r,a),r.addEventListener("dispose",i),n(a.texture,r.mapping)}return null}}}return r},dispose:function(){e=new WeakMap}}}const Ad=[.125,.215,.35,.446,.526,.582],ud=new Jh,dd=new ls;let pd=null,gd=0,fd=0,md=!1;const yd=(1+Math.sqrt(5))/2,vd=1/yd,xd=[new hi(-yd,vd,0),new hi(yd,vd,0),new hi(-vd,0,yd),new hi(vd,0,yd),new hi(0,yd,-vd),new hi(0,yd,vd),new hi(-1,1,-1),new hi(1,1,-1),new hi(-1,1,1),new hi(1,1,1)],Cd=new hi;class Id{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100,r={}){const{size:s=256,position:a=Cd}=r;pd=this._renderer.getRenderTarget(),gd=this._renderer.getActiveCubeFace(),fd=this._renderer.getActiveMipmapLevel(),md=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(s);const o=this._allocateTargets();return o.depthBuffer=!0,this._sceneToCubeUV(t,n,i,o,a),e>0&&this._blur(o,0,0,e),this._applyPMREM(o),this._cleanup(o),o}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=bd(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=_d(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(pd,gd,fd),this._renderer.xr.enabled=md,t.scissorTest=!1,wd(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===yt||t.mapping===vt?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),pd=this._renderer.getRenderTarget(),gd=this._renderer.getActiveCubeFace(),fd=this._renderer.getActiveMipmapLevel(),md=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:Qt,minFilter:Qt,generateMipmaps:!1,type:Ht,format:Kt,colorSpace:on,depthBuffer:!1},i=Ed(t,e,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Ed(t,e,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],n=[],i=[];let r=t;const s=t-4+1+Ad.length;for(let a=0;a<s;a++){const s=Math.pow(2,r);n.push(s);let o=1/s;a>t-4?o=Ad[a-t+4-1]:0===a&&(o=0),i.push(o);const l=1/(s-2),c=-l,h=1+l,A=[c,c,h,c,h,h,c,c,h,h,c,h],u=6,d=6,p=3,g=2,f=1,m=new Float32Array(p*d*u),y=new Float32Array(g*d*u),v=new Float32Array(f*d*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];m.set(i,p*d*t),y.set(A,g*d*t);const r=[t,t,t,t,t,t];v.set(r,f*d*t)}const x=new Ns;x.setAttribute("position",new Cs(m,p)),x.setAttribute("uv",new Cs(y,g)),x.setAttribute("faceIndex",new Cs(v,f)),e.push(x),r>4&&r--}return{lodPlanes:e,sizeLods:n,sigmas:i}}(i)),this._blurMaterial=function(t,e,n){const i=new Float32Array(20),r=new hi(0,1,0);return new ia({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:w,depthTest:!1,depthWrite:!1})}(i,t,e)}return i}_compileMaterial(t){const e=new Xs(this._lodPlanes[0],t);this._renderer.compile(e,ud)}_sceneToCubeUV(t,e,n,i,r){const s=new la(90,1,e,n),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],l=this._renderer,c=l.autoClear,h=l.toneMapping;l.getClearColor(dd),l.toneMapping=ot,l.autoClear=!1,l.state.buffers.depth.getReversed()&&(l.setRenderTarget(i),l.clearDepth(),l.setRenderTarget(null));const A=new us({name:"PMREM.Background",side:I,depthWrite:!1,depthTest:!1}),u=new Xs(new Zs,A);let d=!1;const p=t.background;p?p.isColor&&(A.color.copy(p),t.background=null,d=!0):(A.color.copy(dd),d=!0);for(let e=0;e<6;e++){const n=e%3;0===n?(s.up.set(0,a[e],0),s.position.set(r.x,r.y,r.z),s.lookAt(r.x+o[e],r.y,r.z)):1===n?(s.up.set(0,0,a[e]),s.position.set(r.x,r.y,r.z),s.lookAt(r.x,r.y+o[e],r.z)):(s.up.set(0,a[e],0),s.position.set(r.x,r.y,r.z),s.lookAt(r.x,r.y,r.z+o[e]));const c=this._cubeSize;wd(i,n*c,e>2?c:0,c,c),l.setRenderTarget(i),d&&l.render(u,s),l.render(t,s)}u.geometry.dispose(),u.material.dispose(),l.toneMapping=h,l.autoClear=c,t.background=p}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===yt||t.mapping===vt;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=bd()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=_d());const r=i?this._cubemapMaterial:this._equirectMaterial,s=new Xs(this._lodPlanes[0],r);r.uniforms.envMap.value=t;const a=this._cubeSize;wd(e,0,0,3*a,2*a),n.setRenderTarget(e),n.render(s,ud)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let e=1;e<i;e++){const n=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),r=xd[(i-e-1)%xd.length];this._blur(t,e-1,e,n,r)}e.autoClear=n}_blur(t,e,n,i,r){const s=this._pingPongRenderTarget;this._halfBlur(t,s,e,n,i,"latitudinal",r),this._halfBlur(s,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,s,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new Xs(this._lodPlanes[i],l),h=l.uniforms,A=this._sizeLods[n]-1,u=isFinite(r)?Math.PI/(2*A):2*Math.PI/39,d=r/u,p=isFinite(r)?1+Math.floor(3*d):20;p>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${p} samples when the maximum is set to 20`);const g=[];let f=0;for(let t=0;t<20;++t){const e=t/d,n=Math.exp(-e*e/2);g.push(n),0===t?f+=n:t<p&&(f+=2*n)}for(let t=0;t<g.length;t++)g[t]=g[t]/f;h.envMap.value=t.texture,h.samples.value=p,h.weights.value=g,h.latitudinal.value="latitudinal"===s,a&&(h.poleAxis.value=a);const{_lodMax:m}=this;h.dTheta.value=u,h.mipInt.value=m-n;const y=this._sizeLods[i];wd(e,3*y*(i>m-4?i-m+4:0),4*(this._cubeSize-y),3*y,2*y),o.setRenderTarget(e),o.render(c,ud)}}function Ed(t,e,n){const i=new Ni(t,e,n);return i.texture.mapping=It,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function wd(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function _d(){return new ia({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:w,depthTest:!1,depthWrite:!1})}function bd(){return new ia({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:w,depthTest:!1,depthWrite:!1})}function Bd(t){let e=new WeakMap,n=null;function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const s=r.mapping,a=s===xt||s===Ct,o=s===yt||s===vt;if(a||o){let s=e.get(r);const l=void 0!==s?s.texture.pmremVersion:0;if(r.isRenderTargetTexture&&r.pmremVersion!==l)return null===n&&(n=new Id(t)),s=a?n.fromEquirectangular(r,s):n.fromCubemap(r,s),s.texture.pmremVersion=r.pmremVersion,e.set(r,s),s.texture;if(void 0!==s)return s.texture;{const l=r.image;return a&&l&&l.height>0||o&&l&&function(t){let e=0;for(let n=0;n<6;n++)void 0!==t[n]&&e++;return 6===e}(l)?(null===n&&(n=new Id(t)),s=a?n.fromEquirectangular(r):n.fromCubemap(r),s.texture.pmremVersion=r.pmremVersion,e.set(r,s),r.addEventListener("dispose",i),s.texture):null}}}return r},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function Sd(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(t){const e=n(t);return null===e&&Ci("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Md(t,e,n,i){const r={},s=new WeakMap;function a(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);o.removeEventListener("dispose",a),delete r[o.id];const l=s.get(o);l&&(e.remove(l),s.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,r=t.attributes.position;let a=0;if(null!==i){const t=i.array;a=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],r=t[e+1],s=t[e+2];n.push(i,r,r,s,s,i)}}else{if(void 0===r)return;{const t=r.array;a=r.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,r=e+2;n.push(t,i,i,r,r,t)}}}const o=new(gi(n)?Ss:bs)(n,1);o.version=a;const l=s.get(t);l&&e.remove(l),s.set(t,o)}return{get:function(t,e){return!0===r[e.id]||(e.addEventListener("dispose",a),r[e.id]=!0,n.memory.geometries++),e},update:function(n){const i=n.attributes;for(const n in i)e.update(i[n],t.ARRAY_BUFFER)},getWireframeAttribute:function(t){const e=s.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return s.get(t)}}}function Td(t,e,n){let i,r,s;function a(e,a,o){0!==o&&(t.drawElementsInstanced(i,a,r,e*s,o),n.update(a,i,o))}this.setMode=function(t){i=t},this.setIndex=function(t){r=t.type,s=t.bytesPerElement},this.render=function(e,a){t.drawElements(i,a,r,e*s),n.update(a,i,1)},this.renderInstances=a,this.renderMultiDraw=function(t,s,a){if(0===a)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,s,0,r,t,0,a);let o=0;for(let t=0;t<a;t++)o+=s[t];n.update(o,i,1)},this.renderMultiDrawInstances=function(t,o,l,c){if(0===l)return;const h=e.get("WEBGL_multi_draw");if(null===h)for(let e=0;e<t.length;e++)a(t[e]/s,o[e],c[e]);else{h.multiDrawElementsInstancedWEBGL(i,o,0,r,t,0,c,0,l);let e=0;for(let t=0;t<l;t++)e+=o[t]*c[t];n.update(e,i,1)}}}function Qd(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(n,i,r){switch(e.calls++,i){case t.TRIANGLES:e.triangles+=r*(n/3);break;case t.LINES:e.lines+=r*(n/2);break;case t.LINE_STRIP:e.lines+=r*(n-1);break;case t.LINE_LOOP:e.lines+=r*n;break;case t.POINTS:e.points+=r*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function Dd(t,e,n){const i=new WeakMap,r=new Li;return{update:function(s,a,o){const l=s.morphTargetInfluences,c=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,h=void 0!==c?c.length:0;let A=i.get(a);if(void 0===A||A.count!==h){void 0!==A&&A.texture.dispose();const u=void 0!==a.morphAttributes.position,d=void 0!==a.morphAttributes.normal,p=void 0!==a.morphAttributes.color,g=a.morphAttributes.position||[],f=a.morphAttributes.normal||[],m=a.morphAttributes.color||[];let y=0;!0===u&&(y=1),!0===d&&(y=2),!0===p&&(y=3);let v=a.attributes.position.count*y,x=1;v>e.maxTextureSize&&(x=Math.ceil(v/e.maxTextureSize),v=e.maxTextureSize);const C=new Float32Array(v*x*4*h),I=new ki(C,v,x,h);I.type=Gt,I.needsUpdate=!0;const E=4*y;for(let _=0;_<h;_++){const b=g[_],B=f[_],S=m[_],M=v*x*4*_;for(let T=0;T<b.count;T++){const Q=T*E;!0===u&&(r.fromBufferAttribute(b,T),C[M+Q+0]=r.x,C[M+Q+1]=r.y,C[M+Q+2]=r.z,C[M+Q+3]=0),!0===d&&(r.fromBufferAttribute(B,T),C[M+Q+4]=r.x,C[M+Q+5]=r.y,C[M+Q+6]=r.z,C[M+Q+7]=0),!0===p&&(r.fromBufferAttribute(S,T),C[M+Q+8]=r.x,C[M+Q+9]=r.y,C[M+Q+10]=r.z,C[M+Q+11]=4===S.itemSize?r.w:1)}}function w(){I.dispose(),i.delete(a),a.removeEventListener("dispose",w)}A={count:h,texture:I,size:new li(v,x)},i.set(a,A),a.addEventListener("dispose",w)}if(!0===s.isInstancedMesh&&null!==s.morphTexture)o.getUniforms().setValue(t,"morphTexture",s.morphTexture,n);else{let D=0;for(let U=0;U<l.length;U++)D+=l[U];const R=a.morphTargetsRelative?1:1-D;o.getUniforms().setValue(t,"morphTargetBaseInfluence",R),o.getUniforms().setValue(t,"morphTargetInfluences",l)}o.getUniforms().setValue(t,"morphTargetsTexture",A.texture,n),o.getUniforms().setValue(t,"morphTargetsTextureSize",A.size)}}}function Rd(t,e,n,i){let r=new WeakMap;function s(t){const e=t.target;e.removeEventListener("dispose",s),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(a){const o=i.render.frame,l=a.geometry,c=e.get(a,l);if(r.get(c)!==o&&(e.update(c),r.set(c,o)),a.isInstancedMesh&&(!1===a.hasEventListener("dispose",s)&&a.addEventListener("dispose",s),r.get(a)!==o&&(n.update(a.instanceMatrix,t.ARRAY_BUFFER),null!==a.instanceColor&&n.update(a.instanceColor,t.ARRAY_BUFFER),r.set(a,o))),a.isSkinnedMesh){const t=a.skeleton;r.get(t)!==o&&(t.update(),r.set(t,o))}return c},dispose:function(){r=new WeakMap}}}const Ud=new Pi,Pd=new fl(1,1),Ld=new ki,Fd=new zi,Nd=new Aa,kd=[],Od=[],zd=new Float32Array(16),Gd=new Float32Array(9),Hd=new Float32Array(4);function Vd(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let s=kd[r];if(void 0===s&&(s=new Float32Array(r),kd[r]=s),0!==e){i.toArray(s,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(s,r)}return s}function qd(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Yd(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function Wd(t,e){let n=Od[e];void 0===n&&(n=new Int32Array(e),Od[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function Jd(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function jd(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(qd(n,e))return;t.uniform2fv(this.addr,e),Yd(n,e)}}function Xd(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(qd(n,e))return;t.uniform3fv(this.addr,e),Yd(n,e)}}function Kd(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(qd(n,e))return;t.uniform4fv(this.addr,e),Yd(n,e)}}function Zd(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(qd(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Yd(n,e)}else{if(qd(n,i))return;Hd.set(i),t.uniformMatrix2fv(this.addr,!1,Hd),Yd(n,i)}}function $d(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(qd(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Yd(n,e)}else{if(qd(n,i))return;Gd.set(i),t.uniformMatrix3fv(this.addr,!1,Gd),Yd(n,i)}}function tp(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(qd(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Yd(n,e)}else{if(qd(n,i))return;zd.set(i),t.uniformMatrix4fv(this.addr,!1,zd),Yd(n,i)}}function ep(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function np(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(qd(n,e))return;t.uniform2iv(this.addr,e),Yd(n,e)}}function ip(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(qd(n,e))return;t.uniform3iv(this.addr,e),Yd(n,e)}}function rp(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(qd(n,e))return;t.uniform4iv(this.addr,e),Yd(n,e)}}function sp(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function ap(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(qd(n,e))return;t.uniform2uiv(this.addr,e),Yd(n,e)}}function op(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(qd(n,e))return;t.uniform3uiv(this.addr,e),Yd(n,e)}}function lp(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(qd(n,e))return;t.uniform4uiv(this.addr,e),Yd(n,e)}}function cp(t,e,n){const i=this.cache,r=n.allocateTextureUnit();let s;i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),this.type===t.SAMPLER_2D_SHADOW?(Pd.compareFunction=Mn,s=Pd):s=Ud,n.setTexture2D(e||s,r)}function hp(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||Fd,r)}function Ap(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(e||Nd,r)}function up(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||Ld,r)}function dp(t,e){t.uniform1fv(this.addr,e)}function pp(t,e){const n=Vd(e,this.size,2);t.uniform2fv(this.addr,n)}function gp(t,e){const n=Vd(e,this.size,3);t.uniform3fv(this.addr,n)}function fp(t,e){const n=Vd(e,this.size,4);t.uniform4fv(this.addr,n)}function mp(t,e){const n=Vd(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function yp(t,e){const n=Vd(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function vp(t,e){const n=Vd(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function xp(t,e){t.uniform1iv(this.addr,e)}function Cp(t,e){t.uniform2iv(this.addr,e)}function Ip(t,e){t.uniform3iv(this.addr,e)}function Ep(t,e){t.uniform4iv(this.addr,e)}function wp(t,e){t.uniform1uiv(this.addr,e)}function _p(t,e){t.uniform2uiv(this.addr,e)}function bp(t,e){t.uniform3uiv(this.addr,e)}function Bp(t,e){t.uniform4uiv(this.addr,e)}function Sp(t,e,n){const i=this.cache,r=e.length,s=Wd(n,r);qd(i,s)||(t.uniform1iv(this.addr,s),Yd(i,s));for(let t=0;t!==r;++t)n.setTexture2D(e[t]||Ud,s[t])}function Mp(t,e,n){const i=this.cache,r=e.length,s=Wd(n,r);qd(i,s)||(t.uniform1iv(this.addr,s),Yd(i,s));for(let t=0;t!==r;++t)n.setTexture3D(e[t]||Fd,s[t])}function Tp(t,e,n){const i=this.cache,r=e.length,s=Wd(n,r);qd(i,s)||(t.uniform1iv(this.addr,s),Yd(i,s));for(let t=0;t!==r;++t)n.setTextureCube(e[t]||Nd,s[t])}function Qp(t,e,n){const i=this.cache,r=e.length,s=Wd(n,r);qd(i,s)||(t.uniform1iv(this.addr,s),Yd(i,s));for(let t=0;t!==r;++t)n.setTexture2DArray(e[t]||Ld,s[t])}class Dp{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=function(t){switch(t){case 5126:return Jd;case 35664:return jd;case 35665:return Xd;case 35666:return Kd;case 35674:return Zd;case 35675:return $d;case 35676:return tp;case 5124:case 35670:return ep;case 35667:case 35671:return np;case 35668:case 35672:return ip;case 35669:case 35673:return rp;case 5125:return sp;case 36294:return ap;case 36295:return op;case 36296:return lp;case 35678:case 36198:case 36298:case 36306:case 35682:return cp;case 35679:case 36299:case 36307:return hp;case 35680:case 36300:case 36308:case 36293:return Ap;case 36289:case 36303:case 36311:case 36292:return up}}(e.type)}}class Rp{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=function(t){switch(t){case 5126:return dp;case 35664:return pp;case 35665:return gp;case 35666:return fp;case 35674:return mp;case 35675:return yp;case 35676:return vp;case 5124:case 35670:return xp;case 35667:case 35671:return Cp;case 35668:case 35672:return Ip;case 35669:case 35673:return Ep;case 5125:return wp;case 36294:return _p;case 36295:return bp;case 36296:return Bp;case 35678:case 36198:case 36298:case 36306:case 35682:return Sp;case 35679:case 36299:case 36307:return Mp;case 35680:case 36300:case 36308:case 36293:return Tp;case 36289:case 36303:case 36311:case 36292:return Qp}}(e.type)}}class Up{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const s=i[r];s.setValue(t,e[s.id],n)}}}const Pp=/(\w+)(\])?(\[|\.)?/g;function Lp(t,e){t.seq.push(e),t.map[e.id]=e}function Fp(t,e,n){const i=t.name,r=i.length;for(Pp.lastIndex=0;;){const s=Pp.exec(i),a=Pp.lastIndex;let o=s[1];const l="]"===s[2],c=s[3];if(l&&(o|=0),void 0===c||"["===c&&a+2===r){Lp(n,void 0===c?new Dp(o,t,e):new Rp(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new Up(o),Lp(n,t)),n=t}}}class Np{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);Fp(n,t.getUniformLocation(e,n.name),this)}}setValue(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,s=e.length;r!==s;++r){const s=e[r],a=n[s.id];!1!==a.needsUpdate&&s.setValue(t,a.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const r=t[i];r.id in e&&n.push(r)}return n}}function kp(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let Op=0;const zp=new di;function Gp(t,e,n){const i=t.getShaderParameter(e,t.COMPILE_STATUS),r=(t.getShaderInfoLog(e)||"").trim();if(i&&""===r)return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const i=parseInt(s[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+function(t,e){const n=t.split("\n"),i=[],r=Math.max(e-6,0),s=Math.min(e+6,n.length);for(let t=r;t<s;t++){const r=t+1;i.push(`${r===e?">":" "} ${r}: ${n[t]}`)}return i.join("\n")}(t.getShaderSource(e),i)}return r}function Hp(t,e){const n=function(t){_i._getMatrix(zp,_i.workingColorSpace,t);const e=`mat3( ${zp.elements.map(t=>t.toFixed(4))} )`;switch(_i.getTransfer(t)){case ln:return[e,"LinearTransferOETF"];case cn:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",t),[e,"LinearTransferOETF"]}}(e);return[`vec4 ${t}( vec4 value ) {`,`\treturn ${n[1]}( vec4( value.rgb * ${n[0]}, value.a ) );`,"}"].join("\n")}function Vp(t,e){let n;switch(e){case lt:n="Linear";break;case ct:n="Reinhard";break;case ht:n="Cineon";break;case At:n="ACESFilmic";break;case dt:n="AgX";break;case pt:n="Neutral";break;case ut:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}const qp=new hi;function Yp(t){return""!==t}function Wp(t,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Jp(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const jp=/^[ \t]*#include +<([\w\d./]+)>/gm;function Xp(t){return t.replace(jp,Zp)}const Kp=new Map;function Zp(t,e){let n=$u[e];if(void 0===n){const t=Kp.get(e);if(void 0===t)throw new Error("Can not resolve #include <"+e+">");n=$u[t],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,t)}return Xp(n)}const $p=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function tg(t){return t.replace($p,eg)}function eg(t,e,n,i){let r="";for(let t=parseInt(e);t<parseInt(n);t++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function ng(t){let e=`precision ${t.precision} float;\n\tprecision ${t.precision} int;\n\tprecision ${t.precision} sampler2D;\n\tprecision ${t.precision} samplerCube;\n\tprecision ${t.precision} sampler3D;\n\tprecision ${t.precision} sampler2DArray;\n\tprecision ${t.precision} sampler2DShadow;\n\tprecision ${t.precision} samplerCubeShadow;\n\tprecision ${t.precision} sampler2DArrayShadow;\n\tprecision ${t.precision} isampler2D;\n\tprecision ${t.precision} isampler3D;\n\tprecision ${t.precision} isamplerCube;\n\tprecision ${t.precision} isampler2DArray;\n\tprecision ${t.precision} usampler2D;\n\tprecision ${t.precision} usampler3D;\n\tprecision ${t.precision} usamplerCube;\n\tprecision ${t.precision} usampler2DArray;\n\t`;return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function ig(t,e,n,i){const r=t.getContext(),s=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===y?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===v?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===x&&(e="SHADOWMAP_TYPE_VSM"),e}(n),c=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case yt:case vt:e="ENVMAP_TYPE_CUBE";break;case It:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),h=function(t){let e="ENVMAP_MODE_REFLECTION";return t.envMap&&t.envMapMode===vt&&(e="ENVMAP_MODE_REFRACTION"),e}(n),A=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case rt:e="ENVMAP_BLENDING_MULTIPLY";break;case st:e="ENVMAP_BLENDING_MIX";break;case at:e="ENVMAP_BLENDING_ADD"}return e}(n),u=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),d=function(t){return[t.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",t.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Yp).join("\n")}(n),p=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(s),g=r.createProgram();let f,m,C=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(f=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,p].filter(Yp).join("\n"),f.length>0&&(f+="\n"),m=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,p].filter(Yp).join("\n"),m.length>0&&(m+="\n")):(f=[ng(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,p,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",n.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Yp).join("\n"),m=[ng(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,p,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.envMap?"#define "+A:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",n.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",n.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==ot?"#define TONE_MAPPING":"",n.toneMapping!==ot?$u.tonemapping_pars_fragment:"",n.toneMapping!==ot?Vp("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",$u.colorspace_pars_fragment,Hp("linearToOutputTexel",n.outputColorSpace),(_i.getLuminanceCoefficients(qp),["float luminance( const in vec3 rgb ) {",`\tconst vec3 weights = vec3( ${qp.x.toFixed(4)}, ${qp.y.toFixed(4)}, ${qp.z.toFixed(4)} );`,"\treturn dot( weights, rgb );","}"].join("\n")),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Yp).join("\n")),a=Xp(a),a=Wp(a,n),a=Jp(a,n),o=Xp(o),o=Wp(o,n),o=Jp(o,n),a=tg(a),o=tg(o),!0!==n.isRawShaderMaterial&&(C="#version 300 es\n",f=[d,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+f,m=["#define varying in",n.glslVersion===Vn?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Vn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+m);const I=C+f+a,E=C+m+o,w=kp(r,r.VERTEX_SHADER,I),_=kp(r,r.FRAGMENT_SHADER,E);function b(e){if(t.debug.checkShaderErrors){const n=r.getProgramInfoLog(g)||"",i=r.getShaderInfoLog(w)||"",s=r.getShaderInfoLog(_)||"",a=n.trim(),o=i.trim(),l=s.trim();let c=!0,h=!0;if(!1===r.getProgramParameter(g,r.LINK_STATUS))if(c=!1,"function"==typeof t.debug.onShaderError)t.debug.onShaderError(r,g,w,_);else{const t=Gp(r,w,"vertex"),n=Gp(r,_,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(g,r.VALIDATE_STATUS)+"\n\nMaterial Name: "+e.name+"\nMaterial Type: "+e.type+"\n\nProgram Info Log: "+a+"\n"+t+"\n"+n)}else""!==a?console.warn("THREE.WebGLProgram: Program Info Log:",a):""!==o&&""!==l||(h=!1);h&&(e.diagnostics={runnable:c,programLog:a,vertexShader:{log:o,prefix:f},fragmentShader:{log:l,prefix:m}})}r.deleteShader(w),r.deleteShader(_),B=new Np(r,g),S=function(t,e){const n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const i=t.getActiveAttrib(e,r),s=i.name;let a=1;i.type===t.FLOAT_MAT2&&(a=2),i.type===t.FLOAT_MAT3&&(a=3),i.type===t.FLOAT_MAT4&&(a=4),n[s]={type:i.type,location:t.getAttribLocation(e,s),locationSize:a}}return n}(r,g)}let B,S;r.attachShader(g,w),r.attachShader(g,_),void 0!==n.index0AttributeName?r.bindAttribLocation(g,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(g,0,"position"),r.linkProgram(g),this.getUniforms=function(){return void 0===B&&b(this),B},this.getAttributes=function(){return void 0===S&&b(this),S};let M=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===M&&(M=r.getProgramParameter(g,37297)),M},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(g),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=Op++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=_,this}let rg=0;class sg{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),s=this._getShaderCacheForMaterial(t);return!1===s.has(i)&&(s.add(i),i.usedTimes++),!1===s.has(r)&&(s.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const t of e)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return void 0===n&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return void 0===n&&(n=new ag(t),e.set(t,n)),n}}class ag{constructor(t){this.id=rg++,this.code=t,this.usedTimes=0}}function og(t,e,n,i,r,s,a){const o=new Br,l=new sg,c=new Set,h=[],A=r.logarithmicDepthBuffer,u=r.vertexTextures;let d=r.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(t){return c.add(t),0===t?"uv":`uv${t}`}return{getParameters:function(s,o,h,f,m){const y=f.fog,v=m.geometry,x=s.isMeshStandardMaterial?f.environment:null,C=(s.isMeshStandardMaterial?n:e).get(s.envMap||x),w=C&&C.mapping===It?C.image.height:null,b=p[s.type];null!==s.precision&&(d=r.getMaxPrecision(s.precision),d!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",d,"instead."));const B=v.morphAttributes.position||v.morphAttributes.normal||v.morphAttributes.color,S=void 0!==B?B.length:0;let M,T,Q,D,R=0;if(void 0!==v.morphAttributes.position&&(R=1),void 0!==v.morphAttributes.normal&&(R=2),void 0!==v.morphAttributes.color&&(R=3),b){const t=ed[b];M=t.vertexShader,T=t.fragmentShader}else M=s.vertexShader,T=s.fragmentShader,l.update(s),Q=l.getVertexShaderID(s),D=l.getFragmentShaderID(s);const U=t.getRenderTarget(),P=t.state.buffers.depth.getReversed(),L=!0===m.isInstancedMesh,F=!0===m.isBatchedMesh,N=!!s.map,k=!!s.matcap,O=!!C,z=!!s.aoMap,G=!!s.lightMap,H=!!s.bumpMap,V=!!s.normalMap,q=!!s.displacementMap,Y=!!s.emissiveMap,W=!!s.metalnessMap,J=!!s.roughnessMap,j=s.anisotropy>0,X=s.clearcoat>0,K=s.dispersion>0,Z=s.iridescence>0,$=s.sheen>0,tt=s.transmission>0,et=j&&!!s.anisotropyMap,nt=X&&!!s.clearcoatMap,it=X&&!!s.clearcoatNormalMap,rt=X&&!!s.clearcoatRoughnessMap,st=Z&&!!s.iridescenceMap,at=Z&&!!s.iridescenceThicknessMap,lt=$&&!!s.sheenColorMap,ct=$&&!!s.sheenRoughnessMap,ht=!!s.specularMap,At=!!s.specularColorMap,ut=!!s.specularIntensityMap,dt=tt&&!!s.transmissionMap,pt=tt&&!!s.thicknessMap,gt=!!s.gradientMap,ft=!!s.alphaMap,mt=s.alphaTest>0,yt=!!s.alphaHash,vt=!!s.extensions;let xt=ot;s.toneMapped&&(null!==U&&!0!==U.isXRRenderTarget||(xt=t.toneMapping));const Ct={shaderID:b,shaderType:s.type,shaderName:s.name,vertexShader:M,fragmentShader:T,defines:s.defines,customVertexShaderID:Q,customFragmentShaderID:D,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:d,batching:F,batchingColor:F&&null!==m._colorsTexture,instancing:L,instancingColor:L&&null!==m.instanceColor,instancingMorph:L&&null!==m.morphTexture,supportsVertexTextures:u,outputColorSpace:null===U?t.outputColorSpace:!0===U.isXRRenderTarget?U.texture.colorSpace:on,alphaToCoverage:!!s.alphaToCoverage,map:N,matcap:k,envMap:O,envMapMode:O&&C.mapping,envMapCubeUVHeight:w,aoMap:z,lightMap:G,bumpMap:H,normalMap:V,displacementMap:u&&q,emissiveMap:Y,normalMapObjectSpace:V&&s.normalMapType===rn,normalMapTangentSpace:V&&s.normalMapType===nn,metalnessMap:W,roughnessMap:J,anisotropy:j,anisotropyMap:et,clearcoat:X,clearcoatMap:nt,clearcoatNormalMap:it,clearcoatRoughnessMap:rt,dispersion:K,iridescence:Z,iridescenceMap:st,iridescenceThicknessMap:at,sheen:$,sheenColorMap:lt,sheenRoughnessMap:ct,specularMap:ht,specularColorMap:At,specularIntensityMap:ut,transmission:tt,transmissionMap:dt,thicknessMap:pt,gradientMap:gt,opaque:!1===s.transparent&&s.blending===_&&!1===s.alphaToCoverage,alphaMap:ft,alphaTest:mt,alphaHash:yt,combine:s.combine,mapUv:N&&g(s.map.channel),aoMapUv:z&&g(s.aoMap.channel),lightMapUv:G&&g(s.lightMap.channel),bumpMapUv:H&&g(s.bumpMap.channel),normalMapUv:V&&g(s.normalMap.channel),displacementMapUv:q&&g(s.displacementMap.channel),emissiveMapUv:Y&&g(s.emissiveMap.channel),metalnessMapUv:W&&g(s.metalnessMap.channel),roughnessMapUv:J&&g(s.roughnessMap.channel),anisotropyMapUv:et&&g(s.anisotropyMap.channel),clearcoatMapUv:nt&&g(s.clearcoatMap.channel),clearcoatNormalMapUv:it&&g(s.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:rt&&g(s.clearcoatRoughnessMap.channel),iridescenceMapUv:st&&g(s.iridescenceMap.channel),iridescenceThicknessMapUv:at&&g(s.iridescenceThicknessMap.channel),sheenColorMapUv:lt&&g(s.sheenColorMap.channel),sheenRoughnessMapUv:ct&&g(s.sheenRoughnessMap.channel),specularMapUv:ht&&g(s.specularMap.channel),specularColorMapUv:At&&g(s.specularColorMap.channel),specularIntensityMapUv:ut&&g(s.specularIntensityMap.channel),transmissionMapUv:dt&&g(s.transmissionMap.channel),thicknessMapUv:pt&&g(s.thicknessMap.channel),alphaMapUv:ft&&g(s.alphaMap.channel),vertexTangents:!!v.attributes.tangent&&(V||j),vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!v.attributes.color&&4===v.attributes.color.itemSize,pointsUvs:!0===m.isPoints&&!!v.attributes.uv&&(N||ft),fog:!!y,useFog:!0===s.fog,fogExp2:!!y&&y.isFogExp2,flatShading:!0===s.flatShading&&!1===s.wireframe,sizeAttenuation:!0===s.sizeAttenuation,logarithmicDepthBuffer:A,reversedDepthBuffer:P,skinning:!0===m.isSkinnedMesh,morphTargets:void 0!==v.morphAttributes.position,morphNormals:void 0!==v.morphAttributes.normal,morphColors:void 0!==v.morphAttributes.color,morphTargetsCount:S,morphTextureStride:R,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:t.shadowMap.enabled&&h.length>0,shadowMapType:t.shadowMap.type,toneMapping:xt,decodeVideoTexture:N&&!0===s.map.isVideoTexture&&_i.getTransfer(s.map.colorSpace)===cn,decodeVideoTextureEmissive:Y&&!0===s.emissiveMap.isVideoTexture&&_i.getTransfer(s.emissiveMap.colorSpace)===cn,premultipliedAlpha:s.premultipliedAlpha,doubleSided:s.side===E,flipSided:s.side===I,useDepthPacking:s.depthPacking>=0,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionClipCullDistance:vt&&!0===s.extensions.clipCullDistance&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(vt&&!0===s.extensions.multiDraw||F)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:s.customProgramCacheKey()};return Ct.vertexUv1s=c.has(1),Ct.vertexUv2s=c.has(2),Ct.vertexUv3s=c.has(3),c.clear(),Ct},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(function(t,e){t.push(e.precision),t.push(e.outputColorSpace),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.mapUv),t.push(e.alphaMapUv),t.push(e.lightMapUv),t.push(e.aoMapUv),t.push(e.bumpMapUv),t.push(e.normalMapUv),t.push(e.displacementMapUv),t.push(e.emissiveMapUv),t.push(e.metalnessMapUv),t.push(e.roughnessMapUv),t.push(e.anisotropyMapUv),t.push(e.clearcoatMapUv),t.push(e.clearcoatNormalMapUv),t.push(e.clearcoatRoughnessMapUv),t.push(e.iridescenceMapUv),t.push(e.iridescenceThicknessMapUv),t.push(e.sheenColorMapUv),t.push(e.sheenRoughnessMapUv),t.push(e.specularMapUv),t.push(e.specularColorMapUv),t.push(e.specularIntensityMapUv),t.push(e.transmissionMapUv),t.push(e.thicknessMapUv),t.push(e.combine),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numSpotLightMaps),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.numSpotLightShadowsWithMaps),t.push(e.numLightProbes),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(n,e),function(t,e){o.disableAll(),e.supportsVertexTextures&&o.enable(0),e.instancing&&o.enable(1),e.instancingColor&&o.enable(2),e.instancingMorph&&o.enable(3),e.matcap&&o.enable(4),e.envMap&&o.enable(5),e.normalMapObjectSpace&&o.enable(6),e.normalMapTangentSpace&&o.enable(7),e.clearcoat&&o.enable(8),e.iridescence&&o.enable(9),e.alphaTest&&o.enable(10),e.vertexColors&&o.enable(11),e.vertexAlphas&&o.enable(12),e.vertexUv1s&&o.enable(13),e.vertexUv2s&&o.enable(14),e.vertexUv3s&&o.enable(15),e.vertexTangents&&o.enable(16),e.anisotropy&&o.enable(17),e.alphaHash&&o.enable(18),e.batching&&o.enable(19),e.dispersion&&o.enable(20),e.batchingColor&&o.enable(21),e.gradientMap&&o.enable(22),t.push(o.mask),o.disableAll(),e.fog&&o.enable(0),e.useFog&&o.enable(1),e.flatShading&&o.enable(2),e.logarithmicDepthBuffer&&o.enable(3),e.reversedDepthBuffer&&o.enable(4),e.skinning&&o.enable(5),e.morphTargets&&o.enable(6),e.morphNormals&&o.enable(7),e.morphColors&&o.enable(8),e.premultipliedAlpha&&o.enable(9),e.shadowMapEnabled&&o.enable(10),e.doubleSided&&o.enable(11),e.flipSided&&o.enable(12),e.useDepthPacking&&o.enable(13),e.dithering&&o.enable(14),e.transmission&&o.enable(15),e.sheen&&o.enable(16),e.opaque&&o.enable(17),e.pointsUvs&&o.enable(18),e.decodeVideoTexture&&o.enable(19),e.decodeVideoTextureEmissive&&o.enable(20),e.alphaToCoverage&&o.enable(21),t.push(o.mask)}(n,e),n.push(t.outputColorSpace)),n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=p[t.type];let n;if(e){const t=ed[e];n=na.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=h.length;t<e;t++){const e=h[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new ig(t,n,e,s),h.push(i)),i},releaseProgram:function(t){if(0===--t.usedTimes){const e=h.indexOf(t);h[e]=h[h.length-1],h.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:h,dispose:function(){l.dispose()}}}function lg(){let t=new WeakMap;return{has:function(e){return t.has(e)},get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function cg(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function hg(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Ag(){const t=[];let e=0;const n=[],i=[],r=[];function s(n,i,r,s,a,o){let l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:i,material:r,groupOrder:s,renderOrder:n.renderOrder,z:a,group:o},t[e]=l):(l.id=n.id,l.object=n,l.geometry=i,l.material=r,l.groupOrder=s,l.renderOrder=n.renderOrder,l.z=a,l.group=o),e++,l}return{opaque:n,transmissive:i,transparent:r,init:function(){e=0,n.length=0,i.length=0,r.length=0},push:function(t,e,a,o,l,c){const h=s(t,e,a,o,l,c);a.transmission>0?i.push(h):!0===a.transparent?r.push(h):n.push(h)},unshift:function(t,e,a,o,l,c){const h=s(t,e,a,o,l,c);a.transmission>0?i.unshift(h):!0===a.transparent?r.unshift(h):n.unshift(h)},finish:function(){for(let n=e,i=t.length;n<i;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){n.length>1&&n.sort(t||cg),i.length>1&&i.sort(e||hg),r.length>1&&r.sort(e||hg)}}}function ug(){let t=new WeakMap;return{get:function(e,n){const i=t.get(e);let r;return void 0===i?(r=new Ag,t.set(e,[r])):n>=i.length?(r=new Ag,i.push(r)):r=i[n],r},dispose:function(){t=new WeakMap}}}function dg(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new hi,color:new ls};break;case"SpotLight":n={position:new hi,direction:new hi,color:new ls,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new hi,color:new ls,distance:0,decay:0};break;case"HemisphereLight":n={direction:new hi,skyColor:new ls,groundColor:new ls};break;case"RectAreaLight":n={color:new ls,position:new hi,halfWidth:new hi,halfHeight:new hi}}return t[e.id]=n,n}}}let pg=0;function gg(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function fg(t){const e=new dg,n=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new li};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new li,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let t=0;t<9;t++)i.probe.push(new hi);const r=new hi,s=new fr,a=new fr;return{setup:function(r){let s=0,a=0,o=0;for(let t=0;t<9;t++)i.probe[t].set(0,0,0);let l=0,c=0,h=0,A=0,u=0,d=0,p=0,g=0,f=0,m=0,y=0;r.sort(gg);for(let t=0,v=r.length;t<v;t++){const v=r[t],x=v.color,C=v.intensity,I=v.distance,E=v.shadow&&v.shadow.map?v.shadow.map.texture:null;if(v.isAmbientLight)s+=x.r*C,a+=x.g*C,o+=x.b*C;else if(v.isLightProbe){for(let t=0;t<9;t++)i.probe[t].addScaledVector(v.sh.coefficients[t],C);y++}else if(v.isDirectionalLight){const t=e.get(v);if(t.color.copy(v.color).multiplyScalar(v.intensity),v.castShadow){const t=v.shadow,e=n.get(v);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,i.directionalShadow[l]=e,i.directionalShadowMap[l]=E,i.directionalShadowMatrix[l]=v.shadow.matrix,d++}i.directional[l]=t,l++}else if(v.isSpotLight){const t=e.get(v);t.position.setFromMatrixPosition(v.matrixWorld),t.color.copy(x).multiplyScalar(C),t.distance=I,t.coneCos=Math.cos(v.angle),t.penumbraCos=Math.cos(v.angle*(1-v.penumbra)),t.decay=v.decay,i.spot[h]=t;const r=v.shadow;if(v.map&&(i.spotLightMap[f]=v.map,f++,r.updateMatrices(v),v.castShadow&&m++),i.spotLightMatrix[h]=r.matrix,v.castShadow){const t=n.get(v);t.shadowIntensity=r.intensity,t.shadowBias=r.bias,t.shadowNormalBias=r.normalBias,t.shadowRadius=r.radius,t.shadowMapSize=r.mapSize,i.spotShadow[h]=t,i.spotShadowMap[h]=E,g++}h++}else if(v.isRectAreaLight){const t=e.get(v);t.color.copy(x).multiplyScalar(C),t.halfWidth.set(.5*v.width,0,0),t.halfHeight.set(0,.5*v.height,0),i.rectArea[A]=t,A++}else if(v.isPointLight){const t=e.get(v);if(t.color.copy(v.color).multiplyScalar(v.intensity),t.distance=v.distance,t.decay=v.decay,v.castShadow){const t=v.shadow,e=n.get(v);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,e.shadowCameraNear=t.camera.near,e.shadowCameraFar=t.camera.far,i.pointShadow[c]=e,i.pointShadowMap[c]=E,i.pointShadowMatrix[c]=v.shadow.matrix,p++}i.point[c]=t,c++}else if(v.isHemisphereLight){const t=e.get(v);t.skyColor.copy(v.color).multiplyScalar(C),t.groundColor.copy(v.groundColor).multiplyScalar(C),i.hemi[u]=t,u++}}A>0&&(!0===t.has("OES_texture_float_linear")?(i.rectAreaLTC1=td.LTC_FLOAT_1,i.rectAreaLTC2=td.LTC_FLOAT_2):(i.rectAreaLTC1=td.LTC_HALF_1,i.rectAreaLTC2=td.LTC_HALF_2)),i.ambient[0]=s,i.ambient[1]=a,i.ambient[2]=o;const v=i.hash;v.directionalLength===l&&v.pointLength===c&&v.spotLength===h&&v.rectAreaLength===A&&v.hemiLength===u&&v.numDirectionalShadows===d&&v.numPointShadows===p&&v.numSpotShadows===g&&v.numSpotMaps===f&&v.numLightProbes===y||(i.directional.length=l,i.spot.length=h,i.rectArea.length=A,i.point.length=c,i.hemi.length=u,i.directionalShadow.length=d,i.directionalShadowMap.length=d,i.pointShadow.length=p,i.pointShadowMap.length=p,i.spotShadow.length=g,i.spotShadowMap.length=g,i.directionalShadowMatrix.length=d,i.pointShadowMatrix.length=p,i.spotLightMatrix.length=g+f-m,i.spotLightMap.length=f,i.numSpotLightShadowsWithMaps=m,i.numLightProbes=y,v.directionalLength=l,v.pointLength=c,v.spotLength=h,v.rectAreaLength=A,v.hemiLength=u,v.numDirectionalShadows=d,v.numPointShadows=p,v.numSpotShadows=g,v.numSpotMaps=f,v.numLightProbes=y,i.version=pg++)},setupView:function(t,e){let n=0,o=0,l=0,c=0,h=0;const A=e.matrixWorldInverse;for(let e=0,u=t.length;e<u;e++){const u=t[e];if(u.isDirectionalLight){const t=i.directional[n];t.direction.setFromMatrixPosition(u.matrixWorld),r.setFromMatrixPosition(u.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(A),n++}else if(u.isSpotLight){const t=i.spot[l];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(A),t.direction.setFromMatrixPosition(u.matrixWorld),r.setFromMatrixPosition(u.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(A),l++}else if(u.isRectAreaLight){const t=i.rectArea[c];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(A),a.identity(),s.copy(u.matrixWorld),s.premultiply(A),a.extractRotation(s),t.halfWidth.set(.5*u.width,0,0),t.halfHeight.set(0,.5*u.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),c++}else if(u.isPointLight){const t=i.point[o];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(A),o++}else if(u.isHemisphereLight){const t=i.hemi[h];t.direction.setFromMatrixPosition(u.matrixWorld),t.direction.transformDirection(A),h++}}},state:i}}function mg(t){const e=new fg(t),n=[],i=[],r={lightsArray:n,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:function(t){r.camera=t,n.length=0,i.length=0},state:r,setupLights:function(){e.setup(n)},setupLightsView:function(t){e.setupView(n,t)},pushLight:function(t){n.push(t)},pushShadow:function(t){i.push(t)}}}function yg(t){let e=new WeakMap;return{get:function(n,i=0){const r=e.get(n);let s;return void 0===r?(s=new mg(t),e.set(n,[s])):i>=r.length?(s=new mg(t),r.push(s)):s=r[i],s},dispose:function(){e=new WeakMap}}}function vg(t,e,n){let i=new vo;const r=new li,s=new li,a=new Li,o=new Kc({depthPacking:$e}),l=new Zc,c={},h=n.maxTextureSize,A={[C]:I,[I]:C,[E]:E},u=new ia({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new li},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),d=u.clone();d.defines.HORIZONTAL_PASS=1;const p=new Ns;p.setAttribute("position",new Cs(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Xs(p,u),f=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=y;let m=this.type;function v(n,i){const s=e.update(g);u.defines.VSM_SAMPLES!==n.blurSamples&&(u.defines.VSM_SAMPLES=n.blurSamples,d.defines.VSM_SAMPLES=n.blurSamples,u.needsUpdate=!0,d.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new Ni(r.x,r.y)),u.uniforms.shadow_pass.value=n.map.texture,u.uniforms.resolution.value=n.mapSize,u.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,s,u,g,null),d.uniforms.shadow_pass.value=n.mapPass.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,s,d,g,null)}function _(e,n,i,r){let s=null;const a=!0===i.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(void 0!==a)s=a;else if(s=!0===i.isPointLight?l:o,t.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0||!0===n.alphaToCoverage){const t=s.uuid,e=n.uuid;let i=c[t];void 0===i&&(i={},c[t]=i);let r=i[e];void 0===r&&(r=s.clone(),i[e]=r,n.addEventListener("dispose",B)),s=r}return s.visible=n.visible,s.wireframe=n.wireframe,s.side=r===x?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:A[n.side],s.alphaMap=n.alphaMap,s.alphaTest=!0===n.alphaToCoverage?.5:n.alphaTest,s.map=n.map,s.clipShadows=n.clipShadows,s.clippingPlanes=n.clippingPlanes,s.clipIntersection=n.clipIntersection,s.displacementMap=n.displacementMap,s.displacementScale=n.displacementScale,s.displacementBias=n.displacementBias,s.wireframeLinewidth=n.wireframeLinewidth,s.linewidth=n.linewidth,!0===i.isPointLight&&!0===s.isMeshDistanceMaterial&&(t.properties.get(s).light=i),s}function b(n,r,s,a,o){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===x)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const i=e.update(n),l=n.material;if(Array.isArray(l)){const e=i.groups;for(let c=0,h=e.length;c<h;c++){const h=e[c],A=l[h.materialIndex];if(A&&A.visible){const e=_(n,A,a,o);n.onBeforeShadow(t,n,r,s,i,e,h),t.renderBufferDirect(s,null,i,e,n,h),n.onAfterShadow(t,n,r,s,i,e,h)}}}else if(l.visible){const e=_(n,l,a,o);n.onBeforeShadow(t,n,r,s,i,e,null),t.renderBufferDirect(s,null,i,e,n,null),n.onAfterShadow(t,n,r,s,i,e,null)}}const l=n.children;for(let t=0,e=l.length;t<e;t++)b(l[t],r,s,a,o)}function B(t){t.target.removeEventListener("dispose",B);for(const e in c){const n=c[e],i=t.target.uuid;i in n&&(n[i].dispose(),delete n[i])}}this.render=function(e,n,o){if(!1===f.enabled)return;if(!1===f.autoUpdate&&!1===f.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),A=t.getActiveMipmapLevel(),u=t.state;u.setBlending(w),!0===u.buffers.depth.getReversed()?u.buffers.color.setClear(0,0,0,0):u.buffers.color.setClear(1,1,1,1),u.buffers.depth.setTest(!0),u.setScissorTest(!1);const d=m!==x&&this.type===x,p=m===x&&this.type!==x;for(let l=0,c=e.length;l<c;l++){const c=e[l],A=c.shadow;if(void 0===A){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===A.autoUpdate&&!1===A.needsUpdate)continue;r.copy(A.mapSize);const g=A.getFrameExtents();if(r.multiply(g),s.copy(A.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(s.x=Math.floor(h/g.x),r.x=s.x*g.x,A.mapSize.x=s.x),r.y>h&&(s.y=Math.floor(h/g.y),r.y=s.y*g.y,A.mapSize.y=s.y)),null===A.map||!0===d||!0===p){const t=this.type!==x?{minFilter:bt,magFilter:bt}:{};null!==A.map&&A.map.dispose(),A.map=new Ni(r.x,r.y,t),A.map.texture.name=c.name+".shadowMap",A.camera.updateProjectionMatrix()}t.setRenderTarget(A.map),t.clear();const f=A.getViewportCount();for(let t=0;t<f;t++){const e=A.getViewport(t);a.set(s.x*e.x,s.y*e.y,s.x*e.z,s.y*e.w),u.viewport(a),A.updateMatrices(c,t),i=A.getFrustum(),b(n,o,A.camera,c,this.type)}!0!==A.isPointLightShadow&&this.type===x&&v(A,o),A.needsUpdate=!1}m=this.type,f.needsUpdate=!1,t.setRenderTarget(l,c,A)}}const xg={[X]:K,[Z]:nt,[tt]:it,[$]:et,[K]:X,[nt]:Z,[it]:tt,[et]:$};function Cg(t,e){const n=new function(){let e=!1;const n=new Li;let i=null;const r=new Li(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,s,a,o){!0===o&&(e*=a,i*=a,s*=a),n.set(e,i,s,a),!1===r.equals(n)&&(t.clearColor(e,i,s,a),r.copy(n))},reset:function(){e=!1,i=null,r.set(-1,0,0,0)}}},i=new function(){let n=!1,i=!1,r=null,s=null,a=null;return{setReversed:function(t){if(i!==t){const n=e.get("EXT_clip_control");t?n.clipControlEXT(n.LOWER_LEFT_EXT,n.ZERO_TO_ONE_EXT):n.clipControlEXT(n.LOWER_LEFT_EXT,n.NEGATIVE_ONE_TO_ONE_EXT),i=t;const r=a;a=null,this.setClear(r)}},getReversed:function(){return i},setTest:function(e){e?_t(t.DEPTH_TEST):bt(t.DEPTH_TEST)},setMask:function(e){r===e||n||(t.depthMask(e),r=e)},setFunc:function(e){if(i&&(e=xg[e]),s!==e){switch(e){case X:t.depthFunc(t.NEVER);break;case K:t.depthFunc(t.ALWAYS);break;case Z:t.depthFunc(t.LESS);break;case $:t.depthFunc(t.LEQUAL);break;case tt:t.depthFunc(t.EQUAL);break;case et:t.depthFunc(t.GEQUAL);break;case nt:t.depthFunc(t.GREATER);break;case it:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}s=e}},setLocked:function(t){n=t},setClear:function(e){a!==e&&(i&&(e=1-e),t.clearDepth(e),a=e)},reset:function(){n=!1,r=null,s=null,a=null,i=!1}}},r=new function(){let e=!1,n=null,i=null,r=null,s=null,a=null,o=null,l=null,c=null;return{setTest:function(n){e||(n?_t(t.STENCIL_TEST):bt(t.STENCIL_TEST))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,a){i===e&&r===n&&s===a||(t.stencilFunc(e,n,a),i=e,r=n,s=a)},setOp:function(e,n,i){a===e&&o===n&&l===i||(t.stencilOp(e,n,i),a=e,o=n,l=i)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,i=null,r=null,s=null,a=null,o=null,l=null,c=null}}},s=new WeakMap,a=new WeakMap;let o={},l={},c=new WeakMap,h=[],A=null,u=!1,f=null,m=null,y=null,v=null,x=null,C=null,rt=null,st=new ls(0,0,0),at=0,ot=!1,lt=null,ct=null,ht=null,At=null,ut=null;const dt=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let pt=!1,gt=0;const ft=t.getParameter(t.VERSION);-1!==ft.indexOf("WebGL")?(gt=parseFloat(/^WebGL (\d)/.exec(ft)[1]),pt=gt>=1):-1!==ft.indexOf("OpenGL ES")&&(gt=parseFloat(/^OpenGL ES (\d)/.exec(ft)[1]),pt=gt>=2);let mt=null,yt={};const vt=t.getParameter(t.SCISSOR_BOX),xt=t.getParameter(t.VIEWPORT),Ct=(new Li).fromArray(vt),It=(new Li).fromArray(xt);function Et(e,n,i,r){const s=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let a=0;a<i;a++)e===t.TEXTURE_3D||e===t.TEXTURE_2D_ARRAY?t.texImage3D(n,0,t.RGBA,1,1,r,0,t.RGBA,t.UNSIGNED_BYTE,s):t.texImage2D(n+a,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,s);return a}const wt={};function _t(e){!0!==o[e]&&(t.enable(e),o[e]=!0)}function bt(e){!1!==o[e]&&(t.disable(e),o[e]=!1)}wt[t.TEXTURE_2D]=Et(t.TEXTURE_2D,t.TEXTURE_2D,1),wt[t.TEXTURE_CUBE_MAP]=Et(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),wt[t.TEXTURE_2D_ARRAY]=Et(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),wt[t.TEXTURE_3D]=Et(t.TEXTURE_3D,t.TEXTURE_3D,1,1),n.setClear(0,0,0,1),i.setClear(1),r.setClear(0),_t(t.DEPTH_TEST),i.setFunc($),Tt(!1),Qt(p),_t(t.CULL_FACE),Mt(w);const Bt={[T]:t.FUNC_ADD,[Q]:t.FUNC_SUBTRACT,[D]:t.FUNC_REVERSE_SUBTRACT};Bt[R]=t.MIN,Bt[U]=t.MAX;const St={[P]:t.ZERO,[L]:t.ONE,[F]:t.SRC_COLOR,[k]:t.SRC_ALPHA,[q]:t.SRC_ALPHA_SATURATE,[H]:t.DST_COLOR,[z]:t.DST_ALPHA,[N]:t.ONE_MINUS_SRC_COLOR,[O]:t.ONE_MINUS_SRC_ALPHA,[V]:t.ONE_MINUS_DST_COLOR,[G]:t.ONE_MINUS_DST_ALPHA,[Y]:t.CONSTANT_COLOR,[W]:t.ONE_MINUS_CONSTANT_COLOR,[J]:t.CONSTANT_ALPHA,[j]:t.ONE_MINUS_CONSTANT_ALPHA};function Mt(e,n,i,r,s,a,o,l,c,h){if(e!==w){if(!1===u&&(_t(t.BLEND),u=!0),e===M)s=s||n,a=a||i,o=o||r,n===m&&s===x||(t.blendEquationSeparate(Bt[n],Bt[s]),m=n,x=s),i===y&&r===v&&a===C&&o===rt||(t.blendFuncSeparate(St[i],St[r],St[a],St[o]),y=i,v=r,C=a,rt=o),!1!==l.equals(st)&&c===at||(t.blendColor(l.r,l.g,l.b,c),st.copy(l),at=c),f=e,ot=!1;else if(e!==f||h!==ot){if(m===T&&x===T||(t.blendEquation(t.FUNC_ADD),m=T,x=T),h)switch(e){case _:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case b:t.blendFunc(t.ONE,t.ONE);break;case B:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case S:t.blendFuncSeparate(t.DST_COLOR,t.ONE_MINUS_SRC_ALPHA,t.ZERO,t.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case _:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case b:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE,t.ONE,t.ONE);break;case B:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case S:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}y=null,v=null,C=null,rt=null,st.set(0,0,0),at=0,f=e,ot=h}}else!0===u&&(bt(t.BLEND),u=!1)}function Tt(e){lt!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),lt=e)}function Qt(e){e!==d?(_t(t.CULL_FACE),e!==ct&&(e===p?t.cullFace(t.BACK):e===g?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):bt(t.CULL_FACE),ct=e}function Dt(e,n,i){e?(_t(t.POLYGON_OFFSET_FILL),At===n&&ut===i||(t.polygonOffset(n,i),At=n,ut=i)):bt(t.POLYGON_OFFSET_FILL)}return{buffers:{color:n,depth:i,stencil:r},enable:_t,disable:bt,bindFramebuffer:function(e,n){return l[e]!==n&&(t.bindFramebuffer(e,n),l[e]=n,e===t.DRAW_FRAMEBUFFER&&(l[t.FRAMEBUFFER]=n),e===t.FRAMEBUFFER&&(l[t.DRAW_FRAMEBUFFER]=n),!0)},drawBuffers:function(e,n){let i=h,r=!1;if(e){i=c.get(n),void 0===i&&(i=[],c.set(n,i));const s=e.textures;if(i.length!==s.length||i[0]!==t.COLOR_ATTACHMENT0){for(let e=0,n=s.length;e<n;e++)i[e]=t.COLOR_ATTACHMENT0+e;i.length=s.length,r=!0}}else i[0]!==t.BACK&&(i[0]=t.BACK,r=!0);r&&t.drawBuffers(i)},useProgram:function(e){return A!==e&&(t.useProgram(e),A=e,!0)},setBlending:Mt,setMaterial:function(e,s){e.side===E?bt(t.CULL_FACE):_t(t.CULL_FACE);let a=e.side===I;s&&(a=!a),Tt(a),e.blending===_&&!1===e.transparent?Mt(w):Mt(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.blendColor,e.blendAlpha,e.premultipliedAlpha),i.setFunc(e.depthFunc),i.setTest(e.depthTest),i.setMask(e.depthWrite),n.setMask(e.colorWrite);const o=e.stencilWrite;r.setTest(o),o&&(r.setMask(e.stencilWriteMask),r.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),r.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Dt(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?_t(t.SAMPLE_ALPHA_TO_COVERAGE):bt(t.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:Tt,setCullFace:Qt,setLineWidth:function(e){e!==ht&&(pt&&t.lineWidth(e),ht=e)},setPolygonOffset:Dt,setScissorTest:function(e){e?_t(t.SCISSOR_TEST):bt(t.SCISSOR_TEST)},activeTexture:function(e){void 0===e&&(e=t.TEXTURE0+dt-1),mt!==e&&(t.activeTexture(e),mt=e)},bindTexture:function(e,n,i){void 0===i&&(i=null===mt?t.TEXTURE0+dt-1:mt);let r=yt[i];void 0===r&&(r={type:void 0,texture:void 0},yt[i]=r),r.type===e&&r.texture===n||(mt!==i&&(t.activeTexture(i),mt=i),t.bindTexture(e,n||wt[e]),r.type=e,r.texture=n)},unbindTexture:function(){const e=yt[mt];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexImage3D:function(){try{t.compressedTexImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(e,n){let i=a.get(n);void 0===i&&(i=new WeakMap,a.set(n,i));let r=i.get(e);void 0===r&&(r=t.getUniformBlockIndex(n,e.name),i.set(e,r))},uniformBlockBinding:function(e,n){const i=a.get(n).get(e);s.get(n)!==i&&(t.uniformBlockBinding(n,i,e.__bindingPointIndex),s.set(n,i))},texStorage2D:function(){try{t.texStorage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage3D:function(){try{t.compressedTexSubImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===Ct.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),Ct.copy(e))},viewport:function(e){!1===It.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),It.copy(e))},reset:function(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.blendColor(0,0,0,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),i.setReversed(!1),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),o={},mt=null,yt={},l={},c=new WeakMap,h=[],A=null,u=!1,f=null,m=null,y=null,v=null,x=null,C=null,rt=null,st=new ls(0,0,0),at=0,ot=!1,lt=null,ct=null,ht=null,At=null,ut=null,Ct.set(0,0,t.canvas.width,t.canvas.height),It.set(0,0,t.canvas.width,t.canvas.height),n.reset(),i.reset(),r.reset()}}}function Ig(t,e,n,i,r,s,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),c=new li,h=new WeakMap;let A;const u=new WeakMap;let d=!1;try{d="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function p(t,e){return d?new OffscreenCanvas(t,e):yi("canvas")}function g(t,e,n){let i=1;const r=H(t);if((r.width>n||r.height>n)&&(i=n/Math.max(r.width,r.height)),i<1){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&t instanceof VideoFrame){const n=Math.floor(i*r.width),s=Math.floor(i*r.height);void 0===A&&(A=p(n,s));const a=e?p(n,s):A;return a.width=n,a.height=s,a.getContext("2d").drawImage(t,0,0,n,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+r.width+"x"+r.height+") to ("+n+"x"+s+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+r.width+"x"+r.height+")."),t}return t}function f(t){return t.generateMipmaps}function m(e){t.generateMipmap(e)}function y(e){return e.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:e.isWebGL3DRenderTarget?t.TEXTURE_3D:e.isWebGLArrayRenderTarget||e.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:t.TEXTURE_2D}function v(n,i,r,s,a=!1){if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let o=i;if(i===t.RED&&(r===t.FLOAT&&(o=t.R32F),r===t.HALF_FLOAT&&(o=t.R16F),r===t.UNSIGNED_BYTE&&(o=t.R8)),i===t.RED_INTEGER&&(r===t.UNSIGNED_BYTE&&(o=t.R8UI),r===t.UNSIGNED_SHORT&&(o=t.R16UI),r===t.UNSIGNED_INT&&(o=t.R32UI),r===t.BYTE&&(o=t.R8I),r===t.SHORT&&(o=t.R16I),r===t.INT&&(o=t.R32I)),i===t.RG&&(r===t.FLOAT&&(o=t.RG32F),r===t.HALF_FLOAT&&(o=t.RG16F),r===t.UNSIGNED_BYTE&&(o=t.RG8)),i===t.RG_INTEGER&&(r===t.UNSIGNED_BYTE&&(o=t.RG8UI),r===t.UNSIGNED_SHORT&&(o=t.RG16UI),r===t.UNSIGNED_INT&&(o=t.RG32UI),r===t.BYTE&&(o=t.RG8I),r===t.SHORT&&(o=t.RG16I),r===t.INT&&(o=t.RG32I)),i===t.RGB_INTEGER&&(r===t.UNSIGNED_BYTE&&(o=t.RGB8UI),r===t.UNSIGNED_SHORT&&(o=t.RGB16UI),r===t.UNSIGNED_INT&&(o=t.RGB32UI),r===t.BYTE&&(o=t.RGB8I),r===t.SHORT&&(o=t.RGB16I),r===t.INT&&(o=t.RGB32I)),i===t.RGBA_INTEGER&&(r===t.UNSIGNED_BYTE&&(o=t.RGBA8UI),r===t.UNSIGNED_SHORT&&(o=t.RGBA16UI),r===t.UNSIGNED_INT&&(o=t.RGBA32UI),r===t.BYTE&&(o=t.RGBA8I),r===t.SHORT&&(o=t.RGBA16I),r===t.INT&&(o=t.RGBA32I)),i===t.RGB&&(r===t.UNSIGNED_INT_5_9_9_9_REV&&(o=t.RGB9_E5),r===t.UNSIGNED_INT_10F_11F_11F_REV&&(o=t.R11F_G11F_B10F)),i===t.RGBA){const e=a?ln:_i.getTransfer(s);r===t.FLOAT&&(o=t.RGBA32F),r===t.HALF_FLOAT&&(o=t.RGBA16F),r===t.UNSIGNED_BYTE&&(o=e===cn?t.SRGB8_ALPHA8:t.RGBA8),r===t.UNSIGNED_SHORT_4_4_4_4&&(o=t.RGBA4),r===t.UNSIGNED_SHORT_5_5_5_1&&(o=t.RGB5_A1)}return o!==t.R16F&&o!==t.R32F&&o!==t.RG16F&&o!==t.RG32F&&o!==t.RGBA16F&&o!==t.RGBA32F||e.get("EXT_color_buffer_float"),o}function x(e,n){let i;return e?null===n||n===zt||n===Yt?i=t.DEPTH24_STENCIL8:n===Gt?i=t.DEPTH32F_STENCIL8:n===kt&&(i=t.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):null===n||n===zt||n===Yt?i=t.DEPTH_COMPONENT24:n===Gt?i=t.DEPTH_COMPONENT32F:n===kt&&(i=t.DEPTH_COMPONENT16),i}function C(t,e){return!0===f(t)||t.isFramebufferTexture&&t.minFilter!==bt&&t.minFilter!==Qt?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function I(t){const e=t.target;e.removeEventListener("dispose",I),function(t){const e=i.get(t);if(void 0===e.__webglInit)return;const n=t.source,r=u.get(n);if(r){const i=r[e.__cacheKey];i.usedTimes--,0===i.usedTimes&&w(t),0===Object.keys(r).length&&u.delete(n)}i.remove(t)}(e),e.isVideoTexture&&h.delete(e)}function E(e){const n=e.target;n.removeEventListener("dispose",E),function(e){const n=i.get(e);if(e.depthTexture&&(e.depthTexture.dispose(),i.remove(e.depthTexture)),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++){if(Array.isArray(n.__webglFramebuffer[e]))for(let i=0;i<n.__webglFramebuffer[e].length;i++)t.deleteFramebuffer(n.__webglFramebuffer[e][i]);else t.deleteFramebuffer(n.__webglFramebuffer[e]);n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e])}else{if(Array.isArray(n.__webglFramebuffer))for(let e=0;e<n.__webglFramebuffer.length;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]);else t.deleteFramebuffer(n.__webglFramebuffer);if(n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer)for(let e=0;e<n.__webglColorRenderbuffer.length;e++)n.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(n.__webglColorRenderbuffer[e]);n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer)}const r=e.textures;for(let e=0,n=r.length;e<n;e++){const n=i.get(r[e]);n.__webglTexture&&(t.deleteTexture(n.__webglTexture),a.memory.textures--),i.remove(r[e])}i.remove(e)}(n)}function w(e){const n=i.get(e);t.deleteTexture(n.__webglTexture);const r=e.source;delete u.get(r)[n.__cacheKey],a.memory.textures--}let _=0;function b(e,r){const s=i.get(e);if(e.isVideoTexture&&function(t){const e=a.render.frame;h.get(t)!==e&&(h.set(t,e),t.update())}(e),!1===e.isRenderTargetTexture&&!0!==e.isExternalTexture&&e.version>0&&s.__version!==e.version){const t=e.image;if(null===t)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==t.complete)return void R(s,e,r);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}else e.isExternalTexture&&(s.__webglTexture=e.sourceTexture?e.sourceTexture:null);n.bindTexture(t.TEXTURE_2D,s.__webglTexture,t.TEXTURE0+r)}const B={[Et]:t.REPEAT,[wt]:t.CLAMP_TO_EDGE,[_t]:t.MIRRORED_REPEAT},S={[bt]:t.NEAREST,[Bt]:t.NEAREST_MIPMAP_NEAREST,[Mt]:t.NEAREST_MIPMAP_LINEAR,[Qt]:t.LINEAR,[Dt]:t.LINEAR_MIPMAP_NEAREST,[Ut]:t.LINEAR_MIPMAP_LINEAR},M={[bn]:t.NEVER,[Rn]:t.ALWAYS,[Bn]:t.LESS,[Mn]:t.LEQUAL,[Sn]:t.EQUAL,[Dn]:t.GEQUAL,[Tn]:t.GREATER,[Qn]:t.NOTEQUAL};function T(n,s){if(s.type!==Gt||!1!==e.has("OES_texture_float_linear")||s.magFilter!==Qt&&s.magFilter!==Dt&&s.magFilter!==Mt&&s.magFilter!==Ut&&s.minFilter!==Qt&&s.minFilter!==Dt&&s.minFilter!==Mt&&s.minFilter!==Ut||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),t.texParameteri(n,t.TEXTURE_WRAP_S,B[s.wrapS]),t.texParameteri(n,t.TEXTURE_WRAP_T,B[s.wrapT]),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,B[s.wrapR]),t.texParameteri(n,t.TEXTURE_MAG_FILTER,S[s.magFilter]),t.texParameteri(n,t.TEXTURE_MIN_FILTER,S[s.minFilter]),s.compareFunction&&(t.texParameteri(n,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(n,t.TEXTURE_COMPARE_FUNC,M[s.compareFunction])),!0===e.has("EXT_texture_filter_anisotropic")){if(s.magFilter===bt)return;if(s.minFilter!==Mt&&s.minFilter!==Ut)return;if(s.type===Gt&&!1===e.has("OES_texture_float_linear"))return;if(s.anisotropy>1||i.get(s).__currentAnisotropy){const a=e.get("EXT_texture_filter_anisotropic");t.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,r.getMaxAnisotropy())),i.get(s).__currentAnisotropy=s.anisotropy}}}function Q(e,n){let i=!1;void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",I));const r=n.source;let s=u.get(r);void 0===s&&(s={},u.set(r,s));const o=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.wrapR||0),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.colorSpace),e.join()}(n);if(o!==e.__cacheKey){void 0===s[o]&&(s[o]={texture:t.createTexture(),usedTimes:0},a.memory.textures++,i=!0),s[o].usedTimes++;const r=s[e.__cacheKey];void 0!==r&&(s[e.__cacheKey].usedTimes--,0===r.usedTimes&&w(n)),e.__cacheKey=o,e.__webglTexture=s[o].texture}return i}function D(t,e,n){return Math.floor(Math.floor(t/n)/e)}function R(e,a,o){let l=t.TEXTURE_2D;(a.isDataArrayTexture||a.isCompressedArrayTexture)&&(l=t.TEXTURE_2D_ARRAY),a.isData3DTexture&&(l=t.TEXTURE_3D);const c=Q(e,a),h=a.source;n.bindTexture(l,e.__webglTexture,t.TEXTURE0+o);const A=i.get(h);if(h.version!==A.__version||!0===c){n.activeTexture(t.TEXTURE0+o);const e=_i.getPrimaries(_i.workingColorSpace),i=a.colorSpace===sn?null:_i.getPrimaries(a.colorSpace),u=a.colorSpace===sn||e===i?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,a.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,a.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,u);let d=g(a.image,!1,r.maxTextureSize);d=G(a,d);const p=s.convert(a.format,a.colorSpace),y=s.convert(a.type);let I,E=v(a.internalFormat,p,y,a.colorSpace,a.isVideoTexture);T(l,a);const w=a.mipmaps,_=!0!==a.isVideoTexture,b=void 0===A.__version||!0===c,B=h.dataReady,S=C(a,d);if(a.isDepthTexture)E=x(a.format===$t,a.type),b&&(_?n.texStorage2D(t.TEXTURE_2D,1,E,d.width,d.height):n.texImage2D(t.TEXTURE_2D,0,E,d.width,d.height,0,p,y,null));else if(a.isDataTexture)if(w.length>0){_&&b&&n.texStorage2D(t.TEXTURE_2D,S,E,w[0].width,w[0].height);for(let e=0,i=w.length;e<i;e++)I=w[e],_?B&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,I.width,I.height,p,y,I.data):n.texImage2D(t.TEXTURE_2D,e,E,I.width,I.height,0,p,y,I.data);a.generateMipmaps=!1}else _?(b&&n.texStorage2D(t.TEXTURE_2D,S,E,d.width,d.height),B&&function(e,i,r,s){const a=e.updateRanges;if(0===a.length)n.texSubImage2D(t.TEXTURE_2D,0,0,0,i.width,i.height,r,s,i.data);else{a.sort((t,e)=>t.start-e.start);let o=0;for(let t=1;t<a.length;t++){const e=a[o],n=a[t],r=e.start+e.count,s=D(n.start,i.width,4),l=D(e.start,i.width,4);n.start<=r+1&&s===l&&D(n.start+n.count-1,i.width,4)===s?e.count=Math.max(e.count,n.start+n.count-e.start):(++o,a[o]=n)}a.length=o+1;const l=t.getParameter(t.UNPACK_ROW_LENGTH),c=t.getParameter(t.UNPACK_SKIP_PIXELS),h=t.getParameter(t.UNPACK_SKIP_ROWS);t.pixelStorei(t.UNPACK_ROW_LENGTH,i.width);for(let e=0,o=a.length;e<o;e++){const o=a[e],l=Math.floor(o.start/4),c=Math.ceil(o.count/4),h=l%i.width,A=Math.floor(l/i.width),u=c,d=1;t.pixelStorei(t.UNPACK_SKIP_PIXELS,h),t.pixelStorei(t.UNPACK_SKIP_ROWS,A),n.texSubImage2D(t.TEXTURE_2D,0,h,A,u,d,r,s,i.data)}e.clearUpdateRanges(),t.pixelStorei(t.UNPACK_ROW_LENGTH,l),t.pixelStorei(t.UNPACK_SKIP_PIXELS,c),t.pixelStorei(t.UNPACK_SKIP_ROWS,h)}}(a,d,p,y)):n.texImage2D(t.TEXTURE_2D,0,E,d.width,d.height,0,p,y,d.data);else if(a.isCompressedTexture)if(a.isCompressedArrayTexture){_&&b&&n.texStorage3D(t.TEXTURE_2D_ARRAY,S,E,w[0].width,w[0].height,d.depth);for(let e=0,i=w.length;e<i;e++)if(I=w[e],a.format!==Kt)if(null!==p)if(_){if(B)if(a.layerUpdates.size>0){const i=ju(I.width,I.height,a.format,a.type);for(const r of a.layerUpdates){const s=I.data.subarray(r*i/I.data.BYTES_PER_ELEMENT,(r+1)*i/I.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,r,I.width,I.height,1,p,s)}a.clearLayerUpdates()}else n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,I.width,I.height,d.depth,p,I.data)}else n.compressedTexImage3D(t.TEXTURE_2D_ARRAY,e,E,I.width,I.height,d.depth,0,I.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else _?B&&n.texSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,I.width,I.height,d.depth,p,y,I.data):n.texImage3D(t.TEXTURE_2D_ARRAY,e,E,I.width,I.height,d.depth,0,p,y,I.data)}else{_&&b&&n.texStorage2D(t.TEXTURE_2D,S,E,w[0].width,w[0].height);for(let e=0,i=w.length;e<i;e++)I=w[e],a.format!==Kt?null!==p?_?B&&n.compressedTexSubImage2D(t.TEXTURE_2D,e,0,0,I.width,I.height,p,I.data):n.compressedTexImage2D(t.TEXTURE_2D,e,E,I.width,I.height,0,I.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):_?B&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,I.width,I.height,p,y,I.data):n.texImage2D(t.TEXTURE_2D,e,E,I.width,I.height,0,p,y,I.data)}else if(a.isDataArrayTexture)if(_){if(b&&n.texStorage3D(t.TEXTURE_2D_ARRAY,S,E,d.width,d.height,d.depth),B)if(a.layerUpdates.size>0){const e=ju(d.width,d.height,a.format,a.type);for(const i of a.layerUpdates){const r=d.data.subarray(i*e/d.data.BYTES_PER_ELEMENT,(i+1)*e/d.data.BYTES_PER_ELEMENT);n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,i,d.width,d.height,1,p,y,r)}a.clearLayerUpdates()}else n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,p,y,d.data)}else n.texImage3D(t.TEXTURE_2D_ARRAY,0,E,d.width,d.height,d.depth,0,p,y,d.data);else if(a.isData3DTexture)_?(b&&n.texStorage3D(t.TEXTURE_3D,S,E,d.width,d.height,d.depth),B&&n.texSubImage3D(t.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,p,y,d.data)):n.texImage3D(t.TEXTURE_3D,0,E,d.width,d.height,d.depth,0,p,y,d.data);else if(a.isFramebufferTexture){if(b)if(_)n.texStorage2D(t.TEXTURE_2D,S,E,d.width,d.height);else{let e=d.width,i=d.height;for(let r=0;r<S;r++)n.texImage2D(t.TEXTURE_2D,r,E,e,i,0,p,y,null),e>>=1,i>>=1}}else if(w.length>0){if(_&&b){const e=H(w[0]);n.texStorage2D(t.TEXTURE_2D,S,E,e.width,e.height)}for(let e=0,i=w.length;e<i;e++)I=w[e],_?B&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,p,y,I):n.texImage2D(t.TEXTURE_2D,e,E,p,y,I);a.generateMipmaps=!1}else if(_){if(b){const e=H(d);n.texStorage2D(t.TEXTURE_2D,S,E,e.width,e.height)}B&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,p,y,d)}else n.texImage2D(t.TEXTURE_2D,0,E,p,y,d);f(a)&&m(l),A.__version=h.version,a.onUpdate&&a.onUpdate(a)}e.__version=a.version}function U(e,r,a,l,c,h){const A=s.convert(a.format,a.colorSpace),u=s.convert(a.type),d=v(a.internalFormat,A,u,a.colorSpace),p=i.get(r),g=i.get(a);if(g.__renderTarget=r,!p.__hasExternalTextures){const e=Math.max(1,r.width>>h),i=Math.max(1,r.height>>h);c===t.TEXTURE_3D||c===t.TEXTURE_2D_ARRAY?n.texImage3D(c,h,d,e,i,r.depth,0,A,u,null):n.texImage2D(c,h,d,e,i,0,A,u,null)}n.bindFramebuffer(t.FRAMEBUFFER,e),z(r)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,l,c,g.__webglTexture,0,O(r)):(c===t.TEXTURE_2D||c>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&c<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,l,c,g.__webglTexture,h),n.bindFramebuffer(t.FRAMEBUFFER,null)}function P(e,n,i){if(t.bindRenderbuffer(t.RENDERBUFFER,e),n.depthBuffer){const r=n.depthTexture,s=r&&r.isDepthTexture?r.type:null,a=x(n.stencilBuffer,s),l=n.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,c=O(n);z(n)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,c,a,n.width,n.height):i?t.renderbufferStorageMultisample(t.RENDERBUFFER,c,a,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,a,n.width,n.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,l,t.RENDERBUFFER,e)}else{const e=n.textures;for(let r=0;r<e.length;r++){const a=e[r],l=s.convert(a.format,a.colorSpace),c=s.convert(a.type),h=v(a.internalFormat,l,c,a.colorSpace),A=O(n);i&&!1===z(n)?t.renderbufferStorageMultisample(t.RENDERBUFFER,A,h,n.width,n.height):z(n)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,A,h,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,h,n.width,n.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function L(e,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(t.FRAMEBUFFER,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const s=i.get(r.depthTexture);s.__renderTarget=r,s.__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),b(r.depthTexture,0);const a=s.__webglTexture,l=O(r);if(r.depthTexture.format===Zt)z(r)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,a,0,l):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,a,0);else{if(r.depthTexture.format!==$t)throw new Error("Unknown depthTexture format");z(r)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,a,0,l):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,a,0)}}function F(e){const r=i.get(e),s=!0===e.isWebGLCubeRenderTarget;if(r.__boundDepthTexture!==e.depthTexture){const t=e.depthTexture;if(r.__depthDisposeCallback&&r.__depthDisposeCallback(),t){const e=()=>{delete r.__boundDepthTexture,delete r.__depthDisposeCallback,t.removeEventListener("dispose",e)};t.addEventListener("dispose",e),r.__depthDisposeCallback=e}r.__boundDepthTexture=t}if(e.depthTexture&&!r.__autoAllocateDepthBuffer){if(s)throw new Error("target.depthTexture not supported in Cube render targets");const t=e.texture.mipmaps;t&&t.length>0?L(r.__webglFramebuffer[0],e):L(r.__webglFramebuffer,e)}else if(s){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)if(n.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer[i]),void 0===r.__webglDepthbuffer[i])r.__webglDepthbuffer[i]=t.createRenderbuffer(),P(r.__webglDepthbuffer[i],e,!1);else{const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,s=r.__webglDepthbuffer[i];t.bindRenderbuffer(t.RENDERBUFFER,s),t.framebufferRenderbuffer(t.FRAMEBUFFER,n,t.RENDERBUFFER,s)}}else{const i=e.texture.mipmaps;if(i&&i.length>0?n.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer[0]):n.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer),void 0===r.__webglDepthbuffer)r.__webglDepthbuffer=t.createRenderbuffer(),P(r.__webglDepthbuffer,e,!1);else{const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,i=r.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,i),t.framebufferRenderbuffer(t.FRAMEBUFFER,n,t.RENDERBUFFER,i)}}n.bindFramebuffer(t.FRAMEBUFFER,null)}const N=[],k=[];function O(t){return Math.min(r.maxSamples,t.samples)}function z(t){const n=i.get(t);return t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function G(t,e){const n=t.colorSpace,i=t.format,r=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||n!==on&&n!==sn&&(_i.getTransfer(n)===cn?i===Kt&&r===Lt||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",n)),e}function H(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement?(c.width=t.naturalWidth||t.width,c.height=t.naturalHeight||t.height):"undefined"!=typeof VideoFrame&&t instanceof VideoFrame?(c.width=t.displayWidth,c.height=t.displayHeight):(c.width=t.width,c.height=t.height),c}this.allocateTextureUnit=function(){const t=_;return t>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+r.maxTextures),_+=1,t},this.resetTextureUnits=function(){_=0},this.setTexture2D=b,this.setTexture2DArray=function(e,r){const s=i.get(e);!1===e.isRenderTargetTexture&&e.version>0&&s.__version!==e.version?R(s,e,r):n.bindTexture(t.TEXTURE_2D_ARRAY,s.__webglTexture,t.TEXTURE0+r)},this.setTexture3D=function(e,r){const s=i.get(e);!1===e.isRenderTargetTexture&&e.version>0&&s.__version!==e.version?R(s,e,r):n.bindTexture(t.TEXTURE_3D,s.__webglTexture,t.TEXTURE0+r)},this.setTextureCube=function(e,a){const o=i.get(e);e.version>0&&o.__version!==e.version?function(e,a,o){if(6!==a.image.length)return;const l=Q(e,a),c=a.source;n.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture,t.TEXTURE0+o);const h=i.get(c);if(c.version!==h.__version||!0===l){n.activeTexture(t.TEXTURE0+o);const e=_i.getPrimaries(_i.workingColorSpace),i=a.colorSpace===sn?null:_i.getPrimaries(a.colorSpace),A=a.colorSpace===sn||e===i?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,a.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,a.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,A);const u=a.isCompressedTexture||a.image[0].isCompressedTexture,d=a.image[0]&&a.image[0].isDataTexture,p=[];for(let t=0;t<6;t++)p[t]=u||d?d?a.image[t].image:a.image[t]:g(a.image[t],!0,r.maxCubemapSize),p[t]=G(a,p[t]);const y=p[0],x=s.convert(a.format,a.colorSpace),I=s.convert(a.type),E=v(a.internalFormat,x,I,a.colorSpace),w=!0!==a.isVideoTexture,_=void 0===h.__version||!0===l,b=c.dataReady;let B,S=C(a,y);if(T(t.TEXTURE_CUBE_MAP,a),u){w&&_&&n.texStorage2D(t.TEXTURE_CUBE_MAP,S,E,y.width,y.height);for(let e=0;e<6;e++){B=p[e].mipmaps;for(let i=0;i<B.length;i++){const r=B[i];a.format!==Kt?null!==x?w?b&&n.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,r.width,r.height,x,r.data):n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,E,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):w?b&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,r.width,r.height,x,I,r.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,E,r.width,r.height,0,x,I,r.data)}}}else{if(B=a.mipmaps,w&&_){B.length>0&&S++;const e=H(p[0]);n.texStorage2D(t.TEXTURE_CUBE_MAP,S,E,e.width,e.height)}for(let e=0;e<6;e++)if(d){w?b&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,p[e].width,p[e].height,x,I,p[e].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,E,p[e].width,p[e].height,0,x,I,p[e].data);for(let i=0;i<B.length;i++){const r=B[i].image[e].image;w?b&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,r.width,r.height,x,I,r.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,E,r.width,r.height,0,x,I,r.data)}}else{w?b&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,x,I,p[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,E,x,I,p[e]);for(let i=0;i<B.length;i++){const r=B[i];w?b&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,x,I,r.image[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,E,x,I,r.image[e])}}}f(a)&&m(t.TEXTURE_CUBE_MAP),h.__version=c.version,a.onUpdate&&a.onUpdate(a)}e.__version=a.version}(o,e,a):n.bindTexture(t.TEXTURE_CUBE_MAP,o.__webglTexture,t.TEXTURE0+a)},this.rebindTextures=function(e,n,r){const s=i.get(e);void 0!==n&&U(s.__webglFramebuffer,e,e.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,0),void 0!==r&&F(e)},this.setupRenderTarget=function(e){const r=e.texture,o=i.get(e),l=i.get(r);e.addEventListener("dispose",E);const c=e.textures,h=!0===e.isWebGLCubeRenderTarget,A=c.length>1;if(A||(void 0===l.__webglTexture&&(l.__webglTexture=t.createTexture()),l.__version=r.version,a.memory.textures++),h){o.__webglFramebuffer=[];for(let e=0;e<6;e++)if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer[e]=[];for(let n=0;n<r.mipmaps.length;n++)o.__webglFramebuffer[e][n]=t.createFramebuffer()}else o.__webglFramebuffer[e]=t.createFramebuffer()}else{if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer=[];for(let e=0;e<r.mipmaps.length;e++)o.__webglFramebuffer[e]=t.createFramebuffer()}else o.__webglFramebuffer=t.createFramebuffer();if(A)for(let e=0,n=c.length;e<n;e++){const n=i.get(c[e]);void 0===n.__webglTexture&&(n.__webglTexture=t.createTexture(),a.memory.textures++)}if(e.samples>0&&!1===z(e)){o.__webglMultisampledFramebuffer=t.createFramebuffer(),o.__webglColorRenderbuffer=[],n.bindFramebuffer(t.FRAMEBUFFER,o.__webglMultisampledFramebuffer);for(let n=0;n<c.length;n++){const i=c[n];o.__webglColorRenderbuffer[n]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,o.__webglColorRenderbuffer[n]);const r=s.convert(i.format,i.colorSpace),a=s.convert(i.type),l=v(i.internalFormat,r,a,i.colorSpace,!0===e.isXRRenderTarget),h=O(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,h,l,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+n,t.RENDERBUFFER,o.__webglColorRenderbuffer[n])}t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(o.__webglDepthRenderbuffer=t.createRenderbuffer(),P(o.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(t.FRAMEBUFFER,null)}}if(h){n.bindTexture(t.TEXTURE_CUBE_MAP,l.__webglTexture),T(t.TEXTURE_CUBE_MAP,r);for(let n=0;n<6;n++)if(r.mipmaps&&r.mipmaps.length>0)for(let i=0;i<r.mipmaps.length;i++)U(o.__webglFramebuffer[n][i],e,r,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,i);else U(o.__webglFramebuffer[n],e,r,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);f(r)&&m(t.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(A){for(let r=0,s=c.length;r<s;r++){const s=c[r],a=i.get(s);let l=t.TEXTURE_2D;(e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(l=e.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),n.bindTexture(l,a.__webglTexture),T(l,s),U(o.__webglFramebuffer,e,s,t.COLOR_ATTACHMENT0+r,l,0),f(s)&&m(l)}n.unbindTexture()}else{let i=t.TEXTURE_2D;if((e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(i=e.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),n.bindTexture(i,l.__webglTexture),T(i,r),r.mipmaps&&r.mipmaps.length>0)for(let n=0;n<r.mipmaps.length;n++)U(o.__webglFramebuffer[n],e,r,t.COLOR_ATTACHMENT0,i,n);else U(o.__webglFramebuffer,e,r,t.COLOR_ATTACHMENT0,i,0);f(r)&&m(i),n.unbindTexture()}e.depthBuffer&&F(e)},this.updateRenderTargetMipmap=function(t){const e=t.textures;for(let r=0,s=e.length;r<s;r++){const s=e[r];if(f(s)){const e=y(t),r=i.get(s).__webglTexture;n.bindTexture(e,r),m(e),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(e.samples>0)if(!1===z(e)){const r=e.textures,s=e.width,a=e.height;let o=t.COLOR_BUFFER_BIT;const c=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,h=i.get(e),A=r.length>1;if(A)for(let e=0;e<r.length;e++)n.bindFramebuffer(t.FRAMEBUFFER,h.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,null),n.bindFramebuffer(t.FRAMEBUFFER,h.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,null,0);n.bindFramebuffer(t.READ_FRAMEBUFFER,h.__webglMultisampledFramebuffer);const u=e.texture.mipmaps;u&&u.length>0?n.bindFramebuffer(t.DRAW_FRAMEBUFFER,h.__webglFramebuffer[0]):n.bindFramebuffer(t.DRAW_FRAMEBUFFER,h.__webglFramebuffer);for(let n=0;n<r.length;n++){if(e.resolveDepthBuffer&&(e.depthBuffer&&(o|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&e.resolveStencilBuffer&&(o|=t.STENCIL_BUFFER_BIT)),A){t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,h.__webglColorRenderbuffer[n]);const e=i.get(r[n]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}t.blitFramebuffer(0,0,s,a,0,0,s,a,o,t.NEAREST),!0===l&&(N.length=0,k.length=0,N.push(t.COLOR_ATTACHMENT0+n),e.depthBuffer&&!1===e.resolveDepthBuffer&&(N.push(c),k.push(c),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,k)),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,N))}if(n.bindFramebuffer(t.READ_FRAMEBUFFER,null),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),A)for(let e=0;e<r.length;e++){n.bindFramebuffer(t.FRAMEBUFFER,h.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,h.__webglColorRenderbuffer[e]);const s=i.get(r[e]).__webglTexture;n.bindFramebuffer(t.FRAMEBUFFER,h.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,s,0)}n.bindFramebuffer(t.DRAW_FRAMEBUFFER,h.__webglMultisampledFramebuffer)}else if(e.depthBuffer&&!1===e.resolveDepthBuffer&&l){const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[n])}},this.setupDepthRenderbuffer=F,this.setupFrameBufferTexture=U,this.useMultisampledRTT=z}function Eg(t,e){return{convert:function(n,i=sn){let r;const s=_i.getTransfer(i);if(n===Lt)return t.UNSIGNED_BYTE;if(n===Vt)return t.UNSIGNED_SHORT_4_4_4_4;if(n===qt)return t.UNSIGNED_SHORT_5_5_5_1;if(n===Wt)return t.UNSIGNED_INT_5_9_9_9_REV;if(n===Jt)return t.UNSIGNED_INT_10F_11F_11F_REV;if(n===Ft)return t.BYTE;if(n===Nt)return t.SHORT;if(n===kt)return t.UNSIGNED_SHORT;if(n===Ot)return t.INT;if(n===zt)return t.UNSIGNED_INT;if(n===Gt)return t.FLOAT;if(n===Ht)return t.HALF_FLOAT;if(n===jt)return t.ALPHA;if(n===Xt)return t.RGB;if(n===Kt)return t.RGBA;if(n===Zt)return t.DEPTH_COMPONENT;if(n===$t)return t.DEPTH_STENCIL;if(n===te)return t.RED;if(n===ee)return t.RED_INTEGER;if(n===ne)return t.RG;if(n===ie)return t.RG_INTEGER;if(n===se)return t.RGBA_INTEGER;if(n===ae||n===oe||n===le||n===ce)if(s===cn){if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===r)return null;if(n===ae)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===oe)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===le)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===ce)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(r=e.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(n===ae)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===oe)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===le)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===ce)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===he||n===Ae||n===ue||n===de){if(r=e.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(n===he)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Ae)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===ue)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===de)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===pe||n===ge||n===fe){if(r=e.get("WEBGL_compressed_texture_etc"),null===r)return null;if(n===pe||n===ge)return s===cn?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===fe)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(n===me||n===ye||n===ve||n===xe||n===Ce||n===Ie||n===Ee||n===we||n===_e||n===be||n===Be||n===Se||n===Me||n===Te){if(r=e.get("WEBGL_compressed_texture_astc"),null===r)return null;if(n===me)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===ye)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===ve)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===xe)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Ce)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Ie)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Ee)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===we)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===_e)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===be)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Be)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Se)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Me)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Te)return s===cn?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===Qe||n===De||n===Re){if(r=e.get("EXT_texture_compression_bptc"),null===r)return null;if(n===Qe)return s===cn?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===De)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Re)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(n===Ue||n===Pe||n===Le||n===Fe){if(r=e.get("EXT_texture_compression_rgtc"),null===r)return null;if(n===Ue)return r.COMPRESSED_RED_RGTC1_EXT;if(n===Pe)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Le)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Fe)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===Yt?t.UNSIGNED_INT_24_8:void 0!==t[n]?t[n]:null}}}class wg{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e){if(null===this.texture){const n=new ml(t.texture);t.depthNear===e.depthNear&&t.depthFar===e.depthFar||(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(t){if(null!==this.texture&&null===this.mesh){const e=t.cameras[0].viewport,n=new ia({vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new Xs(new Dc(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class _g extends Xn{constructor(t,e){super();const n=this;let i=null,r=1,s=null,a="local-floor",o=1,l=null,c=null,h=null,A=null,u=null,d=null;const p="undefined"!=typeof XRWebGLBinding,g=new wg,f={},m=e.getContextAttributes();let y=null,v=null;const x=[],C=[],I=new li;let E=null;const w=new la;w.viewport=new Li;const _=new la;_.viewport=new Li;const b=[w,_],B=new yA;let S=null,M=null;function T(t){const e=C.indexOf(t.inputSource);if(-1===e)return;const n=x[e];void 0!==n&&(n.update(t.inputSource,t.frame,l||s),n.dispatchEvent({type:t.type,data:t.inputSource}))}function Q(){i.removeEventListener("select",T),i.removeEventListener("selectstart",T),i.removeEventListener("selectend",T),i.removeEventListener("squeeze",T),i.removeEventListener("squeezestart",T),i.removeEventListener("squeezeend",T),i.removeEventListener("end",Q),i.removeEventListener("inputsourceschange",D);for(let t=0;t<x.length;t++){const e=C[t];null!==e&&(C[t]=null,x[t].disconnect(e))}S=null,M=null,g.reset();for(const t in f)delete f[t];t.setRenderTarget(y),u=null,A=null,h=null,i=null,v=null,F.stop(),n.isPresenting=!1,t.setPixelRatio(E),t.setSize(I.width,I.height,!1),n.dispatchEvent({type:"sessionend"})}function D(t){for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=C.indexOf(n);i>=0&&(C[i]=null,x[i].disconnect(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e];let i=C.indexOf(n);if(-1===i){for(let t=0;t<x.length;t++){if(t>=C.length){C.push(n),i=t;break}if(null===C[t]){C[t]=n,i=t;break}}if(-1===i)break}const r=x[i];r&&r.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=x[t];return void 0===e&&(e=new ga,x[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=x[t];return void 0===e&&(e=new ga,x[t]=e),e.getGripSpace()},this.getHand=function(t){let e=x[t];return void 0===e&&(e=new ga,x[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){r=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||s},this.setReferenceSpace=function(t){l=t},this.getBaseLayer=function(){return null!==A?A:u},this.getBinding=function(){return null===h&&p&&(h=new XRWebGLBinding(i,e)),h},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(c){if(i=c,null!==i){if(y=t.getRenderTarget(),i.addEventListener("select",T),i.addEventListener("selectstart",T),i.addEventListener("selectend",T),i.addEventListener("squeeze",T),i.addEventListener("squeezestart",T),i.addEventListener("squeezeend",T),i.addEventListener("end",Q),i.addEventListener("inputsourceschange",D),!0!==m.xrCompatible&&await e.makeXRCompatible(),E=t.getPixelRatio(),t.getSize(I),p&&"createProjectionLayer"in XRWebGLBinding.prototype){let n=null,s=null,a=null;m.depth&&(a=m.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,n=m.stencil?$t:Zt,s=m.stencil?Yt:zt);const o={colorFormat:e.RGBA8,depthFormat:a,scaleFactor:r};h=this.getBinding(),A=h.createProjectionLayer(o),i.updateRenderState({layers:[A]}),t.setPixelRatio(1),t.setSize(A.textureWidth,A.textureHeight,!1),v=new Ni(A.textureWidth,A.textureHeight,{format:Kt,type:Lt,depthTexture:new fl(A.textureWidth,A.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:m.stencil,colorSpace:t.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:!1===A.ignoreDepthValues,resolveStencilBuffer:!1===A.ignoreDepthValues})}else{const n={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r};u=new XRWebGLLayer(i,e,n),i.updateRenderState({baseLayer:u}),t.setPixelRatio(1),t.setSize(u.framebufferWidth,u.framebufferHeight,!1),v=new Ni(u.framebufferWidth,u.framebufferHeight,{format:Kt,type:Lt,colorSpace:t.outputColorSpace,stencilBuffer:m.stencil,resolveDepthBuffer:!1===u.ignoreDepthValues,resolveStencilBuffer:!1===u.ignoreDepthValues})}v.isXRRenderTarget=!0,this.setFoveation(o),l=null,s=await i.requestReferenceSpace(a),F.setContext(i),F.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==i)return i.environmentBlendMode},this.getDepthTexture=function(){return g.getDepthTexture()};const R=new hi,U=new hi;function P(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===i)return;let e=t.near,n=t.far;null!==g.texture&&(g.depthNear>0&&(e=g.depthNear),g.depthFar>0&&(n=g.depthFar)),B.near=_.near=w.near=e,B.far=_.far=w.far=n,S===B.near&&M===B.far||(i.updateRenderState({depthNear:B.near,depthFar:B.far}),S=B.near,M=B.far),B.layers.mask=6|t.layers.mask,w.layers.mask=3&B.layers.mask,_.layers.mask=5&B.layers.mask;const r=t.parent,s=B.cameras;P(B,r);for(let t=0;t<s.length;t++)P(s[t],r);2===s.length?function(t,e,n){R.setFromMatrixPosition(e.matrixWorld),U.setFromMatrixPosition(n.matrixWorld);const i=R.distanceTo(U),r=e.projectionMatrix.elements,s=n.projectionMatrix.elements,a=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],A=(s[8]+1)/s[0],u=a*h,d=a*A,p=i/(-h+A),g=p*-h;if(e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(g),t.translateZ(p),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert(),-1===r[10])t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const e=a+p,n=o+p,r=u-g,s=d+(i-g),h=l*o/n*e,A=c*o/n*e;t.projectionMatrix.makePerspective(r,s,h,A,e,n),t.projectionMatrixInverse.copy(t.projectionMatrix).invert()}}(B,w,_):B.projectionMatrix.copy(w.projectionMatrix),function(t,e,n){null===n?t.matrix.copy(e.matrixWorld):(t.matrix.copy(n.matrixWorld),t.matrix.invert(),t.matrix.multiply(e.matrixWorld)),t.matrix.decompose(t.position,t.quaternion,t.scale),t.updateMatrixWorld(!0),t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse),t.isPerspectiveCamera&&(t.fov=2*ti*Math.atan(1/t.projectionMatrix.elements[5]),t.zoom=1)}(t,B,r)},this.getCamera=function(){return B},this.getFoveation=function(){if(null!==A||null!==u)return o},this.setFoveation=function(t){o=t,null!==A&&(A.fixedFoveation=t),null!==u&&void 0!==u.fixedFoveation&&(u.fixedFoveation=t)},this.hasDepthSensing=function(){return null!==g.texture},this.getDepthSensingMesh=function(){return g.getMesh(B)},this.getCameraTexture=function(t){return f[t]};let L=null;const F=new Ku;F.setAnimationLoop(function(e,r){if(c=r.getViewerPose(l||s),d=r,null!==c){const e=c.views;null!==u&&(t.setRenderTargetFramebuffer(v,u.framebuffer),t.setRenderTarget(v));let r=!1;e.length!==B.cameras.length&&(B.cameras.length=0,r=!0);for(let n=0;n<e.length;n++){const i=e[n];let s=null;if(null!==u)s=u.getViewport(i);else{const e=h.getViewSubImage(A,i);s=e.viewport,0===n&&(t.setRenderTargetTextures(v,e.colorTexture,e.depthStencilTexture),t.setRenderTarget(v))}let a=b[n];void 0===a&&(a=new la,a.layers.enable(n),a.viewport=new Li,b[n]=a),a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.quaternion,a.scale),a.projectionMatrix.fromArray(i.projectionMatrix),a.projectionMatrixInverse.copy(a.projectionMatrix).invert(),a.viewport.set(s.x,s.y,s.width,s.height),0===n&&(B.matrix.copy(a.matrix),B.matrix.decompose(B.position,B.quaternion,B.scale)),!0===r&&B.cameras.push(a)}const s=i.enabledFeatures;if(s&&s.includes("depth-sensing")&&"gpu-optimized"==i.depthUsage&&p){h=n.getBinding();const t=h.getDepthInformation(e[0]);t&&t.isValid&&t.texture&&g.init(t,i.renderState)}if(s&&s.includes("camera-access")&&p){t.state.unbindTexture(),h=n.getBinding();for(let t=0;t<e.length;t++){const n=e[t].camera;if(n){let t=f[n];t||(t=new ml,f[n]=t);const e=h.getCameraImage(n);t.sourceTexture=e}}}}for(let t=0;t<x.length;t++){const e=C[t],n=x[t];null!==e&&void 0!==n&&n.update(e,r,l||s)}L&&L(e,r),r.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:r}),d=null}),this.setAnimationLoop=function(t){L=t},this.dispose=function(){}}}const bg=new br,Bg=new fr;function Sg(t,e){function n(t,e){!0===t.matrixAutoUpdate&&t.updateMatrix(),e.value.copy(t.matrix)}function i(t,i){t.opacity.value=i.opacity,i.color&&t.diffuse.value.copy(i.color),i.emissive&&t.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(t.map.value=i.map,n(i.map,t.mapTransform)),i.alphaMap&&(t.alphaMap.value=i.alphaMap,n(i.alphaMap,t.alphaMapTransform)),i.bumpMap&&(t.bumpMap.value=i.bumpMap,n(i.bumpMap,t.bumpMapTransform),t.bumpScale.value=i.bumpScale,i.side===I&&(t.bumpScale.value*=-1)),i.normalMap&&(t.normalMap.value=i.normalMap,n(i.normalMap,t.normalMapTransform),t.normalScale.value.copy(i.normalScale),i.side===I&&t.normalScale.value.negate()),i.displacementMap&&(t.displacementMap.value=i.displacementMap,n(i.displacementMap,t.displacementMapTransform),t.displacementScale.value=i.displacementScale,t.displacementBias.value=i.displacementBias),i.emissiveMap&&(t.emissiveMap.value=i.emissiveMap,n(i.emissiveMap,t.emissiveMapTransform)),i.specularMap&&(t.specularMap.value=i.specularMap,n(i.specularMap,t.specularMapTransform)),i.alphaTest>0&&(t.alphaTest.value=i.alphaTest);const r=e.get(i),s=r.envMap,a=r.envMapRotation;s&&(t.envMap.value=s,bg.copy(a),bg.x*=-1,bg.y*=-1,bg.z*=-1,s.isCubeTexture&&!1===s.isRenderTargetTexture&&(bg.y*=-1,bg.z*=-1),t.envMapRotation.value.setFromMatrix4(Bg.makeRotationFromEuler(bg)),t.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1,t.reflectivity.value=i.reflectivity,t.ior.value=i.ior,t.refractionRatio.value=i.refractionRatio),i.lightMap&&(t.lightMap.value=i.lightMap,t.lightMapIntensity.value=i.lightMapIntensity,n(i.lightMap,t.lightMapTransform)),i.aoMap&&(t.aoMap.value=i.aoMap,t.aoMapIntensity.value=i.aoMapIntensity,n(i.aoMap,t.aoMapTransform))}return{refreshFogUniforms:function(e,n){n.color.getRGB(e.fogColor.value,ea(t)),n.isFog?(e.fogNear.value=n.near,e.fogFar.value=n.far):n.isFogExp2&&(e.fogDensity.value=n.density)},refreshMaterialUniforms:function(t,r,s,a,o){r.isMeshBasicMaterial||r.isMeshLambertMaterial?i(t,r):r.isMeshToonMaterial?(i(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,r)):r.isMeshPhongMaterial?(i(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,r)):r.isMeshStandardMaterial?(i(t,r),function(t,e){t.metalness.value=e.metalness,e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap,n(e.metalnessMap,t.metalnessMapTransform)),t.roughness.value=e.roughness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap,n(e.roughnessMap,t.roughnessMapTransform)),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}(t,r),r.isMeshPhysicalMaterial&&function(t,e,i){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap,n(e.sheenColorMap,t.sheenColorMapTransform)),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap,n(e.sheenRoughnessMap,t.sheenRoughnessMapTransform))),e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap,n(e.clearcoatMap,t.clearcoatMapTransform)),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap,n(e.clearcoatRoughnessMap,t.clearcoatRoughnessMapTransform)),e.clearcoatNormalMap&&(t.clearcoatNormalMap.value=e.clearcoatNormalMap,n(e.clearcoatNormalMap,t.clearcoatNormalMapTransform),t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),e.side===I&&t.clearcoatNormalScale.value.negate())),e.dispersion>0&&(t.dispersion.value=e.dispersion),e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap,n(e.iridescenceMap,t.iridescenceMapTransform)),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap,n(e.iridescenceThicknessMap,t.iridescenceThicknessMapTransform))),e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=i.texture,t.transmissionSamplerSize.value.set(i.width,i.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap,n(e.transmissionMap,t.transmissionMapTransform)),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap,n(e.thicknessMap,t.thicknessMapTransform)),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor)),e.anisotropy>0&&(t.anisotropyVector.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation)),e.anisotropyMap&&(t.anisotropyMap.value=e.anisotropyMap,n(e.anisotropyMap,t.anisotropyMapTransform))),t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap,n(e.specularColorMap,t.specularColorMapTransform)),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap,n(e.specularIntensityMap,t.specularIntensityMapTransform))}(t,r,o)):r.isMeshMatcapMaterial?(i(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,r)):r.isMeshDepthMaterial?i(t,r):r.isMeshDistanceMaterial?(i(t,r),function(t,n){const i=e.get(n).light;t.referencePosition.value.setFromMatrixPosition(i.matrixWorld),t.nearDistance.value=i.shadow.camera.near,t.farDistance.value=i.shadow.camera.far}(t,r)):r.isMeshNormalMaterial?i(t,r):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform))}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,i,r){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*i,t.scale.value=.5*r,e.map&&(t.map.value=e.map,n(e.map,t.uvTransform)),e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform)),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,r,s,a):r.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform)),e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform)),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function Mg(t,e,n,i){let r={},s={},a=[];const o=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS);function l(t,e,n,i){const r=t.value,s=e+"_"+n;if(void 0===i[s])return i[s]="number"==typeof r||"boolean"==typeof r?r:r.clone(),!0;{const t=i[s];if("number"==typeof r||"boolean"==typeof r){if(t!==r)return i[s]=r,!0}else if(!1===t.equals(r))return t.copy(r),!0}return!1}function c(t){const e={boundary:0,storage:0};return"number"==typeof t||"boolean"==typeof t?(e.boundary=4,e.storage=4):t.isVector2?(e.boundary=8,e.storage=8):t.isVector3||t.isColor?(e.boundary=16,e.storage=12):t.isVector4?(e.boundary=16,e.storage=16):t.isMatrix3?(e.boundary=48,e.storage=48):t.isMatrix4?(e.boundary=64,e.storage=64):t.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",t),e}function h(e){const n=e.target;n.removeEventListener("dispose",h);const i=a.indexOf(n.__bindingPointIndex);a.splice(i,1),t.deleteBuffer(r[n.id]),delete r[n.id],delete s[n.id]}return{bind:function(t,e){const n=e.program;i.uniformBlockBinding(t,n)},update:function(n,A){let u=r[n.id];void 0===u&&(function(t){const e=t.uniforms;let n=0;for(let t=0,i=e.length;t<i;t++){const i=Array.isArray(e[t])?e[t]:[e[t]];for(let t=0,e=i.length;t<e;t++){const e=i[t],r=Array.isArray(e.value)?e.value:[e.value];for(let t=0,i=r.length;t<i;t++){const i=c(r[t]),s=n%16,a=s%i.boundary,o=s+a;n+=a,0!==o&&16-o<i.storage&&(n+=16-o),e.__data=new Float32Array(i.storage/Float32Array.BYTES_PER_ELEMENT),e.__offset=n,n+=i.storage}}}const i=n%16;i>0&&(n+=16-i),t.__size=n,t.__cache={}}(n),u=function(e){const n=function(){for(let t=0;t<o;t++)if(-1===a.indexOf(t))return a.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();e.__bindingPointIndex=n;const i=t.createBuffer(),r=e.__size,s=e.usage;return t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,r,s),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,n,i),i}(n),r[n.id]=u,n.addEventListener("dispose",h));const d=A.program;i.updateUBOMapping(n,d);const p=e.render.frame;s[n.id]!==p&&(function(e){const n=r[e.id],i=e.uniforms,s=e.__cache;t.bindBuffer(t.UNIFORM_BUFFER,n);for(let e=0,n=i.length;e<n;e++){const n=Array.isArray(i[e])?i[e]:[i[e]];for(let i=0,r=n.length;i<r;i++){const r=n[i];if(!0===l(r,e,i,s)){const e=r.__offset,n=Array.isArray(r.value)?r.value:[r.value];let i=0;for(let s=0;s<n.length;s++){const a=n[s],o=c(a);"number"==typeof a||"boolean"==typeof a?(r.__data[0]=a,t.bufferSubData(t.UNIFORM_BUFFER,e+i,r.__data)):a.isMatrix3?(r.__data[0]=a.elements[0],r.__data[1]=a.elements[1],r.__data[2]=a.elements[2],r.__data[3]=0,r.__data[4]=a.elements[3],r.__data[5]=a.elements[4],r.__data[6]=a.elements[5],r.__data[7]=0,r.__data[8]=a.elements[6],r.__data[9]=a.elements[7],r.__data[10]=a.elements[8],r.__data[11]=0):(a.toArray(r.__data,i),i+=o.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,e,r.__data)}}}t.bindBuffer(t.UNIFORM_BUFFER,null)}(n),s[n.id]=p)},dispose:function(){for(const e in r)t.deleteBuffer(r[e]);a=[],r={},s={}}}}class Tg{constructor(t={}){const{canvas:e=vi(),context:n=null,depth:i=!0,stencil:r=!1,alpha:s=!1,antialias:a=!1,premultipliedAlpha:o=!0,preserveDrawingBuffer:l=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:A=!1,reversedDepthBuffer:u=!1}=t;let d;if(this.isWebGLRenderer=!0,null!==n){if("undefined"!=typeof WebGLRenderingContext&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");d=n.getContextAttributes().alpha}else d=s;const p=new Uint32Array(4),g=new Int32Array(4);let f=null,m=null;const y=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=ot,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const x=this;let w=!1;this._outputColorSpace=an;let _=0,b=0,B=null,S=-1,M=null;const T=new Li,Q=new Li;let D=null;const R=new ls(0);let U=0,P=e.width,L=e.height,F=1,N=null,k=null;const O=new Li(0,0,P,L),z=new Li(0,0,P,L);let G=!1;const H=new vo;let V=!1,q=!1;const Y=new fr,W=new hi,J=new Li,j={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let X=!1;function K(){return null===B?F:1}let Z,$,tt,et,nt,it,rt,st,at,lt,ct,ht,At,ut,dt,pt,gt,ft,mt,yt,vt,xt,Ct,It,Et=n;function wt(t,n){return e.getContext(t,n)}try{const t={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:A};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${h}`),e.addEventListener("webglcontextlost",Bt,!1),e.addEventListener("webglcontextrestored",St,!1),e.addEventListener("webglcontextcreationerror",Mt,!1),null===Et){const e="webgl2";if(Et=wt(e,t),null===Et)throw wt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function _t(){Z=new Sd(Et),Z.init(),xt=new Eg(Et,Z),$=new ld(Et,Z,t,xt),tt=new Cg(Et,Z),$.reversedDepthBuffer&&u&&tt.buffers.depth.setReversed(!0),et=new Qd(Et),nt=new lg,it=new Ig(Et,Z,tt,nt,$,xt,et),rt=new hd(x),st=new Bd(x),at=new Zu(Et),Ct=new ad(Et,at),lt=new Md(Et,at,et,Ct),ct=new Rd(Et,lt,at,et),mt=new Dd(Et,$,it),pt=new cd(nt),ht=new og(x,rt,st,Z,$,Ct,pt),At=new Sg(x,nt),ut=new ug,dt=new yg(Z),ft=new sd(x,rt,st,tt,ct,d,o),gt=new vg(x,ct,$),It=new Mg(Et,et,$,tt),yt=new od(Et,Z,et),vt=new Td(Et,Z,et),et.programs=ht.programs,x.capabilities=$,x.extensions=Z,x.properties=nt,x.renderLists=ut,x.shadowMap=gt,x.state=tt,x.info=et}_t();const bt=new _g(x,Et);function Bt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function St(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const t=et.autoReset,e=gt.enabled,n=gt.autoUpdate,i=gt.needsUpdate,r=gt.type;_t(),et.autoReset=t,gt.enabled=e,gt.autoUpdate=n,gt.needsUpdate=i,gt.type=r}function Mt(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function Tt(t){const e=t.target;e.removeEventListener("dispose",Tt),function(t){(function(t){const e=nt.get(t).programs;void 0!==e&&(e.forEach(function(t){ht.releaseProgram(t)}),t.isShaderMaterial&&ht.releaseShaderCache(t))})(t),nt.remove(t)}(e)}function Qt(t,e,n){!0===t.transparent&&t.side===E&&!1===t.forceSinglePass?(t.side=I,t.needsUpdate=!0,jt(t,e,n),t.side=C,t.needsUpdate=!0,jt(t,e,n),t.side=E):jt(t,e,n)}this.xr=bt,this.getContext=function(){return Et},this.getContextAttributes=function(){return Et.getContextAttributes()},this.forceContextLoss=function(){const t=Z.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=Z.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return F},this.setPixelRatio=function(t){void 0!==t&&(F=t,this.setSize(P,L,!1))},this.getSize=function(t){return t.set(P,L)},this.setSize=function(t,n,i=!0){bt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(P=t,L=n,e.width=Math.floor(t*F),e.height=Math.floor(n*F),!0===i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(P*F,L*F).floor()},this.setDrawingBufferSize=function(t,n,i){P=t,L=n,F=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(T)},this.getViewport=function(t){return t.copy(O)},this.setViewport=function(t,e,n,i){t.isVector4?O.set(t.x,t.y,t.z,t.w):O.set(t,e,n,i),tt.viewport(T.copy(O).multiplyScalar(F).round())},this.getScissor=function(t){return t.copy(z)},this.setScissor=function(t,e,n,i){t.isVector4?z.set(t.x,t.y,t.z,t.w):z.set(t,e,n,i),tt.scissor(Q.copy(z).multiplyScalar(F).round())},this.getScissorTest=function(){return G},this.setScissorTest=function(t){tt.setScissorTest(G=t)},this.setOpaqueSort=function(t){N=t},this.setTransparentSort=function(t){k=t},this.getClearColor=function(t){return t.copy(ft.getClearColor())},this.setClearColor=function(){ft.setClearColor(...arguments)},this.getClearAlpha=function(){return ft.getClearAlpha()},this.setClearAlpha=function(){ft.setClearAlpha(...arguments)},this.clear=function(t=!0,e=!0,n=!0){let i=0;if(t){let t=!1;if(null!==B){const e=B.texture.format;t=e===se||e===ie||e===ee}if(t){const t=B.texture.type,e=t===Lt||t===zt||t===kt||t===Yt||t===Vt||t===qt,n=ft.getClearColor(),i=ft.getClearAlpha(),r=n.r,s=n.g,a=n.b;e?(p[0]=r,p[1]=s,p[2]=a,p[3]=i,Et.clearBufferuiv(Et.COLOR,0,p)):(g[0]=r,g[1]=s,g[2]=a,g[3]=i,Et.clearBufferiv(Et.COLOR,0,g))}else i|=Et.COLOR_BUFFER_BIT}e&&(i|=Et.DEPTH_BUFFER_BIT),n&&(i|=Et.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),Et.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Bt,!1),e.removeEventListener("webglcontextrestored",St,!1),e.removeEventListener("webglcontextcreationerror",Mt,!1),ft.dispose(),ut.dispose(),dt.dispose(),nt.dispose(),rt.dispose(),st.dispose(),ct.dispose(),Ct.dispose(),It.dispose(),ht.dispose(),bt.dispose(),bt.removeEventListener("sessionstart",Rt),bt.removeEventListener("sessionend",Pt),Ft.stop()},this.renderBufferDirect=function(t,e,n,i,r,s){null===e&&(e=j);const a=r.isMesh&&r.matrixWorld.determinant()<0,o=function(t,e,n,i,r){!0!==e.isScene&&(e=j),it.resetTextureUnits();const s=e.fog,a=i.isMeshStandardMaterial?e.environment:null,o=null===B?x.outputColorSpace:!0===B.isXRRenderTarget?B.texture.colorSpace:on,l=(i.isMeshStandardMaterial?st:rt).get(i.envMap||a),c=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,h=!!n.attributes.tangent&&(!!i.normalMap||i.anisotropy>0),A=!!n.morphAttributes.position,u=!!n.morphAttributes.normal,d=!!n.morphAttributes.color;let p=ot;i.toneMapped&&(null!==B&&!0!==B.isXRRenderTarget||(p=x.toneMapping));const g=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,f=void 0!==g?g.length:0,y=nt.get(i),v=m.state.lights;if(!0===V&&(!0===q||t!==M)){const e=t===M&&i.id===S;pt.setState(i,t,e)}let C=!1;i.version===y.__version?y.needsLights&&y.lightsStateVersion!==v.state.version||y.outputColorSpace!==o||r.isBatchedMesh&&!1===y.batching?C=!0:r.isBatchedMesh||!0!==y.batching?r.isBatchedMesh&&!0===y.batchingColor&&null===r.colorTexture||r.isBatchedMesh&&!1===y.batchingColor&&null!==r.colorTexture||r.isInstancedMesh&&!1===y.instancing?C=!0:r.isInstancedMesh||!0!==y.instancing?r.isSkinnedMesh&&!1===y.skinning?C=!0:r.isSkinnedMesh||!0!==y.skinning?r.isInstancedMesh&&!0===y.instancingColor&&null===r.instanceColor||r.isInstancedMesh&&!1===y.instancingColor&&null!==r.instanceColor||r.isInstancedMesh&&!0===y.instancingMorph&&null===r.morphTexture||r.isInstancedMesh&&!1===y.instancingMorph&&null!==r.morphTexture||y.envMap!==l||!0===i.fog&&y.fog!==s?C=!0:void 0===y.numClippingPlanes||y.numClippingPlanes===pt.numPlanes&&y.numIntersection===pt.numIntersection?(y.vertexAlphas!==c||y.vertexTangents!==h||y.morphTargets!==A||y.morphNormals!==u||y.morphColors!==d||y.toneMapping!==p||y.morphTargetsCount!==f)&&(C=!0):C=!0:C=!0:C=!0:C=!0:(C=!0,y.__version=i.version);let I=y.currentProgram;!0===C&&(I=jt(i,e,r));let E=!1,w=!1,_=!1;const b=I.getUniforms(),T=y.uniforms;if(tt.useProgram(I.program)&&(E=!0,w=!0,_=!0),i.id!==S&&(S=i.id,w=!0),E||M!==t){tt.buffers.depth.getReversed()&&!0!==t.reversedDepth&&(t._reversedDepth=!0,t.updateProjectionMatrix()),b.setValue(Et,"projectionMatrix",t.projectionMatrix),b.setValue(Et,"viewMatrix",t.matrixWorldInverse);const e=b.map.cameraPosition;void 0!==e&&e.setValue(Et,W.setFromMatrixPosition(t.matrixWorld)),$.logarithmicDepthBuffer&&b.setValue(Et,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&b.setValue(Et,"isOrthographic",!0===t.isOrthographicCamera),M!==t&&(M=t,w=!0,_=!0)}if(r.isSkinnedMesh){b.setOptional(Et,r,"bindMatrix"),b.setOptional(Et,r,"bindMatrixInverse");const t=r.skeleton;t&&(null===t.boneTexture&&t.computeBoneTexture(),b.setValue(Et,"boneTexture",t.boneTexture,it))}r.isBatchedMesh&&(b.setOptional(Et,r,"batchingTexture"),b.setValue(Et,"batchingTexture",r._matricesTexture,it),b.setOptional(Et,r,"batchingIdTexture"),b.setValue(Et,"batchingIdTexture",r._indirectTexture,it),b.setOptional(Et,r,"batchingColorTexture"),null!==r._colorsTexture&&b.setValue(Et,"batchingColorTexture",r._colorsTexture,it));const Q=n.morphAttributes;var D,R;if(void 0===Q.position&&void 0===Q.normal&&void 0===Q.color||mt.update(r,n,I),(w||y.receiveShadow!==r.receiveShadow)&&(y.receiveShadow=r.receiveShadow,b.setValue(Et,"receiveShadow",r.receiveShadow)),i.isMeshGouraudMaterial&&null!==i.envMap&&(T.envMap.value=l,T.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),i.isMeshStandardMaterial&&null===i.envMap&&null!==e.environment&&(T.envMapIntensity.value=e.environmentIntensity),w&&(b.setValue(Et,"toneMappingExposure",x.toneMappingExposure),y.needsLights&&(R=_,(D=T).ambientLightColor.needsUpdate=R,D.lightProbe.needsUpdate=R,D.directionalLights.needsUpdate=R,D.directionalLightShadows.needsUpdate=R,D.pointLights.needsUpdate=R,D.pointLightShadows.needsUpdate=R,D.spotLights.needsUpdate=R,D.spotLightShadows.needsUpdate=R,D.rectAreaLights.needsUpdate=R,D.hemisphereLights.needsUpdate=R),s&&!0===i.fog&&At.refreshFogUniforms(T,s),At.refreshMaterialUniforms(T,i,F,L,m.state.transmissionRenderTarget[t.id]),Np.upload(Et,Xt(y),T,it)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(Np.upload(Et,Xt(y),T,it),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&b.setValue(Et,"center",r.center),b.setValue(Et,"modelViewMatrix",r.modelViewMatrix),b.setValue(Et,"normalMatrix",r.normalMatrix),b.setValue(Et,"modelMatrix",r.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const t=i.uniformsGroups;for(let e=0,n=t.length;e<n;e++){const n=t[e];It.update(n,I),It.bind(n,I)}}return I}(t,e,n,i,r);tt.setMaterial(i,a);let l=n.index,c=1;if(!0===i.wireframe){if(l=lt.getWireframeAttribute(n),void 0===l)return;c=2}const h=n.drawRange,A=n.attributes.position;let u=h.start*c,d=(h.start+h.count)*c;null!==s&&(u=Math.max(u,s.start*c),d=Math.min(d,(s.start+s.count)*c)),null!==l?(u=Math.max(u,0),d=Math.min(d,l.count)):null!=A&&(u=Math.max(u,0),d=Math.min(d,A.count));const p=d-u;if(p<0||p===1/0)return;let g;Ct.setup(r,i,o,n,l);let f=yt;if(null!==l&&(g=at.get(l),f=vt,f.setIndex(g)),r.isMesh)!0===i.wireframe?(tt.setLineWidth(i.wireframeLinewidth*K()),f.setMode(Et.LINES)):f.setMode(Et.TRIANGLES);else if(r.isLine){let t=i.linewidth;void 0===t&&(t=1),tt.setLineWidth(t*K()),r.isLineSegments?f.setMode(Et.LINES):r.isLineLoop?f.setMode(Et.LINE_LOOP):f.setMode(Et.LINE_STRIP)}else r.isPoints?f.setMode(Et.POINTS):r.isSprite&&f.setMode(Et.TRIANGLES);if(r.isBatchedMesh)if(null!==r._multiDrawInstances)Ci("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),f.renderMultiDrawInstances(r._multiDrawStarts,r._multiDrawCounts,r._multiDrawCount,r._multiDrawInstances);else if(Z.get("WEBGL_multi_draw"))f.renderMultiDraw(r._multiDrawStarts,r._multiDrawCounts,r._multiDrawCount);else{const t=r._multiDrawStarts,e=r._multiDrawCounts,n=r._multiDrawCount,s=l?at.get(l).bytesPerElement:1,a=nt.get(i).currentProgram.getUniforms();for(let i=0;i<n;i++)a.setValue(Et,"_gl_DrawID",i),f.render(t[i]/s,e[i])}else if(r.isInstancedMesh)f.renderInstances(u,p,r.count);else if(n.isInstancedBufferGeometry){const t=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,e=Math.min(n.instanceCount,t);f.renderInstances(u,p,e)}else f.render(u,p)},this.compile=function(t,e,n=null){null===n&&(n=t),m=dt.get(n),m.init(e),v.push(m),n.traverseVisible(function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))}),t!==n&&t.traverseVisible(function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))}),m.setupLights();const i=new Set;return t.traverse(function(t){if(!(t.isMesh||t.isPoints||t.isLine||t.isSprite))return;const e=t.material;if(e)if(Array.isArray(e))for(let r=0;r<e.length;r++){const s=e[r];Qt(s,n,t),i.add(s)}else Qt(e,n,t),i.add(e)}),m=v.pop(),i},this.compileAsync=function(t,e,n=null){const i=this.compile(t,e,n);return new Promise(e=>{function n(){i.forEach(function(t){nt.get(t).currentProgram.isReady()&&i.delete(t)}),0!==i.size?setTimeout(n,10):e(t)}null!==Z.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)})};let Dt=null;function Rt(){Ft.stop()}function Pt(){Ft.start()}const Ft=new Ku;function Nt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)m.pushLight(t),t.castShadow&&m.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||H.intersectsSprite(t)){i&&J.setFromMatrixPosition(t.matrixWorld).applyMatrix4(Y);const e=ct.update(t),r=t.material;r.visible&&f.push(t,e,r,n,J.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||H.intersectsObject(t))){const e=ct.update(t),r=t.material;if(i&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),J.copy(t.boundingSphere.center)):(null===e.boundingSphere&&e.computeBoundingSphere(),J.copy(e.boundingSphere.center)),J.applyMatrix4(t.matrixWorld).applyMatrix4(Y)),Array.isArray(r)){const i=e.groups;for(let s=0,a=i.length;s<a;s++){const a=i[s],o=r[a.materialIndex];o&&o.visible&&f.push(t,e,o,n,J.z,a)}}else r.visible&&f.push(t,e,r,n,J.z,null)}const r=t.children;for(let t=0,s=r.length;t<s;t++)Nt(r[t],e,n,i)}function Ot(t,e,n,i){const r=t.opaque,s=t.transmissive,a=t.transparent;m.setupLightsView(n),!0===V&&pt.setGlobalState(x.clippingPlanes,n),i&&tt.viewport(T.copy(i)),r.length>0&&Wt(r,e,n),s.length>0&&Wt(s,e,n),a.length>0&&Wt(a,e,n),tt.buffers.depth.setTest(!0),tt.buffers.depth.setMask(!0),tt.buffers.color.setMask(!0),tt.setPolygonOffset(!1)}function Gt(t,e,n,i){if(null!==(!0===n.isScene?n.overrideMaterial:null))return;void 0===m.state.transmissionRenderTarget[i.id]&&(m.state.transmissionRenderTarget[i.id]=new Ni(1,1,{generateMipmaps:!0,type:Z.has("EXT_color_buffer_half_float")||Z.has("EXT_color_buffer_float")?Ht:Lt,minFilter:Ut,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:_i.workingColorSpace}));const s=m.state.transmissionRenderTarget[i.id],a=i.viewport||T;s.setSize(a.z*x.transmissionResolutionScale,a.w*x.transmissionResolutionScale);const o=x.getRenderTarget(),l=x.getActiveCubeFace(),c=x.getActiveMipmapLevel();x.setRenderTarget(s),x.getClearColor(R),U=x.getClearAlpha(),U<1&&x.setClearColor(16777215,.5),x.clear(),X&&ft.render(n);const h=x.toneMapping;x.toneMapping=ot;const A=i.viewport;if(void 0!==i.viewport&&(i.viewport=void 0),m.setupLightsView(i),!0===V&&pt.setGlobalState(x.clippingPlanes,i),Wt(t,n,i),it.updateMultisampleRenderTarget(s),it.updateRenderTargetMipmap(s),!1===Z.has("WEBGL_multisampled_render_to_texture")){let t=!1;for(let r=0,s=e.length;r<s;r++){const s=e[r],a=s.object,o=s.geometry,l=s.material,c=s.group;if(l.side===E&&a.layers.test(i.layers)){const e=l.side;l.side=I,l.needsUpdate=!0,Jt(a,n,i,o,l,c),l.side=e,l.needsUpdate=!0,t=!0}}!0===t&&(it.updateMultisampleRenderTarget(s),it.updateRenderTargetMipmap(s))}x.setRenderTarget(o,l,c),x.setClearColor(R,U),void 0!==A&&(i.viewport=A),x.toneMapping=h}function Wt(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let r=0,s=t.length;r<s;r++){const s=t[r],a=s.object,o=s.geometry,l=s.group;let c=s.material;!0===c.allowOverride&&null!==i&&(c=i),a.layers.test(n.layers)&&Jt(a,e,n,o,c,l)}}function Jt(t,e,n,i,r,s){t.onBeforeRender(x,e,n,i,r,s),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),r.onBeforeRender(x,e,n,i,t,s),!0===r.transparent&&r.side===E&&!1===r.forceSinglePass?(r.side=I,r.needsUpdate=!0,x.renderBufferDirect(n,e,i,r,t,s),r.side=C,r.needsUpdate=!0,x.renderBufferDirect(n,e,i,r,t,s),r.side=E):x.renderBufferDirect(n,e,i,r,t,s),t.onAfterRender(x,e,n,i,r,s)}function jt(t,e,n){!0!==e.isScene&&(e=j);const i=nt.get(t),r=m.state.lights,s=m.state.shadowsArray,a=r.state.version,o=ht.getParameters(t,r.state,s,e,n),l=ht.getProgramCacheKey(o);let c=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=(t.isMeshStandardMaterial?st:rt).get(t.envMap||i.environment),i.envMapRotation=null!==i.environment&&null===t.envMap?e.environmentRotation:t.envMapRotation,void 0===c&&(t.addEventListener("dispose",Tt),c=new Map,i.programs=c);let h=c.get(l);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===a)return Kt(t,o),h}else o.uniforms=ht.getUniforms(t),t.onBeforeCompile(o,x),h=ht.acquireProgram(o,l),c.set(l,h),i.uniforms=o.uniforms;const A=i.uniforms;return(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(A.clippingPlanes=pt.uniform),Kt(t,o),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=a,i.needsLights&&(A.ambientLightColor.value=r.state.ambient,A.lightProbe.value=r.state.probe,A.directionalLights.value=r.state.directional,A.directionalLightShadows.value=r.state.directionalShadow,A.spotLights.value=r.state.spot,A.spotLightShadows.value=r.state.spotShadow,A.rectAreaLights.value=r.state.rectArea,A.ltc_1.value=r.state.rectAreaLTC1,A.ltc_2.value=r.state.rectAreaLTC2,A.pointLights.value=r.state.point,A.pointLightShadows.value=r.state.pointShadow,A.hemisphereLights.value=r.state.hemi,A.directionalShadowMap.value=r.state.directionalShadowMap,A.directionalShadowMatrix.value=r.state.directionalShadowMatrix,A.spotShadowMap.value=r.state.spotShadowMap,A.spotLightMatrix.value=r.state.spotLightMatrix,A.spotLightMap.value=r.state.spotLightMap,A.pointShadowMap.value=r.state.pointShadowMap,A.pointShadowMatrix.value=r.state.pointShadowMatrix),i.currentProgram=h,i.uniformsList=null,h}function Xt(t){if(null===t.uniformsList){const e=t.currentProgram.getUniforms();t.uniformsList=Np.seqWithValue(e.seq,t.uniforms)}return t.uniformsList}function Kt(t,e){const n=nt.get(t);n.outputColorSpace=e.outputColorSpace,n.batching=e.batching,n.batchingColor=e.batchingColor,n.instancing=e.instancing,n.instancingColor=e.instancingColor,n.instancingMorph=e.instancingMorph,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphColors=e.morphColors,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}Ft.setAnimationLoop(function(t){Dt&&Dt(t)}),"undefined"!=typeof self&&Ft.setContext(self),this.setAnimationLoop=function(t){Dt=t,bt.setAnimationLoop(t),null===t?Ft.stop():Ft.start()},bt.addEventListener("sessionstart",Rt),bt.addEventListener("sessionend",Pt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===w)return;if(!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),!0===bt.enabled&&!0===bt.isPresenting&&(!0===bt.cameraAutoUpdate&&bt.updateCamera(e),e=bt.getCamera()),!0===t.isScene&&t.onBeforeRender(x,t,e,B),m=dt.get(t,v.length),m.init(e),v.push(m),Y.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),H.setFromProjectionMatrix(Y,qn,e.reversedDepth),q=this.localClippingEnabled,V=pt.init(this.clippingPlanes,q),f=ut.get(t,y.length),f.init(),y.push(f),!0===bt.enabled&&!0===bt.isPresenting){const t=x.xr.getDepthSensingMesh();null!==t&&Nt(t,e,-1/0,x.sortObjects)}Nt(t,e,0,x.sortObjects),f.finish(),!0===x.sortObjects&&f.sort(N,k),X=!1===bt.enabled||!1===bt.isPresenting||!1===bt.hasDepthSensing(),X&&ft.addToRenderList(f,t),this.info.render.frame++,!0===V&&pt.beginShadows();const n=m.state.shadowsArray;gt.render(n,t,e),!0===V&&pt.endShadows(),!0===this.info.autoReset&&this.info.reset();const i=f.opaque,r=f.transmissive;if(m.setupLights(),e.isArrayCamera){const n=e.cameras;if(r.length>0)for(let e=0,s=n.length;e<s;e++)Gt(i,r,t,n[e]);X&&ft.render(t);for(let e=0,i=n.length;e<i;e++){const i=n[e];Ot(f,t,i,i.viewport)}}else r.length>0&&Gt(i,r,t,e),X&&ft.render(t),Ot(f,t,e);null!==B&&0===b&&(it.updateMultisampleRenderTarget(B),it.updateRenderTargetMipmap(B)),!0===t.isScene&&t.onAfterRender(x,t,e),Ct.resetDefaultState(),S=-1,M=null,v.pop(),v.length>0?(m=v[v.length-1],!0===V&&pt.setGlobalState(x.clippingPlanes,m.state.camera)):m=null,y.pop(),f=y.length>0?y[y.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return B},this.setRenderTargetTextures=function(t,e,n){const i=nt.get(t);i.__autoAllocateDepthBuffer=!1===t.resolveDepthBuffer,!1===i.__autoAllocateDepthBuffer&&(i.__useRenderToTexture=!1),nt.get(t.texture).__webglTexture=e,nt.get(t.depthTexture).__webglTexture=i.__autoAllocateDepthBuffer?void 0:n,i.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(t,e){const n=nt.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e};const Zt=Et.createFramebuffer();this.setRenderTarget=function(t,e=0,n=0){B=t,_=e,b=n;let i=!0,r=null,s=!1,a=!1;if(t){const o=nt.get(t);if(void 0!==o.__useDefaultFramebuffer)tt.bindFramebuffer(Et.FRAMEBUFFER,null),i=!1;else if(void 0===o.__webglFramebuffer)it.setupRenderTarget(t);else if(o.__hasExternalTextures)it.rebindTextures(t,nt.get(t.texture).__webglTexture,nt.get(t.depthTexture).__webglTexture);else if(t.depthBuffer){const e=t.depthTexture;if(o.__boundDepthTexture!==e){if(null!==e&&nt.has(e)&&(t.width!==e.image.width||t.height!==e.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");it.setupDepthRenderbuffer(t)}}const l=t.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(a=!0);const c=nt.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(r=Array.isArray(c[e])?c[e][n]:c[e],s=!0):r=t.samples>0&&!1===it.useMultisampledRTT(t)?nt.get(t).__webglMultisampledFramebuffer:Array.isArray(c)?c[n]:c,T.copy(t.viewport),Q.copy(t.scissor),D=t.scissorTest}else T.copy(O).multiplyScalar(F).floor(),Q.copy(z).multiplyScalar(F).floor(),D=G;if(0!==n&&(r=Zt),tt.bindFramebuffer(Et.FRAMEBUFFER,r)&&i&&tt.drawBuffers(t,r),tt.viewport(T),tt.scissor(Q),tt.setScissorTest(D),s){const i=nt.get(t.texture);Et.framebufferTexture2D(Et.FRAMEBUFFER,Et.COLOR_ATTACHMENT0,Et.TEXTURE_CUBE_MAP_POSITIVE_X+e,i.__webglTexture,n)}else if(a){const i=e;for(let e=0;e<t.textures.length;e++){const r=nt.get(t.textures[e]);Et.framebufferTextureLayer(Et.FRAMEBUFFER,Et.COLOR_ATTACHMENT0+e,r.__webglTexture,n,i)}}else if(null!==t&&0!==n){const e=nt.get(t.texture);Et.framebufferTexture2D(Et.FRAMEBUFFER,Et.COLOR_ATTACHMENT0,Et.TEXTURE_2D,e.__webglTexture,n)}S=-1},this.readRenderTargetPixels=function(t,e,n,i,r,s,a,o=0){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let l=nt.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(l=l[a]),l){tt.bindFramebuffer(Et.FRAMEBUFFER,l);try{const a=t.textures[o],l=a.format,c=a.type;if(!$.textureFormatReadable(l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!$.textureTypeReadable(c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r&&(t.textures.length>1&&Et.readBuffer(Et.COLOR_ATTACHMENT0+o),Et.readPixels(e,n,i,r,xt.convert(l),xt.convert(c),s))}finally{const t=null!==B?nt.get(B).__webglFramebuffer:null;tt.bindFramebuffer(Et.FRAMEBUFFER,t)}}},this.readRenderTargetPixelsAsync=async function(t,e,n,i,r,s,a,o=0){if(!t||!t.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let l=nt.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(l=l[a]),l){if(e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r){tt.bindFramebuffer(Et.FRAMEBUFFER,l);const a=t.textures[o],c=a.format,h=a.type;if(!$.textureFormatReadable(c))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!$.textureTypeReadable(h))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const A=Et.createBuffer();Et.bindBuffer(Et.PIXEL_PACK_BUFFER,A),Et.bufferData(Et.PIXEL_PACK_BUFFER,s.byteLength,Et.STREAM_READ),t.textures.length>1&&Et.readBuffer(Et.COLOR_ATTACHMENT0+o),Et.readPixels(e,n,i,r,xt.convert(c),xt.convert(h),0);const u=null!==B?nt.get(B).__webglFramebuffer:null;tt.bindFramebuffer(Et.FRAMEBUFFER,u);const d=Et.fenceSync(Et.SYNC_GPU_COMMANDS_COMPLETE,0);return Et.flush(),await function(t,e){return new Promise(function(n,i){setTimeout(function r(){switch(t.clientWaitSync(e,t.SYNC_FLUSH_COMMANDS_BIT,0)){case t.WAIT_FAILED:i();break;case t.TIMEOUT_EXPIRED:setTimeout(r,4);break;default:n()}},4)})}(Et,d),Et.bindBuffer(Et.PIXEL_PACK_BUFFER,A),Et.getBufferSubData(Et.PIXEL_PACK_BUFFER,0,s),Et.deleteBuffer(A),Et.deleteSync(d),s}throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(t,e=null,n=0){const i=Math.pow(2,-n),r=Math.floor(t.image.width*i),s=Math.floor(t.image.height*i),a=null!==e?e.x:0,o=null!==e?e.y:0;it.setTexture2D(t,0),Et.copyTexSubImage2D(Et.TEXTURE_2D,n,0,0,a,o,r,s),tt.unbindTexture()};const $t=Et.createFramebuffer(),te=Et.createFramebuffer();this.copyTextureToTexture=function(t,e,n=null,i=null,r=0,s=null){let a,o,l,c,h,A,u,d,p;null===s&&(0!==r?(Ci("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),s=r,r=0):s=0);const g=t.isCompressedTexture?t.mipmaps[s]:t.image;if(null!==n)a=n.max.x-n.min.x,o=n.max.y-n.min.y,l=n.isBox3?n.max.z-n.min.z:1,c=n.min.x,h=n.min.y,A=n.isBox3?n.min.z:0;else{const e=Math.pow(2,-r);a=Math.floor(g.width*e),o=Math.floor(g.height*e),l=t.isDataArrayTexture?g.depth:t.isData3DTexture?Math.floor(g.depth*e):1,c=0,h=0,A=0}null!==i?(u=i.x,d=i.y,p=i.z):(u=0,d=0,p=0);const f=xt.convert(e.format),m=xt.convert(e.type);let y;e.isData3DTexture?(it.setTexture3D(e,0),y=Et.TEXTURE_3D):e.isDataArrayTexture||e.isCompressedArrayTexture?(it.setTexture2DArray(e,0),y=Et.TEXTURE_2D_ARRAY):(it.setTexture2D(e,0),y=Et.TEXTURE_2D),Et.pixelStorei(Et.UNPACK_FLIP_Y_WEBGL,e.flipY),Et.pixelStorei(Et.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),Et.pixelStorei(Et.UNPACK_ALIGNMENT,e.unpackAlignment);const v=Et.getParameter(Et.UNPACK_ROW_LENGTH),x=Et.getParameter(Et.UNPACK_IMAGE_HEIGHT),C=Et.getParameter(Et.UNPACK_SKIP_PIXELS),I=Et.getParameter(Et.UNPACK_SKIP_ROWS),E=Et.getParameter(Et.UNPACK_SKIP_IMAGES);Et.pixelStorei(Et.UNPACK_ROW_LENGTH,g.width),Et.pixelStorei(Et.UNPACK_IMAGE_HEIGHT,g.height),Et.pixelStorei(Et.UNPACK_SKIP_PIXELS,c),Et.pixelStorei(Et.UNPACK_SKIP_ROWS,h),Et.pixelStorei(Et.UNPACK_SKIP_IMAGES,A);const w=t.isDataArrayTexture||t.isData3DTexture,_=e.isDataArrayTexture||e.isData3DTexture;if(t.isDepthTexture){const n=nt.get(t),i=nt.get(e),g=nt.get(n.__renderTarget),f=nt.get(i.__renderTarget);tt.bindFramebuffer(Et.READ_FRAMEBUFFER,g.__webglFramebuffer),tt.bindFramebuffer(Et.DRAW_FRAMEBUFFER,f.__webglFramebuffer);for(let n=0;n<l;n++)w&&(Et.framebufferTextureLayer(Et.READ_FRAMEBUFFER,Et.COLOR_ATTACHMENT0,nt.get(t).__webglTexture,r,A+n),Et.framebufferTextureLayer(Et.DRAW_FRAMEBUFFER,Et.COLOR_ATTACHMENT0,nt.get(e).__webglTexture,s,p+n)),Et.blitFramebuffer(c,h,a,o,u,d,a,o,Et.DEPTH_BUFFER_BIT,Et.NEAREST);tt.bindFramebuffer(Et.READ_FRAMEBUFFER,null),tt.bindFramebuffer(Et.DRAW_FRAMEBUFFER,null)}else if(0!==r||t.isRenderTargetTexture||nt.has(t)){const n=nt.get(t),i=nt.get(e);tt.bindFramebuffer(Et.READ_FRAMEBUFFER,$t),tt.bindFramebuffer(Et.DRAW_FRAMEBUFFER,te);for(let t=0;t<l;t++)w?Et.framebufferTextureLayer(Et.READ_FRAMEBUFFER,Et.COLOR_ATTACHMENT0,n.__webglTexture,r,A+t):Et.framebufferTexture2D(Et.READ_FRAMEBUFFER,Et.COLOR_ATTACHMENT0,Et.TEXTURE_2D,n.__webglTexture,r),_?Et.framebufferTextureLayer(Et.DRAW_FRAMEBUFFER,Et.COLOR_ATTACHMENT0,i.__webglTexture,s,p+t):Et.framebufferTexture2D(Et.DRAW_FRAMEBUFFER,Et.COLOR_ATTACHMENT0,Et.TEXTURE_2D,i.__webglTexture,s),0!==r?Et.blitFramebuffer(c,h,a,o,u,d,a,o,Et.COLOR_BUFFER_BIT,Et.NEAREST):_?Et.copyTexSubImage3D(y,s,u,d,p+t,c,h,a,o):Et.copyTexSubImage2D(y,s,u,d,c,h,a,o);tt.bindFramebuffer(Et.READ_FRAMEBUFFER,null),tt.bindFramebuffer(Et.DRAW_FRAMEBUFFER,null)}else _?t.isDataTexture||t.isData3DTexture?Et.texSubImage3D(y,s,u,d,p,a,o,l,f,m,g.data):e.isCompressedArrayTexture?Et.compressedTexSubImage3D(y,s,u,d,p,a,o,l,f,g.data):Et.texSubImage3D(y,s,u,d,p,a,o,l,f,m,g):t.isDataTexture?Et.texSubImage2D(Et.TEXTURE_2D,s,u,d,a,o,f,m,g.data):t.isCompressedTexture?Et.compressedTexSubImage2D(Et.TEXTURE_2D,s,u,d,g.width,g.height,f,g.data):Et.texSubImage2D(Et.TEXTURE_2D,s,u,d,a,o,f,m,g);Et.pixelStorei(Et.UNPACK_ROW_LENGTH,v),Et.pixelStorei(Et.UNPACK_IMAGE_HEIGHT,x),Et.pixelStorei(Et.UNPACK_SKIP_PIXELS,C),Et.pixelStorei(Et.UNPACK_SKIP_ROWS,I),Et.pixelStorei(Et.UNPACK_SKIP_IMAGES,E),0===s&&e.generateMipmaps&&Et.generateMipmap(y),tt.unbindTexture()},this.initRenderTarget=function(t){void 0===nt.get(t).__webglFramebuffer&&it.setupRenderTarget(t)},this.initTexture=function(t){t.isCubeTexture?it.setTextureCube(t,0):t.isData3DTexture?it.setTexture3D(t,0):t.isDataArrayTexture||t.isCompressedArrayTexture?it.setTexture2DArray(t,0):it.setTexture2D(t,0),tt.unbindTexture()},this.resetState=function(){_=0,b=0,B=null,tt.reset(),Ct.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return qn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=_i._getDrawingBufferColorSpace(t),e.unpackColorSpace=_i._getUnpackColorSpace()}}const Qg={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\n\t\t}"};class Dg{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const Rg=new Jh(-1,1,1,-1,0,1),Ug=new class extends Ns{constructor(){super(),this.setAttribute("position",new Ts([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Ts([0,2,0,0,2,0],2))}};class Pg{constructor(t){this._mesh=new Xs(Ug,t)}dispose(){this._mesh.geometry.dispose()}render(t){t.render(this._mesh,Rg)}get material(){return this._mesh.material}set material(t){this._mesh.material=t}}class Lg extends Dg{constructor(t,e="tDiffuse"){super(),this.textureID=e,this.uniforms=null,this.material=null,t instanceof ia?(this.uniforms=t.uniforms,this.material=t):t&&(this.uniforms=na.clone(t.uniforms),this.material=new ia({name:void 0!==t.name?t.name:"unspecified",defines:Object.assign({},t.defines),uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader})),this._fsQuad=new Pg(this.material)}render(t,e,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this._fsQuad.material=this.material,this.renderToScreen?(t.setRenderTarget(null),this._fsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),this._fsQuad.render(t))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}class Fg extends Dg{constructor(t,e){super(),this.scene=t,this.camera=e,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(t,e,n){const i=t.getContext(),r=t.state;let s,a;r.buffers.color.setMask(!1),r.buffers.depth.setMask(!1),r.buffers.color.setLocked(!0),r.buffers.depth.setLocked(!0),this.inverse?(s=0,a=1):(s=1,a=0),r.buffers.stencil.setTest(!0),r.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),r.buffers.stencil.setFunc(i.ALWAYS,s,4294967295),r.buffers.stencil.setClear(a),r.buffers.stencil.setLocked(!0),t.setRenderTarget(n),this.clear&&t.clear(),t.render(this.scene,this.camera),t.setRenderTarget(e),this.clear&&t.clear(),t.render(this.scene,this.camera),r.buffers.color.setLocked(!1),r.buffers.depth.setLocked(!1),r.buffers.color.setMask(!0),r.buffers.depth.setMask(!0),r.buffers.stencil.setLocked(!1),r.buffers.stencil.setFunc(i.EQUAL,1,4294967295),r.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),r.buffers.stencil.setLocked(!0)}}class Ng extends Dg{constructor(){super(),this.needsSwap=!1}render(t){t.state.buffers.stencil.setLocked(!1),t.state.buffers.stencil.setTest(!1)}}const kg={name:"SAOShader",defines:{NUM_SAMPLES:7,NUM_RINGS:4,DIFFUSE_TEXTURE:0,PERSPECTIVE_CAMERA:1},uniforms:{tDepth:{value:null},tDiffuse:{value:null},tNormal:{value:null},size:{value:new li(512,512)},cameraNear:{value:1},cameraFar:{value:100},cameraProjectionMatrix:{value:new fr},cameraInverseProjectionMatrix:{value:new fr},scale:{value:1},intensity:{value:.1},bias:{value:.5},minResolution:{value:0},kernelRadius:{value:100},randomSeed:{value:0}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",fragmentShader:"\n\t\t#include <common>\n\n\t\tvarying vec2 vUv;\n\n\t\t#if DIFFUSE_TEXTURE == 1\n\t\tuniform sampler2D tDiffuse;\n\t\t#endif\n\n\t\tuniform highp sampler2D tDepth;\n\t\tuniform highp sampler2D tNormal;\n\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\t\tuniform mat4 cameraProjectionMatrix;\n\t\tuniform mat4 cameraInverseProjectionMatrix;\n\n\t\tuniform float scale;\n\t\tuniform float intensity;\n\t\tuniform float bias;\n\t\tuniform float kernelRadius;\n\t\tuniform float minResolution;\n\t\tuniform vec2 size;\n\t\tuniform float randomSeed;\n\n\t\t// RGBA depth\n\n\t\t#include <packing>\n\n\t\tvec4 getDefaultColor( const in vec2 screenPosition ) {\n\t\t\t#if DIFFUSE_TEXTURE == 1\n\t\t\treturn texture2D( tDiffuse, vUv );\n\t\t\t#else\n\t\t\treturn vec4( 1.0 );\n\t\t\t#endif\n\t\t}\n\n\t\tfloat getDepth( const in vec2 screenPosition ) {\n\t\t\treturn texture2D( tDepth, screenPosition ).x;\n\t\t}\n\n\t\tfloat getViewZ( const in float depth ) {\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\t\t\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#else\n\t\t\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#endif\n\t\t}\n\n\t\tvec3 getViewPosition( const in vec2 screenPosition, const in float depth, const in float viewZ ) {\n\t\t\tfloat clipW = cameraProjectionMatrix[2][3] * viewZ + cameraProjectionMatrix[3][3];\n\t\t\tvec4 clipPosition = vec4( ( vec3( screenPosition, depth ) - 0.5 ) * 2.0, 1.0 );\n\t\t\tclipPosition *= clipW; // unprojection.\n\n\t\t\treturn ( cameraInverseProjectionMatrix * clipPosition ).xyz;\n\t\t}\n\n\t\tvec3 getViewNormal( const in vec3 viewPosition, const in vec2 screenPosition ) {\n\t\t\treturn unpackRGBToNormal( texture2D( tNormal, screenPosition ).xyz );\n\t\t}\n\n\t\tfloat scaleDividedByCameraFar;\n\t\tfloat minResolutionMultipliedByCameraFar;\n\n\t\tfloat getOcclusion( const in vec3 centerViewPosition, const in vec3 centerViewNormal, const in vec3 sampleViewPosition ) {\n\t\t\tvec3 viewDelta = sampleViewPosition - centerViewPosition;\n\t\t\tfloat viewDistance = length( viewDelta );\n\t\t\tfloat scaledScreenDistance = scaleDividedByCameraFar * viewDistance;\n\n\t\t\treturn max(0.0, (dot(centerViewNormal, viewDelta) - minResolutionMultipliedByCameraFar) / scaledScreenDistance - bias) / (1.0 + pow2( scaledScreenDistance ) );\n\t\t}\n\n\t\t// moving costly divides into consts\n\t\tconst float ANGLE_STEP = PI2 * float( NUM_RINGS ) / float( NUM_SAMPLES );\n\t\tconst float INV_NUM_SAMPLES = 1.0 / float( NUM_SAMPLES );\n\n\t\tfloat getAmbientOcclusion( const in vec3 centerViewPosition ) {\n\t\t\t// precompute some variables require in getOcclusion.\n\t\t\tscaleDividedByCameraFar = scale / cameraFar;\n\t\t\tminResolutionMultipliedByCameraFar = minResolution * cameraFar;\n\t\t\tvec3 centerViewNormal = getViewNormal( centerViewPosition, vUv );\n\n\t\t\t// jsfiddle that shows sample pattern: https://jsfiddle.net/a16ff1p7/\n\t\t\tfloat angle = rand( vUv + randomSeed ) * PI2;\n\t\t\tvec2 radius = vec2( kernelRadius * INV_NUM_SAMPLES ) / size;\n\t\t\tvec2 radiusStep = radius;\n\n\t\t\tfloat occlusionSum = 0.0;\n\t\t\tfloat weightSum = 0.0;\n\n\t\t\tfor( int i = 0; i < NUM_SAMPLES; i ++ ) {\n\t\t\t\tvec2 sampleUv = vUv + vec2( cos( angle ), sin( angle ) ) * radius;\n\t\t\t\tradius += radiusStep;\n\t\t\t\tangle += ANGLE_STEP;\n\n\t\t\t\tfloat sampleDepth = getDepth( sampleUv );\n\t\t\t\tif( sampleDepth >= ( 1.0 - EPSILON ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfloat sampleViewZ = getViewZ( sampleDepth );\n\t\t\t\tvec3 sampleViewPosition = getViewPosition( sampleUv, sampleDepth, sampleViewZ );\n\t\t\t\tocclusionSum += getOcclusion( centerViewPosition, centerViewNormal, sampleViewPosition );\n\t\t\t\tweightSum += 1.0;\n\t\t\t}\n\n\t\t\tif( weightSum == 0.0 ) discard;\n\n\t\t\treturn occlusionSum * ( intensity / weightSum );\n\t\t}\n\n\t\tvoid main() {\n\t\t\tfloat centerDepth = getDepth( vUv );\n\t\t\tif( centerDepth >= ( 1.0 - EPSILON ) ) {\n\t\t\t\tdiscard;\n\t\t\t}\n\n\t\t\tfloat centerViewZ = getViewZ( centerDepth );\n\t\t\tvec3 viewPosition = getViewPosition( vUv, centerDepth, centerViewZ );\n\n\t\t\tfloat ambientOcclusion = getAmbientOcclusion( viewPosition );\n\n\t\t\tgl_FragColor = getDefaultColor( vUv );\n\t\t\tgl_FragColor.xyz *=  1.0 - ambientOcclusion;\n\t\t}"},Og={name:"DepthLimitedBlurShader",defines:{KERNEL_RADIUS:4,DEPTH_PACKING:1,PERSPECTIVE_CAMERA:1},uniforms:{tDiffuse:{value:null},size:{value:new li(512,512)},sampleUvOffsets:{value:[new li(0,0)]},sampleWeights:{value:[1]},tDepth:{value:null},cameraNear:{value:10},cameraFar:{value:1e3},depthCutoff:{value:10}},vertexShader:"\n\n\t\t#include <common>\n\n\t\tuniform vec2 size;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec2 vInvSize;\n\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tvInvSize = 1.0 / size;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",fragmentShader:"\n\n\t\t#include <common>\n\t\t#include <packing>\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform sampler2D tDepth;\n\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\t\tuniform float depthCutoff;\n\n\t\tuniform vec2 sampleUvOffsets[ KERNEL_RADIUS + 1 ];\n\t\tuniform float sampleWeights[ KERNEL_RADIUS + 1 ];\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec2 vInvSize;\n\n\t\tfloat getDepth( const in vec2 screenPosition ) {\n\t\t\t#if DEPTH_PACKING == 1\n\t\t\treturn unpackRGBAToDepth( texture2D( tDepth, screenPosition ) );\n\t\t\t#else\n\t\t\treturn texture2D( tDepth, screenPosition ).x;\n\t\t\t#endif\n\t\t}\n\n\t\tfloat getViewZ( const in float depth ) {\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\t\t\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#else\n\t\t\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#endif\n\t\t}\n\n\t\tvoid main() {\n\t\t\tfloat depth = getDepth( vUv );\n\t\t\tif( depth >= ( 1.0 - EPSILON ) ) {\n\t\t\t\tdiscard;\n\t\t\t}\n\n\t\t\tfloat centerViewZ = -getViewZ( depth );\n\t\t\tbool rBreak = false, lBreak = false;\n\n\t\t\tfloat weightSum = sampleWeights[0];\n\t\t\tvec4 diffuseSum = texture2D( tDiffuse, vUv ) * weightSum;\n\n\t\t\tfor( int i = 1; i <= KERNEL_RADIUS; i ++ ) {\n\n\t\t\t\tfloat sampleWeight = sampleWeights[i];\n\t\t\t\tvec2 sampleUvOffset = sampleUvOffsets[i] * vInvSize;\n\n\t\t\t\tvec2 sampleUv = vUv + sampleUvOffset;\n\t\t\t\tfloat viewZ = -getViewZ( getDepth( sampleUv ) );\n\n\t\t\t\tif( abs( viewZ - centerViewZ ) > depthCutoff ) rBreak = true;\n\n\t\t\t\tif( ! rBreak ) {\n\t\t\t\t\tdiffuseSum += texture2D( tDiffuse, sampleUv ) * sampleWeight;\n\t\t\t\t\tweightSum += sampleWeight;\n\t\t\t\t}\n\n\t\t\t\tsampleUv = vUv - sampleUvOffset;\n\t\t\t\tviewZ = -getViewZ( getDepth( sampleUv ) );\n\n\t\t\t\tif( abs( viewZ - centerViewZ ) > depthCutoff ) lBreak = true;\n\n\t\t\t\tif( ! lBreak ) {\n\t\t\t\t\tdiffuseSum += texture2D( tDiffuse, sampleUv ) * sampleWeight;\n\t\t\t\t\tweightSum += sampleWeight;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgl_FragColor = diffuseSum / weightSum;\n\t\t}"},zg={createSampleWeights:function(t,e){const n=[];for(let i=0;i<=t;i++)n.push(Gg(i,e));return n},createSampleOffsets:function(t,e){const n=[];for(let i=0;i<=t;i++)n.push(e.clone().multiplyScalar(i));return n},configure:function(t,e,n,i){t.defines.KERNEL_RADIUS=e,t.uniforms.sampleUvOffsets.value=zg.createSampleOffsets(e,i),t.uniforms.sampleWeights.value=zg.createSampleWeights(e,n),t.needsUpdate=!0}};function Gg(t,e){return Math.exp(-t*t/(e*e*2))/(Math.sqrt(2*Math.PI)*e)}class Hg extends Dg{constructor(t,e,n=new li(256,256)){super(),this.scene=t,this.camera=e,this.clear=!0,this.needsSwap=!1,this._originalClearColor=new ls,this._oldClearColor=new ls,this._oldClearAlpha=1,this.params={output:0,saoBias:.5,saoIntensity:.18,saoScale:1,saoKernelRadius:100,saoMinResolution:0,saoBlur:!0,saoBlurRadius:8,saoBlurStdDev:4,saoBlurDepthCutoff:.01},this.resolution=new li(n.x,n.y),this.saoRenderTarget=new Ni(this.resolution.x,this.resolution.y,{type:Ht}),this.blurIntermediateRenderTarget=this.saoRenderTarget.clone();const i=new fl;i.format=$t,i.type=Yt,this.normalRenderTarget=new Ni(this.resolution.x,this.resolution.y,{minFilter:bt,magFilter:bt,type:Ht,depthTexture:i}),this.normalMaterial=new jc,this.normalMaterial.blending=w,this.saoMaterial=new ia({defines:Object.assign({},kg.defines),fragmentShader:kg.fragmentShader,vertexShader:kg.vertexShader,uniforms:na.clone(kg.uniforms)}),this.saoMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.saoMaterial.uniforms.tDepth.value=i,this.saoMaterial.uniforms.tNormal.value=this.normalRenderTarget.texture,this.saoMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.saoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.saoMaterial.uniforms.cameraProjectionMatrix.value=this.camera.projectionMatrix,this.saoMaterial.blending=w,this.vBlurMaterial=new ia({uniforms:na.clone(Og.uniforms),defines:Object.assign({},Og.defines),vertexShader:Og.vertexShader,fragmentShader:Og.fragmentShader}),this.vBlurMaterial.defines.DEPTH_PACKING=0,this.vBlurMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.vBlurMaterial.uniforms.tDiffuse.value=this.saoRenderTarget.texture,this.vBlurMaterial.uniforms.tDepth.value=i,this.vBlurMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.vBlurMaterial.blending=w,this.hBlurMaterial=new ia({uniforms:na.clone(Og.uniforms),defines:Object.assign({},Og.defines),vertexShader:Og.vertexShader,fragmentShader:Og.fragmentShader}),this.hBlurMaterial.defines.DEPTH_PACKING=0,this.hBlurMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.hBlurMaterial.uniforms.tDiffuse.value=this.blurIntermediateRenderTarget.texture,this.hBlurMaterial.uniforms.tDepth.value=i,this.hBlurMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.hBlurMaterial.blending=w,this.materialCopy=new ia({uniforms:na.clone(Qg.uniforms),vertexShader:Qg.vertexShader,fragmentShader:Qg.fragmentShader,blending:w}),this.materialCopy.transparent=!0,this.materialCopy.depthTest=!1,this.materialCopy.depthWrite=!1,this.materialCopy.blending=M,this.materialCopy.blendSrc=H,this.materialCopy.blendDst=P,this.materialCopy.blendEquation=T,this.materialCopy.blendSrcAlpha=z,this.materialCopy.blendDstAlpha=P,this.materialCopy.blendEquationAlpha=T,this.fsQuad=new Pg(null)}render(t,e,n){this.renderToScreen&&(this.materialCopy.blending=w,this.materialCopy.uniforms.tDiffuse.value=n.texture,this.materialCopy.needsUpdate=!0,this._renderPass(t,this.materialCopy,null)),t.getClearColor(this._oldClearColor),this._oldClearAlpha=t.getClearAlpha();const i=t.autoClear;t.autoClear=!1,this.saoMaterial.uniforms.bias.value=this.params.saoBias,this.saoMaterial.uniforms.intensity.value=this.params.saoIntensity,this.saoMaterial.uniforms.scale.value=this.params.saoScale,this.saoMaterial.uniforms.kernelRadius.value=this.params.saoKernelRadius,this.saoMaterial.uniforms.minResolution.value=this.params.saoMinResolution,this.saoMaterial.uniforms.cameraNear.value=this.camera.near,this.saoMaterial.uniforms.cameraFar.value=this.camera.far;const r=this.params.saoBlurDepthCutoff*(this.camera.far-this.camera.near);this.vBlurMaterial.uniforms.depthCutoff.value=r,this.hBlurMaterial.uniforms.depthCutoff.value=r,this.vBlurMaterial.uniforms.cameraNear.value=this.camera.near,this.vBlurMaterial.uniforms.cameraFar.value=this.camera.far,this.hBlurMaterial.uniforms.cameraNear.value=this.camera.near,this.hBlurMaterial.uniforms.cameraFar.value=this.camera.far,this.params.saoBlurRadius=Math.floor(this.params.saoBlurRadius),this.prevStdDev===this.params.saoBlurStdDev&&this.prevNumSamples===this.params.saoBlurRadius||(zg.configure(this.vBlurMaterial,this.params.saoBlurRadius,this.params.saoBlurStdDev,new li(0,1)),zg.configure(this.hBlurMaterial,this.params.saoBlurRadius,this.params.saoBlurStdDev,new li(1,0)),this.prevStdDev=this.params.saoBlurStdDev,this.prevNumSamples=this.params.saoBlurRadius),this._renderOverride(t,this.normalMaterial,this.normalRenderTarget,7829503,1),this._renderPass(t,this.saoMaterial,this.saoRenderTarget,16777215,1),this.params.saoBlur&&(this._renderPass(t,this.vBlurMaterial,this.blurIntermediateRenderTarget,16777215,1),this._renderPass(t,this.hBlurMaterial,this.saoRenderTarget,16777215,1));const s=this.materialCopy;this.params.output===Hg.OUTPUT.Normal?(this.materialCopy.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.materialCopy.needsUpdate=!0):(this.materialCopy.uniforms.tDiffuse.value=this.saoRenderTarget.texture,this.materialCopy.needsUpdate=!0),this.params.output===Hg.OUTPUT.Default?s.blending=M:s.blending=w,this._renderPass(t,s,this.renderToScreen?null:n),t.setClearColor(this._oldClearColor,this._oldClearAlpha),t.autoClear=i}setSize(t,e){this.saoRenderTarget.setSize(t,e),this.blurIntermediateRenderTarget.setSize(t,e),this.normalRenderTarget.setSize(t,e),this.saoMaterial.uniforms.size.value.set(t,e),this.saoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.saoMaterial.uniforms.cameraProjectionMatrix.value=this.camera.projectionMatrix,this.saoMaterial.needsUpdate=!0,this.vBlurMaterial.uniforms.size.value.set(t,e),this.vBlurMaterial.needsUpdate=!0,this.hBlurMaterial.uniforms.size.value.set(t,e),this.hBlurMaterial.needsUpdate=!0}dispose(){this.saoRenderTarget.dispose(),this.blurIntermediateRenderTarget.dispose(),this.normalRenderTarget.dispose(),this.normalMaterial.dispose(),this.saoMaterial.dispose(),this.vBlurMaterial.dispose(),this.hBlurMaterial.dispose(),this.materialCopy.dispose(),this.fsQuad.dispose()}_renderPass(t,e,n,i,r){t.getClearColor(this._originalClearColor);const s=t.getClearAlpha(),a=t.autoClear;t.setRenderTarget(n),t.autoClear=!1,null!=i&&(t.setClearColor(i),t.setClearAlpha(r||0),t.clear()),this.fsQuad.material=e,this.fsQuad.render(t),t.autoClear=a,t.setClearColor(this._originalClearColor),t.setClearAlpha(s)}_renderOverride(t,e,n,i,r){t.getClearColor(this._originalClearColor);const s=t.getClearAlpha(),a=t.autoClear;t.setRenderTarget(n),t.autoClear=!1,i=e.clearColor||i,r=e.clearAlpha||r,null!=i&&(t.setClearColor(i),t.setClearAlpha(r||0),t.clear()),this.scene.overrideMaterial=e,t.render(this.scene,this.camera),this.scene.overrideMaterial=null,t.autoClear=a,t.setClearColor(this._originalClearColor),t.setClearAlpha(s)}}Hg.OUTPUT={Default:0,SAO:1,Normal:2};const Vg={name:"GTAOShader",defines:{PERSPECTIVE_CAMERA:1,SAMPLES:16,NORMAL_VECTOR_TYPE:1,DEPTH_SWIZZLING:"x",SCREEN_SPACE_RADIUS:0,SCREEN_SPACE_RADIUS_SCALE:100,SCENE_CLIP_BOX:0},uniforms:{tNormal:{value:null},tDepth:{value:null},tNoise:{value:null},resolution:{value:new li},cameraNear:{value:null},cameraFar:{value:null},cameraProjectionMatrix:{value:new fr},cameraProjectionMatrixInverse:{value:new fr},cameraWorldMatrix:{value:new fr},radius:{value:.25},distanceExponent:{value:1},thickness:{value:1},distanceFallOff:{value:1},scale:{value:1},sceneBoxMin:{value:new hi(-1,-1,-1)},sceneBoxMax:{value:new hi(1,1,1)}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",fragmentShader:"\n\t\tvarying vec2 vUv;\n\t\tuniform highp sampler2D tNormal;\n\t\tuniform highp sampler2D tDepth;\n\t\tuniform sampler2D tNoise;\n\t\tuniform vec2 resolution;\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\t\tuniform mat4 cameraProjectionMatrix;\n\t\tuniform mat4 cameraProjectionMatrixInverse;\n\t\tuniform mat4 cameraWorldMatrix;\n\t\tuniform float radius;\n\t\tuniform float distanceExponent;\n\t\tuniform float thickness;\n\t\tuniform float distanceFallOff;\n\t\tuniform float scale;\n\t\t#if SCENE_CLIP_BOX == 1\n\t\t\tuniform vec3 sceneBoxMin;\n\t\t\tuniform vec3 sceneBoxMax;\n\t\t#endif\n\n\t\t#include <common>\n\t\t#include <packing>\n\n\t\t#ifndef FRAGMENT_OUTPUT\n\t\t#define FRAGMENT_OUTPUT vec4(vec3(ao), 1.)\n\t\t#endif\n\n\t\tvec3 getViewPosition(const in vec2 screenPosition, const in float depth) {\n\t\t\tvec4 clipSpacePosition = vec4(vec3(screenPosition, depth) * 2.0 - 1.0, 1.0);\n\t\t\tvec4 viewSpacePosition = cameraProjectionMatrixInverse * clipSpacePosition;\n\t\t\treturn viewSpacePosition.xyz / viewSpacePosition.w;\n\t\t}\n\n\t\tfloat getDepth(const vec2 uv) {\n\t\t\treturn textureLod(tDepth, uv.xy, 0.0).DEPTH_SWIZZLING;\n\t\t}\n\n\t\tfloat fetchDepth(const ivec2 uv) {\n\t\t\treturn texelFetch(tDepth, uv.xy, 0).DEPTH_SWIZZLING;\n\t\t}\n\n\t\tfloat getViewZ(const in float depth) {\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\t\t\t\treturn perspectiveDepthToViewZ(depth, cameraNear, cameraFar);\n\t\t\t#else\n\t\t\t\treturn orthographicDepthToViewZ(depth, cameraNear, cameraFar);\n\t\t\t#endif\n\t\t}\n\n\t\tvec3 computeNormalFromDepth(const vec2 uv) {\n\t\t\tvec2 size = vec2(textureSize(tDepth, 0));\n\t\t\tivec2 p = ivec2(uv * size);\n\t\t\tfloat c0 = fetchDepth(p);\n\t\t\tfloat l2 = fetchDepth(p - ivec2(2, 0));\n\t\t\tfloat l1 = fetchDepth(p - ivec2(1, 0));\n\t\t\tfloat r1 = fetchDepth(p + ivec2(1, 0));\n\t\t\tfloat r2 = fetchDepth(p + ivec2(2, 0));\n\t\t\tfloat b2 = fetchDepth(p - ivec2(0, 2));\n\t\t\tfloat b1 = fetchDepth(p - ivec2(0, 1));\n\t\t\tfloat t1 = fetchDepth(p + ivec2(0, 1));\n\t\t\tfloat t2 = fetchDepth(p + ivec2(0, 2));\n\t\t\tfloat dl = abs((2.0 * l1 - l2) - c0);\n\t\t\tfloat dr = abs((2.0 * r1 - r2) - c0);\n\t\t\tfloat db = abs((2.0 * b1 - b2) - c0);\n\t\t\tfloat dt = abs((2.0 * t1 - t2) - c0);\n\t\t\tvec3 ce = getViewPosition(uv, c0).xyz;\n\t\t\tvec3 dpdx = (dl < dr) ? ce - getViewPosition((uv - vec2(1.0 / size.x, 0.0)), l1).xyz : -ce + getViewPosition((uv + vec2(1.0 / size.x, 0.0)), r1).xyz;\n\t\t\tvec3 dpdy = (db < dt) ? ce - getViewPosition((uv - vec2(0.0, 1.0 / size.y)), b1).xyz : -ce + getViewPosition((uv + vec2(0.0, 1.0 / size.y)), t1).xyz;\n\t\t\treturn normalize(cross(dpdx, dpdy));\n\t\t}\n\n\t\tvec3 getViewNormal(const vec2 uv) {\n\t\t\t#if NORMAL_VECTOR_TYPE == 2\n\t\t\t\treturn normalize(textureLod(tNormal, uv, 0.).rgb);\n\t\t\t#elif NORMAL_VECTOR_TYPE == 1\n\t\t\t\treturn unpackRGBToNormal(textureLod(tNormal, uv, 0.).rgb);\n\t\t\t#else\n\t\t\t\treturn computeNormalFromDepth(uv);\n\t\t\t#endif\n\t\t}\n\n\t\tvec3 getSceneUvAndDepth(vec3 sampleViewPos) {\n\t\t\tvec4 sampleClipPos = cameraProjectionMatrix * vec4(sampleViewPos, 1.);\n\t\t\tvec2 sampleUv = sampleClipPos.xy / sampleClipPos.w * 0.5 + 0.5;\n\t\t\tfloat sampleSceneDepth = getDepth(sampleUv);\n\t\t\treturn vec3(sampleUv, sampleSceneDepth);\n\t\t}\n\n\t\tvoid main() {\n\t\t\tfloat depth = getDepth(vUv.xy);\n\t\t\tif (depth >= 1.0) {\n\t\t\t\tdiscard;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvec3 viewPos = getViewPosition(vUv, depth);\n\t\t\tvec3 viewNormal = getViewNormal(vUv);\n\n\t\t\tfloat radiusToUse = radius;\n\t\t\tfloat distanceFalloffToUse = thickness;\n\t\t\t#if SCREEN_SPACE_RADIUS == 1\n\t\t\t\tfloat radiusScale = getViewPosition(vec2(0.5 + float(SCREEN_SPACE_RADIUS_SCALE) / resolution.x, 0.0), depth).x;\n\t\t\t\tradiusToUse *= radiusScale;\n\t\t\t\tdistanceFalloffToUse *= radiusScale;\n\t\t\t#endif\n\n\t\t\t#if SCENE_CLIP_BOX == 1\n\t\t\t\tvec3 worldPos = (cameraWorldMatrix * vec4(viewPos, 1.0)).xyz;\n\t\t\t\tfloat boxDistance = length(max(vec3(0.0), max(sceneBoxMin - worldPos, worldPos - sceneBoxMax)));\n\t\t\t\tif (boxDistance > radiusToUse) {\n\t\t\t\t\tdiscard;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t#endif\n\n\t\t\tvec2 noiseResolution = vec2(textureSize(tNoise, 0));\n\t\t\tvec2 noiseUv = vUv * resolution / noiseResolution;\n\t\t\tvec4 noiseTexel = textureLod(tNoise, noiseUv, 0.0);\n\t\t\tvec3 randomVec = noiseTexel.xyz * 2.0 - 1.0;\n\t\t\tvec3 tangent = normalize(vec3(randomVec.xy, 0.));\n\t\t\tvec3 bitangent = vec3(-tangent.y, tangent.x, 0.);\n\t\t\tmat3 kernelMatrix = mat3(tangent, bitangent, vec3(0., 0., 1.));\n\n\t\t\tconst int DIRECTIONS = SAMPLES < 30 ? 3 : 5;\n\t\t\tconst int STEPS = (SAMPLES + DIRECTIONS - 1) / DIRECTIONS;\n\t\t\tfloat ao = 0.0;\n\t\t\tfor (int i = 0; i < DIRECTIONS; ++i) {\n\n\t\t\t\tfloat angle = float(i) / float(DIRECTIONS) * PI;\n\t\t\t\tvec4 sampleDir = vec4(cos(angle), sin(angle), 0., 0.5 + 0.5 * noiseTexel.w);\n\t\t\t\tsampleDir.xyz = normalize(kernelMatrix * sampleDir.xyz);\n\n\t\t\t\tvec3 viewDir = normalize(-viewPos.xyz);\n\t\t\t\tvec3 sliceBitangent = normalize(cross(sampleDir.xyz, viewDir));\n\t\t\t\tvec3 sliceTangent = cross(sliceBitangent, viewDir);\n\t\t\t\tvec3 normalInSlice = normalize(viewNormal - sliceBitangent * dot(viewNormal, sliceBitangent));\n\n\t\t\t\tvec3 tangentToNormalInSlice = cross(normalInSlice, sliceBitangent);\n\t\t\t\tvec2 cosHorizons = vec2(dot(viewDir, tangentToNormalInSlice), dot(viewDir, -tangentToNormalInSlice));\n\n\t\t\t\tfor (int j = 0; j < STEPS; ++j) {\n\t\t\t\t\tvec3 sampleViewOffset = sampleDir.xyz * radiusToUse * sampleDir.w * pow(float(j + 1) / float(STEPS), distanceExponent);\n\n\t\t\t\t\tvec3 sampleSceneUvDepth = getSceneUvAndDepth(viewPos + sampleViewOffset);\n\t\t\t\t\tvec3 sampleSceneViewPos = getViewPosition(sampleSceneUvDepth.xy, sampleSceneUvDepth.z);\n\t\t\t\t\tvec3 viewDelta = sampleSceneViewPos - viewPos;\n\t\t\t\t\tif (abs(viewDelta.z) < thickness) {\n\t\t\t\t\t\tfloat sampleCosHorizon = dot(viewDir, normalize(viewDelta));\n\t\t\t\t\t\tcosHorizons.x += max(0., (sampleCosHorizon - cosHorizons.x) * mix(1., 2. / float(j + 2), distanceFallOff));\n\t\t\t\t\t}\n\n\t\t\t\t\tsampleSceneUvDepth = getSceneUvAndDepth(viewPos - sampleViewOffset);\n\t\t\t\t\tsampleSceneViewPos = getViewPosition(sampleSceneUvDepth.xy, sampleSceneUvDepth.z);\n\t\t\t\t\tviewDelta = sampleSceneViewPos - viewPos;\n\t\t\t\t\tif (abs(viewDelta.z) < thickness) {\n\t\t\t\t\t\tfloat sampleCosHorizon = dot(viewDir, normalize(viewDelta));\n\t\t\t\t\t\tcosHorizons.y += max(0., (sampleCosHorizon - cosHorizons.y) * mix(1., 2. / float(j + 2), distanceFallOff));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvec2 sinHorizons = sqrt(1. - cosHorizons * cosHorizons);\n\t\t\t\tfloat nx = dot(normalInSlice, sliceTangent);\n\t\t\t\tfloat ny = dot(normalInSlice, viewDir);\n\t\t\t\tfloat nxb = 1. / 2. * (acos(cosHorizons.y) - acos(cosHorizons.x) + sinHorizons.x * cosHorizons.x - sinHorizons.y * cosHorizons.y);\n\t\t\t\tfloat nyb = 1. / 2. * (2. - cosHorizons.x * cosHorizons.x - cosHorizons.y * cosHorizons.y);\n\t\t\t\tfloat occlusion = nx * nxb + ny * nyb;\n\t\t\t\tao += occlusion;\n\t\t\t}\n\n\t\t\tao = clamp(ao / float(DIRECTIONS), 0., 1.);\n\t\t#if SCENE_CLIP_BOX == 1\n\t\t\tao = mix(ao, 1., smoothstep(0., radiusToUse, boxDistance));\n\t\t#endif\n\t\t\tao = pow(ao, scale);\n\n\t\t\tgl_FragColor = FRAGMENT_OUTPUT;\n\t\t}"},qg={PERSPECTIVE_CAMERA:1},Yg={tDepth:{value:null},cameraNear:{value:null},cameraFar:{value:null}},Wg="\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",Jg="\n\t\tuniform sampler2D tDepth;\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\t\tvarying vec2 vUv;\n\n\t\t#include <packing>\n\n\t\tfloat getLinearDepth( const in vec2 screenPosition ) {\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\t\t\t\tfloat fragCoordZ = texture2D( tDepth, screenPosition ).x;\n\t\t\t\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n\t\t\t\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n\t\t\t#else\n\t\t\t\treturn texture2D( tDepth, screenPosition ).x;\n\t\t\t#endif\n\t\t}\n\n\t\tvoid main() {\n\t\t\tfloat depth = getLinearDepth( vUv );\n\t\t\tgl_FragColor = vec4( vec3( 1.0 - depth ), 1.0 );\n\n\t\t}",jg={tDiffuse:{value:null},intensity:{value:1}},Xg="\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",Kg="\n\t\tuniform float intensity;\n\t\tuniform sampler2D tDiffuse;\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = vec4(mix(vec3(1.), texel.rgb, intensity), texel.a);\n\t\t}";const Zg={name:"PoissonDenoiseShader",defines:{SAMPLES:16,SAMPLE_VECTORS:$g(16,2,1),NORMAL_VECTOR_TYPE:1,DEPTH_VALUE_SOURCE:0},uniforms:{tDiffuse:{value:null},tNormal:{value:null},tDepth:{value:null},tNoise:{value:null},resolution:{value:new li},cameraProjectionMatrixInverse:{value:new fr},lumaPhi:{value:5},depthPhi:{value:5},normalPhi:{value:5},radius:{value:4},index:{value:0}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",fragmentShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform sampler2D tNormal;\n\t\tuniform sampler2D tDepth;\n\t\tuniform sampler2D tNoise;\n\t\tuniform vec2 resolution;\n\t\tuniform mat4 cameraProjectionMatrixInverse;\n\t\tuniform float lumaPhi;\n\t\tuniform float depthPhi;\n\t\tuniform float normalPhi;\n\t\tuniform float radius;\n\t\tuniform int index;\n\n\t\t#include <common>\n\t\t#include <packing>\n\n\t\t#ifndef SAMPLE_LUMINANCE\n\t\t#define SAMPLE_LUMINANCE dot(vec3(0.2125, 0.7154, 0.0721), a)\n\t\t#endif\n\n\t\t#ifndef FRAGMENT_OUTPUT\n\t\t#define FRAGMENT_OUTPUT vec4(denoised, 1.)\n\t\t#endif\n\n\t\tfloat getLuminance(const in vec3 a) {\n\t\t\treturn SAMPLE_LUMINANCE;\n\t\t}\n\n\t\tconst vec3 poissonDisk[SAMPLES] = SAMPLE_VECTORS;\n\n\t\tvec3 getViewPosition(const in vec2 screenPosition, const in float depth) {\n\t\t\tvec4 clipSpacePosition = vec4(vec3(screenPosition, depth) * 2.0 - 1.0, 1.0);\n\t\t\tvec4 viewSpacePosition = cameraProjectionMatrixInverse * clipSpacePosition;\n\t\t\treturn viewSpacePosition.xyz / viewSpacePosition.w;\n\t\t}\n\n\t\tfloat getDepth(const vec2 uv) {\n\t\t#if DEPTH_VALUE_SOURCE == 1\n\t\t\treturn textureLod(tDepth, uv.xy, 0.0).a;\n\t\t#else\n\t\t\treturn textureLod(tDepth, uv.xy, 0.0).r;\n\t\t#endif\n\t\t}\n\n\t\tfloat fetchDepth(const ivec2 uv) {\n\t\t\t#if DEPTH_VALUE_SOURCE == 1\n\t\t\t\treturn texelFetch(tDepth, uv.xy, 0).a;\n\t\t\t#else\n\t\t\t\treturn texelFetch(tDepth, uv.xy, 0).r;\n\t\t\t#endif\n\t\t}\n\n\t\tvec3 computeNormalFromDepth(const vec2 uv) {\n\t\t\tvec2 size = vec2(textureSize(tDepth, 0));\n\t\t\tivec2 p = ivec2(uv * size);\n\t\t\tfloat c0 = fetchDepth(p);\n\t\t\tfloat l2 = fetchDepth(p - ivec2(2, 0));\n\t\t\tfloat l1 = fetchDepth(p - ivec2(1, 0));\n\t\t\tfloat r1 = fetchDepth(p + ivec2(1, 0));\n\t\t\tfloat r2 = fetchDepth(p + ivec2(2, 0));\n\t\t\tfloat b2 = fetchDepth(p - ivec2(0, 2));\n\t\t\tfloat b1 = fetchDepth(p - ivec2(0, 1));\n\t\t\tfloat t1 = fetchDepth(p + ivec2(0, 1));\n\t\t\tfloat t2 = fetchDepth(p + ivec2(0, 2));\n\t\t\tfloat dl = abs((2.0 * l1 - l2) - c0);\n\t\t\tfloat dr = abs((2.0 * r1 - r2) - c0);\n\t\t\tfloat db = abs((2.0 * b1 - b2) - c0);\n\t\t\tfloat dt = abs((2.0 * t1 - t2) - c0);\n\t\t\tvec3 ce = getViewPosition(uv, c0).xyz;\n\t\t\tvec3 dpdx = (dl < dr) ?  ce - getViewPosition((uv - vec2(1.0 / size.x, 0.0)), l1).xyz\n\t\t\t\t\t\t\t\t\t: -ce + getViewPosition((uv + vec2(1.0 / size.x, 0.0)), r1).xyz;\n\t\t\tvec3 dpdy = (db < dt) ?  ce - getViewPosition((uv - vec2(0.0, 1.0 / size.y)), b1).xyz\n\t\t\t\t\t\t\t\t\t: -ce + getViewPosition((uv + vec2(0.0, 1.0 / size.y)), t1).xyz;\n\t\t\treturn normalize(cross(dpdx, dpdy));\n\t\t}\n\n\t\tvec3 getViewNormal(const vec2 uv) {\n\t\t#if NORMAL_VECTOR_TYPE == 2\n\t\t\treturn normalize(textureLod(tNormal, uv, 0.).rgb);\n\t\t#elif NORMAL_VECTOR_TYPE == 1\n\t\t\treturn unpackRGBToNormal(textureLod(tNormal, uv, 0.).rgb);\n\t\t#else\n\t\t\treturn computeNormalFromDepth(uv);\n\t\t#endif\n\t\t}\n\n\t\tvoid denoiseSample(in vec3 center, in vec3 viewNormal, in vec3 viewPos, in vec2 sampleUv, inout vec3 denoised, inout float totalWeight) {\n\t\t\tvec4 sampleTexel = textureLod(tDiffuse, sampleUv, 0.0);\n\t\t\tfloat sampleDepth = getDepth(sampleUv);\n\t\t\tvec3 sampleNormal = getViewNormal(sampleUv);\n\t\t\tvec3 neighborColor = sampleTexel.rgb;\n\t\t\tvec3 viewPosSample = getViewPosition(sampleUv, sampleDepth);\n\n\t\t\tfloat normalDiff = dot(viewNormal, sampleNormal);\n\t\t\tfloat normalSimilarity = pow(max(normalDiff, 0.), normalPhi);\n\t\t\tfloat lumaDiff = abs(getLuminance(neighborColor) - getLuminance(center));\n\t\t\tfloat lumaSimilarity = max(1.0 - lumaDiff / lumaPhi, 0.0);\n\t\t\tfloat depthDiff = abs(dot(viewPos - viewPosSample, viewNormal));\n\t\t\tfloat depthSimilarity = max(1. - depthDiff / depthPhi, 0.);\n\t\t\tfloat w = lumaSimilarity * depthSimilarity * normalSimilarity;\n\n\t\t\tdenoised += w * neighborColor;\n\t\t\ttotalWeight += w;\n\t\t}\n\n\t\tvoid main() {\n\t\t\tfloat depth = getDepth(vUv.xy);\n\t\t\tvec3 viewNormal = getViewNormal(vUv);\n\t\t\tif (depth == 1. || dot(viewNormal, viewNormal) == 0.) {\n\t\t\t\tdiscard;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvec4 texel = textureLod(tDiffuse, vUv, 0.0);\n\t\t\tvec3 center = texel.rgb;\n\t\t\tvec3 viewPos = getViewPosition(vUv, depth);\n\n\t\t\tvec2 noiseResolution = vec2(textureSize(tNoise, 0));\n\t\t\tvec2 noiseUv = vUv * resolution / noiseResolution;\n\t\t\tvec4 noiseTexel = textureLod(tNoise, noiseUv, 0.0);\n      \t\tvec2 noiseVec = vec2(sin(noiseTexel[index % 4] * 2. * PI), cos(noiseTexel[index % 4] * 2. * PI));\n    \t\tmat2 rotationMatrix = mat2(noiseVec.x, -noiseVec.y, noiseVec.x, noiseVec.y);\n\n\t\t\tfloat totalWeight = 1.0;\n\t\t\tvec3 denoised = texel.rgb;\n\t\t\tfor (int i = 0; i < SAMPLES; i++) {\n\t\t\t\tvec3 sampleDir = poissonDisk[i];\n\t\t\t\tvec2 offset = rotationMatrix * (sampleDir.xy * (1. + sampleDir.z * (radius - 1.)) / resolution);\n\t\t\t\tvec2 sampleUv = vUv + offset;\n\t\t\t\tdenoiseSample(center, viewNormal, viewPos, sampleUv, denoised, totalWeight);\n\t\t\t}\n\n\t\t\tif (totalWeight > 0.) {\n\t\t\t\tdenoised /= totalWeight;\n\t\t\t}\n\t\t\tgl_FragColor = FRAGMENT_OUTPUT;\n\t\t}"};function $g(t,e,n){const i=function(t,e,n){const i=[];for(let r=0;r<t;r++){const s=2*Math.PI*e*r/t,a=Math.pow(r/(t-1),n);i.push(new hi(Math.cos(s),Math.sin(s),a))}return i}(t,e,n);let r="vec3[SAMPLES](";for(let e=0;e<t;e++){const n=i[e];r+=`vec3(${n.x}, ${n.y}, ${n.z})${e<t-1?",":")"}`}return r}class tf{constructor(t=Math){this.grad3=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]],this.grad4=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],[1,-1,-1,0],[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]],this.p=[];for(let e=0;e<256;e++)this.p[e]=Math.floor(256*t.random());this.perm=[];for(let t=0;t<512;t++)this.perm[t]=this.p[255&t];this.simplex=[[0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0],[0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,3,1,0],[1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0],[2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]}noise(t,e){let n,i,r;const s=(t+e)*(.5*(Math.sqrt(3)-1)),a=Math.floor(t+s),o=Math.floor(e+s),l=(3-Math.sqrt(3))/6,c=(a+o)*l,h=t-(a-c),A=e-(o-c);let u,d;h>A?(u=1,d=0):(u=0,d=1);const p=h-u+l,g=A-d+l,f=h-1+2*l,m=A-1+2*l,y=255&a,v=255&o,x=this.perm[y+this.perm[v]]%12,C=this.perm[y+u+this.perm[v+d]]%12,I=this.perm[y+1+this.perm[v+1]]%12;let E=.5-h*h-A*A;E<0?n=0:(E*=E,n=E*E*this._dot(this.grad3[x],h,A));let w=.5-p*p-g*g;w<0?i=0:(w*=w,i=w*w*this._dot(this.grad3[C],p,g));let _=.5-f*f-m*m;return _<0?r=0:(_*=_,r=_*_*this._dot(this.grad3[I],f,m)),70*(n+i+r)}noise3d(t,e,n){let i,r,s,a;const o=(t+e+n)*(1/3),l=Math.floor(t+o),c=Math.floor(e+o),h=Math.floor(n+o),A=1/6,u=(l+c+h)*A,d=t-(l-u),p=e-(c-u),g=n-(h-u);let f,m,y,v,x,C;d>=p?p>=g?(f=1,m=0,y=0,v=1,x=1,C=0):d>=g?(f=1,m=0,y=0,v=1,x=0,C=1):(f=0,m=0,y=1,v=1,x=0,C=1):p<g?(f=0,m=0,y=1,v=0,x=1,C=1):d<g?(f=0,m=1,y=0,v=0,x=1,C=1):(f=0,m=1,y=0,v=1,x=1,C=0);const I=d-f+A,E=p-m+A,w=g-y+A,_=d-v+2*A,b=p-x+2*A,B=g-C+2*A,S=d-1+.5,M=p-1+.5,T=g-1+.5,Q=255&l,D=255&c,R=255&h,U=this.perm[Q+this.perm[D+this.perm[R]]]%12,P=this.perm[Q+f+this.perm[D+m+this.perm[R+y]]]%12,L=this.perm[Q+v+this.perm[D+x+this.perm[R+C]]]%12,F=this.perm[Q+1+this.perm[D+1+this.perm[R+1]]]%12;let N=.6-d*d-p*p-g*g;N<0?i=0:(N*=N,i=N*N*this._dot3(this.grad3[U],d,p,g));let k=.6-I*I-E*E-w*w;k<0?r=0:(k*=k,r=k*k*this._dot3(this.grad3[P],I,E,w));let O=.6-_*_-b*b-B*B;O<0?s=0:(O*=O,s=O*O*this._dot3(this.grad3[L],_,b,B));let z=.6-S*S-M*M-T*T;return z<0?a=0:(z*=z,a=z*z*this._dot3(this.grad3[F],S,M,T)),32*(i+r+s+a)}noise4d(t,e,n,i){const r=this.grad4,s=this.simplex,a=this.perm,o=(Math.sqrt(5)-1)/4,l=(5-Math.sqrt(5))/20;let c,h,A,u,d;const p=(t+e+n+i)*o,g=Math.floor(t+p),f=Math.floor(e+p),m=Math.floor(n+p),y=Math.floor(i+p),v=(g+f+m+y)*l,x=t-(g-v),C=e-(f-v),I=n-(m-v),E=i-(y-v),w=(x>C?32:0)+(x>I?16:0)+(C>I?8:0)+(x>E?4:0)+(C>E?2:0)+(I>E?1:0),_=s[w][0]>=3?1:0,b=s[w][1]>=3?1:0,B=s[w][2]>=3?1:0,S=s[w][3]>=3?1:0,M=s[w][0]>=2?1:0,T=s[w][1]>=2?1:0,Q=s[w][2]>=2?1:0,D=s[w][3]>=2?1:0,R=s[w][0]>=1?1:0,U=s[w][1]>=1?1:0,P=s[w][2]>=1?1:0,L=s[w][3]>=1?1:0,F=x-_+l,N=C-b+l,k=I-B+l,O=E-S+l,z=x-M+2*l,G=C-T+2*l,H=I-Q+2*l,V=E-D+2*l,q=x-R+3*l,Y=C-U+3*l,W=I-P+3*l,J=E-L+3*l,j=x-1+4*l,X=C-1+4*l,K=I-1+4*l,Z=E-1+4*l,$=255&g,tt=255&f,et=255&m,nt=255&y,it=a[$+a[tt+a[et+a[nt]]]]%32,rt=a[$+_+a[tt+b+a[et+B+a[nt+S]]]]%32,st=a[$+M+a[tt+T+a[et+Q+a[nt+D]]]]%32,at=a[$+R+a[tt+U+a[et+P+a[nt+L]]]]%32,ot=a[$+1+a[tt+1+a[et+1+a[nt+1]]]]%32;let lt=.6-x*x-C*C-I*I-E*E;lt<0?c=0:(lt*=lt,c=lt*lt*this._dot4(r[it],x,C,I,E));let ct=.6-F*F-N*N-k*k-O*O;ct<0?h=0:(ct*=ct,h=ct*ct*this._dot4(r[rt],F,N,k,O));let ht=.6-z*z-G*G-H*H-V*V;ht<0?A=0:(ht*=ht,A=ht*ht*this._dot4(r[st],z,G,H,V));let At=.6-q*q-Y*Y-W*W-J*J;At<0?u=0:(At*=At,u=At*At*this._dot4(r[at],q,Y,W,J));let ut=.6-j*j-X*X-K*K-Z*Z;return ut<0?d=0:(ut*=ut,d=ut*ut*this._dot4(r[ot],j,X,K,Z)),27*(c+h+A+u+d)}_dot(t,e,n){return t[0]*e+t[1]*n}_dot3(t,e,n,i){return t[0]*e+t[1]*n+t[2]*i}_dot4(t,e,n,i,r){return t[0]*e+t[1]*n+t[2]*i+t[3]*r}}class ef extends Dg{constructor(t,e,n=512,i=512,r,s,a){super(),this.width=n,this.height=i,this.clear=!0,this.camera=e,this.scene=t,this.output=0,this._renderGBuffer=!0,this._visibilityCache=[],this.blendIntensity=1,this.pdRings=2,this.pdRadiusExponent=2,this.pdSamples=16,this.gtaoNoiseTexture=function(t=5){const e=Math.floor(t)%2==0?Math.floor(t)+1:Math.floor(t),n=function(t){const e=Math.floor(t)%2==0?Math.floor(t)+1:Math.floor(t),n=e*e,i=Array(n).fill(0);let r=Math.floor(e/2),s=e-1;for(let t=1;t<=n;)-1===r&&s===e?(s=e-2,r=0):(s===e&&(s=0),r<0&&(r=e-1)),0===i[r*e+s]?(i[r*e+s]=t++,s++,r--):(s-=2,r++);return i}(e),i=n.length,r=new Uint8Array(4*i);for(let t=0;t<i;++t){const e=n[t],s=2*Math.PI*e/i,a=new hi(Math.cos(s),Math.sin(s),0).normalize();r[4*t]=255*(.5*a.x+.5),r[4*t+1]=255*(.5*a.y+.5),r[4*t+2]=127,r[4*t+3]=255}const s=new Za(r,e,e);return s.wrapS=Et,s.wrapT=Et,s.needsUpdate=!0,s}(),this.pdNoiseTexture=this._generateNoise(),this.gtaoRenderTarget=new Ni(this.width,this.height,{type:Ht}),this.pdRenderTarget=this.gtaoRenderTarget.clone(),this.gtaoMaterial=new ia({defines:Object.assign({},Vg.defines),uniforms:na.clone(Vg.uniforms),vertexShader:Vg.vertexShader,fragmentShader:Vg.fragmentShader,blending:w,depthTest:!1,depthWrite:!1}),this.gtaoMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.gtaoMaterial.uniforms.tNoise.value=this.gtaoNoiseTexture,this.gtaoMaterial.uniforms.resolution.value.set(this.width,this.height),this.gtaoMaterial.uniforms.cameraNear.value=this.camera.near,this.gtaoMaterial.uniforms.cameraFar.value=this.camera.far,this.normalMaterial=new jc,this.normalMaterial.blending=w,this.pdMaterial=new ia({defines:Object.assign({},Zg.defines),uniforms:na.clone(Zg.uniforms),vertexShader:Zg.vertexShader,fragmentShader:Zg.fragmentShader,depthTest:!1,depthWrite:!1}),this.pdMaterial.uniforms.tDiffuse.value=this.gtaoRenderTarget.texture,this.pdMaterial.uniforms.tNoise.value=this.pdNoiseTexture,this.pdMaterial.uniforms.resolution.value.set(this.width,this.height),this.pdMaterial.uniforms.lumaPhi.value=10,this.pdMaterial.uniforms.depthPhi.value=2,this.pdMaterial.uniforms.normalPhi.value=3,this.pdMaterial.uniforms.radius.value=8,this.depthRenderMaterial=new ia({defines:Object.assign({},qg),uniforms:na.clone(Yg),vertexShader:Wg,fragmentShader:Jg,blending:w}),this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this.copyMaterial=new ia({uniforms:na.clone(Qg.uniforms),vertexShader:Qg.vertexShader,fragmentShader:Qg.fragmentShader,transparent:!0,depthTest:!1,depthWrite:!1,blendSrc:H,blendDst:P,blendEquation:T,blendSrcAlpha:z,blendDstAlpha:P,blendEquationAlpha:T}),this.blendMaterial=new ia({uniforms:na.clone(jg),vertexShader:Xg,fragmentShader:Kg,transparent:!0,depthTest:!1,depthWrite:!1,blending:M,blendSrc:H,blendDst:P,blendEquation:T,blendSrcAlpha:z,blendDstAlpha:P,blendEquationAlpha:T}),this._fsQuad=new Pg(null),this._originalClearColor=new ls,this.setGBuffer(r?r.depthTexture:void 0,r?r.normalTexture:void 0),void 0!==s&&this.updateGtaoMaterial(s),void 0!==a&&this.updatePdMaterial(a)}setSize(t,e){this.width=t,this.height=e,this.gtaoRenderTarget.setSize(t,e),this.normalRenderTarget.setSize(t,e),this.pdRenderTarget.setSize(t,e),this.gtaoMaterial.uniforms.resolution.value.set(t,e),this.gtaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.gtaoMaterial.uniforms.cameraProjectionMatrixInverse.value.copy(this.camera.projectionMatrixInverse),this.pdMaterial.uniforms.resolution.value.set(t,e),this.pdMaterial.uniforms.cameraProjectionMatrixInverse.value.copy(this.camera.projectionMatrixInverse)}dispose(){this.gtaoNoiseTexture.dispose(),this.pdNoiseTexture.dispose(),this.normalRenderTarget.dispose(),this.gtaoRenderTarget.dispose(),this.pdRenderTarget.dispose(),this.normalMaterial.dispose(),this.pdMaterial.dispose(),this.copyMaterial.dispose(),this.depthRenderMaterial.dispose(),this._fsQuad.dispose()}get gtaoMap(){return this.pdRenderTarget.texture}setGBuffer(t,e){void 0!==t?(this.depthTexture=t,this.normalTexture=e,this._renderGBuffer=!1):(this.depthTexture=new fl,this.depthTexture.format=$t,this.depthTexture.type=Yt,this.normalRenderTarget=new Ni(this.width,this.height,{minFilter:bt,magFilter:bt,type:Ht,depthTexture:this.depthTexture}),this.normalTexture=this.normalRenderTarget.texture,this._renderGBuffer=!0);const n=this.normalTexture?1:0,i=this.depthTexture===this.normalTexture?"w":"x";this.gtaoMaterial.defines.NORMAL_VECTOR_TYPE=n,this.gtaoMaterial.defines.DEPTH_SWIZZLING=i,this.gtaoMaterial.uniforms.tNormal.value=this.normalTexture,this.gtaoMaterial.uniforms.tDepth.value=this.depthTexture,this.pdMaterial.defines.NORMAL_VECTOR_TYPE=n,this.pdMaterial.defines.DEPTH_SWIZZLING=i,this.pdMaterial.uniforms.tNormal.value=this.normalTexture,this.pdMaterial.uniforms.tDepth.value=this.depthTexture,this.depthRenderMaterial.uniforms.tDepth.value=this.normalRenderTarget.depthTexture}setSceneClipBox(t){t?(this.gtaoMaterial.needsUpdate=1!==this.gtaoMaterial.defines.SCENE_CLIP_BOX,this.gtaoMaterial.defines.SCENE_CLIP_BOX=1,this.gtaoMaterial.uniforms.sceneBoxMin.value.copy(t.min),this.gtaoMaterial.uniforms.sceneBoxMax.value.copy(t.max)):(this.gtaoMaterial.needsUpdate=0===this.gtaoMaterial.defines.SCENE_CLIP_BOX,this.gtaoMaterial.defines.SCENE_CLIP_BOX=0)}updateGtaoMaterial(t){void 0!==t.radius&&(this.gtaoMaterial.uniforms.radius.value=t.radius),void 0!==t.distanceExponent&&(this.gtaoMaterial.uniforms.distanceExponent.value=t.distanceExponent),void 0!==t.thickness&&(this.gtaoMaterial.uniforms.thickness.value=t.thickness),void 0!==t.distanceFallOff&&(this.gtaoMaterial.uniforms.distanceFallOff.value=t.distanceFallOff,this.gtaoMaterial.needsUpdate=!0),void 0!==t.scale&&(this.gtaoMaterial.uniforms.scale.value=t.scale),void 0!==t.samples&&t.samples!==this.gtaoMaterial.defines.SAMPLES&&(this.gtaoMaterial.defines.SAMPLES=t.samples,this.gtaoMaterial.needsUpdate=!0),void 0!==t.screenSpaceRadius&&(t.screenSpaceRadius?1:0)!==this.gtaoMaterial.defines.SCREEN_SPACE_RADIUS&&(this.gtaoMaterial.defines.SCREEN_SPACE_RADIUS=t.screenSpaceRadius?1:0,this.gtaoMaterial.needsUpdate=!0)}updatePdMaterial(t){let e=!1;void 0!==t.lumaPhi&&(this.pdMaterial.uniforms.lumaPhi.value=t.lumaPhi),void 0!==t.depthPhi&&(this.pdMaterial.uniforms.depthPhi.value=t.depthPhi),void 0!==t.normalPhi&&(this.pdMaterial.uniforms.normalPhi.value=t.normalPhi),void 0!==t.radius&&t.radius!==this.radius&&(this.pdMaterial.uniforms.radius.value=t.radius),void 0!==t.radiusExponent&&t.radiusExponent!==this.pdRadiusExponent&&(this.pdRadiusExponent=t.radiusExponent,e=!0),void 0!==t.rings&&t.rings!==this.pdRings&&(this.pdRings=t.rings,e=!0),void 0!==t.samples&&t.samples!==this.pdSamples&&(this.pdSamples=t.samples,e=!0),e&&(this.pdMaterial.defines.SAMPLES=this.pdSamples,this.pdMaterial.defines.SAMPLE_VECTORS=$g(this.pdSamples,this.pdRings,this.pdRadiusExponent),this.pdMaterial.needsUpdate=!0)}render(t,e,n){switch(this._renderGBuffer&&(this._overrideVisibility(),this._renderOverride(t,this.normalMaterial,this.normalRenderTarget,7829503,1),this._restoreVisibility()),this.gtaoMaterial.uniforms.cameraNear.value=this.camera.near,this.gtaoMaterial.uniforms.cameraFar.value=this.camera.far,this.gtaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.gtaoMaterial.uniforms.cameraProjectionMatrixInverse.value.copy(this.camera.projectionMatrixInverse),this.gtaoMaterial.uniforms.cameraWorldMatrix.value.copy(this.camera.matrixWorld),this._renderPass(t,this.gtaoMaterial,this.gtaoRenderTarget,16777215,1),this.pdMaterial.uniforms.cameraProjectionMatrixInverse.value.copy(this.camera.projectionMatrixInverse),this._renderPass(t,this.pdMaterial,this.pdRenderTarget,16777215,1),this.output){case ef.OUTPUT.Off:break;case ef.OUTPUT.Diffuse:this.copyMaterial.uniforms.tDiffuse.value=n.texture,this.copyMaterial.blending=w,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;case ef.OUTPUT.AO:this.copyMaterial.uniforms.tDiffuse.value=this.gtaoRenderTarget.texture,this.copyMaterial.blending=w,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;case ef.OUTPUT.Denoise:this.copyMaterial.uniforms.tDiffuse.value=this.pdRenderTarget.texture,this.copyMaterial.blending=w,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;case ef.OUTPUT.Depth:this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this._renderPass(t,this.depthRenderMaterial,this.renderToScreen?null:e);break;case ef.OUTPUT.Normal:this.copyMaterial.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.copyMaterial.blending=w,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;case ef.OUTPUT.Default:this.copyMaterial.uniforms.tDiffuse.value=n.texture,this.copyMaterial.blending=w,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e),this.blendMaterial.uniforms.intensity.value=this.blendIntensity,this.blendMaterial.uniforms.tDiffuse.value=this.pdRenderTarget.texture,this._renderPass(t,this.blendMaterial,this.renderToScreen?null:e);break;default:console.warn("THREE.GTAOPass: Unknown output type.")}}_renderPass(t,e,n,i,r){t.getClearColor(this._originalClearColor);const s=t.getClearAlpha(),a=t.autoClear;t.setRenderTarget(n),t.autoClear=!1,null!=i&&(t.setClearColor(i),t.setClearAlpha(r||0),t.clear()),this._fsQuad.material=e,this._fsQuad.render(t),t.autoClear=a,t.setClearColor(this._originalClearColor),t.setClearAlpha(s)}_renderOverride(t,e,n,i,r){t.getClearColor(this._originalClearColor);const s=t.getClearAlpha(),a=t.autoClear;t.setRenderTarget(n),t.autoClear=!1,i=e.clearColor||i,r=e.clearAlpha||r,null!=i&&(t.setClearColor(i),t.setClearAlpha(r||0),t.clear()),this.scene.overrideMaterial=e,t.render(this.scene,this.camera),this.scene.overrideMaterial=null,t.autoClear=a,t.setClearColor(this._originalClearColor),t.setClearAlpha(s)}_overrideVisibility(){const t=this.scene,e=this._visibilityCache;t.traverse(function(t){(t.isPoints||t.isLine||t.isLine2)&&t.visible&&(t.visible=!1,e.push(t))})}_restoreVisibility(){const t=this._visibilityCache;for(let e=0;e<t.length;e++)t[e].visible=!0;t.length=0}_generateNoise(t=64){const e=new tf,n=new Uint8Array(t*t*4);for(let i=0;i<t;i++)for(let r=0;r<t;r++){const s=i,a=r;n[4*(i*t+r)]=255*(.5*e.noise(s,a)+.5),n[4*(i*t+r)+1]=255*(.5*e.noise(s+t,a)+.5),n[4*(i*t+r)+2]=255*(.5*e.noise(s,a+t)+.5),n[4*(i*t+r)+3]=255*(.5*e.noise(s+t,a+t)+.5)}const i=new Za(n,t,t,Kt,Lt);return i.wrapS=Et,i.wrapT=Et,i.needsUpdate=!0,i}}ef.OUTPUT={Off:-1,Default:0,Diffuse:1,Depth:2,Normal:3,AO:4,Denoise:5};const nf={name:"LuminosityHighPassShader",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new ls(0)},defaultOpacity:{value:0}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec3 defaultColor;\n\t\tuniform float defaultOpacity;\n\t\tuniform float luminosityThreshold;\n\t\tuniform float smoothWidth;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat v = luminance( texel.xyz );\n\n\t\t\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\n\n\t\t\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\n\n\t\t\tgl_FragColor = mix( outputColor, texel, alpha );\n\n\t\t}"};class rf extends Dg{constructor(t,e=1,n,i){super(),this.strength=e,this.radius=n,this.threshold=i,this.resolution=void 0!==t?new li(t.x,t.y):new li(256,256),this.clearColor=new ls(0,0,0),this.needsSwap=!1,this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;let r=Math.round(this.resolution.x/2),s=Math.round(this.resolution.y/2);this.renderTargetBright=new Ni(r,s,{type:Ht}),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(let t=0;t<this.nMips;t++){const e=new Ni(r,s,{type:Ht});e.texture.name="UnrealBloomPass.h"+t,e.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(e);const n=new Ni(r,s,{type:Ht});n.texture.name="UnrealBloomPass.v"+t,n.texture.generateMipmaps=!1,this.renderTargetsVertical.push(n),r=Math.round(r/2),s=Math.round(s/2)}const a=nf;this.highPassUniforms=na.clone(a.uniforms),this.highPassUniforms.luminosityThreshold.value=i,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new ia({uniforms:this.highPassUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}),this.separableBlurMaterials=[];const o=[3,5,7,9,11];r=Math.round(this.resolution.x/2),s=Math.round(this.resolution.y/2);for(let t=0;t<this.nMips;t++)this.separableBlurMaterials.push(this._getSeparableBlurMaterial(o[t])),this.separableBlurMaterials[t].uniforms.invSize.value=new li(1/r,1/s),r=Math.round(r/2),s=Math.round(s/2);this.compositeMaterial=this._getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=e,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],this.bloomTintColors=[new hi(1,1,1),new hi(1,1,1),new hi(1,1,1),new hi(1,1,1),new hi(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,this.copyUniforms=na.clone(Qg.uniforms),this.blendMaterial=new ia({uniforms:this.copyUniforms,vertexShader:Qg.vertexShader,fragmentShader:Qg.fragmentShader,blending:b,depthTest:!1,depthWrite:!1,transparent:!0}),this._oldClearColor=new ls,this._oldClearAlpha=1,this._basic=new us,this._fsQuad=new Pg(null)}dispose(){for(let t=0;t<this.renderTargetsHorizontal.length;t++)this.renderTargetsHorizontal[t].dispose();for(let t=0;t<this.renderTargetsVertical.length;t++)this.renderTargetsVertical[t].dispose();this.renderTargetBright.dispose();for(let t=0;t<this.separableBlurMaterials.length;t++)this.separableBlurMaterials[t].dispose();this.compositeMaterial.dispose(),this.blendMaterial.dispose(),this._basic.dispose(),this._fsQuad.dispose()}setSize(t,e){let n=Math.round(t/2),i=Math.round(e/2);this.renderTargetBright.setSize(n,i);for(let t=0;t<this.nMips;t++)this.renderTargetsHorizontal[t].setSize(n,i),this.renderTargetsVertical[t].setSize(n,i),this.separableBlurMaterials[t].uniforms.invSize.value=new li(1/n,1/i),n=Math.round(n/2),i=Math.round(i/2)}render(t,e,n,i,r){t.getClearColor(this._oldClearColor),this._oldClearAlpha=t.getClearAlpha();const s=t.autoClear;t.autoClear=!1,t.setClearColor(this.clearColor,0),r&&t.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this._fsQuad.material=this._basic,this._basic.map=n.texture,t.setRenderTarget(null),t.clear(),this._fsQuad.render(t)),this.highPassUniforms.tDiffuse.value=n.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this._fsQuad.material=this.materialHighPassFilter,t.setRenderTarget(this.renderTargetBright),t.clear(),this._fsQuad.render(t);let a=this.renderTargetBright;for(let e=0;e<this.nMips;e++)this._fsQuad.material=this.separableBlurMaterials[e],this.separableBlurMaterials[e].uniforms.colorTexture.value=a.texture,this.separableBlurMaterials[e].uniforms.direction.value=rf.BlurDirectionX,t.setRenderTarget(this.renderTargetsHorizontal[e]),t.clear(),this._fsQuad.render(t),this.separableBlurMaterials[e].uniforms.colorTexture.value=this.renderTargetsHorizontal[e].texture,this.separableBlurMaterials[e].uniforms.direction.value=rf.BlurDirectionY,t.setRenderTarget(this.renderTargetsVertical[e]),t.clear(),this._fsQuad.render(t),a=this.renderTargetsVertical[e];this._fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,t.setRenderTarget(this.renderTargetsHorizontal[0]),t.clear(),this._fsQuad.render(t),this._fsQuad.material=this.blendMaterial,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,r&&t.state.buffers.stencil.setTest(!0),this.renderToScreen?(t.setRenderTarget(null),this._fsQuad.render(t)):(t.setRenderTarget(n),this._fsQuad.render(t)),t.setClearColor(this._oldClearColor,this._oldClearAlpha),t.autoClear=s}_getSeparableBlurMaterial(t){const e=[];for(let n=0;n<t;n++)e.push(.39894*Math.exp(-.5*n*n/(t*t))/t);return new ia({defines:{KERNEL_RADIUS:t},uniforms:{colorTexture:{value:null},invSize:{value:new li(.5,.5)},direction:{value:new li(.5,.5)},gaussianCoefficients:{value:e}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 invSize;\n\t\t\t\tuniform vec2 direction;\n\t\t\t\tuniform float gaussianCoefficients[KERNEL_RADIUS];\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tfloat weightSum = gaussianCoefficients[0];\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv ).rgb * weightSum;\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = float(i);\n\t\t\t\t\t\tfloat w = gaussianCoefficients[i];\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset ).rgb;\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset ).rgb;\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\n\t\t\t\t\t\tweightSum += 2.0 * w;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})}_getCompositeMaterial(t){return new ia({defines:{NUM_MIPS:t},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform sampler2D blurTexture4;\n\t\t\t\tuniform sampler2D blurTexture5;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\n\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n\t\t\t\t}"})}}rf.BlurDirectionX=new li(1,0),rf.BlurDirectionY=new li(0,1);const sf={name:"SobelOperatorShader",uniforms:{tDiffuse:{value:null},resolution:{value:new li}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec2 resolution;\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec2 texel = vec2( 1.0 / resolution.x, 1.0 / resolution.y );\n\n\t\t// kernel definition (in glsl matrices are filled in column-major order)\n\n\t\t\tconst mat3 Gx = mat3( -1, -2, -1, 0, 0, 0, 1, 2, 1 ); // x direction kernel\n\t\t\tconst mat3 Gy = mat3( -1, 0, 1, -2, 0, 2, -1, 0, 1 ); // y direction kernel\n\n\t\t// fetch the 3x3 neighbourhood of a fragment\n\n\t\t// first column\n\n\t\t\tfloat tx0y0 = texture2D( tDiffuse, vUv + texel * vec2( -1, -1 ) ).r;\n\t\t\tfloat tx0y1 = texture2D( tDiffuse, vUv + texel * vec2( -1,  0 ) ).r;\n\t\t\tfloat tx0y2 = texture2D( tDiffuse, vUv + texel * vec2( -1,  1 ) ).r;\n\n\t\t// second column\n\n\t\t\tfloat tx1y0 = texture2D( tDiffuse, vUv + texel * vec2(  0, -1 ) ).r;\n\t\t\tfloat tx1y1 = texture2D( tDiffuse, vUv + texel * vec2(  0,  0 ) ).r;\n\t\t\tfloat tx1y2 = texture2D( tDiffuse, vUv + texel * vec2(  0,  1 ) ).r;\n\n\t\t// third column\n\n\t\t\tfloat tx2y0 = texture2D( tDiffuse, vUv + texel * vec2(  1, -1 ) ).r;\n\t\t\tfloat tx2y1 = texture2D( tDiffuse, vUv + texel * vec2(  1,  0 ) ).r;\n\t\t\tfloat tx2y2 = texture2D( tDiffuse, vUv + texel * vec2(  1,  1 ) ).r;\n\n\t\t// gradient value in x direction\n\n\t\t\tfloat valueGx = Gx[0][0] * tx0y0 + Gx[1][0] * tx1y0 + Gx[2][0] * tx2y0 +\n\t\t\t\tGx[0][1] * tx0y1 + Gx[1][1] * tx1y1 + Gx[2][1] * tx2y1 +\n\t\t\t\tGx[0][2] * tx0y2 + Gx[1][2] * tx1y2 + Gx[2][2] * tx2y2;\n\n\t\t// gradient value in y direction\n\n\t\t\tfloat valueGy = Gy[0][0] * tx0y0 + Gy[1][0] * tx1y0 + Gy[2][0] * tx2y0 +\n\t\t\t\tGy[0][1] * tx0y1 + Gy[1][1] * tx1y1 + Gy[2][1] * tx2y1 +\n\t\t\t\tGy[0][2] * tx0y2 + Gy[1][2] * tx1y2 + Gy[2][2] * tx2y2;\n\n\t\t// magnitude of the total gradient\n\n\t\t\tfloat G = sqrt( ( valueGx * valueGx ) + ( valueGy * valueGy ) );\n\n\t\t\tgl_FragColor = vec4( vec3( G ), 1 );\n\n\t\t}"},af={name:"SSRShader",defines:{MAX_STEP:0,PERSPECTIVE_CAMERA:!0,DISTANCE_ATTENUATION:!0,FRESNEL:!0,INFINITE_THICK:!1,SELECTIVE:!1},uniforms:{tDiffuse:{value:null},tNormal:{value:null},tMetalness:{value:null},tDepth:{value:null},cameraNear:{value:null},cameraFar:{value:null},resolution:{value:new li},cameraProjectionMatrix:{value:new fr},cameraInverseProjectionMatrix:{value:new fr},opacity:{value:.5},maxDistance:{value:180},cameraRange:{value:0},thickness:{value:.018}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t",fragmentShader:'\n\t\t// precision highp float;\n\t\tprecision highp sampler2D;\n\t\tvarying vec2 vUv;\n\t\tuniform sampler2D tDepth;\n\t\tuniform sampler2D tNormal;\n\t\tuniform sampler2D tMetalness;\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform float cameraRange;\n\t\tuniform vec2 resolution;\n\t\tuniform float opacity;\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\t\tuniform float maxDistance;\n\t\tuniform float thickness;\n\t\tuniform mat4 cameraProjectionMatrix;\n\t\tuniform mat4 cameraInverseProjectionMatrix;\n\t\t#include <packing>\n\t\tfloat pointToLineDistance(vec3 x0, vec3 x1, vec3 x2) {\n\t\t\t//x0: point, x1: linePointA, x2: linePointB\n\t\t\t//https://mathworld.wolfram.com/Point-LineDistance3-Dimensional.html\n\t\t\treturn length(cross(x0-x1,x0-x2))/length(x2-x1);\n\t\t}\n\t\tfloat pointPlaneDistance(vec3 point,vec3 planePoint,vec3 planeNormal){\n\t\t\t// https://mathworld.wolfram.com/Point-PlaneDistance.html\n\t\t\t//// https://en.wikipedia.org/wiki/Plane_(geometry)\n\t\t\t//// http://paulbourke.net/geometry/pointlineplane/\n\t\t\tfloat a=planeNormal.x,b=planeNormal.y,c=planeNormal.z;\n\t\t\tfloat x0=point.x,y0=point.y,z0=point.z;\n\t\t\tfloat x=planePoint.x,y=planePoint.y,z=planePoint.z;\n\t\t\tfloat d=-(a*x+b*y+c*z);\n\t\t\tfloat distance=(a*x0+b*y0+c*z0+d)/sqrt(a*a+b*b+c*c);\n\t\t\treturn distance;\n\t\t}\n\t\tfloat getDepth( const in vec2 uv ) {\n\t\t\treturn texture2D( tDepth, uv ).x;\n\t\t}\n\t\tfloat getViewZ( const in float depth ) {\n\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#else\n\t\t\t\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#endif\n\t\t}\n\t\tvec3 getViewPosition( const in vec2 uv, const in float depth/*clip space*/, const in float clipW ) {\n\t\t\tvec4 clipPosition = vec4( ( vec3( uv, depth ) - 0.5 ) * 2.0, 1.0 );//ndc\n\t\t\tclipPosition *= clipW; //clip\n\t\t\treturn ( cameraInverseProjectionMatrix * clipPosition ).xyz;//view\n\t\t}\n\t\tvec3 getViewNormal( const in vec2 uv ) {\n\t\t\treturn unpackRGBToNormal( texture2D( tNormal, uv ).xyz );\n\t\t}\n\t\tvec2 viewPositionToXY(vec3 viewPosition){\n\t\t\tvec2 xy;\n\t\t\tvec4 clip=cameraProjectionMatrix*vec4(viewPosition,1);\n\t\t\txy=clip.xy;//clip\n\t\t\tfloat clipW=clip.w;\n\t\t\txy/=clipW;//NDC\n\t\t\txy=(xy+1.)/2.;//uv\n\t\t\txy*=resolution;//screen\n\t\t\treturn xy;\n\t\t}\n\t\tvoid main(){\n\t\t\t#ifdef SELECTIVE\n\t\t\t\tfloat metalness=texture2D(tMetalness,vUv).r;\n\t\t\t\tif(metalness==0.) return;\n\t\t\t#endif\n\n\t\t\tfloat depth = getDepth( vUv );\n\t\t\tfloat viewZ = getViewZ( depth );\n\t\t\tif(-viewZ>=cameraFar) return;\n\n\t\t\tfloat clipW = cameraProjectionMatrix[2][3] * viewZ+cameraProjectionMatrix[3][3];\n\t\t\tvec3 viewPosition=getViewPosition( vUv, depth, clipW );\n\n\t\t\tvec2 d0=gl_FragCoord.xy;\n\t\t\tvec2 d1;\n\n\t\t\tvec3 viewNormal=getViewNormal( vUv );\n\n\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\tvec3 viewIncidentDir=normalize(viewPosition);\n\t\t\t\tvec3 viewReflectDir=reflect(viewIncidentDir,viewNormal);\n\t\t\t#else\n\t\t\t\tvec3 viewIncidentDir=vec3(0,0,-1);\n\t\t\t\tvec3 viewReflectDir=reflect(viewIncidentDir,viewNormal);\n\t\t\t#endif\n\n\t\t\tfloat maxReflectRayLen=maxDistance/dot(-viewIncidentDir,viewNormal);\n\t\t\t// dot(a,b)==length(a)*length(b)*cos(theta) // https://www.mathsisfun.com/algebra/vectors-dot-product.html\n\t\t\t// if(a.isNormalized&&b.isNormalized) dot(a,b)==cos(theta)\n\t\t\t// maxDistance/maxReflectRayLen=cos(theta)\n\t\t\t// maxDistance/maxReflectRayLen==dot(a,b)\n\t\t\t// maxReflectRayLen==maxDistance/dot(a,b)\n\n\t\t\tvec3 d1viewPosition=viewPosition+viewReflectDir*maxReflectRayLen;\n\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\tif(d1viewPosition.z>-cameraNear){\n\t\t\t\t\t//https://tutorial.math.lamar.edu/Classes/CalcIII/EqnsOfLines.aspx\n\t\t\t\t\tfloat t=(-cameraNear-viewPosition.z)/viewReflectDir.z;\n\t\t\t\t\td1viewPosition=viewPosition+viewReflectDir*t;\n\t\t\t\t}\n\t\t\t#endif\n\t\t\td1=viewPositionToXY(d1viewPosition);\n\n\t\t\tfloat totalLen=length(d1-d0);\n\t\t\tfloat xLen=d1.x-d0.x;\n\t\t\tfloat yLen=d1.y-d0.y;\n\t\t\tfloat totalStep=max(abs(xLen),abs(yLen));\n\t\t\tfloat xSpan=xLen/totalStep;\n\t\t\tfloat ySpan=yLen/totalStep;\n\t\t\tfor(float i=0.;i<float(MAX_STEP);i++){\n\t\t\t\tif(i>=totalStep) break;\n\t\t\t\tvec2 xy=vec2(d0.x+i*xSpan,d0.y+i*ySpan);\n\t\t\t\tif(xy.x<0.||xy.x>resolution.x||xy.y<0.||xy.y>resolution.y) break;\n\t\t\t\tfloat s=length(xy-d0)/totalLen;\n\t\t\t\tvec2 uv=xy/resolution;\n\n\t\t\t\tfloat d = getDepth(uv);\n\t\t\t\tfloat vZ = getViewZ( d );\n\t\t\t\tif(-vZ>=cameraFar) continue;\n\t\t\t\tfloat cW = cameraProjectionMatrix[2][3] * vZ+cameraProjectionMatrix[3][3];\n\t\t\t\tvec3 vP=getViewPosition( uv, d, cW );\n\n\t\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\t\t// https://comp.nus.edu.sg/~lowkl/publications/lowk_persp_interp_techrep.pdf\n\t\t\t\t\tfloat recipVPZ=1./viewPosition.z;\n\t\t\t\t\tfloat viewReflectRayZ=1./(recipVPZ+s*(1./d1viewPosition.z-recipVPZ));\n\t\t\t\t#else\n\t\t\t\t\tfloat viewReflectRayZ=viewPosition.z+s*(d1viewPosition.z-viewPosition.z);\n\t\t\t\t#endif\n\n\t\t\t\t// if(viewReflectRayZ>vZ) continue; // will cause "npm run make-screenshot webgl_postprocessing_ssr" high probability hang.\n\t\t\t\t// https://github.com/mrdoob/three.js/pull/21539#issuecomment-821061164\n\t\t\t\tif(viewReflectRayZ<=vZ){\n\n\t\t\t\t\tbool hit;\n\t\t\t\t\t#ifdef INFINITE_THICK\n\t\t\t\t\t\thit=true;\n\t\t\t\t\t#else\n\t\t\t\t\t\tfloat away=pointToLineDistance(vP,viewPosition,d1viewPosition);\n\n\t\t\t\t\t\tfloat minThickness;\n\t\t\t\t\t\tvec2 xyNeighbor=xy;\n\t\t\t\t\t\txyNeighbor.x+=1.;\n\t\t\t\t\t\tvec2 uvNeighbor=xyNeighbor/resolution;\n\t\t\t\t\t\tvec3 vPNeighbor=getViewPosition(uvNeighbor,d,cW);\n\t\t\t\t\t\tminThickness=vPNeighbor.x-vP.x;\n\t\t\t\t\t\tminThickness*=3.;\n\t\t\t\t\t\tfloat tk=max(minThickness,thickness);\n\n\t\t\t\t\t\thit=away<=tk;\n\t\t\t\t\t#endif\n\n\t\t\t\t\tif(hit){\n\t\t\t\t\t\tvec3 vN=getViewNormal( uv );\n\t\t\t\t\t\tif(dot(viewReflectDir,vN)>=0.) continue;\n\t\t\t\t\t\tfloat distance=pointPlaneDistance(vP,viewPosition,viewNormal);\n\t\t\t\t\t\tif(distance>maxDistance) break;\n\t\t\t\t\t\tfloat op=opacity;\n\t\t\t\t\t\t#ifdef DISTANCE_ATTENUATION\n\t\t\t\t\t\t\tfloat ratio=1.-(distance/maxDistance);\n\t\t\t\t\t\t\tfloat attenuation=ratio*ratio;\n\t\t\t\t\t\t\top=opacity*attenuation;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#ifdef FRESNEL\n\t\t\t\t\t\t\tfloat fresnelCoe=(dot(viewIncidentDir,viewReflectDir)+1.)/2.;\n\t\t\t\t\t\t\top*=fresnelCoe;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tvec4 reflectColor=texture2D(tDiffuse,uv);\n\t\t\t\t\t\tgl_FragColor.xyz=reflectColor.xyz;\n\t\t\t\t\t\tgl_FragColor.a=op;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t'},of={PERSPECTIVE_CAMERA:1},lf={tDepth:{value:null},cameraNear:{value:null},cameraFar:{value:null}},cf="\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t",hf="\n\n\t\tuniform sampler2D tDepth;\n\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\n\t\tvarying vec2 vUv;\n\n\t\t#include <packing>\n\n\t\tfloat getLinearDepth( const in vec2 uv ) {\n\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\n\t\t\t\tfloat fragCoordZ = texture2D( tDepth, uv ).x;\n\t\t\t\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n\t\t\t\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n\n\t\t\t#else\n\n\t\t\t\treturn texture2D( tDepth, uv ).x;\n\n\t\t\t#endif\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tfloat depth = getLinearDepth( vUv );\n\t\t\tfloat d = 1.0 - depth;\n\t\t\t// d=(d-.999)*1000.;\n\t\t\tgl_FragColor = vec4( vec3( d ), 1.0 );\n\n\t\t}\n\n\t",Af={name:"SSRBlurShader",uniforms:{tDiffuse:{value:null},resolution:{value:new li},opacity:{value:.5}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec2 resolution;\n\t\tvarying vec2 vUv;\n\t\tvoid main() {\n\t\t\t//reverse engineering from PhotoShop blur filter, then change coefficient\n\n\t\t\tvec2 texelSize = ( 1.0 / resolution );\n\n\t\t\tvec4 c=texture2D(tDiffuse,vUv);\n\n\t\t\tvec2 offset;\n\n\t\t\toffset=(vec2(-1,0))*texelSize;\n\t\t\tvec4 cl=texture2D(tDiffuse,vUv+offset);\n\n\t\t\toffset=(vec2(1,0))*texelSize;\n\t\t\tvec4 cr=texture2D(tDiffuse,vUv+offset);\n\n\t\t\toffset=(vec2(0,-1))*texelSize;\n\t\t\tvec4 cb=texture2D(tDiffuse,vUv+offset);\n\n\t\t\toffset=(vec2(0,1))*texelSize;\n\t\t\tvec4 ct=texture2D(tDiffuse,vUv+offset);\n\n\t\t\t// float coeCenter=.5;\n\t\t\t// float coeSide=.125;\n\t\t\tfloat coeCenter=.2;\n\t\t\tfloat coeSide=.2;\n\t\t\tfloat a=c.a*coeCenter+cl.a*coeSide+cr.a*coeSide+cb.a*coeSide+ct.a*coeSide;\n\t\t\tvec3 rgb=(c.rgb*c.a*coeCenter+cl.rgb*cl.a*coeSide+cr.rgb*cr.a*coeSide+cb.rgb*cb.a*coeSide+ct.rgb*ct.a*coeSide)/a;\n\t\t\tgl_FragColor=vec4(rgb,a);\n\n\t\t}\n\t"};class uf extends Dg{constructor({renderer:t,scene:e,camera:n,width:i=512,height:r=512,selects:s=null,bouncing:a=!1,groundReflector:o=null}){super(),this.width=i,this.height=r,this.clear=!0,this.renderer=t,this.scene=e,this.camera=n,this.groundReflector=o,this.opacity=af.uniforms.opacity.value,this.output=0,this.maxDistance=af.uniforms.maxDistance.value,this.thickness=af.uniforms.thickness.value,this.tempColor=new ls,this._selects=s,this._resolutionScale=1,this.selective=Array.isArray(this._selects),Object.defineProperty(this,"selects",{get(){return this._selects},set(t){this._selects!==t&&(this._selects=t,Array.isArray(t)?(this.selective=!0,this.ssrMaterial.defines.SELECTIVE=!0,this.ssrMaterial.needsUpdate=!0):(this.selective=!1,this.ssrMaterial.defines.SELECTIVE=!1,this.ssrMaterial.needsUpdate=!0))}}),this._bouncing=a,Object.defineProperty(this,"bouncing",{get(){return this._bouncing},set(t){this._bouncing!==t&&(this._bouncing=t,this.ssrMaterial.uniforms.tDiffuse.value=t?this.prevRenderTarget.texture:this.beautyRenderTarget.texture)}}),this.blur=!0,this._distanceAttenuation=af.defines.DISTANCE_ATTENUATION,Object.defineProperty(this,"distanceAttenuation",{get(){return this._distanceAttenuation},set(t){this._distanceAttenuation!==t&&(this._distanceAttenuation=t,this.ssrMaterial.defines.DISTANCE_ATTENUATION=t,this.ssrMaterial.needsUpdate=!0)}}),this._fresnel=af.defines.FRESNEL,Object.defineProperty(this,"fresnel",{get(){return this._fresnel},set(t){this._fresnel!==t&&(this._fresnel=t,this.ssrMaterial.defines.FRESNEL=t,this.ssrMaterial.needsUpdate=!0)}}),this._infiniteThick=af.defines.INFINITE_THICK,Object.defineProperty(this,"infiniteThick",{get(){return this._infiniteThick},set(t){this._infiniteThick!==t&&(this._infiniteThick=t,this.ssrMaterial.defines.INFINITE_THICK=t,this.ssrMaterial.needsUpdate=!0)}});const l=new fl;l.type=kt,l.minFilter=bt,l.magFilter=bt,this.beautyRenderTarget=new Ni(this.width,this.height,{minFilter:bt,magFilter:bt,type:Ht,depthTexture:l,depthBuffer:!0}),this.prevRenderTarget=new Ni(this.width,this.height,{minFilter:bt,magFilter:bt}),this.normalRenderTarget=new Ni(this.width,this.height,{minFilter:bt,magFilter:bt,type:Ht}),this.metalnessRenderTarget=new Ni(this.width,this.height,{minFilter:bt,magFilter:bt,type:Ht}),this.ssrRenderTarget=new Ni(this.width,this.height,{minFilter:bt,magFilter:bt}),this.blurRenderTarget=this.ssrRenderTarget.clone(),this.blurRenderTarget2=this.ssrRenderTarget.clone(),this.ssrMaterial=new ia({defines:Object.assign({},af.defines,{MAX_STEP:Math.sqrt(this.width*this.width+this.height*this.height)}),uniforms:na.clone(af.uniforms),vertexShader:af.vertexShader,fragmentShader:af.fragmentShader,blending:w}),this.ssrMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.ssrMaterial.uniforms.tNormal.value=this.normalRenderTarget.texture,this.ssrMaterial.defines.SELECTIVE=this.selective,this.ssrMaterial.needsUpdate=!0,this.ssrMaterial.uniforms.tMetalness.value=this.metalnessRenderTarget.texture,this.ssrMaterial.uniforms.tDepth.value=this.beautyRenderTarget.depthTexture,this.ssrMaterial.uniforms.cameraNear.value=this.camera.near,this.ssrMaterial.uniforms.cameraFar.value=this.camera.far,this.ssrMaterial.uniforms.thickness.value=this.thickness,this.ssrMaterial.uniforms.resolution.value.set(this.width,this.height),this.ssrMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssrMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.normalMaterial=new jc,this.normalMaterial.blending=w,this.metalnessOnMaterial=new us({color:"white"}),this.metalnessOffMaterial=new us({color:"black"}),this.blurMaterial=new ia({defines:Object.assign({},Af.defines),uniforms:na.clone(Af.uniforms),vertexShader:Af.vertexShader,fragmentShader:Af.fragmentShader}),this.blurMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.blurMaterial.uniforms.resolution.value.set(this.width,this.height),this.blurMaterial2=new ia({defines:Object.assign({},Af.defines),uniforms:na.clone(Af.uniforms),vertexShader:Af.vertexShader,fragmentShader:Af.fragmentShader}),this.blurMaterial2.uniforms.tDiffuse.value=this.blurRenderTarget.texture,this.blurMaterial2.uniforms.resolution.value.set(this.width,this.height),this.depthRenderMaterial=new ia({defines:Object.assign({},of),uniforms:na.clone(lf),vertexShader:cf,fragmentShader:hf,blending:w}),this.depthRenderMaterial.uniforms.tDepth.value=this.beautyRenderTarget.depthTexture,this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this.copyMaterial=new ia({uniforms:na.clone(Qg.uniforms),vertexShader:Qg.vertexShader,fragmentShader:Qg.fragmentShader,transparent:!0,depthTest:!1,depthWrite:!1,blendSrc:k,blendDst:O,blendEquation:T,blendSrcAlpha:k,blendDstAlpha:O,blendEquationAlpha:T}),this.fsQuad=new Pg(null),this.originalClearColor=new ls}get resolutionScale(){return this._resolutionScale}set resolutionScale(t){this._resolutionScale=t,this.setSize(this.width,this.height)}dispose(){this.beautyRenderTarget.dispose(),this.prevRenderTarget.dispose(),this.normalRenderTarget.dispose(),this.metalnessRenderTarget.dispose(),this.ssrRenderTarget.dispose(),this.blurRenderTarget.dispose(),this.blurRenderTarget2.dispose(),this.normalMaterial.dispose(),this.metalnessOnMaterial.dispose(),this.metalnessOffMaterial.dispose(),this.blurMaterial.dispose(),this.blurMaterial2.dispose(),this.copyMaterial.dispose(),this.depthRenderMaterial.dispose(),this.fsQuad.dispose()}render(t,e){switch(t.setRenderTarget(this.beautyRenderTarget),t.clear(),this.groundReflector&&(this.groundReflector.visible=!1,this.groundReflector.doRender(this.renderer,this.scene,this.camera),this.groundReflector.visible=!0),t.render(this.scene,this.camera),this.groundReflector&&(this.groundReflector.visible=!1),this._renderOverride(t,this.normalMaterial,this.normalRenderTarget,0,0),this.selective&&this._renderMetalness(t,this.metalnessOnMaterial,this.metalnessRenderTarget,0,0),this.ssrMaterial.uniforms.opacity.value=this.opacity,this.ssrMaterial.uniforms.maxDistance.value=this.maxDistance,this.ssrMaterial.uniforms.thickness.value=this.thickness,this._renderPass(t,this.ssrMaterial,this.ssrRenderTarget),this.blur&&(this._renderPass(t,this.blurMaterial,this.blurRenderTarget),this._renderPass(t,this.blurMaterial2,this.blurRenderTarget2)),this.output){case uf.OUTPUT.Default:this.bouncing?(this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=w,this._renderPass(t,this.copyMaterial,this.prevRenderTarget),this.blur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=_,this._renderPass(t,this.copyMaterial,this.prevRenderTarget),this.copyMaterial.uniforms.tDiffuse.value=this.prevRenderTarget.texture,this.copyMaterial.blending=w,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e)):(this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=w,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e),this.blur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=_,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e));break;case uf.OUTPUT.SSR:this.blur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=w,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e),this.bouncing&&(this.blur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=w,this._renderPass(t,this.copyMaterial,this.prevRenderTarget),this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=_,this._renderPass(t,this.copyMaterial,this.prevRenderTarget));break;case uf.OUTPUT.Beauty:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=w,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;case uf.OUTPUT.Depth:this._renderPass(t,this.depthRenderMaterial,this.renderToScreen?null:e);break;case uf.OUTPUT.Normal:this.copyMaterial.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.copyMaterial.blending=w,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;case uf.OUTPUT.Metalness:this.copyMaterial.uniforms.tDiffuse.value=this.metalnessRenderTarget.texture,this.copyMaterial.blending=w,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;default:console.warn("THREE.SSRPass: Unknown output type.")}}setSize(t,e){this.width=t,this.height=e;const n=Math.round(this.resolutionScale*t),i=Math.round(this.resolutionScale*e);this.ssrMaterial.defines.MAX_STEP=Math.sqrt(n*n+i*i),this.ssrMaterial.needsUpdate=!0,this.beautyRenderTarget.setSize(t,e),this.normalRenderTarget.setSize(t,e),this.metalnessRenderTarget.setSize(t,e),this.ssrRenderTarget.setSize(n,i),this.prevRenderTarget.setSize(n,i),this.blurRenderTarget.setSize(n,i),this.blurRenderTarget2.setSize(n,i),this.ssrMaterial.uniforms.resolution.value.set(n,i),this.ssrMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssrMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.blurMaterial.uniforms.resolution.value.set(n,i),this.blurMaterial2.uniforms.resolution.value.set(n,i)}_renderPass(t,e,n,i,r){this.originalClearColor.copy(t.getClearColor(this.tempColor));const s=t.getClearAlpha(this.tempColor),a=t.autoClear;t.setRenderTarget(n),t.autoClear=!1,null!=i&&(t.setClearColor(i),t.setClearAlpha(r||0),t.clear()),this.fsQuad.material=e,this.fsQuad.render(t),t.autoClear=a,t.setClearColor(this.originalClearColor),t.setClearAlpha(s)}_renderOverride(t,e,n,i,r){this.originalClearColor.copy(t.getClearColor(this.tempColor));const s=t.getClearAlpha(this.tempColor),a=t.autoClear;t.setRenderTarget(n),t.autoClear=!1,i=e.clearColor||i,r=e.clearAlpha||r,null!=i&&(t.setClearColor(i),t.setClearAlpha(r||0),t.clear()),this.scene.overrideMaterial=e,t.render(this.scene,this.camera),this.scene.overrideMaterial=null,t.autoClear=a,t.setClearColor(this.originalClearColor),t.setClearAlpha(s)}_renderMetalness(t,e,n,i,r){this.originalClearColor.copy(t.getClearColor(this.tempColor));const s=t.getClearAlpha(this.tempColor),a=t.autoClear,o=this.scene.background,l=this.scene.fog;t.setRenderTarget(n),t.autoClear=!1,this.scene.background=null,this.scene.fog=null,i=e.clearColor||i,r=e.clearAlpha||r,null!=i&&(t.setClearColor(i),t.setClearAlpha(r||0),t.clear()),this.scene.traverseVisible(t=>{t._SSRPassBackupMaterial=t.material,this._selects.includes(t)?t.material=this.metalnessOnMaterial:t.material=this.metalnessOffMaterial}),t.render(this.scene,this.camera),this.scene.traverseVisible(t=>{t.material=t._SSRPassBackupMaterial}),t.autoClear=a,t.setClearColor(this.originalClearColor),t.setClearAlpha(s),this.scene.background=o,this.scene.fog=l}}uf.OUTPUT={Default:0,SSR:1,Beauty:3,Depth:4,Normal:5,Metalness:7};const df={DEPTH_PACKING:1,PERSPECTIVE_CAMERA:1},pf={tColor:{value:null},tDepth:{value:null},focus:{value:1},aspect:{value:1},aperture:{value:.025},maxblur:{value:.01},nearClip:{value:1},farClip:{value:1e3}},gf="\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",ff="\n\n\t\t#include <common>\n\n\t\tvarying vec2 vUv;\n\n\t\tuniform sampler2D tColor;\n\t\tuniform sampler2D tDepth;\n\n\t\tuniform float maxblur; // max blur amount\n\t\tuniform float aperture; // aperture - bigger values for shallower depth of field\n\n\t\tuniform float nearClip;\n\t\tuniform float farClip;\n\n\t\tuniform float focus;\n\t\tuniform float aspect;\n\n\t\t#include <packing>\n\n\t\tfloat getDepth( const in vec2 screenPosition ) {\n\t\t\t#if DEPTH_PACKING == 1\n\t\t\treturn unpackRGBAToDepth( texture2D( tDepth, screenPosition ) );\n\t\t\t#else\n\t\t\treturn texture2D( tDepth, screenPosition ).x;\n\t\t\t#endif\n\t\t}\n\n\t\tfloat getViewZ( const in float depth ) {\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\t\t\treturn perspectiveDepthToViewZ( depth, nearClip, farClip );\n\t\t\t#else\n\t\t\treturn orthographicDepthToViewZ( depth, nearClip, farClip );\n\t\t\t#endif\n\t\t}\n\n\n\t\tvoid main() {\n\n\t\t\tvec2 aspectcorrect = vec2( 1.0, aspect );\n\n\t\t\tfloat viewZ = getViewZ( getDepth( vUv ) );\n\n\t\t\tfloat factor = ( focus + viewZ ); // viewZ is <= 0, so this is a difference equation\n\n\t\t\tvec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\n\n\t\t\tvec2 dofblur9 = dofblur * 0.9;\n\t\t\tvec2 dofblur7 = dofblur * 0.7;\n\t\t\tvec2 dofblur4 = dofblur * 0.4;\n\n\t\t\tvec4 col = vec4( 0.0 );\n\n\t\t\tcol += texture2D( tColor, vUv.xy );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\n\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\n\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\n\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\n\n\t\t\tgl_FragColor = col / 41.0;\n\t\t\tgl_FragColor.a = 1.0;\n\n\t\t}",mf=new fr;class yf{constructor(t){t=t||{},this.zNear=!0===t.webGL?-1:0,this.vertices={near:[new hi,new hi,new hi,new hi],far:[new hi,new hi,new hi,new hi]},void 0!==t.projectionMatrix&&this.setFromProjectionMatrix(t.projectionMatrix,t.maxFar||1e4)}setFromProjectionMatrix(t,e){const n=this.zNear,i=0===t.elements[11];return mf.copy(t).invert(),this.vertices.near[0].set(1,1,n),this.vertices.near[1].set(1,-1,n),this.vertices.near[2].set(-1,-1,n),this.vertices.near[3].set(-1,1,n),this.vertices.near.forEach(function(t){t.applyMatrix4(mf)}),this.vertices.far[0].set(1,1,1),this.vertices.far[1].set(1,-1,1),this.vertices.far[2].set(-1,-1,1),this.vertices.far[3].set(-1,1,1),this.vertices.far.forEach(function(t){t.applyMatrix4(mf);const n=Math.abs(t.z);i?t.z*=Math.min(e/n,1):t.multiplyScalar(Math.min(e/n,1))}),this.vertices}split(t,e){for(;t.length>e.length;)e.push(new yf);e.length=t.length;for(let n=0;n<t.length;n++){const i=e[n];if(0===n)for(let t=0;t<4;t++)i.vertices.near[t].copy(this.vertices.near[t]);else for(let e=0;e<4;e++)i.vertices.near[e].lerpVectors(this.vertices.near[e],this.vertices.far[e],t[n-1]);if(n===t.length-1)for(let t=0;t<4;t++)i.vertices.far[t].copy(this.vertices.far[t]);else for(let e=0;e<4;e++)i.vertices.far[e].lerpVectors(this.vertices.near[e],this.vertices.far[e],t[n])}}toSpace(t,e){for(let n=0;n<4;n++)e.vertices.near[n].copy(this.vertices.near[n]).applyMatrix4(t),e.vertices.far[n].copy(this.vertices.far[n]).applyMatrix4(t)}}const vf={lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n\n#ifdef USE_CLEARCOAT\n\n\tgeometryClearcoatNormal = clearcoatNormal;\n\n#endif\n\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\t// Iridescence F0 approximation\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n \tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\n  \t\t// spot lights are ordered [shadows with maps, shadows without maps, maps without shadows, none]\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct ) && defined( USE_CSM ) && defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\tfloat linearDepth = (vViewPosition.z) / (shadowFar - cameraNear);\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#if defined( USE_SHADOWMAP ) && defined( CSM_FADE )\n\t\tvec2 cascade;\n\t\tfloat cascadeCenter;\n\t\tfloat closestEdge;\n\t\tfloat margin;\n\t\tfloat csmx;\n\t\tfloat csmy;\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\t\tdirectionalLight = directionalLights[ i ];\n\t\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\n\t\t\t#if ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\t\t\t// NOTE: Depth gets larger away from the camera.\n\t\t\t\t// cascade.x is closer, cascade.y is further\n\t\t\t\tcascade = CSM_cascades[ i ];\n\t\t\t\tcascadeCenter = ( cascade.x + cascade.y ) / 2.0;\n\t\t\t\tclosestEdge = linearDepth < cascadeCenter ? cascade.x : cascade.y;\n\t\t\t\tmargin = 0.25 * pow( closestEdge, 2.0 );\n\t\t\t\tcsmx = cascade.x - margin / 2.0;\n\t\t\t\tcsmy = cascade.y + margin / 2.0;\n\t\t\t\tif( linearDepth >= csmx && ( linearDepth < csmy || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 ) ) {\n\n\t\t\t\t\tfloat dist = min( linearDepth - csmx, csmy - linearDepth );\n\t\t\t\t\tfloat ratio = clamp( dist / margin, 0.0, 1.0 );\n\n\t\t\t\t\tvec3 prevColor = directLight.color;\n\t\t\t\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\t\t\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t\t\t\tbool shouldFadeLastCascade = UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth > cascadeCenter;\n\t\t\t\t\tdirectLight.color = mix( prevColor, directLight.color, shouldFadeLastCascade ? ratio : 1.0 );\n\n\t\t\t\t\tReflectedLight prevLight = reflectedLight;\n\t\t\t\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t\t\t\t\tbool shouldBlend = UNROLLED_LOOP_INDEX != CSM_CASCADES - 1 || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth < cascadeCenter;\n\t\t\t\t\tfloat blendRatio = shouldBlend ? ratio : 1.0;\n\n\t\t\t\t\treflectedLight.directDiffuse = mix( prevLight.directDiffuse, reflectedLight.directDiffuse, blendRatio );\n\t\t\t\t\treflectedLight.directSpecular = mix( prevLight.directSpecular, reflectedLight.directSpecular, blendRatio );\n\t\t\t\t\treflectedLight.indirectDiffuse = mix( prevLight.indirectDiffuse, reflectedLight.indirectDiffuse, blendRatio );\n\t\t\t\t\treflectedLight.indirectSpecular = mix( prevLight.indirectSpecular, reflectedLight.indirectSpecular, blendRatio );\n\n\t\t\t\t}\n\t\t\t#endif\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#elif defined (USE_SHADOWMAP)\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\t\tdirectionalLight = directionalLights[ i ];\n\t\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\n\t\t\t#if ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\n\t\t\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\t\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y) directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && (linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1)) RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t\t\t#endif\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#elif ( NUM_DIR_LIGHT_SHADOWS > 0 )\n\t\t// note: no loop here - all CSM lights are in fact one light only\n\t\tgetDirectionalLightInfo( directionalLights[0], directLight );\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t#endif\n\n\t#if ( NUM_DIR_LIGHTS > NUM_DIR_LIGHT_SHADOWS)\n\t\t// compute the lights not casting shadows (if any)\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = NUM_DIR_LIGHT_SHADOWS; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\t\tdirectionalLight = directionalLights[ i ];\n\n\t\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\n\t\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct ) && !defined( USE_CSM ) && !defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\t#if defined( USE_LIGHT_PROBES )\n\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\n\t#endif\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n",lights_pars_begin:"\n#if defined( USE_CSM ) && defined( CSM_CASCADES )\nuniform vec2 CSM_cascades[CSM_CASCADES];\nuniform float cameraNear;\nuniform float shadowFar;\n#endif\n\t"+$u.lights_pars_begin},xf=new fr,Cf=new yf({webGL:!0}),If=new hi,Ef=new Hi,wf=[],_f=[],bf=new fr,Bf=new fr,Sf=new hi(0,1,0),Mf={type:"change"},Tf={type:"start"},Qf={type:"end"},Df=new gr,Rf=new go,Uf=Math.cos(70*oi.DEG2RAD),Pf=new hi,Lf=2*Math.PI,Ff=-1,Nf=1e-6;function kf(t){!1!==this.enabled&&(0===this._pointers.length&&(this.domElement.setPointerCapture(t.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._isTrackingPointer(t)||(this._addPointer(t),"touch"===t.pointerType?this._onTouchStart(t):this._onMouseDown(t)))}function Of(t){!1!==this.enabled&&("touch"===t.pointerType?this._onTouchMove(t):this._onMouseMove(t))}function zf(t){switch(this._removePointer(t),this._pointers.length){case 0:this.domElement.releasePointerCapture(t.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(Qf),this.state=Ff;break;case 1:const e=this._pointers[0],n=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:n.x,pageY:n.y})}}function Gf(t){let e;switch(t.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case A.DOLLY:if(!1===this.enableZoom)return;this._handleMouseDownDolly(t),this.state=1;break;case A.ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enablePan)return;this._handleMouseDownPan(t),this.state=2}else{if(!1===this.enableRotate)return;this._handleMouseDownRotate(t),this.state=0}break;case A.PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enableRotate)return;this._handleMouseDownRotate(t),this.state=0}else{if(!1===this.enablePan)return;this._handleMouseDownPan(t),this.state=2}break;default:this.state=Ff}this.state!==Ff&&this.dispatchEvent(Tf)}function Hf(t){switch(this.state){case 0:if(!1===this.enableRotate)return;this._handleMouseMoveRotate(t);break;case 1:if(!1===this.enableZoom)return;this._handleMouseMoveDolly(t);break;case 2:if(!1===this.enablePan)return;this._handleMouseMovePan(t)}}function Vf(t){!1!==this.enabled&&!1!==this.enableZoom&&this.state===Ff&&(t.preventDefault(),this.dispatchEvent(Tf),this._handleMouseWheel(this._customWheelEvent(t)),this.dispatchEvent(Qf))}function qf(t){!1!==this.enabled&&this._handleKeyDown(t)}function Yf(t){switch(this._trackPointer(t),this._pointers.length){case 1:switch(this.touches.ONE){case u.ROTATE:if(!1===this.enableRotate)return;this._handleTouchStartRotate(t),this.state=3;break;case u.PAN:if(!1===this.enablePan)return;this._handleTouchStartPan(t),this.state=4;break;default:this.state=Ff}break;case 2:switch(this.touches.TWO){case u.DOLLY_PAN:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchStartDollyPan(t),this.state=5;break;case u.DOLLY_ROTATE:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchStartDollyRotate(t),this.state=6;break;default:this.state=Ff}break;default:this.state=Ff}this.state!==Ff&&this.dispatchEvent(Tf)}function Wf(t){switch(this._trackPointer(t),this.state){case 3:if(!1===this.enableRotate)return;this._handleTouchMoveRotate(t),this.update();break;case 4:if(!1===this.enablePan)return;this._handleTouchMovePan(t),this.update();break;case 5:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchMoveDollyPan(t),this.update();break;case 6:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchMoveDollyRotate(t),this.update();break;default:this.state=Ff}}function Jf(t){!1!==this.enabled&&t.preventDefault()}function jf(t){"Control"===t.key&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function Xf(t){"Control"===t.key&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function Kf(t){let e=0;for(const n in t.attributes){const i=t.getAttribute(n);e+=i.count*i.itemSize*i.array.BYTES_PER_ELEMENT}const n=t.getIndex();return e+=n?n.count*n.itemSize*n.array.BYTES_PER_ELEMENT:0,e}function Zf(t,e){if(e===je)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),t;if(e===Ke||e===Xe){let n=t.getIndex();if(null===n){const e=[],i=t.getAttribute("position");if(void 0===i)return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),t;for(let t=0;t<i.count;t++)e.push(t);t.setIndex(e),n=t.getIndex()}const i=n.count-2,r=[];if(e===Ke)for(let t=1;t<=i;t++)r.push(n.getX(0)),r.push(n.getX(t)),r.push(n.getX(t+1));else for(let t=0;t<i;t++)t%2==0?(r.push(n.getX(t)),r.push(n.getX(t+1)),r.push(n.getX(t+2))):(r.push(n.getX(t+2)),r.push(n.getX(t+1)),r.push(n.getX(t)));r.length/3!==i&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const s=t.clone();return s.setIndex(r),s.clearGroups(),s}return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),t}class $f extends wh{constructor(t){super(t),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(t){return new sm(t)}),this.register(function(t){return new am(t)}),this.register(function(t){return new gm(t)}),this.register(function(t){return new fm(t)}),this.register(function(t){return new mm(t)}),this.register(function(t){return new lm(t)}),this.register(function(t){return new cm(t)}),this.register(function(t){return new hm(t)}),this.register(function(t){return new Am(t)}),this.register(function(t){return new rm(t)}),this.register(function(t){return new um(t)}),this.register(function(t){return new om(t)}),this.register(function(t){return new pm(t)}),this.register(function(t){return new dm(t)}),this.register(function(t){return new nm(t)}),this.register(function(t){return new ym(t)}),this.register(function(t){return new vm(t)})}load(t,e,n,i){const r=this;let s;if(""!==this.resourcePath)s=this.resourcePath;else if(""!==this.path){const e=nA.extractUrlBase(t);s=nA.resolveURL(e,this.path)}else s=nA.extractUrlBase(t);this.manager.itemStart(t);const a=function(e){i?i(e):console.error(e),r.manager.itemError(t),r.manager.itemEnd(t)},o=new Bh(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(n){try{r.parse(n,s,function(n){e(n),r.manager.itemEnd(t)},a)}catch(t){a(t)}},n,a)}setDRACOLoader(t){return this.dracoLoader=t,this}setKTX2Loader(t){return this.ktx2Loader=t,this}setMeshoptDecoder(t){return this.meshoptDecoder=t,this}register(t){return-1===this.pluginCallbacks.indexOf(t)&&this.pluginCallbacks.push(t),this}unregister(t){return-1!==this.pluginCallbacks.indexOf(t)&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(t),1),this}parse(t,e,n,i){let r;const s={},a={},o=new TextDecoder;if("string"==typeof t)r=JSON.parse(t);else if(t instanceof ArrayBuffer)if(o.decode(new Uint8Array(t,0,4))===xm){try{s[em.KHR_BINARY_GLTF]=new Cm(t)}catch(t){return void(i&&i(t))}r=JSON.parse(s[em.KHR_BINARY_GLTF].content)}else r=JSON.parse(o.decode(t));else r=t;if(void 0===r.asset||r.asset.version[0]<2)return void(i&&i(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.")));const l=new Vm(r,{path:e||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});l.fileLoader.setRequestHeader(this.requestHeader);for(let t=0;t<this.pluginCallbacks.length;t++){const e=this.pluginCallbacks[t](l);e.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),a[e.name]=e,s[e.name]=!0}if(r.extensionsUsed)for(let t=0;t<r.extensionsUsed.length;++t){const e=r.extensionsUsed[t],n=r.extensionsRequired||[];switch(e){case em.KHR_MATERIALS_UNLIT:s[e]=new im;break;case em.KHR_DRACO_MESH_COMPRESSION:s[e]=new Im(r,this.dracoLoader);break;case em.KHR_TEXTURE_TRANSFORM:s[e]=new Em;break;case em.KHR_MESH_QUANTIZATION:s[e]=new wm;break;default:n.indexOf(e)>=0&&void 0===a[e]&&console.warn('THREE.GLTFLoader: Unknown extension "'+e+'".')}}l.setExtensions(s),l.setPlugins(a),l.parse(n,i)}parseAsync(t,e){const n=this;return new Promise(function(i,r){n.parse(t,e,i,r)})}}function tm(){let t={};return{get:function(e){return t[e]},add:function(e,n){t[e]=n},remove:function(e){delete t[e]},removeAll:function(){t={}}}}const em={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class nm{constructor(t){this.parser=t,this.name=em.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const t=this.parser,e=this.parser.json.nodes||[];for(let n=0,i=e.length;n<i;n++){const i=e[n];i.extensions&&i.extensions[this.name]&&void 0!==i.extensions[this.name].light&&t._addNodeRef(this.cache,i.extensions[this.name].light)}}_loadLight(t){const e=this.parser,n="light:"+t;let i=e.cache.get(n);if(i)return i;const r=e.json,s=((r.extensions&&r.extensions[this.name]||{}).lights||[])[t];let a;const o=new ls(16777215);void 0!==s.color&&o.setRGB(s.color[0],s.color[1],s.color[2],on);const l=void 0!==s.range?s.range:0;switch(s.type){case"directional":a=new Xh(o),a.target.position.set(0,0,-1),a.add(a.target);break;case"point":a=new Wh(o),a.distance=l;break;case"spot":a=new Gh(o),a.distance=l,s.spot=s.spot||{},s.spot.innerConeAngle=void 0!==s.spot.innerConeAngle?s.spot.innerConeAngle:0,s.spot.outerConeAngle=void 0!==s.spot.outerConeAngle?s.spot.outerConeAngle:Math.PI/4,a.angle=s.spot.outerConeAngle,a.penumbra=1-s.spot.innerConeAngle/s.spot.outerConeAngle,a.target.position.set(0,0,-1),a.add(a.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+s.type)}return a.position.set(0,0,0),Nm(a,s),void 0!==s.intensity&&(a.intensity=s.intensity),a.name=e.createUniqueName(s.name||"light_"+t),i=Promise.resolve(a),e.cache.add(n,i),i}getDependency(t,e){if("light"===t)return this._loadLight(e)}createNodeAttachment(t){const e=this,n=this.parser,i=n.json.nodes[t],r=(i.extensions&&i.extensions[this.name]||{}).light;return void 0===r?null:this._loadLight(r).then(function(t){return n._getNodeRef(e.cache,r,t)})}}class im{constructor(){this.name=em.KHR_MATERIALS_UNLIT}getMaterialType(){return us}extendParams(t,e,n){const i=[];t.color=new ls(1,1,1),t.opacity=1;const r=e.pbrMetallicRoughness;if(r){if(Array.isArray(r.baseColorFactor)){const e=r.baseColorFactor;t.color.setRGB(e[0],e[1],e[2],on),t.opacity=e[3]}void 0!==r.baseColorTexture&&i.push(n.assignTexture(t,"map",r.baseColorTexture,an))}return Promise.all(i)}}class rm{constructor(t){this.parser=t,this.name=em.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(t,e){const n=this.parser.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const i=n.extensions[this.name].emissiveStrength;return void 0!==i&&(e.emissiveIntensity=i),Promise.resolve()}}class sm{constructor(t){this.parser=t,this.name=em.KHR_MATERIALS_CLEARCOAT}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Yc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];if(void 0!==s.clearcoatFactor&&(e.clearcoat=s.clearcoatFactor),void 0!==s.clearcoatTexture&&r.push(n.assignTexture(e,"clearcoatMap",s.clearcoatTexture)),void 0!==s.clearcoatRoughnessFactor&&(e.clearcoatRoughness=s.clearcoatRoughnessFactor),void 0!==s.clearcoatRoughnessTexture&&r.push(n.assignTexture(e,"clearcoatRoughnessMap",s.clearcoatRoughnessTexture)),void 0!==s.clearcoatNormalTexture&&(r.push(n.assignTexture(e,"clearcoatNormalMap",s.clearcoatNormalTexture)),void 0!==s.clearcoatNormalTexture.scale)){const t=s.clearcoatNormalTexture.scale;e.clearcoatNormalScale=new li(t,t)}return Promise.all(r)}}class am{constructor(t){this.parser=t,this.name=em.KHR_MATERIALS_DISPERSION}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Yc:null}extendMaterialParams(t,e){const n=this.parser.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const i=n.extensions[this.name];return e.dispersion=void 0!==i.dispersion?i.dispersion:0,Promise.resolve()}}class om{constructor(t){this.parser=t,this.name=em.KHR_MATERIALS_IRIDESCENCE}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Yc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];return void 0!==s.iridescenceFactor&&(e.iridescence=s.iridescenceFactor),void 0!==s.iridescenceTexture&&r.push(n.assignTexture(e,"iridescenceMap",s.iridescenceTexture)),void 0!==s.iridescenceIor&&(e.iridescenceIOR=s.iridescenceIor),void 0===e.iridescenceThicknessRange&&(e.iridescenceThicknessRange=[100,400]),void 0!==s.iridescenceThicknessMinimum&&(e.iridescenceThicknessRange[0]=s.iridescenceThicknessMinimum),void 0!==s.iridescenceThicknessMaximum&&(e.iridescenceThicknessRange[1]=s.iridescenceThicknessMaximum),void 0!==s.iridescenceThicknessTexture&&r.push(n.assignTexture(e,"iridescenceThicknessMap",s.iridescenceThicknessTexture)),Promise.all(r)}}class lm{constructor(t){this.parser=t,this.name=em.KHR_MATERIALS_SHEEN}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Yc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[];e.sheenColor=new ls(0,0,0),e.sheenRoughness=0,e.sheen=1;const s=i.extensions[this.name];if(void 0!==s.sheenColorFactor){const t=s.sheenColorFactor;e.sheenColor.setRGB(t[0],t[1],t[2],on)}return void 0!==s.sheenRoughnessFactor&&(e.sheenRoughness=s.sheenRoughnessFactor),void 0!==s.sheenColorTexture&&r.push(n.assignTexture(e,"sheenColorMap",s.sheenColorTexture,an)),void 0!==s.sheenRoughnessTexture&&r.push(n.assignTexture(e,"sheenRoughnessMap",s.sheenRoughnessTexture)),Promise.all(r)}}class cm{constructor(t){this.parser=t,this.name=em.KHR_MATERIALS_TRANSMISSION}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Yc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];return void 0!==s.transmissionFactor&&(e.transmission=s.transmissionFactor),void 0!==s.transmissionTexture&&r.push(n.assignTexture(e,"transmissionMap",s.transmissionTexture)),Promise.all(r)}}class hm{constructor(t){this.parser=t,this.name=em.KHR_MATERIALS_VOLUME}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Yc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];e.thickness=void 0!==s.thicknessFactor?s.thicknessFactor:0,void 0!==s.thicknessTexture&&r.push(n.assignTexture(e,"thicknessMap",s.thicknessTexture)),e.attenuationDistance=s.attenuationDistance||1/0;const a=s.attenuationColor||[1,1,1];return e.attenuationColor=(new ls).setRGB(a[0],a[1],a[2],on),Promise.all(r)}}class Am{constructor(t){this.parser=t,this.name=em.KHR_MATERIALS_IOR}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Yc:null}extendMaterialParams(t,e){const n=this.parser.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const i=n.extensions[this.name];return e.ior=void 0!==i.ior?i.ior:1.5,Promise.resolve()}}class um{constructor(t){this.parser=t,this.name=em.KHR_MATERIALS_SPECULAR}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Yc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];e.specularIntensity=void 0!==s.specularFactor?s.specularFactor:1,void 0!==s.specularTexture&&r.push(n.assignTexture(e,"specularIntensityMap",s.specularTexture));const a=s.specularColorFactor||[1,1,1];return e.specularColor=(new ls).setRGB(a[0],a[1],a[2],on),void 0!==s.specularColorTexture&&r.push(n.assignTexture(e,"specularColorMap",s.specularColorTexture,an)),Promise.all(r)}}class dm{constructor(t){this.parser=t,this.name=em.EXT_MATERIALS_BUMP}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Yc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];return e.bumpScale=void 0!==s.bumpFactor?s.bumpFactor:1,void 0!==s.bumpTexture&&r.push(n.assignTexture(e,"bumpMap",s.bumpTexture)),Promise.all(r)}}class pm{constructor(t){this.parser=t,this.name=em.KHR_MATERIALS_ANISOTROPY}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Yc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];return void 0!==s.anisotropyStrength&&(e.anisotropy=s.anisotropyStrength),void 0!==s.anisotropyRotation&&(e.anisotropyRotation=s.anisotropyRotation),void 0!==s.anisotropyTexture&&r.push(n.assignTexture(e,"anisotropyMap",s.anisotropyTexture)),Promise.all(r)}}class gm{constructor(t){this.parser=t,this.name=em.KHR_TEXTURE_BASISU}loadTexture(t){const e=this.parser,n=e.json,i=n.textures[t];if(!i.extensions||!i.extensions[this.name])return null;const r=i.extensions[this.name],s=e.options.ktx2Loader;if(!s){if(n.extensionsRequired&&n.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return e.loadTextureImage(t,r.source,s)}}class fm{constructor(t){this.parser=t,this.name=em.EXT_TEXTURE_WEBP}loadTexture(t){const e=this.name,n=this.parser,i=n.json,r=i.textures[t];if(!r.extensions||!r.extensions[e])return null;const s=r.extensions[e],a=i.images[s.source];let o=n.textureLoader;if(a.uri){const t=n.options.manager.getHandler(a.uri);null!==t&&(o=t)}return n.loadTextureImage(t,s.source,o)}}class mm{constructor(t){this.parser=t,this.name=em.EXT_TEXTURE_AVIF}loadTexture(t){const e=this.name,n=this.parser,i=n.json,r=i.textures[t];if(!r.extensions||!r.extensions[e])return null;const s=r.extensions[e],a=i.images[s.source];let o=n.textureLoader;if(a.uri){const t=n.options.manager.getHandler(a.uri);null!==t&&(o=t)}return n.loadTextureImage(t,s.source,o)}}class ym{constructor(t){this.name=em.EXT_MESHOPT_COMPRESSION,this.parser=t}loadBufferView(t){const e=this.parser.json,n=e.bufferViews[t];if(n.extensions&&n.extensions[this.name]){const t=n.extensions[this.name],i=this.parser.getDependency("buffer",t.buffer),r=this.parser.options.meshoptDecoder;if(!r||!r.supported){if(e.extensionsRequired&&e.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return i.then(function(e){const n=t.byteOffset||0,i=t.byteLength||0,s=t.count,a=t.byteStride,o=new Uint8Array(e,n,i);return r.decodeGltfBufferAsync?r.decodeGltfBufferAsync(s,a,o,t.mode,t.filter).then(function(t){return t.buffer}):r.ready.then(function(){const e=new ArrayBuffer(s*a);return r.decodeGltfBuffer(new Uint8Array(e),s,a,o,t.mode,t.filter),e})})}return null}}class vm{constructor(t){this.name=em.EXT_MESH_GPU_INSTANCING,this.parser=t}createNodeMesh(t){const e=this.parser.json,n=e.nodes[t];if(!n.extensions||!n.extensions[this.name]||void 0===n.mesh)return null;const i=e.meshes[n.mesh];for(const t of i.primitives)if(t.mode!==Sm.TRIANGLES&&t.mode!==Sm.TRIANGLE_STRIP&&t.mode!==Sm.TRIANGLE_FAN&&void 0!==t.mode)return null;const r=n.extensions[this.name].attributes,s=[],a={};for(const t in r)s.push(this.parser.getDependency("accessor",r[t]).then(e=>(a[t]=e,a[t])));return s.length<1?null:(s.push(this.parser.createNodeMesh(t)),Promise.all(s).then(t=>{const e=t.pop(),n=e.isGroup?e.children:[e],i=t[0].count,r=[];for(const t of n){const e=new fr,n=new hi,s=new ci,o=new hi(1,1,1),l=new ho(t.geometry,t.material,i);for(let t=0;t<i;t++)a.TRANSLATION&&n.fromBufferAttribute(a.TRANSLATION,t),a.ROTATION&&s.fromBufferAttribute(a.ROTATION,t),a.SCALE&&o.fromBufferAttribute(a.SCALE,t),l.setMatrixAt(t,e.compose(n,s,o));for(const e in a)if("_COLOR_0"===e){const t=a[e];l.instanceColor=new no(t.array,t.itemSize,t.normalized)}else"TRANSLATION"!==e&&"ROTATION"!==e&&"SCALE"!==e&&t.geometry.setAttribute(e,a[e]);Hr.prototype.copy.call(l,t),this.parser.assignFinalMaterial(l),r.push(l)}return e.isGroup?(e.clear(),e.add(...r),e):r[0]}))}}const xm="glTF";class Cm{constructor(t){this.name=em.KHR_BINARY_GLTF,this.content=null,this.body=null;const e=new DataView(t,0,12),n=new TextDecoder;if(this.header={magic:n.decode(new Uint8Array(t.slice(0,4))),version:e.getUint32(4,!0),length:e.getUint32(8,!0)},this.header.magic!==xm)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const i=this.header.length-12,r=new DataView(t,12);let s=0;for(;s<i;){const e=r.getUint32(s,!0);s+=4;const i=r.getUint32(s,!0);if(s+=4,1313821514===i){const i=new Uint8Array(t,12+s,e);this.content=n.decode(i)}else if(5130562===i){const n=12+s;this.body=t.slice(n,n+e)}s+=e}if(null===this.content)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class Im{constructor(t,e){if(!e)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=em.KHR_DRACO_MESH_COMPRESSION,this.json=t,this.dracoLoader=e,this.dracoLoader.preload()}decodePrimitive(t,e){const n=this.json,i=this.dracoLoader,r=t.extensions[this.name].bufferView,s=t.extensions[this.name].attributes,a={},o={},l={};for(const t in s){const e=Rm[t]||t.toLowerCase();a[e]=s[t]}for(const e in t.attributes){const i=Rm[e]||e.toLowerCase();if(void 0!==s[e]){const r=n.accessors[t.attributes[e]],s=Mm[r.componentType];l[i]=s.name,o[i]=!0===r.normalized}}return e.getDependency("bufferView",r).then(function(t){return new Promise(function(e,n){i.decodeDracoFile(t,function(t){for(const e in t.attributes){const n=t.attributes[e],i=o[e];void 0!==i&&(n.normalized=i)}e(t)},a,l,on,n)})})}}class Em{constructor(){this.name=em.KHR_TEXTURE_TRANSFORM}extendTexture(t,e){return void 0!==e.texCoord&&e.texCoord!==t.channel||void 0!==e.offset||void 0!==e.rotation||void 0!==e.scale?(t=t.clone(),void 0!==e.texCoord&&(t.channel=e.texCoord),void 0!==e.offset&&t.offset.fromArray(e.offset),void 0!==e.rotation&&(t.rotation=e.rotation),void 0!==e.scale&&t.repeat.fromArray(e.scale),t.needsUpdate=!0,t):t}}class wm{constructor(){this.name=em.KHR_MESH_QUANTIZATION}}class _m extends oh{constructor(t,e,n,i){super(t,e,n,i)}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i*3+i;for(let t=0;t!==i;t++)e[t]=n[r+t];return e}interpolate_(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=2*a,l=3*a,c=i-e,h=(n-e)/c,A=h*h,u=A*h,d=t*l,p=d-l,g=-2*u+3*A,f=u-A,m=1-g,y=f-A+h;for(let t=0;t!==a;t++){const e=s[p+t+a],n=s[p+t+o]*c,i=s[d+t+a],l=s[d+t]*c;r[t]=m*e+y*n+g*i+f*l}return r}}const bm=new ci;class Bm extends _m{interpolate_(t,e,n,i){const r=super.interpolate_(t,e,n,i);return bm.fromArray(r).normalize().toArray(r),r}}const Sm={FLOAT:5126,FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,LINEAR:9729,REPEAT:10497,SAMPLER_2D:35678,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123},Mm={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},Tm={9728:bt,9729:Qt,9984:Bt,9985:Dt,9986:Mt,9987:Ut},Qm={33071:wt,33648:_t,10497:Et},Dm={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},Rm={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},Um={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},Pm={CUBICSPLINE:void 0,LINEAR:Ge,STEP:ze};function Lm(t){return void 0===t.DefaultMaterial&&(t.DefaultMaterial=new qc({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:C})),t.DefaultMaterial}function Fm(t,e,n){for(const i in n.extensions)void 0===t[i]&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[i]=n.extensions[i])}function Nm(t,e){void 0!==e.extras&&("object"==typeof e.extras?Object.assign(t.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function km(t,e){if(t.updateMorphTargets(),void 0!==e.weights)for(let n=0,i=e.weights.length;n<i;n++)t.morphTargetInfluences[n]=e.weights[n];if(e.extras&&Array.isArray(e.extras.targetNames)){const n=e.extras.targetNames;if(t.morphTargetInfluences.length===n.length){t.morphTargetDictionary={};for(let e=0,i=n.length;e<i;e++)t.morphTargetDictionary[n[e]]=e}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function Om(t){let e;const n=t.extensions&&t.extensions[em.KHR_DRACO_MESH_COMPRESSION];if(e=n?"draco:"+n.bufferView+":"+n.indices+":"+zm(n.attributes):t.indices+":"+zm(t.attributes)+":"+t.mode,void 0!==t.targets)for(let n=0,i=t.targets.length;n<i;n++)e+=":"+zm(t.targets[n]);return e}function zm(t){let e="";const n=Object.keys(t).sort();for(let i=0,r=n.length;i<r;i++)e+=n[i]+":"+t[n[i]]+";";return e}function Gm(t){switch(t){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}const Hm=new fr;class Vm{constructor(t={},e={}){this.json=t,this.extensions={},this.plugins={},this.options=e,this.cache=new tm,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let n=!1,i=-1,r=!1,s=-1;if("undefined"!=typeof navigator){const t=navigator.userAgent;n=!0===/^((?!chrome|android).)*safari/i.test(t);const e=t.match(/Version\/(\d+)/);i=n&&e?parseInt(e[1],10):-1,r=t.indexOf("Firefox")>-1,s=r?t.match(/Firefox\/([0-9]+)\./)[1]:-1}"undefined"==typeof createImageBitmap||n&&i<17||r&&s<98?this.textureLoader=new Uh(this.options.manager):this.textureLoader=new hA(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new Bh(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),"use-credentials"===this.options.crossOrigin&&this.fileLoader.setWithCredentials(!0)}setExtensions(t){this.extensions=t}setPlugins(t){this.plugins=t}parse(t,e){const n=this,i=this.json,r=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(t){return t._markDefs&&t._markDefs()}),Promise.all(this._invokeAll(function(t){return t.beforeRoot&&t.beforeRoot()})).then(function(){return Promise.all([n.getDependencies("scene"),n.getDependencies("animation"),n.getDependencies("camera")])}).then(function(e){const s={scene:e[0][i.scene||0],scenes:e[0],animations:e[1],cameras:e[2],asset:i.asset,parser:n,userData:{}};return Fm(r,s,i),Nm(s,i),Promise.all(n._invokeAll(function(t){return t.afterRoot&&t.afterRoot(s)})).then(function(){for(const t of s.scenes)t.updateMatrixWorld();t(s)})}).catch(e)}_markDefs(){const t=this.json.nodes||[],e=this.json.skins||[],n=this.json.meshes||[];for(let n=0,i=e.length;n<i;n++){const i=e[n].joints;for(let e=0,n=i.length;e<n;e++)t[i[e]].isBone=!0}for(let e=0,i=t.length;e<i;e++){const i=t[e];void 0!==i.mesh&&(this._addNodeRef(this.meshCache,i.mesh),void 0!==i.skin&&(n[i.mesh].isSkinnedMesh=!0)),void 0!==i.camera&&this._addNodeRef(this.cameraCache,i.camera)}}_addNodeRef(t,e){void 0!==e&&(void 0===t.refs[e]&&(t.refs[e]=t.uses[e]=0),t.refs[e]++)}_getNodeRef(t,e,n){if(t.refs[e]<=1)return n;const i=n.clone(),r=(t,e)=>{const n=this.associations.get(t);null!=n&&this.associations.set(e,n);for(const[n,i]of t.children.entries())r(i,e.children[n])};return r(n,i),i.name+="_instance_"+t.uses[e]++,i}_invokeOne(t){const e=Object.values(this.plugins);e.push(this);for(let n=0;n<e.length;n++){const i=t(e[n]);if(i)return i}return null}_invokeAll(t){const e=Object.values(this.plugins);e.unshift(this);const n=[];for(let i=0;i<e.length;i++){const r=t(e[i]);r&&n.push(r)}return n}getDependency(t,e){const n=t+":"+e;let i=this.cache.get(n);if(!i){switch(t){case"scene":i=this.loadScene(e);break;case"node":i=this._invokeOne(function(t){return t.loadNode&&t.loadNode(e)});break;case"mesh":i=this._invokeOne(function(t){return t.loadMesh&&t.loadMesh(e)});break;case"accessor":i=this.loadAccessor(e);break;case"bufferView":i=this._invokeOne(function(t){return t.loadBufferView&&t.loadBufferView(e)});break;case"buffer":i=this.loadBuffer(e);break;case"material":i=this._invokeOne(function(t){return t.loadMaterial&&t.loadMaterial(e)});break;case"texture":i=this._invokeOne(function(t){return t.loadTexture&&t.loadTexture(e)});break;case"skin":i=this.loadSkin(e);break;case"animation":i=this._invokeOne(function(t){return t.loadAnimation&&t.loadAnimation(e)});break;case"camera":i=this.loadCamera(e);break;default:if(i=this._invokeOne(function(n){return n!=this&&n.getDependency&&n.getDependency(t,e)}),!i)throw new Error("Unknown type: "+t)}this.cache.add(n,i)}return i}getDependencies(t){let e=this.cache.get(t);if(!e){const n=this,i=this.json[t+("mesh"===t?"es":"s")]||[];e=Promise.all(i.map(function(e,i){return n.getDependency(t,i)})),this.cache.add(t,e)}return e}loadBuffer(t){const e=this.json.buffers[t],n=this.fileLoader;if(e.type&&"arraybuffer"!==e.type)throw new Error("THREE.GLTFLoader: "+e.type+" buffer type is not supported.");if(void 0===e.uri&&0===t)return Promise.resolve(this.extensions[em.KHR_BINARY_GLTF].body);const i=this.options;return new Promise(function(t,r){n.load(nA.resolveURL(e.uri,i.path),t,void 0,function(){r(new Error('THREE.GLTFLoader: Failed to load buffer "'+e.uri+'".'))})})}loadBufferView(t){const e=this.json.bufferViews[t];return this.getDependency("buffer",e.buffer).then(function(t){const n=e.byteLength||0,i=e.byteOffset||0;return t.slice(i,i+n)})}loadAccessor(t){const e=this,n=this.json,i=this.json.accessors[t];if(void 0===i.bufferView&&void 0===i.sparse){const t=Dm[i.type],e=Mm[i.componentType],n=!0===i.normalized,r=new e(i.count*t);return Promise.resolve(new Cs(r,t,n))}const r=[];return void 0!==i.bufferView?r.push(this.getDependency("bufferView",i.bufferView)):r.push(null),void 0!==i.sparse&&(r.push(this.getDependency("bufferView",i.sparse.indices.bufferView)),r.push(this.getDependency("bufferView",i.sparse.values.bufferView))),Promise.all(r).then(function(t){const r=t[0],s=Dm[i.type],a=Mm[i.componentType],o=a.BYTES_PER_ELEMENT,l=o*s,c=i.byteOffset||0,h=void 0!==i.bufferView?n.bufferViews[i.bufferView].byteStride:void 0,A=!0===i.normalized;let u,d;if(h&&h!==l){const t=Math.floor(c/h),n="InterleavedBuffer:"+i.bufferView+":"+i.componentType+":"+t+":"+i.count;let l=e.cache.get(n);l||(u=new a(r,t*h,i.count*h/o),l=new va(u,h/o),e.cache.add(n,l)),d=new Ca(l,s,c%h/o,A)}else u=null===r?new a(i.count*s):new a(r,c,i.count*s),d=new Cs(u,s,A);if(void 0!==i.sparse){const e=Dm.SCALAR,n=Mm[i.sparse.indices.componentType],o=i.sparse.indices.byteOffset||0,l=i.sparse.values.byteOffset||0,c=new n(t[1],o,i.sparse.count*e),h=new a(t[2],l,i.sparse.count*s);null!==r&&(d=new Cs(d.array.slice(),d.itemSize,d.normalized)),d.normalized=!1;for(let t=0,e=c.length;t<e;t++){const e=c[t];if(d.setX(e,h[t*s]),s>=2&&d.setY(e,h[t*s+1]),s>=3&&d.setZ(e,h[t*s+2]),s>=4&&d.setW(e,h[t*s+3]),s>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}d.normalized=A}return d})}loadTexture(t){const e=this.json,n=this.options,i=e.textures[t].source,r=e.images[i];let s=this.textureLoader;if(r.uri){const t=n.manager.getHandler(r.uri);null!==t&&(s=t)}return this.loadTextureImage(t,i,s)}loadTextureImage(t,e,n){const i=this,r=this.json,s=r.textures[t],a=r.images[e],o=(a.uri||a.bufferView)+":"+s.sampler;if(this.textureCache[o])return this.textureCache[o];const l=this.loadImageSource(e,n).then(function(e){e.flipY=!1,e.name=s.name||a.name||"",""===e.name&&"string"==typeof a.uri&&!1===a.uri.startsWith("data:image/")&&(e.name=a.uri);const n=(r.samplers||{})[s.sampler]||{};return e.magFilter=Tm[n.magFilter]||Qt,e.minFilter=Tm[n.minFilter]||Ut,e.wrapS=Qm[n.wrapS]||Et,e.wrapT=Qm[n.wrapT]||Et,e.generateMipmaps=!e.isCompressedTexture&&e.minFilter!==bt&&e.minFilter!==Qt,i.associations.set(e,{textures:t}),e}).catch(function(){return null});return this.textureCache[o]=l,l}loadImageSource(t,e){const n=this.json,i=this.options;if(void 0!==this.sourceCache[t])return this.sourceCache[t].then(t=>t.clone());const r=n.images[t],s=self.URL||self.webkitURL;let a=r.uri||"",o=!1;if(void 0!==r.bufferView)a=this.getDependency("bufferView",r.bufferView).then(function(t){o=!0;const e=new Blob([t],{type:r.mimeType});return a=s.createObjectURL(e),a});else if(void 0===r.uri)throw new Error("THREE.GLTFLoader: Image "+t+" is missing URI and bufferView");const l=Promise.resolve(a).then(function(t){return new Promise(function(n,r){let s=n;!0===e.isImageBitmapLoader&&(s=function(t){const e=new Pi(t);e.needsUpdate=!0,n(e)}),e.load(nA.resolveURL(t,i.path),s,void 0,r)})}).then(function(t){var e;return!0===o&&s.revokeObjectURL(a),Nm(t,r),t.userData.mimeType=r.mimeType||((e=r.uri).search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/)?"image/jpeg":e.search(/\.webp($|\?)/i)>0||0===e.search(/^data\:image\/webp/)?"image/webp":e.search(/\.ktx2($|\?)/i)>0||0===e.search(/^data\:image\/ktx2/)?"image/ktx2":"image/png"),t}).catch(function(t){throw console.error("THREE.GLTFLoader: Couldn't load texture",a),t});return this.sourceCache[t]=l,l}assignTexture(t,e,n,i){const r=this;return this.getDependency("texture",n.index).then(function(s){if(!s)return null;if(void 0!==n.texCoord&&n.texCoord>0&&((s=s.clone()).channel=n.texCoord),r.extensions[em.KHR_TEXTURE_TRANSFORM]){const t=void 0!==n.extensions?n.extensions[em.KHR_TEXTURE_TRANSFORM]:void 0;if(t){const e=r.associations.get(s);s=r.extensions[em.KHR_TEXTURE_TRANSFORM].extendTexture(s,t),r.associations.set(s,e)}}return void 0!==i&&(s.colorSpace=i),t[e]=s,s})}assignFinalMaterial(t){const e=t.geometry;let n=t.material;const i=void 0===e.attributes.tangent,r=void 0!==e.attributes.color,s=void 0===e.attributes.normal;if(t.isPoints){const t="PointsMaterial:"+n.uuid;let e=this.cache.get(t);e||(e=new nl,As.prototype.copy.call(e,n),e.color.copy(n.color),e.map=n.map,e.sizeAttenuation=!1,this.cache.add(t,e)),n=e}else if(t.isLine){const t="LineBasicMaterial:"+n.uuid;let e=this.cache.get(t);e||(e=new Go,As.prototype.copy.call(e,n),e.color.copy(n.color),e.map=n.map,this.cache.add(t,e)),n=e}if(i||r||s){let t="ClonedMaterial:"+n.uuid+":";i&&(t+="derivative-tangents:"),r&&(t+="vertex-colors:"),s&&(t+="flat-shading:");let e=this.cache.get(t);e||(e=n.clone(),r&&(e.vertexColors=!0),s&&(e.flatShading=!0),i&&(e.normalScale&&(e.normalScale.y*=-1),e.clearcoatNormalScale&&(e.clearcoatNormalScale.y*=-1)),this.cache.add(t,e),this.associations.set(e,this.associations.get(n))),n=e}t.material=n}getMaterialType(){return qc}loadMaterial(t){const e=this,n=this.json,i=this.extensions,r=n.materials[t];let s;const a={},o=[];if((r.extensions||{})[em.KHR_MATERIALS_UNLIT]){const t=i[em.KHR_MATERIALS_UNLIT];s=t.getMaterialType(),o.push(t.extendParams(a,r,e))}else{const n=r.pbrMetallicRoughness||{};if(a.color=new ls(1,1,1),a.opacity=1,Array.isArray(n.baseColorFactor)){const t=n.baseColorFactor;a.color.setRGB(t[0],t[1],t[2],on),a.opacity=t[3]}void 0!==n.baseColorTexture&&o.push(e.assignTexture(a,"map",n.baseColorTexture,an)),a.metalness=void 0!==n.metallicFactor?n.metallicFactor:1,a.roughness=void 0!==n.roughnessFactor?n.roughnessFactor:1,void 0!==n.metallicRoughnessTexture&&(o.push(e.assignTexture(a,"metalnessMap",n.metallicRoughnessTexture)),o.push(e.assignTexture(a,"roughnessMap",n.metallicRoughnessTexture))),s=this._invokeOne(function(e){return e.getMaterialType&&e.getMaterialType(t)}),o.push(Promise.all(this._invokeAll(function(e){return e.extendMaterialParams&&e.extendMaterialParams(t,a)})))}!0===r.doubleSided&&(a.side=E);const l=r.alphaMode||"OPAQUE";if("BLEND"===l?(a.transparent=!0,a.depthWrite=!1):(a.transparent=!1,"MASK"===l&&(a.alphaTest=void 0!==r.alphaCutoff?r.alphaCutoff:.5)),void 0!==r.normalTexture&&s!==us&&(o.push(e.assignTexture(a,"normalMap",r.normalTexture)),a.normalScale=new li(1,1),void 0!==r.normalTexture.scale)){const t=r.normalTexture.scale;a.normalScale.set(t,t)}if(void 0!==r.occlusionTexture&&s!==us&&(o.push(e.assignTexture(a,"aoMap",r.occlusionTexture)),void 0!==r.occlusionTexture.strength&&(a.aoMapIntensity=r.occlusionTexture.strength)),void 0!==r.emissiveFactor&&s!==us){const t=r.emissiveFactor;a.emissive=(new ls).setRGB(t[0],t[1],t[2],on)}return void 0!==r.emissiveTexture&&s!==us&&o.push(e.assignTexture(a,"emissiveMap",r.emissiveTexture,an)),Promise.all(o).then(function(){const n=new s(a);return r.name&&(n.name=r.name),Nm(n,r),e.associations.set(n,{materials:t}),r.extensions&&Fm(i,n,r),n})}createUniqueName(t){const e=OA.sanitizeNodeName(t||"");return e in this.nodeNamesUsed?e+"_"+ ++this.nodeNamesUsed[e]:(this.nodeNamesUsed[e]=0,e)}loadGeometries(t){const e=this,n=this.extensions,i=this.primitiveCache;function r(t){return n[em.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(t,e).then(function(n){return qm(n,t,e)})}const s=[];for(let n=0,a=t.length;n<a;n++){const a=t[n],o=Om(a),l=i[o];if(l)s.push(l.promise);else{let t;t=a.extensions&&a.extensions[em.KHR_DRACO_MESH_COMPRESSION]?r(a):qm(new Ns,a,e),i[o]={primitive:a,promise:t},s.push(t)}}return Promise.all(s)}loadMesh(t){const e=this,n=this.json,i=this.extensions,r=n.meshes[t],s=r.primitives,a=[];for(let t=0,e=s.length;t<e;t++){const e=void 0===s[t].material?Lm(this.cache):this.getDependency("material",s[t].material);a.push(e)}return a.push(e.loadGeometries(s)),Promise.all(a).then(function(n){const a=n.slice(0,n.length-1),o=n[n.length-1],l=[];for(let n=0,c=o.length;n<c;n++){const c=o[n],h=s[n];let A;const u=a[n];if(h.mode===Sm.TRIANGLES||h.mode===Sm.TRIANGLE_STRIP||h.mode===Sm.TRIANGLE_FAN||void 0===h.mode)A=!0===r.isSkinnedMesh?new Xa(c,u):new Xs(c,u),!0===A.isSkinnedMesh&&A.normalizeSkinWeights(),h.mode===Sm.TRIANGLE_STRIP?A.geometry=Zf(A.geometry,Xe):h.mode===Sm.TRIANGLE_FAN&&(A.geometry=Zf(A.geometry,Ke));else if(h.mode===Sm.LINES)A=new tl(c,u);else if(h.mode===Sm.LINE_STRIP)A=new Xo(c,u);else if(h.mode===Sm.LINE_LOOP)A=new el(c,u);else{if(h.mode!==Sm.POINTS)throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+h.mode);A=new ol(c,u)}Object.keys(A.geometry.morphAttributes).length>0&&km(A,r),A.name=e.createUniqueName(r.name||"mesh_"+t),Nm(A,r),h.extensions&&Fm(i,A,h),e.assignFinalMaterial(A),l.push(A)}for(let n=0,i=l.length;n<i;n++)e.associations.set(l[n],{meshes:t,primitives:n});if(1===l.length)return r.extensions&&Fm(i,l[0],r),l[0];const c=new da;r.extensions&&Fm(i,c,r),e.associations.set(c,{meshes:t});for(let t=0,e=l.length;t<e;t++)c.add(l[t]);return c})}loadCamera(t){let e;const n=this.json.cameras[t],i=n[n.type];if(i)return"perspective"===n.type?e=new la(oi.radToDeg(i.yfov),i.aspectRatio||1,i.znear||1,i.zfar||2e6):"orthographic"===n.type&&(e=new Jh(-i.xmag,i.xmag,i.ymag,-i.ymag,i.znear,i.zfar)),n.name&&(e.name=this.createUniqueName(n.name)),Nm(e,n),Promise.resolve(e);console.warn("THREE.GLTFLoader: Missing camera parameters.")}loadSkin(t){const e=this.json.skins[t],n=[];for(let t=0,i=e.joints.length;t<i;t++)n.push(this._loadNodeShallow(e.joints[t]));return void 0!==e.inverseBindMatrices?n.push(this.getDependency("accessor",e.inverseBindMatrices)):n.push(null),Promise.all(n).then(function(t){const n=t.pop(),i=t,r=[],s=[];for(let t=0,a=i.length;t<a;t++){const a=i[t];if(a){r.push(a);const e=new fr;null!==n&&e.fromArray(n.array,16*t),s.push(e)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',e.joints[t])}return new eo(r,s)})}loadAnimation(t){const e=this.json,n=this,i=e.animations[t],r=i.name?i.name:"animation_"+t,s=[],a=[],o=[],l=[],c=[];for(let t=0,e=i.channels.length;t<e;t++){const e=i.channels[t],n=i.samplers[e.sampler],r=e.target,h=r.node,A=void 0!==i.parameters?i.parameters[n.input]:n.input,u=void 0!==i.parameters?i.parameters[n.output]:n.output;void 0!==r.node&&(s.push(this.getDependency("node",h)),a.push(this.getDependency("accessor",A)),o.push(this.getDependency("accessor",u)),l.push(n),c.push(r))}return Promise.all([Promise.all(s),Promise.all(a),Promise.all(o),Promise.all(l),Promise.all(c)]).then(function(t){const e=t[0],s=t[1],a=t[2],o=t[3],l=t[4],c=[];for(let t=0,i=e.length;t<i;t++){const i=e[t],r=s[t],h=a[t],A=o[t],u=l[t];if(void 0===i)continue;i.updateMatrix&&i.updateMatrix();const d=n._createAnimationTracks(i,r,h,A,u);if(d)for(let t=0;t<d.length;t++)c.push(d[t])}const h=new vh(r,void 0,c);return Nm(h,i),h})}createNodeMesh(t){const e=this.json,n=this,i=e.nodes[t];return void 0===i.mesh?null:n.getDependency("mesh",i.mesh).then(function(t){const e=n._getNodeRef(n.meshCache,i.mesh,t);return void 0!==i.weights&&e.traverse(function(t){if(t.isMesh)for(let e=0,n=i.weights.length;e<n;e++)t.morphTargetInfluences[e]=i.weights[e]}),e})}loadNode(t){const e=this,n=this.json.nodes[t],i=e._loadNodeShallow(t),r=[],s=n.children||[];for(let t=0,n=s.length;t<n;t++)r.push(e.getDependency("node",s[t]));const a=void 0===n.skin?Promise.resolve(null):e.getDependency("skin",n.skin);return Promise.all([i,Promise.all(r),a]).then(function(t){const e=t[0],n=t[1],i=t[2];null!==i&&e.traverse(function(t){t.isSkinnedMesh&&t.bind(i,Hm)});for(let t=0,i=n.length;t<i;t++)e.add(n[t]);return e})}_loadNodeShallow(t){const e=this.json,n=this.extensions,i=this;if(void 0!==this.nodeCache[t])return this.nodeCache[t];const r=e.nodes[t],s=r.name?i.createUniqueName(r.name):"",a=[],o=i._invokeOne(function(e){return e.createNodeMesh&&e.createNodeMesh(t)});return o&&a.push(o),void 0!==r.camera&&a.push(i.getDependency("camera",r.camera).then(function(t){return i._getNodeRef(i.cameraCache,r.camera,t)})),i._invokeAll(function(e){return e.createNodeAttachment&&e.createNodeAttachment(t)}).forEach(function(t){a.push(t)}),this.nodeCache[t]=Promise.all(a).then(function(e){let a;if(a=!0===r.isBone?new Ka:e.length>1?new da:1===e.length?e[0]:new Hr,a!==e[0])for(let t=0,n=e.length;t<n;t++)a.add(e[t]);if(r.name&&(a.userData.name=r.name,a.name=s),Nm(a,r),r.extensions&&Fm(n,a,r),void 0!==r.matrix){const t=new fr;t.fromArray(r.matrix),a.applyMatrix4(t)}else void 0!==r.translation&&a.position.fromArray(r.translation),void 0!==r.rotation&&a.quaternion.fromArray(r.rotation),void 0!==r.scale&&a.scale.fromArray(r.scale);if(i.associations.has(a)){if(void 0!==r.mesh&&i.meshCache.refs[r.mesh]>1){const t=i.associations.get(a);i.associations.set(a,{...t})}}else i.associations.set(a,{});return i.associations.get(a).nodes=t,a}),this.nodeCache[t]}loadScene(t){const e=this.extensions,n=this.json.scenes[t],i=this,r=new da;n.name&&(r.name=i.createUniqueName(n.name)),Nm(r,n),n.extensions&&Fm(e,r,n);const s=n.nodes||[],a=[];for(let t=0,e=s.length;t<e;t++)a.push(i.getDependency("node",s[t]));return Promise.all(a).then(function(t){for(let e=0,n=t.length;e<n;e++)r.add(t[e]);return i.associations=(t=>{const e=new Map;for(const[t,n]of i.associations)(t instanceof As||t instanceof Pi)&&e.set(t,n);return t.traverse(t=>{const n=i.associations.get(t);null!=n&&e.set(t,n)}),e})(r),r})}_createAnimationTracks(t,e,n,i,r){const s=[],a=t.name?t.name:t.uuid,o=[];let l;switch(Um[r.path]===Um.weights?t.traverse(function(t){t.morphTargetInfluences&&o.push(t.name?t.name:t.uuid)}):o.push(a),Um[r.path]){case Um.weights:l=ph;break;case Um.rotation:l=fh;break;case Um.translation:case Um.scale:l=yh;break;default:l=1===n.itemSize?ph:yh}const c=void 0!==i.interpolation?Pm[i.interpolation]:Ge,h=this._getArrayFromAccessor(n);for(let t=0,n=o.length;t<n;t++){const n=new l(o[t]+"."+Um[r.path],e.array,h,c);"CUBICSPLINE"===i.interpolation&&this._createCubicSplineTrackInterpolant(n),s.push(n)}return s}_getArrayFromAccessor(t){let e=t.array;if(t.normalized){const t=Gm(e.constructor),n=new Float32Array(e.length);for(let i=0,r=e.length;i<r;i++)n[i]=e[i]*t;e=n}return e}_createCubicSplineTrackInterpolant(t){t.createInterpolant=function(t){return new(this instanceof fh?Bm:_m)(this.times,this.values,this.getValueSize()/3,t)},t.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function qm(t,e,n){const i=e.attributes,r=[];function s(e,i){return n.getDependency("accessor",e).then(function(e){t.setAttribute(i,e)})}for(const e in i){const n=Rm[e]||e.toLowerCase();n in t.attributes||r.push(s(i[e],n))}if(void 0!==e.indices&&!t.index){const i=n.getDependency("accessor",e.indices).then(function(e){t.setIndex(e)});r.push(i)}return _i.workingColorSpace!==on&&"COLOR_0"in i&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${_i.workingColorSpace}" not supported.`),Nm(t,e),function(t,e,n){const i=e.attributes,r=new Hi;if(void 0===i.POSITION)return;{const t=n.json.accessors[i.POSITION],e=t.min,s=t.max;if(void 0===e||void 0===s)return void console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");if(r.set(new hi(e[0],e[1],e[2]),new hi(s[0],s[1],s[2])),t.normalized){const e=Gm(Mm[t.componentType]);r.min.multiplyScalar(e),r.max.multiplyScalar(e)}}const s=e.targets;if(void 0!==s){const t=new hi,e=new hi;for(let i=0,r=s.length;i<r;i++){const r=s[i];if(void 0!==r.POSITION){const i=n.json.accessors[r.POSITION],s=i.min,a=i.max;if(void 0!==s&&void 0!==a){if(e.setX(Math.max(Math.abs(s[0]),Math.abs(a[0]))),e.setY(Math.max(Math.abs(s[1]),Math.abs(a[1]))),e.setZ(Math.max(Math.abs(s[2]),Math.abs(a[2]))),i.normalized){const t=Gm(Mm[i.componentType]);e.multiplyScalar(t)}t.max(e)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}r.expandByVector(t)}t.boundingBox=r;const a=new or;r.getCenter(a.center),a.radius=r.min.distanceTo(r.max)/2,t.boundingSphere=a}(t,e,n),Promise.all(r).then(function(){return void 0!==e.targets?function(t,e,n){let i=!1,r=!1,s=!1;for(let t=0,n=e.length;t<n;t++){const n=e[t];if(void 0!==n.POSITION&&(i=!0),void 0!==n.NORMAL&&(r=!0),void 0!==n.COLOR_0&&(s=!0),i&&r&&s)break}if(!i&&!r&&!s)return Promise.resolve(t);const a=[],o=[],l=[];for(let c=0,h=e.length;c<h;c++){const h=e[c];if(i){const e=void 0!==h.POSITION?n.getDependency("accessor",h.POSITION):t.attributes.position;a.push(e)}if(r){const e=void 0!==h.NORMAL?n.getDependency("accessor",h.NORMAL):t.attributes.normal;o.push(e)}if(s){const e=void 0!==h.COLOR_0?n.getDependency("accessor",h.COLOR_0):t.attributes.color;l.push(e)}}return Promise.all([Promise.all(a),Promise.all(o),Promise.all(l)]).then(function(e){const n=e[0],a=e[1],o=e[2];return i&&(t.morphAttributes.position=n),r&&(t.morphAttributes.normal=a),s&&(t.morphAttributes.color=o),t.morphTargetsRelative=!0,t})}(t,e.targets,n):t})}const Ym={POSITION:["byte","byte normalized","unsigned byte","unsigned byte normalized","short","short normalized","unsigned short","unsigned short normalized"],NORMAL:["byte normalized","short normalized"],TANGENT:["byte normalized","short normalized"],TEXCOORD:["byte","byte normalized","unsigned byte","short","short normalized","unsigned short"]};class Wm{constructor(){this.textureUtils=null,this.pluginCallbacks=[],this.register(function(t){return new ly(t)}),this.register(function(t){return new cy(t)}),this.register(function(t){return new dy(t)}),this.register(function(t){return new py(t)}),this.register(function(t){return new gy(t)}),this.register(function(t){return new fy(t)}),this.register(function(t){return new hy(t)}),this.register(function(t){return new Ay(t)}),this.register(function(t){return new uy(t)}),this.register(function(t){return new my(t)}),this.register(function(t){return new yy(t)}),this.register(function(t){return new vy(t)}),this.register(function(t){return new xy(t)}),this.register(function(t){return new Cy(t)})}register(t){return-1===this.pluginCallbacks.indexOf(t)&&this.pluginCallbacks.push(t),this}unregister(t){return-1!==this.pluginCallbacks.indexOf(t)&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(t),1),this}setTextureUtils(t){return this.textureUtils=t,this}parse(t,e,n,i){const r=new oy,s=[];for(let t=0,e=this.pluginCallbacks.length;t<e;t++)s.push(this.pluginCallbacks[t](r));r.setPlugins(s),r.setTextureUtils(this.textureUtils),r.writeAsync(t,e,i).catch(n)}parseAsync(t,e){const n=this;return new Promise(function(i,r){n.parse(t,i,r,e)})}}const Jm=5120,jm=5121,Xm=5122,Km=5123,Zm=34962,$m="KHR_mesh_quantization",ty={};ty[bt]=9728,ty[Bt]=9984,ty[Mt]=9986,ty[Qt]=9729,ty[Dt]=9985,ty[Ut]=9987,ty[wt]=33071,ty[Et]=10497,ty[_t]=33648;const ey={scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"},ny=new ls;function iy(t,e){return t.length===e.length&&t.every(function(t,n){return t===e[n]})}function ry(t){return 4*Math.ceil(t/4)}function sy(t,e=0){const n=ry(t.byteLength);if(n!==t.byteLength){const i=new Uint8Array(n);if(i.set(new Uint8Array(t)),0!==e)for(let r=t.byteLength;r<n;r++)i[r]=e;return i.buffer}return t}function ay(){return"undefined"==typeof document&&"undefined"!=typeof OffscreenCanvas?new OffscreenCanvas(1,1):document.createElement("canvas")}class oy{constructor(){this.plugins=[],this.options={},this.pending=[],this.buffers=[],this.byteOffset=0,this.buffers=[],this.nodeMap=new Map,this.skins=[],this.extensionsUsed={},this.extensionsRequired={},this.uids=new Map,this.uid=0,this.json={asset:{version:"2.0",generator:"THREE.GLTFExporter r"+h}},this.cache={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map},this.textureUtils=null}setPlugins(t){this.plugins=t}setTextureUtils(t){this.textureUtils=t}async writeAsync(t,e,n={}){this.options=Object.assign({binary:!1,trs:!1,onlyVisible:!0,maxTextureSize:1/0,animations:[],includeCustomExtensions:!1},n),this.options.animations.length>0&&(this.options.trs=!0),await this.processInputAsync(t),await Promise.all(this.pending);const i=this,r=i.buffers,s=i.json;n=i.options;const a=i.extensionsUsed,o=i.extensionsRequired,l=new Blob(r,{type:"application/octet-stream"}),c=Object.keys(a),h=Object.keys(o);if(c.length>0&&(s.extensionsUsed=c),h.length>0&&(s.extensionsRequired=h),s.buffers&&s.buffers.length>0&&(s.buffers[0].byteLength=l.size),!0===n.binary){const t=new FileReader;t.readAsArrayBuffer(l),t.onloadend=function(){const n=sy(t.result),i=new DataView(new ArrayBuffer(8));i.setUint32(0,n.byteLength,!0),i.setUint32(4,5130562,!0);const r=sy((a=JSON.stringify(s),(new TextEncoder).encode(a).buffer),32);var a;const o=new DataView(new ArrayBuffer(8));o.setUint32(0,r.byteLength,!0),o.setUint32(4,1313821514,!0);const l=new ArrayBuffer(12),c=new DataView(l);c.setUint32(0,1179937895,!0),c.setUint32(4,2,!0);const h=12+o.byteLength+r.byteLength+i.byteLength+n.byteLength;c.setUint32(8,h,!0);const A=new Blob([l,o,r,i,n],{type:"application/octet-stream"}),u=new FileReader;u.readAsArrayBuffer(A),u.onloadend=function(){e(u.result)}}}else if(s.buffers&&s.buffers.length>0){const t=new FileReader;t.readAsDataURL(l),t.onloadend=function(){const n=t.result;s.buffers[0].uri=n,e(s)}}else e(s)}serializeUserData(t,e){if(0===Object.keys(t.userData).length)return;const n=this.options,i=this.extensionsUsed;try{const r=JSON.parse(JSON.stringify(t.userData));if(n.includeCustomExtensions&&r.gltfExtensions){void 0===e.extensions&&(e.extensions={});for(const t in r.gltfExtensions)e.extensions[t]=r.gltfExtensions[t],i[t]=!0;delete r.gltfExtensions}Object.keys(r).length>0&&(e.extras=r)}catch(e){console.warn("THREE.GLTFExporter: userData of '"+t.name+"' won't be serialized because of JSON.stringify error - "+e.message)}}getUID(t,e=!1){if(!1===this.uids.has(t)){const e=new Map;e.set(!0,this.uid++),e.set(!1,this.uid++),this.uids.set(t,e)}return this.uids.get(t).get(e)}isNormalizedNormalAttribute(t){if(this.cache.attributesNormalized.has(t))return!1;const e=new hi;for(let n=0,i=t.count;n<i;n++)if(Math.abs(e.fromBufferAttribute(t,n).length()-1)>5e-4)return!1;return!0}createNormalizedNormalAttribute(t){const e=this.cache;if(e.attributesNormalized.has(t))return e.attributesNormalized.get(t);const n=t.clone(),i=new hi;for(let t=0,e=n.count;t<e;t++)i.fromBufferAttribute(n,t),0===i.x&&0===i.y&&0===i.z?i.setX(1):i.normalize(),n.setXYZ(t,i.x,i.y,i.z);return e.attributesNormalized.set(t,n),n}applyTextureTransform(t,e){let n=!1;const i={};0===e.offset.x&&0===e.offset.y||(i.offset=e.offset.toArray(),n=!0),0!==e.rotation&&(i.rotation=e.rotation,n=!0),1===e.repeat.x&&1===e.repeat.y||(i.scale=e.repeat.toArray(),n=!0),n&&(t.extensions=t.extensions||{},t.extensions.KHR_texture_transform=i,this.extensionsUsed.KHR_texture_transform=!0)}async buildMetalRoughTextureAsync(t,e){if(t===e)return t;function n(t){return t.colorSpace===an?function(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}:function(t){return t}}t instanceof ul&&(t=await this.decompressTextureAsync(t)),e instanceof ul&&(e=await this.decompressTextureAsync(e));const i=t?t.image:null,r=e?e.image:null,s=Math.max(i?i.width:0,r?r.width:0),a=Math.max(i?i.height:0,r?r.height:0),o=ay();o.width=s,o.height=a;const l=o.getContext("2d",{willReadFrequently:!0});l.fillStyle="#00ffff",l.fillRect(0,0,s,a);const c=l.getImageData(0,0,s,a);if(i){l.drawImage(i,0,0,s,a);const e=n(t),r=l.getImageData(0,0,s,a).data;for(let t=2;t<r.length;t+=4)c.data[t]=256*e(r[t]/256)}if(r){l.drawImage(r,0,0,s,a);const t=n(e),i=l.getImageData(0,0,s,a).data;for(let e=1;e<i.length;e+=4)c.data[e]=256*t(i[e]/256)}l.putImageData(c,0,0);const h=(t||e).clone();return h.source=new Qi(o),h.colorSpace=sn,h.channel=(t||e).channel,t&&e&&t.channel!==e.channel&&console.warn("THREE.GLTFExporter: UV channels for metalnessMap and roughnessMap textures must match."),console.warn("THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures."),h}async decompressTextureAsync(t,e=1/0){if(null===this.textureUtils)throw new Error("THREE.GLTFExporter: setTextureUtils() must be called to process compressed textures.");return await this.textureUtils.decompress(t,e)}processBuffer(t){const e=this.json,n=this.buffers;return e.buffers||(e.buffers=[{byteLength:0}]),n.push(t),0}processBufferView(t,e,n,i,r){const s=this.json;let a;switch(s.bufferViews||(s.bufferViews=[]),e){case Jm:case jm:a=1;break;case Xm:case Km:a=2;break;default:a=4}let o=t.itemSize*a;r===Zm&&(o=4*Math.ceil(o/4));const l=ry(i*o),c=new DataView(new ArrayBuffer(l));let h=0;for(let r=n;r<n+i;r++){for(let n=0;n<t.itemSize;n++){let i;t.itemSize>4?i=t.array[r*t.itemSize+n]:(0===n?i=t.getX(r):1===n?i=t.getY(r):2===n?i=t.getZ(r):3===n&&(i=t.getW(r)),!0===t.normalized&&(i=oi.normalize(i,t.array))),5126===e?c.setFloat32(h,i,!0):5124===e?c.setInt32(h,i,!0):5125===e?c.setUint32(h,i,!0):e===Xm?c.setInt16(h,i,!0):e===Km?c.setUint16(h,i,!0):e===Jm?c.setInt8(h,i):e===jm&&c.setUint8(h,i),h+=a}h%o!==0&&(h+=o-h%o)}const A={buffer:this.processBuffer(c.buffer),byteOffset:this.byteOffset,byteLength:l};return void 0!==r&&(A.target=r),r===Zm&&(A.byteStride=o),this.byteOffset+=l,s.bufferViews.push(A),{id:s.bufferViews.length-1,byteLength:0}}processBufferViewImage(t){const e=this,n=e.json;return n.bufferViews||(n.bufferViews=[]),new Promise(function(i){const r=new FileReader;r.readAsArrayBuffer(t),r.onloadend=function(){const t=sy(r.result),s={buffer:e.processBuffer(t),byteOffset:e.byteOffset,byteLength:t.byteLength};e.byteOffset+=t.byteLength,i(n.bufferViews.push(s)-1)}})}processAccessor(t,e,n,i){const r=this.json;let s;if(t.array.constructor===Float32Array)s=5126;else if(t.array.constructor===Int32Array)s=5124;else if(t.array.constructor===Uint32Array)s=5125;else if(t.array.constructor===Int16Array)s=Xm;else if(t.array.constructor===Uint16Array)s=Km;else if(t.array.constructor===Int8Array)s=Jm;else{if(t.array.constructor!==Uint8Array)throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type: "+t.array.constructor.name);s=jm}if(void 0===n&&(n=0),void 0!==i&&i!==1/0||(i=t.count),0===i)return null;const a=function(t,e,n){const i={min:new Array(t.itemSize).fill(Number.POSITIVE_INFINITY),max:new Array(t.itemSize).fill(Number.NEGATIVE_INFINITY)};for(let r=e;r<e+n;r++)for(let e=0;e<t.itemSize;e++){let n;t.itemSize>4?n=t.array[r*t.itemSize+e]:(0===e?n=t.getX(r):1===e?n=t.getY(r):2===e?n=t.getZ(r):3===e&&(n=t.getW(r)),!0===t.normalized&&(n=oi.normalize(n,t.array))),i.min[e]=Math.min(i.min[e],n),i.max[e]=Math.max(i.max[e],n)}return i}(t,n,i);let o;void 0!==e&&(o=t===e.index?34963:Zm);const l=this.processBufferView(t,s,n,i,o),c={bufferView:l.id,byteOffset:l.byteOffset,componentType:s,count:i,max:a.max,min:a.min,type:{1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",9:"MAT3",16:"MAT4"}[t.itemSize]};return!0===t.normalized&&(c.normalized=!0),r.accessors||(r.accessors=[]),r.accessors.push(c)-1}processImage(t,e,n,i="image/png"){if(null!==t){const r=this,s=r.cache,a=r.json,o=r.options,l=r.pending;s.images.has(t)||s.images.set(t,{});const c=s.images.get(t),h=i+":flipY/"+n.toString();if(void 0!==c[h])return c[h];a.images||(a.images=[]);const A={mimeType:i},u=ay();u.width=Math.min(t.width,o.maxTextureSize),u.height=Math.min(t.height,o.maxTextureSize);const d=u.getContext("2d",{willReadFrequently:!0});if(!0===n&&(d.translate(0,u.height),d.scale(1,-1)),void 0!==t.data){e!==Kt&&console.error("GLTFExporter: Only RGBAFormat is supported.",e),(t.width>o.maxTextureSize||t.height>o.maxTextureSize)&&console.warn("GLTFExporter: Image size is bigger than maxTextureSize",t);const n=new Uint8ClampedArray(t.height*t.width*4);for(let e=0;e<n.length;e+=4)n[e+0]=t.data[e+0],n[e+1]=t.data[e+1],n[e+2]=t.data[e+2],n[e+3]=t.data[e+3];d.putImageData(new ImageData(n,t.width,t.height),0,0)}else{if(!("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap||"undefined"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas))throw new Error("THREE.GLTFExporter: Invalid image type. Use HTMLImageElement, HTMLCanvasElement, ImageBitmap or OffscreenCanvas.");d.drawImage(t,0,0,u.width,u.height)}!0===o.binary?l.push(function(t,e){if("undefined"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas){let n;return"image/jpeg"===e?n=.92:"image/webp"===e&&(n=.8),t.convertToBlob({type:e,quality:n})}return new Promise(n=>t.toBlob(n,e))}(u,i).then(t=>r.processBufferViewImage(t)).then(t=>{A.bufferView=t})):A.uri=Mi.getDataURL(u,i);const p=a.images.push(A)-1;return c[h]=p,p}throw new Error("THREE.GLTFExporter: No valid image data found. Unable to process texture.")}processSampler(t){const e=this.json;e.samplers||(e.samplers=[]);const n={magFilter:ty[t.magFilter],minFilter:ty[t.minFilter],wrapS:ty[t.wrapS],wrapT:ty[t.wrapT]};return e.samplers.push(n)-1}async processTextureAsync(t){const e=this.options,n=this.cache,i=this.json;if(n.textures.has(t))return n.textures.get(t);i.textures||(i.textures=[]),t instanceof ul&&(t=await this.decompressTextureAsync(t,e.maxTextureSize));let r=t.userData.mimeType;"image/webp"===r&&(r="image/png");const s={sampler:this.processSampler(t),source:this.processImage(t.image,t.format,t.flipY,r)};t.name&&(s.name=t.name),await this._invokeAllAsync(async function(e){e.writeTexture&&await e.writeTexture(t,s)});const a=i.textures.push(s)-1;return n.textures.set(t,a),a}async processMaterialAsync(t){const e=this.cache,n=this.json;if(e.materials.has(t))return e.materials.get(t);if(t.isShaderMaterial)return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),null;n.materials||(n.materials=[]);const i={pbrMetallicRoughness:{}};!0!==t.isMeshStandardMaterial&&!0!==t.isMeshBasicMaterial&&console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");const r=t.color.toArray().concat([t.opacity]);if(iy(r,[1,1,1,1])||(i.pbrMetallicRoughness.baseColorFactor=r),t.isMeshStandardMaterial?(i.pbrMetallicRoughness.metallicFactor=t.metalness,i.pbrMetallicRoughness.roughnessFactor=t.roughness):(i.pbrMetallicRoughness.metallicFactor=0,i.pbrMetallicRoughness.roughnessFactor=1),t.metalnessMap||t.roughnessMap){const e=await this.buildMetalRoughTextureAsync(t.metalnessMap,t.roughnessMap),n={index:await this.processTextureAsync(e),texCoord:e.channel};this.applyTextureTransform(n,e),i.pbrMetallicRoughness.metallicRoughnessTexture=n}if(t.map){const e={index:await this.processTextureAsync(t.map),texCoord:t.map.channel};this.applyTextureTransform(e,t.map),i.pbrMetallicRoughness.baseColorTexture=e}if(t.emissive){const e=t.emissive;if(Math.max(e.r,e.g,e.b)>0&&(i.emissiveFactor=t.emissive.toArray()),t.emissiveMap){const e={index:await this.processTextureAsync(t.emissiveMap),texCoord:t.emissiveMap.channel};this.applyTextureTransform(e,t.emissiveMap),i.emissiveTexture=e}}if(t.normalMap){const e={index:await this.processTextureAsync(t.normalMap),texCoord:t.normalMap.channel};t.normalScale&&1!==t.normalScale.x&&(e.scale=t.normalScale.x),this.applyTextureTransform(e,t.normalMap),i.normalTexture=e}if(t.aoMap){const e={index:await this.processTextureAsync(t.aoMap),texCoord:t.aoMap.channel};1!==t.aoMapIntensity&&(e.strength=t.aoMapIntensity),this.applyTextureTransform(e,t.aoMap),i.occlusionTexture=e}t.transparent?i.alphaMode="BLEND":t.alphaTest>0&&(i.alphaMode="MASK",i.alphaCutoff=t.alphaTest),t.side===E&&(i.doubleSided=!0),""!==t.name&&(i.name=t.name),this.serializeUserData(t,i),await this._invokeAllAsync(async function(e){e.writeMaterialAsync&&await e.writeMaterialAsync(t,i)});const s=n.materials.push(i)-1;return e.materials.set(t,s),s}async processMeshAsync(t){const e=this.cache,n=this.json,i=[t.geometry.uuid];if(Array.isArray(t.material))for(let e=0,n=t.material.length;e<n;e++)i.push(t.material[e].uuid);else i.push(t.material.uuid);const r=i.join(":");if(e.meshes.has(r))return e.meshes.get(r);const s=t.geometry;let a;a=t.isLineSegments?1:t.isLineLoop?2:t.isLine?3:t.isPoints?0:t.material.wireframe?1:4;const o={},l={},c=[],h=[],A={uv:"TEXCOORD_0",uv1:"TEXCOORD_1",uv2:"TEXCOORD_2",uv3:"TEXCOORD_3",color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"},u=s.getAttribute("normal");void 0===u||this.isNormalizedNormalAttribute(u)||(console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),s.setAttribute("normal",this.createNormalizedNormalAttribute(u)));let d=null;for(let t in s.attributes){if("morph"===t.slice(0,5))continue;const n=s.attributes[t];if(t=A[t]||t.toUpperCase(),/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(t)||(t="_"+t),e.attributes.has(this.getUID(n))){l[t]=e.attributes.get(this.getUID(n));continue}d=null;const i=n.array;"JOINTS_0"!==t||i instanceof Uint16Array||i instanceof Uint8Array?(i instanceof Uint32Array||i instanceof Int32Array)&&!t.startsWith("_")&&(console.warn(`GLTFExporter: Attribute "${t}" converted to type FLOAT.`),d=Wm.Utils.toFloat32BufferAttribute(n)):(console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),d=new Cs(new Uint16Array(i),n.itemSize,n.normalized));const r=this.processAccessor(d||n,s);null!==r&&(t.startsWith("_")||this.detectMeshQuantization(t,n),l[t]=r,e.attributes.set(this.getUID(n),r))}if(void 0!==u&&s.setAttribute("normal",u),0===Object.keys(l).length)return null;if(void 0!==t.morphTargetInfluences&&t.morphTargetInfluences.length>0){const n=[],i=[],r={};if(void 0!==t.morphTargetDictionary)for(const e in t.morphTargetDictionary)r[t.morphTargetDictionary[e]]=e;for(let a=0;a<t.morphTargetInfluences.length;++a){const o={};let l=!1;for(const t in s.morphAttributes){if("position"!==t&&"normal"!==t){l||(console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),l=!0);continue}const n=s.morphAttributes[t][a],i=t.toUpperCase(),r=s.attributes[t];if(e.attributes.has(this.getUID(n,!0))){o[i]=e.attributes.get(this.getUID(n,!0));continue}const c=n.clone();if(!s.morphTargetsRelative)for(let t=0,e=n.count;t<e;t++)for(let e=0;e<n.itemSize;e++)0===e&&c.setX(t,n.getX(t)-r.getX(t)),1===e&&c.setY(t,n.getY(t)-r.getY(t)),2===e&&c.setZ(t,n.getZ(t)-r.getZ(t)),3===e&&c.setW(t,n.getW(t)-r.getW(t));o[i]=this.processAccessor(c,s),e.attributes.set(this.getUID(r,!0),o[i])}h.push(o),n.push(t.morphTargetInfluences[a]),void 0!==t.morphTargetDictionary&&i.push(r[a])}o.weights=n,i.length>0&&(o.extras={},o.extras.targetNames=i)}const p=Array.isArray(t.material);if(p&&0===s.groups.length)return null;let g=!1;if(p&&null===s.index){const t=[];for(let e=0,n=s.attributes.position.count;e<n;e++)t[e]=e;s.setIndex(t),g=!0}const f=p?t.material:[t.material],m=p?s.groups:[{materialIndex:0,start:void 0,count:void 0}];for(let t=0,n=m.length;t<n;t++){const n={mode:a,attributes:l};if(this.serializeUserData(s,n),h.length>0&&(n.targets=h),null!==s.index){let i=this.getUID(s.index);void 0===m[t].start&&void 0===m[t].count||(i+=":"+m[t].start+":"+m[t].count),e.attributes.has(i)?n.indices=e.attributes.get(i):(n.indices=this.processAccessor(s.index,s,m[t].start,m[t].count),e.attributes.set(i,n.indices)),null===n.indices&&delete n.indices}const i=await this.processMaterialAsync(f[m[t].materialIndex]);null!==i&&(n.material=i),c.push(n)}!0===g&&s.setIndex(null),o.primitives=c,n.meshes||(n.meshes=[]),await this._invokeAllAsync(function(e){e.writeMesh&&e.writeMesh(t,o)});const y=n.meshes.push(o)-1;return e.meshes.set(r,y),y}detectMeshQuantization(t,e){if(this.extensionsUsed[$m])return;let n;switch(e.array.constructor){case Int8Array:n="byte";break;case Uint8Array:n="unsigned byte";break;case Int16Array:n="short";break;case Uint16Array:n="unsigned short";break;default:return}e.normalized&&(n+=" normalized");const i=t.split("_",1)[0];Ym[i]&&Ym[i].includes(n)&&(this.extensionsUsed[$m]=!0,this.extensionsRequired[$m]=!0)}processCamera(t){const e=this.json;e.cameras||(e.cameras=[]);const n=t.isOrthographicCamera,i={type:n?"orthographic":"perspective"};return n?i.orthographic={xmag:2*t.right,ymag:2*t.top,zfar:t.far<=0?.001:t.far,znear:t.near<0?0:t.near}:i.perspective={aspectRatio:t.aspect,yfov:oi.degToRad(t.fov),zfar:t.far<=0?.001:t.far,znear:t.near<0?0:t.near},""!==t.name&&(i.name=t.type),e.cameras.push(i)-1}processAnimation(t,e){const n=this.json,i=this.nodeMap;n.animations||(n.animations=[]);const r=(t=Wm.Utils.mergeMorphTargetTracks(t.clone(),e)).tracks,s=[],a=[];for(let t=0;t<r.length;++t){const n=r[t],o=OA.parseTrackName(n.name);let l=OA.findNode(e,o.nodeName);const c=ey[o.propertyName];if("bones"===o.objectName&&(l=!0===l.isSkinnedMesh?l.skeleton.getBoneByName(o.objectIndex):void 0),!l||!c){console.warn('THREE.GLTFExporter: Could not export animation track "%s".',n.name);continue}const h=1;let A,u=n.values.length/n.times.length;c===ey.morphTargetInfluences&&(u/=l.morphTargetInfluences.length),!0===n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline?(A="CUBICSPLINE",u/=3):A=n.getInterpolation()===ze?"STEP":"LINEAR",a.push({input:this.processAccessor(new Cs(n.times,h)),output:this.processAccessor(new Cs(n.values,u)),interpolation:A}),s.push({sampler:a.length-1,target:{node:i.get(l),path:c}})}const o={name:t.name||"clip_"+n.animations.length,samplers:a,channels:s};return this.serializeUserData(t,o),n.animations.push(o),n.animations.length-1}processSkin(t){const e=this.json,n=this.nodeMap,i=e.nodes[n.get(t)],r=t.skeleton;if(void 0===r)return null;const s=t.skeleton.bones[0];if(void 0===s)return null;const a=[],o=new Float32Array(16*r.bones.length),l=new fr;for(let e=0;e<r.bones.length;++e)a.push(n.get(r.bones[e])),l.copy(r.boneInverses[e]),l.multiply(t.bindMatrix).toArray(o,16*e);return void 0===e.skins&&(e.skins=[]),e.skins.push({inverseBindMatrices:this.processAccessor(new Cs(o,16)),joints:a,skeleton:n.get(s)}),i.skin=e.skins.length-1}async processNodeAsync(t){const e=this.json,n=this.options,i=this.nodeMap;e.nodes||(e.nodes=[]);const r={};if(n.trs){const e=t.quaternion.toArray(),n=t.position.toArray(),i=t.scale.toArray();iy(e,[0,0,0,1])||(r.rotation=e),iy(n,[0,0,0])||(r.translation=n),iy(i,[1,1,1])||(r.scale=i)}else t.matrixAutoUpdate&&t.updateMatrix(),!1===function(t){return iy(t.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}(t.matrix)&&(r.matrix=t.matrix.elements);if(""!==t.name&&(r.name=String(t.name)),this.serializeUserData(t,r),t.isMesh||t.isLine||t.isPoints){const e=await this.processMeshAsync(t);null!==e&&(r.mesh=e)}else t.isCamera&&(r.camera=this.processCamera(t));t.isSkinnedMesh&&this.skins.push(t);const s=e.nodes.push(r)-1;if(i.set(t,s),t.children.length>0){const e=[];for(let i=0,r=t.children.length;i<r;i++){const r=t.children[i];if(r.visible||!1===n.onlyVisible){const t=await this.processNodeAsync(r);null!==t&&e.push(t)}}e.length>0&&(r.children=e)}return await this._invokeAllAsync(function(e){e.writeNode&&e.writeNode(t,r)}),s}async processSceneAsync(t){const e=this.json,n=this.options;e.scenes||(e.scenes=[],e.scene=0);const i={};""!==t.name&&(i.name=t.name),e.scenes.push(i);const r=[];for(let e=0,i=t.children.length;e<i;e++){const i=t.children[e];if(i.visible||!1===n.onlyVisible){const t=await this.processNodeAsync(i);null!==t&&r.push(t)}}r.length>0&&(i.nodes=r),this.serializeUserData(t,i)}async processObjectsAsync(t){const e=new ya;e.name="AuxScene";for(let n=0;n<t.length;n++)e.children.push(t[n]);await this.processSceneAsync(e)}async processInputAsync(t){const e=this.options;t=t instanceof Array?t:[t],await this._invokeAllAsync(function(e){e.beforeParse&&e.beforeParse(t)});const n=[];for(let e=0;e<t.length;e++)t[e]instanceof ya?await this.processSceneAsync(t[e]):n.push(t[e]);n.length>0&&await this.processObjectsAsync(n);for(let t=0;t<this.skins.length;++t)this.processSkin(this.skins[t]);for(let n=0;n<e.animations.length;++n)this.processAnimation(e.animations[n],t[0]);await this._invokeAllAsync(function(e){e.afterParse&&e.afterParse(t)})}async _invokeAllAsync(t){for(let e=0,n=this.plugins.length;e<n;e++)await t(this.plugins[e])}}class ly{constructor(t){this.writer=t,this.name="KHR_lights_punctual"}writeNode(t,e){if(!t.isLight)return;if(!t.isDirectionalLight&&!t.isPointLight&&!t.isSpotLight)return void console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",t);const n=this.writer,i=n.json,r=n.extensionsUsed,s={};t.name&&(s.name=t.name),s.color=t.color.toArray(),s.intensity=t.intensity,t.isDirectionalLight?s.type="directional":t.isPointLight?(s.type="point",t.distance>0&&(s.range=t.distance)):t.isSpotLight&&(s.type="spot",t.distance>0&&(s.range=t.distance),s.spot={},s.spot.innerConeAngle=(1-t.penumbra)*t.angle,s.spot.outerConeAngle=t.angle),void 0!==t.decay&&2!==t.decay&&console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),!t.target||t.target.parent===t&&0===t.target.position.x&&0===t.target.position.y&&-1===t.target.position.z||console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1."),r[this.name]||(i.extensions=i.extensions||{},i.extensions[this.name]={lights:[]},r[this.name]=!0);const a=i.extensions[this.name].lights;a.push(s),e.extensions=e.extensions||{},e.extensions[this.name]={light:a.length-1}}}class cy{constructor(t){this.writer=t,this.name="KHR_materials_unlit"}async writeMaterialAsync(t,e){if(!t.isMeshBasicMaterial)return;const n=this.writer.extensionsUsed;e.extensions=e.extensions||{},e.extensions[this.name]={},n[this.name]=!0,e.pbrMetallicRoughness.metallicFactor=0,e.pbrMetallicRoughness.roughnessFactor=.9}}class hy{constructor(t){this.writer=t,this.name="KHR_materials_clearcoat"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0===t.clearcoat)return;const n=this.writer,i=n.extensionsUsed,r={};if(r.clearcoatFactor=t.clearcoat,t.clearcoatMap){const e={index:await n.processTextureAsync(t.clearcoatMap),texCoord:t.clearcoatMap.channel};n.applyTextureTransform(e,t.clearcoatMap),r.clearcoatTexture=e}if(r.clearcoatRoughnessFactor=t.clearcoatRoughness,t.clearcoatRoughnessMap){const e={index:await n.processTextureAsync(t.clearcoatRoughnessMap),texCoord:t.clearcoatRoughnessMap.channel};n.applyTextureTransform(e,t.clearcoatRoughnessMap),r.clearcoatRoughnessTexture=e}if(t.clearcoatNormalMap){const e={index:await n.processTextureAsync(t.clearcoatNormalMap),texCoord:t.clearcoatNormalMap.channel};1!==t.clearcoatNormalScale.x&&(e.scale=t.clearcoatNormalScale.x),n.applyTextureTransform(e,t.clearcoatNormalMap),r.clearcoatNormalTexture=e}e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}}class Ay{constructor(t){this.writer=t,this.name="KHR_materials_dispersion"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0===t.dispersion)return;const n=this.writer.extensionsUsed,i={};i.dispersion=t.dispersion,e.extensions=e.extensions||{},e.extensions[this.name]=i,n[this.name]=!0}}class uy{constructor(t){this.writer=t,this.name="KHR_materials_iridescence"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0===t.iridescence)return;const n=this.writer,i=n.extensionsUsed,r={};if(r.iridescenceFactor=t.iridescence,t.iridescenceMap){const e={index:await n.processTextureAsync(t.iridescenceMap),texCoord:t.iridescenceMap.channel};n.applyTextureTransform(e,t.iridescenceMap),r.iridescenceTexture=e}if(r.iridescenceIor=t.iridescenceIOR,r.iridescenceThicknessMinimum=t.iridescenceThicknessRange[0],r.iridescenceThicknessMaximum=t.iridescenceThicknessRange[1],t.iridescenceThicknessMap){const e={index:await n.processTextureAsync(t.iridescenceThicknessMap),texCoord:t.iridescenceThicknessMap.channel};n.applyTextureTransform(e,t.iridescenceThicknessMap),r.iridescenceThicknessTexture=e}e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}}class dy{constructor(t){this.writer=t,this.name="KHR_materials_transmission"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0===t.transmission)return;const n=this.writer,i=n.extensionsUsed,r={};if(r.transmissionFactor=t.transmission,t.transmissionMap){const e={index:await n.processTextureAsync(t.transmissionMap),texCoord:t.transmissionMap.channel};n.applyTextureTransform(e,t.transmissionMap),r.transmissionTexture=e}e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}}class py{constructor(t){this.writer=t,this.name="KHR_materials_volume"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0===t.transmission)return;const n=this.writer,i=n.extensionsUsed,r={};if(r.thicknessFactor=t.thickness,t.thicknessMap){const e={index:await n.processTextureAsync(t.thicknessMap),texCoord:t.thicknessMap.channel};n.applyTextureTransform(e,t.thicknessMap),r.thicknessTexture=e}t.attenuationDistance!==1/0&&(r.attenuationDistance=t.attenuationDistance),r.attenuationColor=t.attenuationColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}}class gy{constructor(t){this.writer=t,this.name="KHR_materials_ior"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||1.5===t.ior)return;const n=this.writer.extensionsUsed,i={};i.ior=t.ior,e.extensions=e.extensions||{},e.extensions[this.name]=i,n[this.name]=!0}}class fy{constructor(t){this.writer=t,this.name="KHR_materials_specular"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||1===t.specularIntensity&&t.specularColor.equals(ny)&&!t.specularIntensityMap&&!t.specularColorMap)return;const n=this.writer,i=n.extensionsUsed,r={};if(t.specularIntensityMap){const e={index:await n.processTextureAsync(t.specularIntensityMap),texCoord:t.specularIntensityMap.channel};n.applyTextureTransform(e,t.specularIntensityMap),r.specularTexture=e}if(t.specularColorMap){const e={index:await n.processTextureAsync(t.specularColorMap),texCoord:t.specularColorMap.channel};n.applyTextureTransform(e,t.specularColorMap),r.specularColorTexture=e}r.specularFactor=t.specularIntensity,r.specularColorFactor=t.specularColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}}class my{constructor(t){this.writer=t,this.name="KHR_materials_sheen"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0==t.sheen)return;const n=this.writer,i=n.extensionsUsed,r={};if(t.sheenRoughnessMap){const e={index:await n.processTextureAsync(t.sheenRoughnessMap),texCoord:t.sheenRoughnessMap.channel};n.applyTextureTransform(e,t.sheenRoughnessMap),r.sheenRoughnessTexture=e}if(t.sheenColorMap){const e={index:await n.processTextureAsync(t.sheenColorMap),texCoord:t.sheenColorMap.channel};n.applyTextureTransform(e,t.sheenColorMap),r.sheenColorTexture=e}r.sheenRoughnessFactor=t.sheenRoughness,r.sheenColorFactor=t.sheenColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}}class yy{constructor(t){this.writer=t,this.name="KHR_materials_anisotropy"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0==t.anisotropy)return;const n=this.writer,i=n.extensionsUsed,r={};if(t.anisotropyMap){const e={index:await n.processTextureAsync(t.anisotropyMap)};n.applyTextureTransform(e,t.anisotropyMap),r.anisotropyTexture=e}r.anisotropyStrength=t.anisotropy,r.anisotropyRotation=t.anisotropyRotation,e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}}class vy{constructor(t){this.writer=t,this.name="KHR_materials_emissive_strength"}async writeMaterialAsync(t,e){if(!t.isMeshStandardMaterial||1===t.emissiveIntensity)return;const n=this.writer.extensionsUsed,i={};i.emissiveStrength=t.emissiveIntensity,e.extensions=e.extensions||{},e.extensions[this.name]=i,n[this.name]=!0}}class xy{constructor(t){this.writer=t,this.name="EXT_materials_bump"}async writeMaterialAsync(t,e){if(!t.isMeshStandardMaterial||1===t.bumpScale&&!t.bumpMap)return;const n=this.writer,i=n.extensionsUsed,r={};if(t.bumpMap){const e={index:await n.processTextureAsync(t.bumpMap),texCoord:t.bumpMap.channel};n.applyTextureTransform(e,t.bumpMap),r.bumpTexture=e}r.bumpFactor=t.bumpScale,e.extensions=e.extensions||{},e.extensions[this.name]=r,i[this.name]=!0}}class Cy{constructor(t){this.writer=t,this.name="EXT_mesh_gpu_instancing"}writeNode(t,e){if(!t.isInstancedMesh)return;const n=this.writer,i=t,r=new Float32Array(3*i.count),s=new Float32Array(4*i.count),a=new Float32Array(3*i.count),o=new fr,l=new hi,c=new ci,h=new hi;for(let t=0;t<i.count;t++)i.getMatrixAt(t,o),o.decompose(l,c,h),l.toArray(r,3*t),c.toArray(s,4*t),h.toArray(a,3*t);const A={TRANSLATION:n.processAccessor(new Cs(r,3)),ROTATION:n.processAccessor(new Cs(s,4)),SCALE:n.processAccessor(new Cs(a,3))};i.instanceColor&&(A._COLOR_0=n.processAccessor(i.instanceColor)),e.extensions=e.extensions||{},e.extensions[this.name]={attributes:A},n.extensionsUsed[this.name]=!0,n.extensionsRequired[this.name]=!0}}Wm.Utils={insertKeyframe:function(t,e){const n=.001,i=t.getValueSize(),r=new t.TimeBufferType(t.times.length+1),s=new t.ValueBufferType(t.values.length+i),a=t.createInterpolant(new t.ValueBufferType(i));let o;if(0===t.times.length){r[0]=e;for(let t=0;t<i;t++)s[t]=0;o=0}else if(e<t.times[0]){if(Math.abs(t.times[0]-e)<n)return 0;r[0]=e,r.set(t.times,1),s.set(a.evaluate(e),0),s.set(t.values,i),o=0}else if(e>t.times[t.times.length-1]){if(Math.abs(t.times[t.times.length-1]-e)<n)return t.times.length-1;r[r.length-1]=e,r.set(t.times,0),s.set(t.values,0),s.set(a.evaluate(e),t.values.length),o=r.length-1}else for(let l=0;l<t.times.length;l++){if(Math.abs(t.times[l]-e)<n)return l;if(t.times[l]<e&&t.times[l+1]>e){r.set(t.times.slice(0,l+1),0),r[l+1]=e,r.set(t.times.slice(l+1),l+2),s.set(t.values.slice(0,(l+1)*i),0),s.set(a.evaluate(e),(l+1)*i),s.set(t.values.slice((l+1)*i),(l+2)*i),o=l+1;break}}return t.times=r,t.values=s,o},mergeMorphTargetTracks:function(t,e){const n=[],i={},r=t.tracks;for(let t=0;t<r.length;++t){let s=r[t];const a=OA.parseTrackName(s.name),o=OA.findNode(e,a.nodeName);if("morphTargetInfluences"!==a.propertyName||void 0===a.propertyIndex){n.push(s);continue}if(s.createInterpolant!==s.InterpolantFactoryMethodDiscrete&&s.createInterpolant!==s.InterpolantFactoryMethodLinear){if(s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),s=s.clone(),s.setInterpolation(Ge)}const l=o.morphTargetInfluences.length,c=o.morphTargetDictionary[a.propertyIndex];if(void 0===c)throw new Error("THREE.GLTFExporter: Morph target name not found: "+a.propertyIndex);let h;if(void 0===i[o.uuid]){h=s.clone();const t=new h.ValueBufferType(l*h.times.length);for(let e=0;e<h.times.length;e++)t[e*l+c]=h.values[e];h.name=(a.nodeName||"")+".morphTargetInfluences",h.values=t,i[o.uuid]=h,n.push(h);continue}const A=s.createInterpolant(new s.ValueBufferType(1));h=i[o.uuid];for(let t=0;t<h.times.length;t++)h.values[t*l+c]=A.evaluate(h.times[t]);for(let t=0;t<s.times.length;t++){const e=this.insertKeyframe(h,s.times[t]);h.values[e*l+c]=s.values[t]}}return t.tracks=n,t},toFloat32BufferAttribute:function(t){const e=new Cs(new Float32Array(t.count*t.itemSize),t.itemSize,!1);if(!t.normalized&&!t.isInterleavedBufferAttribute)return e.array.set(t.array),e;for(let n=0,i=t.count;n<i;n++)for(let i=0;i<t.itemSize;i++)e.setComponent(n,i,t.getComponent(n,i));return e}};const Iy=new WeakMap;function Ey(){let t,e;function n(t,e,n,i,r,s){const a=s.num_components(),o=n.num_points()*a,l=o*r.BYTES_PER_ELEMENT,c=function(t,e){switch(e){case Float32Array:return t.DT_FLOAT32;case Int8Array:return t.DT_INT8;case Int16Array:return t.DT_INT16;case Int32Array:return t.DT_INT32;case Uint8Array:return t.DT_UINT8;case Uint16Array:return t.DT_UINT16;case Uint32Array:return t.DT_UINT32}}(t,r),h=t._malloc(l);e.GetAttributeDataArrayForAllPoints(n,s,c,l,h);const A=new r(t.HEAPF32.buffer,h,o).slice();return t._free(h),{name:i,array:A,itemSize:a}}onmessage=function(i){const r=i.data;switch(r.type){case"init":t=r.decoderConfig,e=new Promise(function(e){t.onModuleLoaded=function(t){e({draco:t})},DracoDecoderModule(t)});break;case"decode":const i=r.buffer,s=r.taskConfig;e.then(t=>{const e=t.draco,a=new e.Decoder;try{const t=function(t,e,i,r){const s=r.attributeIDs,a=r.attributeTypes;let o,l;const c=e.GetEncodedGeometryType(i);if(c===t.TRIANGULAR_MESH)o=new t.Mesh,l=e.DecodeArrayToMesh(i,i.byteLength,o);else{if(c!==t.POINT_CLOUD)throw new Error("THREE.DRACOLoader: Unexpected geometry type.");o=new t.PointCloud,l=e.DecodeArrayToPointCloud(i,i.byteLength,o)}if(!l.ok()||0===o.ptr)throw new Error("THREE.DRACOLoader: Decoding failed: "+l.error_msg());const h={index:null,attributes:[]};for(const i in s){const l=self[a[i]];let c,A;if(r.useUniqueIDs)A=s[i],c=e.GetAttributeByUniqueId(o,A);else{if(A=e.GetAttributeId(o,t[s[i]]),-1===A)continue;c=e.GetAttribute(o,A)}const u=n(t,e,o,i,l,c);"color"===i&&(u.vertexColorSpace=r.vertexColorSpace),h.attributes.push(u)}return c===t.TRIANGULAR_MESH&&(h.index=function(t,e,n){const i=3*n.num_faces(),r=4*i,s=t._malloc(r);e.GetTrianglesUInt32Array(n,r,s);const a=new Uint32Array(t.HEAPF32.buffer,s,i).slice();return t._free(s),{array:a,itemSize:1}}(t,e,o)),t.destroy(o),h}(e,a,new Int8Array(i),s),o=t.attributes.map(t=>t.array.buffer);t.index&&o.push(t.index.array.buffer),self.postMessage({type:"decode",id:r.id,geometry:t},o)}catch(t){console.error(t),self.postMessage({type:"error",id:r.id,error:t.message})}finally{e.destroy(a)}})}}}var wy=Uint8Array,_y=Uint16Array,by=Int32Array,By=new wy([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Sy=new wy([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),My=new wy([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Ty=function(t,e){for(var n=new _y(31),i=0;i<31;++i)n[i]=e+=1<<t[i-1];var r=new by(n[30]);for(i=1;i<30;++i)for(var s=n[i];s<n[i+1];++s)r[s]=s-n[i]<<5|i;return{b:n,r}},Qy=Ty(By,2),Dy=Qy.b,Ry=Qy.r;Dy[28]=258,Ry[258]=28;for(var Uy=Ty(Sy,0),Py=Uy.b,Ly=Uy.r,Fy=new _y(32768),Ny=0;Ny<32768;++Ny){var ky=(43690&Ny)>>1|(21845&Ny)<<1;ky=(61680&(ky=(52428&ky)>>2|(13107&ky)<<2))>>4|(3855&ky)<<4,Fy[Ny]=((65280&ky)>>8|(255&ky)<<8)>>1}var Oy=function(t,e,n){for(var i=t.length,r=0,s=new _y(e);r<i;++r)t[r]&&++s[t[r]-1];var a,o=new _y(e);for(r=1;r<e;++r)o[r]=o[r-1]+s[r-1]<<1;if(n){a=new _y(1<<e);var l=15-e;for(r=0;r<i;++r)if(t[r])for(var c=r<<4|t[r],h=e-t[r],A=o[t[r]-1]++<<h,u=A|(1<<h)-1;A<=u;++A)a[Fy[A]>>l]=c}else for(a=new _y(i),r=0;r<i;++r)t[r]&&(a[r]=Fy[o[t[r]-1]++]>>15-t[r]);return a},zy=new wy(288);for(Ny=0;Ny<144;++Ny)zy[Ny]=8;for(Ny=144;Ny<256;++Ny)zy[Ny]=9;for(Ny=256;Ny<280;++Ny)zy[Ny]=7;for(Ny=280;Ny<288;++Ny)zy[Ny]=8;var Gy=new wy(32);for(Ny=0;Ny<32;++Ny)Gy[Ny]=5;var Hy=Oy(zy,9,0),Vy=Oy(zy,9,1),qy=Oy(Gy,5,0),Yy=Oy(Gy,5,1),Wy=function(t){for(var e=t[0],n=1;n<t.length;++n)t[n]>e&&(e=t[n]);return e},Jy=function(t,e,n){var i=e/8|0;return(t[i]|t[i+1]<<8)>>(7&e)&n},jy=function(t,e){var n=e/8|0;return(t[n]|t[n+1]<<8|t[n+2]<<16)>>(7&e)},Xy=function(t){return(t+7)/8|0},Ky=function(t,e,n){return(null==e||e<0)&&(e=0),(null==n||n>t.length)&&(n=t.length),new wy(t.subarray(e,n))},Zy=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],$y=function(t,e,n){var i=new Error(e||Zy[t]);if(i.code=t,Error.captureStackTrace&&Error.captureStackTrace(i,$y),!n)throw i;return i},tv=function(t,e,n){n<<=7&e;var i=e/8|0;t[i]|=n,t[i+1]|=n>>8},ev=function(t,e,n){n<<=7&e;var i=e/8|0;t[i]|=n,t[i+1]|=n>>8,t[i+2]|=n>>16},nv=function(t,e){for(var n=[],i=0;i<t.length;++i)t[i]&&n.push({s:i,f:t[i]});var r=n.length,s=n.slice();if(!r)return{t:cv,l:0};if(1==r){var a=new wy(n[0].s+1);return a[n[0].s]=1,{t:a,l:1}}n.sort(function(t,e){return t.f-e.f}),n.push({s:-1,f:25001});var o=n[0],l=n[1],c=0,h=1,A=2;for(n[0]={s:-1,f:o.f+l.f,l:o,r:l};h!=r-1;)o=n[n[c].f<n[A].f?c++:A++],l=n[c!=h&&n[c].f<n[A].f?c++:A++],n[h++]={s:-1,f:o.f+l.f,l:o,r:l};var u=s[0].s;for(i=1;i<r;++i)s[i].s>u&&(u=s[i].s);var d=new _y(u+1),p=iv(n[h-1],d,0);if(p>e){i=0;var g=0,f=p-e,m=1<<f;for(s.sort(function(t,e){return d[e.s]-d[t.s]||t.f-e.f});i<r;++i){var y=s[i].s;if(!(d[y]>e))break;g+=m-(1<<p-d[y]),d[y]=e}for(g>>=f;g>0;){var v=s[i].s;d[v]<e?g-=1<<e-d[v]++-1:++i}for(;i>=0&&g;--i){var x=s[i].s;d[x]==e&&(--d[x],++g)}p=e}return{t:new wy(d),l:p}},iv=function(t,e,n){return-1==t.s?Math.max(iv(t.l,e,n+1),iv(t.r,e,n+1)):e[t.s]=n},rv=function(t){for(var e=t.length;e&&!t[--e];);for(var n=new _y(++e),i=0,r=t[0],s=1,a=function(t){n[i++]=t},o=1;o<=e;++o)if(t[o]==r&&o!=e)++s;else{if(!r&&s>2){for(;s>138;s-=138)a(32754);s>2&&(a(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(a(r),--s;s>6;s-=6)a(8304);s>2&&(a(s-3<<5|8208),s=0)}for(;s--;)a(r);s=1,r=t[o]}return{c:n.subarray(0,i),n:e}},sv=function(t,e){for(var n=0,i=0;i<e.length;++i)n+=t[i]*e[i];return n},av=function(t,e,n){var i=n.length,r=Xy(e+2);t[r]=255&i,t[r+1]=i>>8,t[r+2]=255^t[r],t[r+3]=255^t[r+1];for(var s=0;s<i;++s)t[r+s+4]=n[s];return 8*(r+4+i)},ov=function(t,e,n,i,r,s,a,o,l,c,h){tv(e,h++,n),++r[256];for(var A=nv(r,15),u=A.t,d=A.l,p=nv(s,15),g=p.t,f=p.l,m=rv(u),y=m.c,v=m.n,x=rv(g),C=x.c,I=x.n,E=new _y(19),w=0;w<y.length;++w)++E[31&y[w]];for(w=0;w<C.length;++w)++E[31&C[w]];for(var _=nv(E,7),b=_.t,B=_.l,S=19;S>4&&!b[My[S-1]];--S);var M,T,Q,D,R=c+5<<3,U=sv(r,zy)+sv(s,Gy)+a,P=sv(r,u)+sv(s,g)+a+14+3*S+sv(E,b)+2*E[16]+3*E[17]+7*E[18];if(l>=0&&R<=U&&R<=P)return av(e,h,t.subarray(l,l+c));if(tv(e,h,1+(P<U)),h+=2,P<U){M=Oy(u,d,0),T=u,Q=Oy(g,f,0),D=g;var L=Oy(b,B,0);for(tv(e,h,v-257),tv(e,h+5,I-1),tv(e,h+10,S-4),h+=14,w=0;w<S;++w)tv(e,h+3*w,b[My[w]]);h+=3*S;for(var F=[y,C],N=0;N<2;++N){var k=F[N];for(w=0;w<k.length;++w){var O=31&k[w];tv(e,h,L[O]),h+=b[O],O>15&&(tv(e,h,k[w]>>5&127),h+=k[w]>>12)}}}else M=Hy,T=zy,Q=qy,D=Gy;for(w=0;w<o;++w){var z=i[w];if(z>255){ev(e,h,M[257+(O=z>>18&31)]),h+=T[O+257],O>7&&(tv(e,h,z>>23&31),h+=By[O]);var G=31&z;ev(e,h,Q[G]),h+=D[G],G>3&&(ev(e,h,z>>5&8191),h+=Sy[G])}else ev(e,h,M[z]),h+=T[z]}return ev(e,h,M[256]),h+T[256]},lv=new by([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),cv=new wy(0),hv=function(){for(var t=new Int32Array(256),e=0;e<256;++e){for(var n=e,i=9;--i;)n=(1&n&&-306674912)^n>>>1;t[e]=n}return t}(),Av=function(){var t=-1;return{p:function(e){for(var n=t,i=0;i<e.length;++i)n=hv[255&n^e[i]]^n>>>8;t=n},d:function(){return~t}}},uv=function(t,e,n,i,r){if(!r&&(r={l:1},e.dictionary)){var s=e.dictionary.subarray(-32768),a=new wy(s.length+t.length);a.set(s),a.set(t,s.length),t=a,r.w=s.length}return function(t,e,n,i,r,s){var a=s.z||t.length,o=new wy(i+a+5*(1+Math.ceil(a/7e3))+r),l=o.subarray(i,o.length-r),c=s.l,h=7&(s.r||0);if(e){h&&(l[0]=s.r>>3);for(var A=lv[e-1],u=A>>13,d=8191&A,p=(1<<n)-1,g=s.p||new _y(32768),f=s.h||new _y(p+1),m=Math.ceil(n/3),y=2*m,v=function(e){return(t[e]^t[e+1]<<m^t[e+2]<<y)&p},x=new by(25e3),C=new _y(288),I=new _y(32),E=0,w=0,_=s.i||0,b=0,B=s.w||0,S=0;_+2<a;++_){var M=v(_),T=32767&_,Q=f[M];if(g[T]=Q,f[M]=T,B<=_){var D=a-_;if((E>7e3||b>24576)&&(D>423||!c)){h=ov(t,l,0,x,C,I,w,b,S,_-S,h),b=E=w=0,S=_;for(var R=0;R<286;++R)C[R]=0;for(R=0;R<30;++R)I[R]=0}var U=2,P=0,L=d,F=T-Q&32767;if(D>2&&M==v(_-F))for(var N=Math.min(u,D)-1,k=Math.min(32767,_),O=Math.min(258,D);F<=k&&--L&&T!=Q;){if(t[_+U]==t[_+U-F]){for(var z=0;z<O&&t[_+z]==t[_+z-F];++z);if(z>U){if(U=z,P=F,z>N)break;var G=Math.min(F,z-2),H=0;for(R=0;R<G;++R){var V=_-F+R&32767,q=V-g[V]&32767;q>H&&(H=q,Q=V)}}}F+=(T=Q)-(Q=g[T])&32767}if(P){x[b++]=268435456|Ry[U]<<18|Ly[P];var Y=31&Ry[U],W=31&Ly[P];w+=By[Y]+Sy[W],++C[257+Y],++I[W],B=_+U,++E}else x[b++]=t[_],++C[t[_]]}}for(_=Math.max(_,B);_<a;++_)x[b++]=t[_],++C[t[_]];h=ov(t,l,c,x,C,I,w,b,S,_-S,h),c||(s.r=7&h|l[h/8|0]<<3,h-=7,s.h=f,s.p=g,s.i=_,s.w=B)}else{for(_=s.w||0;_<a+c;_+=65535){var J=_+65535;J>=a&&(l[h/8|0]=c,J=a),h=av(l,h+1,t.subarray(_,J))}s.i=a}return Ky(o,0,i+Xy(h)+r)}(t,null==e.level?6:e.level,null==e.mem?r.l?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(t.length)))):20:12+e.mem,n,i,r)},dv=function(t,e){var n={};for(var i in t)n[i]=t[i];for(var i in e)n[i]=e[i];return n},pv=function(t,e,n){for(;n;++e)t[e]=n,n>>>=8};function gv(t,e){return uv(t,e||{},0,0)}function fv(t,e){return function(t,e,n,i){var r=t.length,s=i?i.length:0;if(!r||e.f&&!e.l)return n||new wy(0);var a=!n,o=a||2!=e.i,l=e.i;a&&(n=new wy(3*r));var c=function(t){var e=n.length;if(t>e){var i=new wy(Math.max(2*e,t));i.set(n),n=i}},h=e.f||0,A=e.p||0,u=e.b||0,d=e.l,p=e.d,g=e.m,f=e.n,m=8*r;do{if(!d){h=Jy(t,A,1);var y=Jy(t,A+1,3);if(A+=3,!y){var v=t[(T=Xy(A)+4)-4]|t[T-3]<<8,x=T+v;if(x>r){l&&$y(0);break}o&&c(u+v),n.set(t.subarray(T,x),u),e.b=u+=v,e.p=A=8*x,e.f=h;continue}if(1==y)d=Vy,p=Yy,g=9,f=5;else if(2==y){var C=Jy(t,A,31)+257,I=Jy(t,A+10,15)+4,E=C+Jy(t,A+5,31)+1;A+=14;for(var w=new wy(E),_=new wy(19),b=0;b<I;++b)_[My[b]]=Jy(t,A+3*b,7);A+=3*I;var B=Wy(_),S=(1<<B)-1,M=Oy(_,B,1);for(b=0;b<E;){var T,Q=M[Jy(t,A,S)];if(A+=15&Q,(T=Q>>4)<16)w[b++]=T;else{var D=0,R=0;for(16==T?(R=3+Jy(t,A,3),A+=2,D=w[b-1]):17==T?(R=3+Jy(t,A,7),A+=3):18==T&&(R=11+Jy(t,A,127),A+=7);R--;)w[b++]=D}}var U=w.subarray(0,C),P=w.subarray(C);g=Wy(U),f=Wy(P),d=Oy(U,g,1),p=Oy(P,f,1)}else $y(1);if(A>m){l&&$y(0);break}}o&&c(u+131072);for(var L=(1<<g)-1,F=(1<<f)-1,N=A;;N=A){var k=(D=d[jy(t,A)&L])>>4;if((A+=15&D)>m){l&&$y(0);break}if(D||$y(2),k<256)n[u++]=k;else{if(256==k){N=A,d=null;break}var O=k-254;if(k>264){var z=By[b=k-257];O=Jy(t,A,(1<<z)-1)+Dy[b],A+=z}var G=p[jy(t,A)&F],H=G>>4;if(G||$y(3),A+=15&G,P=Py[H],H>3&&(z=Sy[H],P+=jy(t,A)&(1<<z)-1,A+=z),A>m){l&&$y(0);break}o&&c(u+131072);var V=u+O;if(u<P){var q=s-P,Y=Math.min(P,V);for(q+u<0&&$y(3);u<Y;++u)n[u]=i[q+u]}for(;u<V;++u)n[u]=n[u-P]}}e.l=d,e.p=N,e.b=u,e.f=h,d&&(h=1,e.m=g,e.d=p,e.n=f)}while(!h);return u!=n.length&&a?Ky(n,0,u):n.subarray(0,u)}(t.subarray((n=t,i=e&&e.dictionary,(8!=(15&n[0])||n[0]>>4>7||(n[0]<<8|n[1])%31)&&$y(6,"invalid zlib data"),(n[1]>>5&1)==+!i&&$y(6,"invalid zlib data: "+(32&n[1]?"need":"unexpected")+" dictionary"),2+(n[1]>>3&4)),-4),{i:2},e&&e.out,e&&e.dictionary);var n,i}var mv=function(t,e,n,i){for(var r in t){var s=t[r],a=e+r,o=i;Array.isArray(s)&&(o=dv(i,s[1]),s=s[0]),s instanceof wy?n[a]=[s,o]:(n[a+="/"]=[new wy(0),o],mv(s,a,n,i))}},yv="undefined"!=typeof TextEncoder&&new TextEncoder,vv="undefined"!=typeof TextDecoder&&new TextDecoder;try{vv.decode(cv,{stream:!0})}catch(t){}function xv(t,e){if(e){for(var n=new wy(t.length),i=0;i<t.length;++i)n[i]=t.charCodeAt(i);return n}if(yv)return yv.encode(t);var r=t.length,s=new wy(t.length+(t.length>>1)),a=0,o=function(t){s[a++]=t};for(i=0;i<r;++i){if(a+5>s.length){var l=new wy(a+8+(r-i<<1));l.set(s),s=l}var c=t.charCodeAt(i);c<128||e?o(c):c<2048?(o(192|c>>6),o(128|63&c)):c>55295&&c<57344?(o(240|(c=65536+(1047552&c)|1023&t.charCodeAt(++i))>>18),o(128|c>>12&63),o(128|c>>6&63),o(128|63&c)):(o(224|c>>12),o(128|c>>6&63),o(128|63&c))}return Ky(s,0,a)}var Cv=function(t){var e=0;if(t)for(var n in t){var i=t[n].length;i>65535&&$y(9),e+=i+4}return e},Iv=function(t,e,n,i,r,s,a,o){var l=i.length,c=n.extra,h=o&&o.length,A=Cv(c);pv(t,e,null!=a?33639248:67324752),e+=4,null!=a&&(t[e++]=20,t[e++]=n.os),t[e]=20,e+=2,t[e++]=n.flag<<1|(s<0&&8),t[e++]=r&&8,t[e++]=255&n.compression,t[e++]=n.compression>>8;var u=new Date(null==n.mtime?Date.now():n.mtime),d=u.getFullYear()-1980;if((d<0||d>119)&&$y(10),pv(t,e,d<<25|u.getMonth()+1<<21|u.getDate()<<16|u.getHours()<<11|u.getMinutes()<<5|u.getSeconds()>>1),e+=4,-1!=s&&(pv(t,e,n.crc),pv(t,e+4,s<0?-s-2:s),pv(t,e+8,n.size)),pv(t,e+12,l),pv(t,e+14,A),e+=16,null!=a&&(pv(t,e,h),pv(t,e+6,n.attrs),pv(t,e+10,a),e+=14),t.set(i,e),e+=l,A)for(var p in c){var g=c[p],f=g.length;pv(t,e,+p),pv(t,e+2,f),t.set(g,e+4),e+=4+f}return h&&(t.set(o,e),e+=h),e};"function"==typeof queueMicrotask?queueMicrotask:"function"==typeof setTimeout&&setTimeout;class Ev{constructor(t,e="",n=[],i=[]){this.name=t,this.type=e,this.metadata=n,this.properties=i,this.children=[]}addMetadata(t,e){this.metadata.push({key:t,value:e})}addProperty(t,e=[]){this.properties.push({property:t,metadata:e})}addChild(t){this.children.push(t)}toString(t=0){const e="\t".repeat(t),n=this.metadata.map(t=>{const n=t.key,i=t.value;if(Array.isArray(i)){const t=[];return t.push(`${n} = {`),i.forEach(n=>{t.push(`${e}\t\t${n}`)}),t.push(`${e}\t}`),t.join("\n")}return`${n} = ${i}`}),i=n.length?` (\n${n.map(t=>`${e}\t${t}`).join("\n")}\n${e})`:"",r=this.properties.map(t=>{const n=t.property,i=t.metadata.length?` (\n${t.metadata.map(t=>`${e}\t\t${t}`).join("\n")}\n${e}\t)`:"";return`${e}\t${n}${i}`}),s=this.children.map(e=>e.toString(t+1)),a=[];if(r.length>0&&a.push(...r),s.length>0){r.length>0&&a.push("");for(let t=0;t<s.length;t++)a.push(s[t]),t<s.length-1&&a.push("")}const o=a.join("\n"),l=this.type?this.type+" ":"";return`${e}def ${l}"${this.name}"${i}\n${e}{\n${o}\n${e}}`}}function wv(t,e){let n=t.name;return n=n.replace(/[^A-Za-z0-9_]/g,""),/^[0-9]/.test(n)&&(n="_"+n),""===n&&(n=t.isCamera?"Camera":"Object"),e.has(n)&&(n=n+"_"+t.id),e.add(n),n}function _v(t,e,n){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=n/Math.max(t.width,t.height),r=document.createElement("canvas");r.width=t.width*Math.min(1,i),r.height=t.height*Math.min(1,i);const s=r.getContext("2d");return!0===e&&(s.translate(0,r.height),s.scale(1,-1)),s.drawImage(t,0,0,r.width,r.height),r}throw new Error("THREE.USDZExporter: No valid image data found. Unable to process texture.")}function bv(){return'#usda 1.0\n(\n\tcustomLayerData = {\n\t\tstring creator = "Three.js USDZExporter"\n\t}\n\tdefaultPrim = "Root"\n\tmetersPerUnit = 1\n\tupAxis = "Y"\n)\n'}function Bv(t,e,n,i,r,s){for(let a=0,o=t.children.length;a<o;a++){const o=t.children[a];if(!1===o.visible&&!0===s.onlyVisible)continue;let l;if(o.isMesh){const t=o.geometry,e=o.material;if(e.isMeshStandardMaterial){const s="geometries/Geometry_"+t.id+".usda";if(!(s in r)){const e=Dv(t);r[s]=xv(bv()+"\n"+e.toString())}e.uuid in n||(n[e.uuid]=e),l=Mv(o,t,n[e.uuid],i)}else console.warn("THREE.USDZExporter: Unsupported material type (USDZ only supports MeshStandardMaterial)",o)}else l=o.isCamera?Nv(o,i):Sv(o,i);l&&(e.addChild(l),Bv(o,l,n,i,r,s))}}function Sv(t,e){const n=wv(t,e),i=Tv(t.matrix);t.matrix.determinant()<0&&console.warn("THREE.USDZExporter: USDZ does not support negative scales",t);const r=new Ev(n,"Xform");return r.addProperty(`matrix4d xformOp:transform = ${i}`),r.addProperty('uniform token[] xformOpOrder = ["xformOp:transform"]'),r}function Mv(t,e,n,i){const r=Sv(t,i);return r.addMetadata("prepend references",`@./geometries/Geometry_${e.id}.usda@</Geometry>`),r.addMetadata("prepend apiSchemas",'["MaterialBindingAPI"]'),r.addProperty(`rel material:binding = </Materials/Material_${n.id}>`),r}function Tv(t){const e=t.elements;return`( ${Qv(e,0)}, ${Qv(e,4)}, ${Qv(e,8)}, ${Qv(e,12)} )`}function Qv(t,e){return`(${t[e+0]}, ${t[e+1]}, ${t[e+2]}, ${t[e+3]})`}function Dv(t){const e=new Ev("Geometry"),n=function(t){const e=t.attributes,n=e.position.count,i=new Ev("Geometry","Mesh");i.addProperty(`int[] faceVertexCounts = [${function(t){const e=null!==t.index?t.index.count:t.attributes.position.count;return Array(e/3).fill(3).join(", ")}(t)}]`),i.addProperty(`int[] faceVertexIndices = [${function(t){const e=t.index,n=[];if(null!==e)for(let t=0;t<e.count;t++)n.push(e.getX(t));else{const e=t.attributes.position.count;for(let t=0;t<e;t++)n.push(t)}return n.join(", ")}(t)}]`),i.addProperty(`normal3f[] normals = [${Rv(e.normal,n)}]`,['interpolation = "vertex"']),i.addProperty(`point3f[] points = [${Rv(e.position,n)}]`);for(let t=0;t<4;t++){const n=t>0?t:"",r=e["uv"+n];void 0!==r&&i.addProperty(`texCoord2f[] primvars:st${n} = [${Uv(r)}]`,['interpolation = "vertex"'])}const r=e.color;return void 0!==r&&i.addProperty(`color3f[] primvars:displayColor = [${Rv(r,n)}]`,['interpolation = "vertex"']),i.addProperty('uniform token subdivisionScheme = "none"'),i}(t);return e.addChild(n),e}function Rv(t,e){if(void 0===t)return console.warn("USDZExporter: Normals missing."),Array(e).fill("(0, 0, 0)").join(", ");const n=[];for(let e=0;e<t.count;e++){const i=t.getX(e),r=t.getY(e),s=t.getZ(e);n.push(`(${i.toPrecision(7)}, ${r.toPrecision(7)}, ${s.toPrecision(7)})`)}return n.join(", ")}function Uv(t){const e=[];for(let n=0;n<t.count;n++){const i=t.getX(n),r=t.getY(n);e.push(`(${i.toPrecision(7)}, ${1-r.toPrecision(7)})`)}return e.join(", ")}function Pv(t,e,n=!1){const i=new Ev(`Material_${t.id}`,"Material");function r(i,r,s){const a=i.source.id+"_"+i.flipY;e[a]=i;const o=i.channel>0?"st"+i.channel:"st",l={1e3:"repeat",1001:"clamp",1002:"mirror"},c=i.repeat.clone(),h=i.offset.clone(),A=i.rotation,u=Math.sin(A),d=Math.cos(A);h.y=1-h.y-c.y,n?(h.x=h.x/c.x,h.y=h.y/c.y,h.x+=u/c.x,h.y+=d-1):(h.x+=u*c.x,h.y+=(1-d)*c.y);const p=new Ev(`PrimvarReader_${r}`,"Shader");p.addProperty('uniform token info:id = "UsdPrimvarReader_float2"'),p.addProperty("float2 inputs:fallback = (0.0, 0.0)"),p.addProperty(`token inputs:varname = "${o}"`),p.addProperty("float2 outputs:result");const g=new Ev(`Transform2d_${r}`,"Shader");g.addProperty('uniform token info:id = "UsdTransform2d"'),g.addProperty(`token inputs:in.connect = </Materials/Material_${t.id}/PrimvarReader_${r}.outputs:result>`),g.addProperty(`float inputs:rotation = ${(A*(180/Math.PI)).toFixed(7)}`),g.addProperty(`float2 inputs:scale = ${Fv(c)}`),g.addProperty(`float2 inputs:translation = ${Fv(h)}`),g.addProperty("float2 outputs:result");const f=new Ev(`Texture_${i.id}_${r}`,"Shader");return f.addProperty('uniform token info:id = "UsdUVTexture"'),f.addProperty(`asset inputs:file = @textures/Texture_${a}.png@`),f.addProperty(`float2 inputs:st.connect = </Materials/Material_${t.id}/Transform2d_${r}.outputs:result>`),void 0!==s&&f.addProperty(`float4 inputs:scale = ${function(t){return`(${t.r}, ${t.g}, ${t.b}, 1.0)`}(s)}`),f.addProperty(`token inputs:sourceColorSpace = "${i.colorSpace===sn?"raw":"sRGB"}"`),f.addProperty(`token inputs:wrapS = "${l[i.wrapS]}"`),f.addProperty(`token inputs:wrapT = "${l[i.wrapT]}"`),f.addProperty("float outputs:r"),f.addProperty("float outputs:g"),f.addProperty("float outputs:b"),f.addProperty("float3 outputs:rgb"),(t.transparent||t.alphaTest>0)&&f.addProperty("float outputs:a"),[p,g,f]}t.side===E&&console.warn("THREE.USDZExporter: USDZ does not support double sided materials",t);const s=new Ev("PreviewSurface","Shader");if(s.addProperty('uniform token info:id = "UsdPreviewSurface"'),null!==t.map?(s.addProperty(`color3f inputs:diffuseColor.connect = </Materials/Material_${t.id}/Texture_${t.map.id}_diffuse.outputs:rgb>`),t.transparent?s.addProperty(`float inputs:opacity.connect = </Materials/Material_${t.id}/Texture_${t.map.id}_diffuse.outputs:a>`):t.alphaTest>0&&(s.addProperty(`float inputs:opacity.connect = </Materials/Material_${t.id}/Texture_${t.map.id}_diffuse.outputs:a>`),s.addProperty(`float inputs:opacityThreshold = ${t.alphaTest}`)),r(t.map,"diffuse",t.color).forEach(t=>i.addChild(t))):s.addProperty(`color3f inputs:diffuseColor = ${Lv(t.color)}`),null!==t.emissiveMap){s.addProperty(`color3f inputs:emissiveColor.connect = </Materials/Material_${t.id}/Texture_${t.emissiveMap.id}_emissive.outputs:rgb>`);const e=new ls(t.emissive.r*t.emissiveIntensity,t.emissive.g*t.emissiveIntensity,t.emissive.b*t.emissiveIntensity);r(t.emissiveMap,"emissive",e).forEach(t=>i.addChild(t))}else t.emissive.getHex()>0&&s.addProperty(`color3f inputs:emissiveColor = ${Lv(t.emissive)}`);if(null!==t.normalMap&&(s.addProperty(`normal3f inputs:normal.connect = </Materials/Material_${t.id}/Texture_${t.normalMap.id}_normal.outputs:rgb>`),r(t.normalMap,"normal").forEach(t=>i.addChild(t))),null!==t.aoMap){s.addProperty(`float inputs:occlusion.connect = </Materials/Material_${t.id}/Texture_${t.aoMap.id}_occlusion.outputs:r>`);const e=new ls(t.aoMapIntensity,t.aoMapIntensity,t.aoMapIntensity);r(t.aoMap,"occlusion",e).forEach(t=>i.addChild(t))}if(null!==t.roughnessMap){s.addProperty(`float inputs:roughness.connect = </Materials/Material_${t.id}/Texture_${t.roughnessMap.id}_roughness.outputs:g>`);const e=new ls(t.roughness,t.roughness,t.roughness);r(t.roughnessMap,"roughness",e).forEach(t=>i.addChild(t))}else s.addProperty(`float inputs:roughness = ${t.roughness}`);if(null!==t.metalnessMap){s.addProperty(`float inputs:metallic.connect = </Materials/Material_${t.id}/Texture_${t.metalnessMap.id}_metallic.outputs:b>`);const e=new ls(t.metalness,t.metalness,t.metalness);r(t.metalnessMap,"metallic",e).forEach(t=>i.addChild(t))}else s.addProperty(`float inputs:metallic = ${t.metalness}`);if(null!==t.alphaMap?(s.addProperty(`float inputs:opacity.connect = </Materials/Material_${t.id}/Texture_${t.alphaMap.id}_opacity.outputs:r>`),s.addProperty("float inputs:opacityThreshold = 0.0001"),r(t.alphaMap,"opacity").forEach(t=>i.addChild(t))):s.addProperty(`float inputs:opacity = ${t.opacity}`),t.isMeshPhysicalMaterial){if(null!==t.clearcoatMap){s.addProperty(`float inputs:clearcoat.connect = </Materials/Material_${t.id}/Texture_${t.clearcoatMap.id}_clearcoat.outputs:r>`);const e=new ls(t.clearcoat,t.clearcoat,t.clearcoat);r(t.clearcoatMap,"clearcoat",e).forEach(t=>i.addChild(t))}else s.addProperty(`float inputs:clearcoat = ${t.clearcoat}`);if(null!==t.clearcoatRoughnessMap){s.addProperty(`float inputs:clearcoatRoughness.connect = </Materials/Material_${t.id}/Texture_${t.clearcoatRoughnessMap.id}_clearcoatRoughness.outputs:g>`);const e=new ls(t.clearcoatRoughness,t.clearcoatRoughness,t.clearcoatRoughness);r(t.clearcoatRoughnessMap,"clearcoatRoughness",e).forEach(t=>i.addChild(t))}else s.addProperty(`float inputs:clearcoatRoughness = ${t.clearcoatRoughness}`);s.addProperty(`float inputs:ior = ${t.ior}`)}return s.addProperty("int inputs:useSpecularWorkflow = 0"),s.addProperty("token outputs:surface"),i.addChild(s),i.addProperty(`token outputs:surface.connect = </Materials/Material_${t.id}/PreviewSurface.outputs:surface>`),i}function Lv(t){return`(${t.r}, ${t.g}, ${t.b})`}function Fv(t){return`(${t.x}, ${t.y})`}function Nv(t,e){const n=wv(t,e),i=Tv(t.matrix);t.matrix.determinant()<0&&console.warn("THREE.USDZExporter: USDZ does not support negative scales",t);const r=new Ev(n,"Camera");r.addProperty(`matrix4d xformOp:transform = ${i}`),r.addProperty('uniform token[] xformOpOrder = ["xformOp:transform"]');const s=t.isOrthographicCamera?"orthographic":"perspective";r.addProperty(`token projection = "${s}"`);const a=`(${t.near.toPrecision(7)}, ${t.far.toPrecision(7)})`;let o,l;if(r.addProperty(`float2 clippingRange = ${a}`),o=t.isOrthographicCamera?(10*(Math.abs(t.left)+Math.abs(t.right))).toPrecision(7):t.getFilmWidth().toPrecision(7),r.addProperty(`float horizontalAperture = ${o}`),l=t.isOrthographicCamera?(10*(Math.abs(t.top)+Math.abs(t.bottom))).toPrecision(7):t.getFilmHeight().toPrecision(7),r.addProperty(`float verticalAperture = ${l}`),t.isPerspectiveCamera){const e=t.getFocalLength().toPrecision(7);r.addProperty(`float focalLength = ${e}`);const n=t.focus.toPrecision(7);r.addProperty(`float focusDistance = ${n}`)}return r}const kv=new hi,Ov=new ci,zv=new hi;const Gv=new fr,Hv=new fr,Vv=new Hi,qv=new hi;class Yv extends iA{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry",this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this.setAttribute("position",new Ts([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this.setAttribute("uv",new Ts([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))}applyMatrix4(t){const e=this.attributes.instanceStart,n=this.attributes.instanceEnd;return void 0!==e&&(e.applyMatrix4(t),n.applyMatrix4(t),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}setPositions(t){let e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));const n=new jA(e,6,1);return this.setAttribute("instanceStart",new Ca(n,3,0)),this.setAttribute("instanceEnd",new Ca(n,3,3)),this.instanceCount=this.attributes.instanceStart.count,this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(t){let e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));const n=new jA(e,6,1);return this.setAttribute("instanceColorStart",new Ca(n,3,0)),this.setAttribute("instanceColorEnd",new Ca(n,3,3)),this}fromWireframeGeometry(t){return this.setPositions(t.attributes.position.array),this}fromEdgesGeometry(t){return this.setPositions(t.attributes.position.array),this}fromMesh(t){return this.fromWireframeGeometry(new Oc(t.geometry)),this}fromLineSegments(t){const e=t.geometry;return this.setPositions(e.attributes.position.array),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Hi);const t=this.attributes.instanceStart,e=this.attributes.instanceEnd;void 0!==t&&void 0!==e&&(this.boundingBox.setFromBufferAttribute(t),Vv.setFromBufferAttribute(e),this.boundingBox.union(Vv))}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new or),null===this.boundingBox&&this.computeBoundingBox();const t=this.attributes.instanceStart,e=this.attributes.instanceEnd;if(void 0!==t&&void 0!==e){const n=this.boundingSphere.center;this.boundingBox.getCenter(n);let i=0;for(let r=0,s=t.count;r<s;r++)qv.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(qv)),qv.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(qv));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}}td.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new li(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}},ed.line={uniforms:na.merge([td.common,td.fog,td.line]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\tworldStart = start.xyz;\n\t\t\t\tworldEnd = end.xyz;\n\n\t\t\t#else\n\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\tvec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );\n\t\t\t\tvec3 worldUp = normalize( cross( worldDir, tmpFwd ) );\n\t\t\t\tvec3 worldFwd = cross( worldDir, worldUp );\n\t\t\t\tworldPos = position.y < 0.5 ? start: end;\n\n\t\t\t\t// height offset\n\t\t\t\tfloat hw = linewidth * 0.5;\n\t\t\t\tworldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;\n\n\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t// cap extension\n\t\t\t\t\tworldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;\n\n\t\t\t\t\t// add width to the box\n\t\t\t\t\tworldPos.xyz += worldFwd * hw;\n\n\t\t\t\t\t// endcaps\n\t\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\t\tworldPos.xyz -= worldFwd * 2.0 * hw;\n\n\t\t\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t\t// project the worldpos\n\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t// segments overlap neatly\n\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t#else\n\n\t\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t\t// undo aspect ratio adjustment\n\t\t\t\tdir.x /= aspect;\n\t\t\t\toffset.x /= aspect;\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\t\toffset += - dir;\n\n\t\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\t\toffset += dir;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth;\n\n\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\t\toffset /= resolution.y;\n\n\t\t\t\t// select end\n\t\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t\t// back to clip space\n\t\t\t\toffset *= clip.w;\n\n\t\t\t\tclip.xy += offset;\n\n\t\t\t#endif\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tuniform float linewidth;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\tfloat mua;\n\t\t\tfloat mub;\n\n\t\t\tvec3 p13 = p1 - p3;\n\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\tmua = numer / denom;\n\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\treturn vec2( mua, mub );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tfloat alpha = opacity;\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\tfloat len = length( delta );\n\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#endif\n\n\t\t\t#else\n\n\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t#else\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t"};class Wv extends ia{constructor(t){super({type:"LineMaterial",uniforms:na.clone(ed.line.uniforms),vertexShader:ed.line.vertexShader,fragmentShader:ed.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(t)}get color(){return this.uniforms.diffuse.value}set color(t){this.uniforms.diffuse.value=t}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(t){!0===t?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(t){this.uniforms.linewidth&&(this.uniforms.linewidth.value=t)}get dashed(){return"USE_DASH"in this.defines}set dashed(t){!0===t!==this.dashed&&(this.needsUpdate=!0),!0===t?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(t){this.uniforms.dashScale.value=t}get dashSize(){return this.uniforms.dashSize.value}set dashSize(t){this.uniforms.dashSize.value=t}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(t){this.uniforms.dashOffset.value=t}get gapSize(){return this.uniforms.gapSize.value}set gapSize(t){this.uniforms.gapSize.value=t}get opacity(){return this.uniforms.opacity.value}set opacity(t){this.uniforms&&(this.uniforms.opacity.value=t)}get resolution(){return this.uniforms.resolution.value}set resolution(t){this.uniforms.resolution.value.copy(t)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(t){this.defines&&(!0===t!==this.alphaToCoverage&&(this.needsUpdate=!0),!0===t?this.defines.USE_ALPHA_TO_COVERAGE="":delete this.defines.USE_ALPHA_TO_COVERAGE)}}const Jv=new Li,jv=new hi,Xv=new hi,Kv=new Li,Zv=new Li,$v=new Li,tx=new hi,ex=new fr,nx=new gu,ix=new hi,rx=new Hi,sx=new or,ax=new Li;let ox,lx;function cx(t,e,n){return ax.set(0,0,-e,1).applyMatrix4(t.projectionMatrix),ax.multiplyScalar(1/ax.w),ax.x=lx/n.width,ax.y=lx/n.height,ax.applyMatrix4(t.projectionMatrixInverse),ax.multiplyScalar(1/ax.w),Math.abs(Math.max(ax.x,ax.y))}class hx extends Xs{constructor(t=new Yv,e=new Wv({color:16777215*Math.random()})){super(t,e),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const t=this.geometry,e=t.attributes.instanceStart,n=t.attributes.instanceEnd,i=new Float32Array(2*e.count);for(let t=0,r=0,s=e.count;t<s;t++,r+=2)jv.fromBufferAttribute(e,t),Xv.fromBufferAttribute(n,t),i[r]=0===r?0:i[r-1],i[r+1]=i[r]+jv.distanceTo(Xv);const r=new jA(i,2,1);return t.setAttribute("instanceDistanceStart",new Ca(r,1,0)),t.setAttribute("instanceDistanceEnd",new Ca(r,1,1)),this}raycast(t,e){const n=this.material.worldUnits,i=t.camera;null!==i||n||console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const r=void 0!==t.params.Line2&&t.params.Line2.threshold||0;ox=t.ray;const s=this.matrixWorld,a=this.geometry,o=this.material;let l,c;lx=o.linewidth+r,null===a.boundingSphere&&a.computeBoundingSphere(),sx.copy(a.boundingSphere).applyMatrix4(s),l=n?.5*lx:cx(i,Math.max(i.near,sx.distanceToPoint(ox.origin)),o.resolution),sx.radius+=l,!1!==ox.intersectsSphere(sx)&&(null===a.boundingBox&&a.computeBoundingBox(),rx.copy(a.boundingBox).applyMatrix4(s),c=n?.5*lx:cx(i,Math.max(i.near,rx.distanceToPoint(ox.origin)),o.resolution),rx.expandByScalar(c),!1!==ox.intersectsBox(rx)&&(n?function(t,e){const n=t.matrixWorld,i=t.geometry,r=i.attributes.instanceStart,s=i.attributes.instanceEnd;for(let a=0,o=Math.min(i.instanceCount,r.count);a<o;a++){nx.start.fromBufferAttribute(r,a),nx.end.fromBufferAttribute(s,a),nx.applyMatrix4(n);const i=new hi,o=new hi;ox.distanceSqToSegment(nx.start,nx.end,o,i),o.distanceTo(i)<.5*lx&&e.push({point:o,pointOnLine:i,distance:ox.origin.distanceTo(o),object:t,face:null,faceIndex:a,uv:null,uv1:null})}}(this,e):function(t,e,n){const i=e.projectionMatrix,r=t.material.resolution,s=t.matrixWorld,a=t.geometry,o=a.attributes.instanceStart,l=a.attributes.instanceEnd,c=Math.min(a.instanceCount,o.count),h=-e.near;ox.at(1,$v),$v.w=1,$v.applyMatrix4(e.matrixWorldInverse),$v.applyMatrix4(i),$v.multiplyScalar(1/$v.w),$v.x*=r.x/2,$v.y*=r.y/2,$v.z=0,tx.copy($v),ex.multiplyMatrices(e.matrixWorldInverse,s);for(let e=0,a=c;e<a;e++){if(Kv.fromBufferAttribute(o,e),Zv.fromBufferAttribute(l,e),Kv.w=1,Zv.w=1,Kv.applyMatrix4(ex),Zv.applyMatrix4(ex),Kv.z>h&&Zv.z>h)continue;if(Kv.z>h){const t=Kv.z-Zv.z,e=(Kv.z-h)/t;Kv.lerp(Zv,e)}else if(Zv.z>h){const t=Zv.z-Kv.z,e=(Zv.z-h)/t;Zv.lerp(Kv,e)}Kv.applyMatrix4(i),Zv.applyMatrix4(i),Kv.multiplyScalar(1/Kv.w),Zv.multiplyScalar(1/Zv.w),Kv.x*=r.x/2,Kv.y*=r.y/2,Zv.x*=r.x/2,Zv.y*=r.y/2,nx.start.copy(Kv),nx.start.z=0,nx.end.copy(Zv),nx.end.z=0;const a=nx.closestPointToPointParameter(tx,!0);nx.at(a,ix);const c=oi.lerp(Kv.z,Zv.z,a),A=c>=-1&&c<=1,u=tx.distanceTo(ix)<.5*lx;if(A&&u){nx.start.fromBufferAttribute(o,e),nx.end.fromBufferAttribute(l,e),nx.start.applyMatrix4(s),nx.end.applyMatrix4(s);const i=new hi,r=new hi;ox.distanceSqToSegment(nx.start,nx.end,r,i),n.push({point:r,pointOnLine:i,distance:ox.origin.distanceTo(r),object:t,face:null,faceIndex:e,uv:null,uv1:null})}}}(this,i,e)))}onBeforeRender(t){const e=this.material.uniforms;e&&e.resolution&&(t.getViewport(Jv),this.material.uniforms.resolution.value.set(Jv.z,Jv.w))}}class Ax extends Yv{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(t){const e=t.length-3,n=new Float32Array(2*e);for(let i=0;i<e;i+=3)n[2*i]=t[i],n[2*i+1]=t[i+1],n[2*i+2]=t[i+2],n[2*i+3]=t[i+3],n[2*i+4]=t[i+4],n[2*i+5]=t[i+5];return super.setPositions(n),this}setColors(t){const e=t.length-3,n=new Float32Array(2*e);for(let i=0;i<e;i+=3)n[2*i]=t[i],n[2*i+1]=t[i+1],n[2*i+2]=t[i+2],n[2*i+3]=t[i+3],n[2*i+4]=t[i+4],n[2*i+5]=t[i+5];return super.setColors(n),this}setFromPoints(t){const e=t.length-1,n=new Float32Array(6*e);for(let i=0;i<e;i++)n[6*i]=t[i].x,n[6*i+1]=t[i].y,n[6*i+2]=t[i].z||0,n[6*i+3]=t[i+1].x,n[6*i+4]=t[i+1].y,n[6*i+5]=t[i+1].z||0;return super.setPositions(n),this}fromLine(t){const e=t.geometry;return this.setPositions(e.attributes.position.array),this}}const ux=new hi,dx=new gu,px=new go,gx=new hi,fx=new is;class mx{constructor(){this.tolerance=-1,this.faces=[],this.newFaces=[],this.assigned=new Cx,this.unassigned=new Cx,this.vertices=[]}setFromPoints(t){if(t.length>=4){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.vertices.push(new xx(t[e]));this._compute()}return this}setFromObject(t){const e=[];return t.updateMatrixWorld(!0),t.traverse(function(t){const n=t.geometry;if(void 0!==n){const i=n.attributes.position;if(void 0!==i)for(let n=0,r=i.count;n<r;n++){const r=new hi;r.fromBufferAttribute(i,n).applyMatrix4(t.matrixWorld),e.push(r)}}}),this.setFromPoints(e)}containsPoint(t){const e=this.faces;for(let n=0,i=e.length;n<i;n++)if(e[n].distanceToPoint(t)>this.tolerance)return!1;return!0}intersectRay(t,e){const n=this.faces;let i=-1/0,r=1/0;for(let e=0,s=n.length;e<s;e++){const s=n[e],a=s.distanceToPoint(t.origin),o=s.normal.dot(t.direction);if(a>0&&o>=0)return null;const l=0!==o?-a/o:0;if(!(l<=0)&&(o>0?r=Math.min(l,r):i=Math.max(l,i),i>r))return null}return i!==-1/0?t.at(i,e):t.at(r,e),e}intersectsRay(t){return null!==this.intersectRay(t,ux)}makeEmpty(){return this.faces=[],this.vertices=[],this}_addVertexToFace(t,e){return t.face=e,null===e.outside?this.assigned.append(t):this.assigned.insertBefore(e.outside,t),e.outside=t,this}_removeVertexFromFace(t,e){return t===e.outside&&(null!==t.next&&t.next.face===e?e.outside=t.next:e.outside=null),this.assigned.remove(t),this}_removeAllVerticesFromFace(t){if(null!==t.outside){const e=t.outside;let n=t.outside;for(;null!==n.next&&n.next.face===t;)n=n.next;return this.assigned.removeSubList(e,n),e.prev=n.next=null,t.outside=null,e}}_deleteFaceVertices(t,e){const n=this._removeAllVerticesFromFace(t);if(void 0!==n)if(void 0===e)this.unassigned.appendChain(n);else{let t=n;do{const n=t.next;e.distanceToPoint(t.point)>this.tolerance?this._addVertexToFace(t,e):this.unassigned.append(t),t=n}while(null!==t)}return this}_resolveUnassignedPoints(t){if(!1===this.unassigned.isEmpty()){let e=this.unassigned.first();do{const n=e.next;let i=this.tolerance,r=null;for(let n=0;n<t.length;n++){const s=t[n];if(0===s.mark){const t=s.distanceToPoint(e.point);if(t>i&&(i=t,r=s),i>1e3*this.tolerance)break}}null!==r&&this._addVertexToFace(e,r),e=n}while(null!==e)}return this}_computeExtremes(){const t=new hi,e=new hi,n=[],i=[];for(let t=0;t<3;t++)n[t]=i[t]=this.vertices[0];t.copy(this.vertices[0].point),e.copy(this.vertices[0].point);for(let r=0,s=this.vertices.length;r<s;r++){const s=this.vertices[r],a=s.point;for(let e=0;e<3;e++)a.getComponent(e)<t.getComponent(e)&&(t.setComponent(e,a.getComponent(e)),n[e]=s);for(let t=0;t<3;t++)a.getComponent(t)>e.getComponent(t)&&(e.setComponent(t,a.getComponent(t)),i[t]=s)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(t.x),Math.abs(e.x))+Math.max(Math.abs(t.y),Math.abs(e.y))+Math.max(Math.abs(t.z),Math.abs(e.z))),{min:n,max:i}}_computeInitialHull(){const t=this.vertices,e=this._computeExtremes(),n=e.min,i=e.max;let r=0,s=0;for(let t=0;t<3;t++){const e=i[t].point.getComponent(t)-n[t].point.getComponent(t);e>r&&(r=e,s=t)}const a=n[s],o=i[s];let l,c;r=0,dx.set(a.point,o.point);for(let e=0,n=this.vertices.length;e<n;e++){const n=t[e];if(n!==a&&n!==o){dx.closestPointToPoint(n.point,!0,gx);const t=gx.distanceToSquared(n.point);t>r&&(r=t,l=n)}}r=-1,px.setFromCoplanarPoints(a.point,o.point,l.point);for(let e=0,n=this.vertices.length;e<n;e++){const n=t[e];if(n!==a&&n!==o&&n!==l){const t=Math.abs(px.distanceToPoint(n.point));t>r&&(r=t,c=n)}}const h=[];if(px.distanceToPoint(c.point)<0){h.push(yx.create(a,o,l),yx.create(c,o,a),yx.create(c,l,o),yx.create(c,a,l));for(let t=0;t<3;t++){const e=(t+1)%3;h[t+1].getEdge(2).setTwin(h[0].getEdge(e)),h[t+1].getEdge(1).setTwin(h[e+1].getEdge(0))}}else{h.push(yx.create(a,l,o),yx.create(c,a,o),yx.create(c,o,l),yx.create(c,l,a));for(let t=0;t<3;t++){const e=(t+1)%3;h[t+1].getEdge(2).setTwin(h[0].getEdge((3-t)%3)),h[t+1].getEdge(0).setTwin(h[e+1].getEdge(1))}}for(let t=0;t<4;t++)this.faces.push(h[t]);for(let e=0,n=t.length;e<n;e++){const n=t[e];if(n!==a&&n!==o&&n!==l&&n!==c){r=this.tolerance;let t=null;for(let e=0;e<4;e++){const i=this.faces[e].distanceToPoint(n.point);i>r&&(r=i,t=this.faces[e])}null!==t&&this._addVertexToFace(n,t)}}return this}_reindexFaces(){const t=[];for(let e=0;e<this.faces.length;e++){const n=this.faces[e];0===n.mark&&t.push(n)}return this.faces=t,this}_nextVertexToAdd(){if(!1===this.assigned.isEmpty()){let t,e=0;const n=this.assigned.first().face;let i=n.outside;do{const r=n.distanceToPoint(i.point);r>e&&(e=r,t=i),i=i.next}while(null!==i&&i.face===n);return t}}_computeHorizon(t,e,n,i){let r;this._deleteFaceVertices(n),n.mark=1,r=null===e?e=n.getEdge(0):e.next;do{const e=r.twin,n=e.face;0===n.mark&&(n.distanceToPoint(t)>this.tolerance?this._computeHorizon(t,e,n,i):i.push(r)),r=r.next}while(r!==e);return this}_addAdjoiningFace(t,e){const n=yx.create(t,e.tail(),e.head());return this.faces.push(n),n.getEdge(-1).setTwin(e.twin),n.getEdge(0)}_addNewFaces(t,e){this.newFaces=[];let n=null,i=null;for(let r=0;r<e.length;r++){const s=e[r],a=this._addAdjoiningFace(t,s);null===n?n=a:a.next.setTwin(i),this.newFaces.push(a.face),i=a}return n.next.setTwin(i),this}_addVertexToHull(t){const e=[];return this.unassigned.clear(),this._removeVertexFromFace(t,t.face),this._computeHorizon(t.point,null,t.face,e),this._addNewFaces(t,e),this._resolveUnassignedPoints(this.newFaces),this}_cleanup(){return this.assigned.clear(),this.unassigned.clear(),this.newFaces=[],this}_compute(){let t;for(this._computeInitialHull();void 0!==(t=this._nextVertexToAdd());)this._addVertexToHull(t);return this._reindexFaces(),this._cleanup(),this}}class yx{constructor(){this.normal=new hi,this.midpoint=new hi,this.area=0,this.constant=0,this.outside=null,this.mark=0,this.edge=null}static create(t,e,n){const i=new yx,r=new vx(t,i),s=new vx(e,i),a=new vx(n,i);return r.next=a.prev=s,s.next=r.prev=a,a.next=s.prev=r,i.edge=r,i.compute()}getEdge(t){let e=this.edge;for(;t>0;)e=e.next,t--;for(;t<0;)e=e.prev,t++;return e}compute(){const t=this.edge.tail(),e=this.edge.head(),n=this.edge.next.head();return fx.set(t.point,e.point,n.point),fx.getNormal(this.normal),fx.getMidpoint(this.midpoint),this.area=fx.getArea(),this.constant=this.normal.dot(this.midpoint),this}distanceToPoint(t){return this.normal.dot(t)-this.constant}}class vx{constructor(t,e){this.vertex=t,this.prev=null,this.next=null,this.twin=null,this.face=e}head(){return this.vertex}tail(){return this.prev?this.prev.vertex:null}length(){const t=this.head(),e=this.tail();return null!==e?e.point.distanceTo(t.point):-1}lengthSquared(){const t=this.head(),e=this.tail();return null!==e?e.point.distanceToSquared(t.point):-1}setTwin(t){return this.twin=t,t.twin=this,this}}class xx{constructor(t){this.point=t,this.prev=null,this.next=null,this.face=null}}class Cx{constructor(){this.head=null,this.tail=null}first(){return this.head}last(){return this.tail}clear(){return this.head=this.tail=null,this}insertBefore(t,e){return e.prev=t.prev,e.next=t,null===e.prev?this.head=e:e.prev.next=e,t.prev=e,this}insertAfter(t,e){return e.prev=t,e.next=t.next,null===e.next?this.tail=e:e.next.prev=e,t.next=e,this}append(t){return null===this.head?this.head=t:this.tail.next=t,t.prev=this.tail,t.next=null,this.tail=t,this}appendChain(t){for(null===this.head?this.head=t:this.tail.next=t,t.prev=this.tail;null!==t.next;)t=t.next;return this.tail=t,this}remove(t){return null===t.prev?this.head=t.next:t.prev.next=t.next,null===t.next?this.tail=t.prev:t.next.prev=t.prev,this}removeSubList(t,e){return null===t.prev?this.head=e.next:t.prev.next=e.next,null===e.next?this.tail=t.prev:e.next.prev=t.prev,this}isEmpty(){return null===this.head}}class Ix extends Xs{constructor(t,e={}){super(t),this.isReflector=!0,this.type="Reflector",this.forceUpdate=!1,this.camera=new la;const n=this,i=void 0!==e.color?new ls(e.color):new ls(8355711),r=e.textureWidth||512,s=e.textureHeight||512,a=e.clipBias||0,o=e.shader||Ix.ReflectorShader,l=void 0!==e.multisample?e.multisample:4,c=new go,h=new hi,A=new hi,u=new hi,d=new fr,p=new hi(0,0,-1),g=new Li,f=new hi,m=new hi,y=new Li,v=new fr,x=this.camera,C=new Ni(r,s,{samples:l,type:Ht}),I=new ia({name:void 0!==o.name?o.name:"unspecified",uniforms:na.clone(o.uniforms),fragmentShader:o.fragmentShader,vertexShader:o.vertexShader});I.uniforms.tDiffuse.value=C.texture,I.uniforms.color.value=i,I.uniforms.textureMatrix.value=v,this.material=I,this.onBeforeRender=function(t,e,i){if(A.setFromMatrixPosition(n.matrixWorld),u.setFromMatrixPosition(i.matrixWorld),d.extractRotation(n.matrixWorld),h.set(0,0,1),h.applyMatrix4(d),f.subVectors(A,u),!0==f.dot(h)>0&&!1===this.forceUpdate)return;f.reflect(h).negate(),f.add(A),d.extractRotation(i.matrixWorld),p.set(0,0,-1),p.applyMatrix4(d),p.add(u),m.subVectors(A,p),m.reflect(h).negate(),m.add(A),x.position.copy(f),x.up.set(0,1,0),x.up.applyMatrix4(d),x.up.reflect(h),x.lookAt(m),x.far=i.far,x.updateMatrixWorld(),x.projectionMatrix.copy(i.projectionMatrix),v.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),v.multiply(x.projectionMatrix),v.multiply(x.matrixWorldInverse),v.multiply(n.matrixWorld),c.setFromNormalAndCoplanarPoint(h,A),c.applyMatrix4(x.matrixWorldInverse),g.set(c.normal.x,c.normal.y,c.normal.z,c.constant);const r=x.projectionMatrix;y.x=(Math.sign(g.x)+r.elements[8])/r.elements[0],y.y=(Math.sign(g.y)+r.elements[9])/r.elements[5],y.z=-1,y.w=(1+r.elements[10])/r.elements[14],g.multiplyScalar(2/g.dot(y)),r.elements[2]=g.x,r.elements[6]=g.y,r.elements[10]=g.z+1-a,r.elements[14]=g.w,n.visible=!1;const s=t.getRenderTarget(),o=t.xr.enabled,l=t.shadowMap.autoUpdate;t.xr.enabled=!1,t.shadowMap.autoUpdate=!1,t.setRenderTarget(C),t.state.buffers.depth.setMask(!0),!1===t.autoClear&&t.clear(),t.render(e,x),t.xr.enabled=o,t.shadowMap.autoUpdate=l,t.setRenderTarget(s);const I=i.viewport;void 0!==I&&t.state.viewport(I),n.visible=!0,this.forceUpdate=!1},this.getRenderTarget=function(){return C},this.dispose=function(){C.dispose(),n.material.dispose()}}}Ix.ReflectorShader={name:"ReflectorShader",uniforms:{color:{value:null},tDiffuse:{value:null},textureMatrix:{value:null}},vertexShader:"\n\t\tuniform mat4 textureMatrix;\n\t\tvarying vec4 vUv;\n\n\t\t#include <common>\n\t\t#include <logdepthbuf_pars_vertex>\n\n\t\tvoid main() {\n\n\t\t\tvUv = textureMatrix * vec4( position, 1.0 );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t#include <logdepthbuf_vertex>\n\n\t\t}",fragmentShader:"\n\t\tuniform vec3 color;\n\t\tuniform sampler2D tDiffuse;\n\t\tvarying vec4 vUv;\n\n\t\t#include <logdepthbuf_pars_fragment>\n\n\t\tfloat blendOverlay( float base, float blend ) {\n\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\n\n\t\t}\n\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\n\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#include <logdepthbuf_fragment>\n\n\t\t\tvec4 base = texture2DProj( tDiffuse, vUv );\n\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\n\t\t}"};class Ex extends Rh{constructor(t){super(t),this.type=Ht}parse(t){const e=function(t,e){switch(t){case 1:throw new Error("THREE.HDRLoader: Read Error: "+(e||""));case 2:throw new Error("THREE.HDRLoader: Write Error: "+(e||""));case 3:throw new Error("THREE.HDRLoader: Bad File Format: "+(e||""));default:throw new Error("THREE.HDRLoader: Memory Error: "+(e||""))}},n=function(t,e,n){e=e||1024;let i=t.pos,r=-1,s=0,a="",o=String.fromCharCode.apply(null,new Uint16Array(t.subarray(i,i+128)));for(;0>(r=o.indexOf("\n"))&&s<e&&i<t.byteLength;)a+=o,s+=o.length,i+=128,o+=String.fromCharCode.apply(null,new Uint16Array(t.subarray(i,i+128)));return-1<r&&(!1!==n&&(t.pos+=s+r+1),a+o.slice(0,r))},i=function(t,e,n,i){const r=t[e+3],s=Math.pow(2,r-128)/255;n[i+0]=t[e+0]*s,n[i+1]=t[e+1]*s,n[i+2]=t[e+2]*s,n[i+3]=1},r=function(t,e,n,i){const r=t[e+3],s=Math.pow(2,r-128)/255;n[i+0]=ms.toHalfFloat(Math.min(t[e+0]*s,65504)),n[i+1]=ms.toHalfFloat(Math.min(t[e+1]*s,65504)),n[i+2]=ms.toHalfFloat(Math.min(t[e+2]*s,65504)),n[i+3]=ms.toHalfFloat(1)},s=new Uint8Array(t);s.pos=0;const a=function(t){const i=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,r=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,s=/^\s*FORMAT=(\S+)\s*$/,a=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,o={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let l,c;for((t.pos>=t.byteLength||!(l=n(t)))&&e(1,"no header found"),(c=l.match(/^#\?(\S+)/))||e(3,"bad initial token"),o.valid|=1,o.programtype=c[1],o.string+=l+"\n";l=n(t),!1!==l;)if(o.string+=l+"\n","#"!==l.charAt(0)){if((c=l.match(i))&&(o.gamma=parseFloat(c[1])),(c=l.match(r))&&(o.exposure=parseFloat(c[1])),(c=l.match(s))&&(o.valid|=2,o.format=c[1]),(c=l.match(a))&&(o.valid|=4,o.height=parseInt(c[1],10),o.width=parseInt(c[2],10)),2&o.valid&&4&o.valid)break}else o.comments+=l+"\n";return 2&o.valid||e(3,"missing format specifier"),4&o.valid||e(3,"missing image size specifier"),o}(s),o=a.width,l=a.height,c=function(t,n,i){const r=n;if(r<8||r>32767||2!==t[0]||2!==t[1]||128&t[2])return new Uint8Array(t);r!==(t[2]<<8|t[3])&&e(3,"wrong scanline width");const s=new Uint8Array(4*n*i);s.length||e(4,"unable to allocate buffer space");let a=0,o=0;const l=4*r,c=new Uint8Array(4),h=new Uint8Array(l);let A=i;for(;A>0&&o<t.byteLength;){o+4>t.byteLength&&e(1),c[0]=t[o++],c[1]=t[o++],c[2]=t[o++],c[3]=t[o++],2==c[0]&&2==c[1]&&(c[2]<<8|c[3])==r||e(3,"bad rgbe scanline format");let n,i=0;for(;i<l&&o<t.byteLength;){n=t[o++];const r=n>128;if(r&&(n-=128),(0===n||i+n>l)&&e(3,"bad scanline data"),r){const e=t[o++];for(let t=0;t<n;t++)h[i++]=e}else h.set(t.subarray(o,o+n),i),i+=n,o+=n}const u=r;for(let t=0;t<u;t++){let e=0;s[a]=h[t+e],e+=r,s[a+1]=h[t+e],e+=r,s[a+2]=h[t+e],e+=r,s[a+3]=h[t+e],a+=4}A--}return s}(s.subarray(s.pos),o,l);let h,A,u;switch(this.type){case Gt:u=c.length/4;const t=new Float32Array(4*u);for(let e=0;e<u;e++)i(c,4*e,t,4*e);h=t,A=Gt;break;case Ht:u=c.length/4;const e=new Uint16Array(4*u);for(let t=0;t<u;t++)r(c,4*t,e,4*t);h=e,A=Ht;break;default:throw new Error("THREE.HDRLoader: Unsupported type: "+this.type)}return{width:o,height:l,data:h,header:a.string,gamma:a.gamma,exposure:a.exposure,type:A}}setDataType(t){return this.type=t,this}load(t,e,n,i){return super.load(t,function(t,n){switch(t.type){case Gt:case Ht:t.colorSpace=on,t.minFilter=Qt,t.magFilter=Qt,t.generateMipmaps=!1,t.flipY=!0}e&&e(t,n)},n,i)}}function wx(t,e){switch(e){case an:t.convertSRGBToLinear();break;case on:case sn:break;default:console.warn("WARNING: LightProbeGenerator convertColorToLinear() encountered an unsupported color space.")}return t}class _x{constructor(t,e,n,i,r){this.xrLight=t,this.renderer=e,this.lightProbe=n,this.xrWebGLBinding=null,this.estimationStartCallback=r,this.frameCallback=this.onXRFrame.bind(this);const s=e.xr.getSession();if(i&&"XRWebGLBinding"in window){const n=new ua(16);t.environment=n.texture;const i=e.getContext();switch(s.preferredReflectionFormat){case"srgba8":i.getExtension("EXT_sRGB");break;case"rgba16f":i.getExtension("OES_texture_half_float")}this.xrWebGLBinding=new XRWebGLBinding(s,i),this.lightProbe.addEventListener("reflectionchange",()=>{this.updateReflection()})}s.requestAnimationFrame(this.frameCallback)}updateReflection(){const t=this.renderer.properties.get(this.xrLight.environment);if(t){const e=this.xrWebGLBinding.getReflectionCubeMap(this.lightProbe);e&&(t.__webglTexture=e,this.xrLight.environment.needsPMREMUpdate=!0)}}onXRFrame(t,e){if(!this.xrLight)return;e.session.requestAnimationFrame(this.frameCallback);const n=e.getLightEstimate(this.lightProbe);if(n){this.xrLight.lightProbe.sh.fromArray(n.sphericalHarmonicsCoefficients),this.xrLight.lightProbe.intensity=1;const t=Math.max(1,Math.max(n.primaryLightIntensity.x,Math.max(n.primaryLightIntensity.y,n.primaryLightIntensity.z)));this.xrLight.directionalLight.color.setRGB(n.primaryLightIntensity.x/t,n.primaryLightIntensity.y/t,n.primaryLightIntensity.z/t),this.xrLight.directionalLight.intensity=t,this.xrLight.directionalLight.position.copy(n.primaryLightDirection),this.estimationStartCallback&&(this.estimationStartCallback(),this.estimationStartCallback=null)}}dispose(){this.xrLight=null,this.renderer=null,this.lightProbe=null,this.xrWebGLBinding=null}}const bx={Handedness:Object.freeze({NONE:"none",LEFT:"left",RIGHT:"right"}),ComponentState:Object.freeze({DEFAULT:"default",TOUCHED:"touched",PRESSED:"pressed"}),ComponentProperty:Object.freeze({BUTTON:"button",X_AXIS:"xAxis",Y_AXIS:"yAxis",STATE:"state"}),ComponentType:Object.freeze({TRIGGER:"trigger",SQUEEZE:"squeeze",TOUCHPAD:"touchpad",THUMBSTICK:"thumbstick",BUTTON:"button"}),ButtonTouchThreshold:.05,AxisTouchThreshold:.1,VisualResponseProperty:Object.freeze({TRANSFORM:"transform",VISIBILITY:"visibility"})};async function Bx(t){const e=await fetch(t);if(e.ok)return e.json();throw new Error(e.statusText)}const Sx={xAxis:0,yAxis:0,button:0,state:bx.ComponentState.DEFAULT};class Mx{constructor(t){this.componentProperty=t.componentProperty,this.states=t.states,this.valueNodeName=t.valueNodeName,this.valueNodeProperty=t.valueNodeProperty,this.valueNodeProperty===bx.VisualResponseProperty.TRANSFORM&&(this.minNodeName=t.minNodeName,this.maxNodeName=t.maxNodeName),this.value=0,this.updateFromComponent(Sx)}updateFromComponent({xAxis:t,yAxis:e,button:n,state:i}){const{normalizedXAxis:r,normalizedYAxis:s}=function(t=0,e=0){let n=t,i=e;if(Math.sqrt(t*t+e*e)>1){const r=Math.atan2(e,t);n=Math.cos(r),i=Math.sin(r)}return{normalizedXAxis:.5*n+.5,normalizedYAxis:.5*i+.5}}(t,e);switch(this.componentProperty){case bx.ComponentProperty.X_AXIS:this.value=this.states.includes(i)?r:.5;break;case bx.ComponentProperty.Y_AXIS:this.value=this.states.includes(i)?s:.5;break;case bx.ComponentProperty.BUTTON:this.value=this.states.includes(i)?n:0;break;case bx.ComponentProperty.STATE:this.valueNodeProperty===bx.VisualResponseProperty.VISIBILITY?this.value=this.states.includes(i):this.value=this.states.includes(i)?1:0;break;default:throw new Error(`Unexpected visualResponse componentProperty ${this.componentProperty}`)}}}class Tx{constructor(t,e){if(!(t&&e&&e.visualResponses&&e.gamepadIndices&&0!==Object.keys(e.gamepadIndices).length))throw new Error("Invalid arguments supplied");this.id=t,this.type=e.type,this.rootNodeName=e.rootNodeName,this.touchPointNodeName=e.touchPointNodeName,this.visualResponses={},Object.keys(e.visualResponses).forEach(t=>{const n=new Mx(e.visualResponses[t]);this.visualResponses[t]=n}),this.gamepadIndices=Object.assign({},e.gamepadIndices),this.values={state:bx.ComponentState.DEFAULT,button:void 0!==this.gamepadIndices.button?0:void 0,xAxis:void 0!==this.gamepadIndices.xAxis?0:void 0,yAxis:void 0!==this.gamepadIndices.yAxis?0:void 0}}get data(){return{id:this.id,...this.values}}updateFromGamepad(t){if(this.values.state=bx.ComponentState.DEFAULT,void 0!==this.gamepadIndices.button&&t.buttons.length>this.gamepadIndices.button){const e=t.buttons[this.gamepadIndices.button];this.values.button=e.value,this.values.button=this.values.button<0?0:this.values.button,this.values.button=this.values.button>1?1:this.values.button,e.pressed||1===this.values.button?this.values.state=bx.ComponentState.PRESSED:(e.touched||this.values.button>bx.ButtonTouchThreshold)&&(this.values.state=bx.ComponentState.TOUCHED)}void 0!==this.gamepadIndices.xAxis&&t.axes.length>this.gamepadIndices.xAxis&&(this.values.xAxis=t.axes[this.gamepadIndices.xAxis],this.values.xAxis=this.values.xAxis<-1?-1:this.values.xAxis,this.values.xAxis=this.values.xAxis>1?1:this.values.xAxis,this.values.state===bx.ComponentState.DEFAULT&&Math.abs(this.values.xAxis)>bx.AxisTouchThreshold&&(this.values.state=bx.ComponentState.TOUCHED)),void 0!==this.gamepadIndices.yAxis&&t.axes.length>this.gamepadIndices.yAxis&&(this.values.yAxis=t.axes[this.gamepadIndices.yAxis],this.values.yAxis=this.values.yAxis<-1?-1:this.values.yAxis,this.values.yAxis=this.values.yAxis>1?1:this.values.yAxis,this.values.state===bx.ComponentState.DEFAULT&&Math.abs(this.values.yAxis)>bx.AxisTouchThreshold&&(this.values.state=bx.ComponentState.TOUCHED)),Object.values(this.visualResponses).forEach(t=>{t.updateFromComponent(this.values)})}}class Qx{constructor(t,e,n){if(!t)throw new Error("No xrInputSource supplied");if(!e)throw new Error("No profile supplied");this.xrInputSource=t,this.assetUrl=n,this.id=e.profileId,this.layoutDescription=e.layouts[t.handedness],this.components={},Object.keys(this.layoutDescription.components).forEach(t=>{const e=this.layoutDescription.components[t];this.components[t]=new Tx(t,e)}),this.updateFromGamepad()}get gripSpace(){return this.xrInputSource.gripSpace}get targetRaySpace(){return this.xrInputSource.targetRaySpace}get data(){const t=[];return Object.values(this.components).forEach(e=>{t.push(e.data)}),t}updateFromGamepad(){Object.values(this.components).forEach(t=>{t.updateFromGamepad(this.xrInputSource.gamepad)})}}class Dx extends Hr{constructor(){super(),this.motionController=null,this.envMap=null}setEnvironmentMap(t){return this.envMap==t||(this.envMap=t,this.traverse(t=>{t.isMesh&&(t.material.envMap=this.envMap,t.material.needsUpdate=!0)})),this}updateMatrixWorld(t){super.updateMatrixWorld(t),this.motionController&&(this.motionController.updateFromGamepad(),Object.values(this.motionController.components).forEach(t=>{Object.values(t.visualResponses).forEach(t=>{const{valueNode:e,minNode:n,maxNode:i,value:r,valueNodeProperty:s}=t;e&&(s===bx.VisualResponseProperty.VISIBILITY?e.visible=r:s===bx.VisualResponseProperty.TRANSFORM&&(e.quaternion.slerpQuaternions(n.quaternion,i.quaternion,r),e.position.lerpVectors(n.position,i.position,r)))})}))}}function Rx(t,e){!function(t,e){Object.values(t.components).forEach(t=>{const{type:n,touchPointNodeName:i,visualResponses:r}=t;if(n===bx.ComponentType.TOUCHPAD)if(t.touchPointNode=e.getObjectByName(i),t.touchPointNode){const e=new Pc(.001),n=new us({color:255}),i=new Xs(e,n);t.touchPointNode.add(i)}else console.warn(`Could not find touch dot, ${t.touchPointNodeName}, in touchpad component ${t.id}`);Object.values(r).forEach(t=>{const{valueNodeName:n,minNodeName:i,maxNodeName:r,valueNodeProperty:s}=t;if(s===bx.VisualResponseProperty.TRANSFORM){if(t.minNode=e.getObjectByName(i),t.maxNode=e.getObjectByName(r),!t.minNode)return void console.warn(`Could not find ${i} in the model`);if(!t.maxNode)return void console.warn(`Could not find ${r} in the model`)}t.valueNode=e.getObjectByName(n),t.valueNode||console.warn(`Could not find ${n} in the model`)})})}(t.motionController,e),t.envMap&&e.traverse(e=>{e.isMesh&&(e.material.envMap=t.envMap,e.material.needsUpdate=!0)}),t.add(e)}const Ux=new fr,Px=new hi;class Lx{constructor(t,e,n,i,r){let s;this.controller=e,this.handModel=t,this.envMap=null,r&&r.primitive&&"sphere"!==r.primitive?"box"===r.primitive&&(s=new Zs(1,1,1)):s=new Pc(1,10,10);const a=new qc;this.handMesh=new ho(s,a,30),this.handMesh.frustumCulled=!1,this.handMesh.instanceMatrix.setUsage(Pn),this.handMesh.castShadow=!0,this.handMesh.receiveShadow=!0,this.handModel.add(this.handMesh),this.joints=["wrist","thumb-metacarpal","thumb-phalanx-proximal","thumb-phalanx-distal","thumb-tip","index-finger-metacarpal","index-finger-phalanx-proximal","index-finger-phalanx-intermediate","index-finger-phalanx-distal","index-finger-tip","middle-finger-metacarpal","middle-finger-phalanx-proximal","middle-finger-phalanx-intermediate","middle-finger-phalanx-distal","middle-finger-tip","ring-finger-metacarpal","ring-finger-phalanx-proximal","ring-finger-phalanx-intermediate","ring-finger-phalanx-distal","ring-finger-tip","pinky-finger-metacarpal","pinky-finger-phalanx-proximal","pinky-finger-phalanx-intermediate","pinky-finger-phalanx-distal","pinky-finger-tip"]}updateMesh(){const t=this.controller.joints;let e=0;for(let n=0;n<this.joints.length;n++){const i=t[this.joints[n]];i.visible&&(Px.setScalar(i.jointRadius||.008),Ux.compose(i.position,i.quaternion,Px),this.handMesh.setMatrixAt(n,Ux),e++)}this.handMesh.count=e,this.handMesh.instanceMatrix.needsUpdate=!0}}class Fx{constructor(t,e,n,i,r=null,s=null){this.controller=e,this.handModel=t,this.bones=[],null===r&&(r=new $f).setPath(n||"https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles/generic-hand/"),r.load(`${i}.glb`,t=>{const e=t.scene.children[0];this.handModel.add(e);const n=e.getObjectByProperty("type","SkinnedMesh");n.frustumCulled=!1,n.castShadow=!0,n.receiveShadow=!0,["wrist","thumb-metacarpal","thumb-phalanx-proximal","thumb-phalanx-distal","thumb-tip","index-finger-metacarpal","index-finger-phalanx-proximal","index-finger-phalanx-intermediate","index-finger-phalanx-distal","index-finger-tip","middle-finger-metacarpal","middle-finger-phalanx-proximal","middle-finger-phalanx-intermediate","middle-finger-phalanx-distal","middle-finger-tip","ring-finger-metacarpal","ring-finger-phalanx-proximal","ring-finger-phalanx-intermediate","ring-finger-phalanx-distal","ring-finger-tip","pinky-finger-metacarpal","pinky-finger-phalanx-proximal","pinky-finger-phalanx-intermediate","pinky-finger-phalanx-distal","pinky-finger-tip"].forEach(t=>{const n=e.getObjectByName(t);void 0!==n?n.jointName=t:console.warn(`Couldn't find ${t} in ${i} hand mesh`),this.bones.push(n)}),s&&s(e)})}updateMesh(){const t=this.controller.joints;for(let e=0;e<this.bones.length;e++){const n=this.bones[e];if(n){const e=t[n.jointName];if(e.visible){const t=e.position;n.position.copy(t),n.quaternion.copy(e.quaternion)}}}}}class Nx extends Hr{constructor(t){super(),this.controller=t,this.motionController=null,this.envMap=null,this.mesh=null}updateMatrixWorld(t){super.updateMatrixWorld(t),this.motionController&&this.motionController.updateMesh()}}class kx{constructor(t=4){this.pool=t,this.queue=[],this.workers=[],this.workersResolve=[],this.workerStatus=0,this.workerCreator=null}_initWorker(t){if(!this.workers[t]){const e=this.workerCreator();e.addEventListener("message",this._onMessage.bind(this,t)),this.workers[t]=e}}_getIdleWorker(){for(let t=0;t<this.pool;t++)if(!(this.workerStatus&1<<t))return t;return-1}_onMessage(t,e){const n=this.workersResolve[t];if(n&&n(e),this.queue.length){const{resolve:e,msg:n,transfer:i}=this.queue.shift();this.workersResolve[t]=e,this.workers[t].postMessage(n,i)}else this.workerStatus^=1<<t}setWorkerCreator(t){this.workerCreator=t}setWorkerLimit(t){this.pool=t}postMessage(t,e){return new Promise(n=>{const i=this._getIdleWorker();-1!==i?(this._initWorker(i),this.workerStatus|=1<<i,this.workersResolve[i]=n,this.workers[i].postMessage(t,e)):this.queue.push({resolve:n,msg:t,transfer:e})})}dispose(){this.workers.forEach(t=>t.terminate()),this.workersResolve.length=0,this.workers.length=0,this.queue.length=0,this.workerStatus=0}}const Ox=9,zx=15,Gx=16,Hx=22,Vx=37,qx=43,Yx=76,Wx=83,Jx=97,jx=100,Xx=103,Kx=109,Zx=122,$x=123,tC=131,eC=132,nC=133,iC=134,rC=137,sC=138,aC=139,oC=140,lC=141,cC=142,hC=145,AC=146,uC=148,dC=152,pC=157,gC=158,fC=165,mC=166,yC=1000054e3,vC=1000054001,xC=1000054004,CC=1000054005,IC=1000066e3,EC=1000066004;class wC{constructor(t,e,n,i){this._dataView=void 0,this._littleEndian=void 0,this._offset=void 0,this._dataView=new DataView(t.buffer,t.byteOffset+e,n),this._littleEndian=i,this._offset=0}_nextUint8(){const t=this._dataView.getUint8(this._offset);return this._offset+=1,t}_nextUint16(){const t=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,t}_nextUint32(){const t=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,t}_nextUint64(){const t=this._dataView.getUint32(this._offset,this._littleEndian)+2**32*this._dataView.getUint32(this._offset+4,this._littleEndian);return this._offset+=8,t}_nextInt32(){const t=this._dataView.getInt32(this._offset,this._littleEndian);return this._offset+=4,t}_nextUint8Array(t){const e=new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+this._offset,t);return this._offset+=t,e}_skip(t){return this._offset+=t,this}_scan(t,e=0){const n=this._offset;let i=0;for(;this._dataView.getUint8(this._offset)!==e&&i<t;)i++,this._offset++;return i<t&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+n,i)}}new Uint8Array([0]);const _C=[171,75,84,88,32,50,48,187,13,10,26,10];function bC(t){return(new TextDecoder).decode(t)}let BC,SC,MC;const TC={env:{emscripten_notify_memory_growth:function(t){MC=new Uint8Array(SC.exports.memory.buffer)}}};class QC{init(){return BC||(BC="undefined"!=typeof fetch?fetch("data:application/wasm;base64,"+DC).then(t=>t.arrayBuffer()).then(t=>WebAssembly.instantiate(t,TC)).then(this._init):WebAssembly.instantiate(Buffer.from(DC,"base64"),TC).then(this._init),BC)}_init(t){SC=t.instance,TC.env.emscripten_notify_memory_growth(0)}decode(t,e=0){if(!SC)throw new Error("ZSTDDecoder: Await .init() before decoding.");const n=t.byteLength,i=SC.exports.malloc(n);MC.set(t,i),e=e||Number(SC.exports.ZSTD_findDecompressedSize(i,n));const r=SC.exports.malloc(e),s=SC.exports.ZSTD_decompress(r,e,i,n),a=MC.slice(r,r+s);return SC.exports.free(i),SC.exports.free(r),a}}const DC="",RC=(_i.spaces[an],new WeakMap);let UC,PC=0;class LC extends wh{constructor(t){super(t),this.transcoderPath="",this.transcoderBinary=null,this.transcoderPending=null,this.workerPool=new kx,this.workerSourceURL="",this.workerConfig=null,"undefined"!=typeof MSC_TRANSCODER&&console.warn('THREE.KTX2Loader: Please update to latest "basis_transcoder". "msc_basis_transcoder" is no longer supported in three.js r125+.')}setTranscoderPath(t){return this.transcoderPath=t,this}setWorkerLimit(t){return this.workerPool.setWorkerLimit(t),this}async detectSupportAsync(t){return this.workerConfig={astcSupported:await t.hasFeatureAsync("texture-compression-astc"),astcHDRSupported:!1,etc1Supported:await t.hasFeatureAsync("texture-compression-etc2"),etc2Supported:await t.hasFeatureAsync("texture-compression-etc2"),dxtSupported:await t.hasFeatureAsync("texture-compression-bc"),bptcSupported:await t.hasFeatureAsync("texture-compression-bc"),pvrtcSupported:await t.hasFeatureAsync("texture-compression-pvrtc")},this}detectSupport(t){return!0===t.isWebGPURenderer?this.workerConfig={astcSupported:t.hasFeature("texture-compression-astc"),astcHDRSupported:!1,etc1Supported:t.hasFeature("texture-compression-etc2"),etc2Supported:t.hasFeature("texture-compression-etc2"),dxtSupported:t.hasFeature("texture-compression-bc"),bptcSupported:t.hasFeature("texture-compression-bc"),pvrtcSupported:t.hasFeature("texture-compression-pvrtc")}:this.workerConfig={astcSupported:t.extensions.has("WEBGL_compressed_texture_astc"),astcHDRSupported:t.extensions.has("WEBGL_compressed_texture_astc")&&t.extensions.get("WEBGL_compressed_texture_astc").getSupportedProfiles().includes("hdr"),etc1Supported:t.extensions.has("WEBGL_compressed_texture_etc1"),etc2Supported:t.extensions.has("WEBGL_compressed_texture_etc"),dxtSupported:t.extensions.has("WEBGL_compressed_texture_s3tc"),bptcSupported:t.extensions.has("EXT_texture_compression_bptc"),pvrtcSupported:t.extensions.has("WEBGL_compressed_texture_pvrtc")||t.extensions.has("WEBKIT_WEBGL_compressed_texture_pvrtc")},this}init(){if(!this.transcoderPending){const t=new Bh(this.manager);t.setPath(this.transcoderPath),t.setWithCredentials(this.withCredentials);const e=t.loadAsync("basis_transcoder.js"),n=new Bh(this.manager);n.setPath(this.transcoderPath),n.setResponseType("arraybuffer"),n.setWithCredentials(this.withCredentials);const i=n.loadAsync("basis_transcoder.wasm");this.transcoderPending=Promise.all([e,i]).then(([t,e])=>{const n=LC.BasisWorker.toString(),i=["/* constants */","let _EngineFormat = "+JSON.stringify(LC.EngineFormat),"let _EngineType = "+JSON.stringify(LC.EngineType),"let _TranscoderFormat = "+JSON.stringify(LC.TranscoderFormat),"let _BasisFormat = "+JSON.stringify(LC.BasisFormat),"/* basis_transcoder.js */",t,"/* worker */",n.substring(n.indexOf("{")+1,n.lastIndexOf("}"))].join("\n");this.workerSourceURL=URL.createObjectURL(new Blob([i])),this.transcoderBinary=e,this.workerPool.setWorkerCreator(()=>{const t=new Worker(this.workerSourceURL),e=this.transcoderBinary.slice(0);return t.postMessage({type:"init",config:this.workerConfig,transcoderBinary:e},[e]),t})}),PC>0&&console.warn("THREE.KTX2Loader: Multiple active KTX2 loaders may cause performance issues. Use a single KTX2Loader instance, or call .dispose() on old instances."),PC++}return this.transcoderPending}load(t,e,n,i){if(null===this.workerConfig)throw new Error("THREE.KTX2Loader: Missing initialization with `.detectSupport( renderer )`.");const r=new Bh(this.manager);r.setPath(this.path),r.setCrossOrigin(this.crossOrigin),r.setWithCredentials(this.withCredentials),r.setResponseType("arraybuffer"),r.load(t,t=>{this.parse(t,e,i)},n,i)}parse(t,e,n){if(null===this.workerConfig)throw new Error("THREE.KTX2Loader: Missing initialization with `.detectSupport( renderer )`.");if(RC.has(t))return RC.get(t).promise.then(e).catch(n);this._createTexture(t).then(t=>e?e(t):null).catch(n)}_createTextureFrom(t,e){const{type:n,error:i,data:{faces:r,width:s,height:a,format:o,type:l,dfdFlags:c}}=t;if("error"===n)return Promise.reject(i);let h;if(6===e.faceCount)h=new pl(r,o,l);else{const t=r[0].mipmaps;h=e.layerCount>1?new dl(t,s,a,e.layerCount,o,l):new ul(t,s,a,o,l)}return h.minFilter=1===r[0].mipmaps.length?Qt:Ut,h.magFilter=Qt,h.generateMipmaps=!1,h.needsUpdate=!0,h.colorSpace=OC(e),h.premultiplyAlpha=!!(1&c),h}async _createTexture(t,e={}){const n=function(t){const e=new Uint8Array(t.buffer,t.byteOffset,_C.length);if(e[0]!==_C[0]||e[1]!==_C[1]||e[2]!==_C[2]||e[3]!==_C[3]||e[4]!==_C[4]||e[5]!==_C[5]||e[6]!==_C[6]||e[7]!==_C[7]||e[8]!==_C[8]||e[9]!==_C[9]||e[10]!==_C[10]||e[11]!==_C[11])throw new Error("Missing KTX 2.0 identifier.");const n={vkFormat:0,typeSize:1,pixelWidth:0,pixelHeight:0,pixelDepth:0,layerCount:0,faceCount:1,levelCount:0,supercompressionScheme:0,levels:[],dataFormatDescriptor:[{vendorId:0,descriptorType:0,versionNumber:2,colorModel:0,colorPrimaries:1,transferFunction:2,flags:0,texelBlockDimension:[0,0,0,0],bytesPlane:[0,0,0,0,0,0,0,0],samples:[]}],keyValue:{},globalData:null},i=17*Uint32Array.BYTES_PER_ELEMENT,r=new wC(t,_C.length,i,!0);n.vkFormat=r._nextUint32(),n.typeSize=r._nextUint32(),n.pixelWidth=r._nextUint32(),n.pixelHeight=r._nextUint32(),n.pixelDepth=r._nextUint32(),n.layerCount=r._nextUint32(),n.faceCount=r._nextUint32(),n.levelCount=r._nextUint32(),n.supercompressionScheme=r._nextUint32();const s=r._nextUint32(),a=r._nextUint32(),o=r._nextUint32(),l=r._nextUint32(),c=r._nextUint64(),h=r._nextUint64(),A=3*Math.max(n.levelCount,1)*8,u=new wC(t,_C.length+i,A,!0);for(let e=0,i=Math.max(n.levelCount,1);e<i;e++)n.levels.push({levelData:new Uint8Array(t.buffer,t.byteOffset+u._nextUint64(),u._nextUint64()),uncompressedByteLength:u._nextUint64()});const d=new wC(t,s,a,!0);d._skip(4);const p=d._nextUint16(),g=d._nextUint16(),f=d._nextUint16(),m=d._nextUint16(),y={vendorId:p,descriptorType:g,versionNumber:f,colorModel:d._nextUint8(),colorPrimaries:d._nextUint8(),transferFunction:d._nextUint8(),flags:d._nextUint8(),texelBlockDimension:[d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8()],bytesPlane:[d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8()],samples:[]},v=(m/4-6)/4;for(let t=0;t<v;t++){const e={bitOffset:d._nextUint16(),bitLength:d._nextUint8(),channelType:d._nextUint8(),samplePosition:[d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8()],sampleLower:Number.NEGATIVE_INFINITY,sampleUpper:Number.POSITIVE_INFINITY};64&e.channelType?(e.sampleLower=d._nextInt32(),e.sampleUpper=d._nextInt32()):(e.sampleLower=d._nextUint32(),e.sampleUpper=d._nextUint32()),y.samples[t]=e}n.dataFormatDescriptor.length=0,n.dataFormatDescriptor.push(y);const x=new wC(t,o,l,!0);for(;x._offset<l;){const t=x._nextUint32(),e=x._scan(t),i=bC(e);if(n.keyValue[i]=x._nextUint8Array(t-e.byteLength-1),i.match(/^ktx/i)){const t=bC(n.keyValue[i]);n.keyValue[i]=t.substring(0,t.lastIndexOf("\0"))}x._skip(t%4?4-t%4:0)}if(h<=0)return n;const C=new wC(t,c,h,!0),I=C._nextUint16(),E=C._nextUint16(),w=C._nextUint32(),_=C._nextUint32(),b=C._nextUint32(),B=C._nextUint32(),S=[];for(let t=0,e=Math.max(n.levelCount,1);t<e;t++)S.push({imageFlags:C._nextUint32(),rgbSliceByteOffset:C._nextUint32(),rgbSliceByteLength:C._nextUint32(),alphaSliceByteOffset:C._nextUint32(),alphaSliceByteLength:C._nextUint32()});const M=c+C._offset,T=M+w,Q=T+_,D=Q+b,R=new Uint8Array(t.buffer,t.byteOffset+M,w),U=new Uint8Array(t.buffer,t.byteOffset+T,_),P=new Uint8Array(t.buffer,t.byteOffset+Q,b),L=new Uint8Array(t.buffer,t.byteOffset+D,B);return n.globalData={endpointCount:I,selectorCount:E,imageDescs:S,endpointsData:R,selectorsData:U,tablesData:P,extendedData:L},n}(new Uint8Array(t)),i=n.vkFormat===IC&&167===n.dataFormatDescriptor[0].colorModel;if(0!==n.vkFormat&&(!i||this.workerConfig.astcHDRSupported))return async function(t){const{vkFormat:e}=t;if(void 0===NC[e])throw new Error("THREE.KTX2Loader: Unsupported vkFormat: "+e);let n;void 0===kC[e]&&console.warn('THREE.KTX2Loader: Missing ".type" for vkFormat: '+e),2===t.supercompressionScheme&&(UC||(UC=new Promise(async t=>{const e=new QC;await e.init(),t(e)})),n=await UC);const i=[];for(let r=0;r<t.levels.length;r++){const s=Math.max(1,t.pixelWidth>>r),a=Math.max(1,t.pixelHeight>>r),o=t.pixelDepth?Math.max(1,t.pixelDepth>>r):0,l=t.levels[r];let c,h;if(0===t.supercompressionScheme)c=l.levelData;else{if(2!==t.supercompressionScheme)throw new Error("THREE.KTX2Loader: Unsupported supercompressionScheme.");c=n.decode(l.levelData,l.uncompressedByteLength)}h=kC[e]===Gt?new Float32Array(c.buffer,c.byteOffset,c.byteLength/Float32Array.BYTES_PER_ELEMENT):kC[e]===Ht?new Uint16Array(c.buffer,c.byteOffset,c.byteLength/Uint16Array.BYTES_PER_ELEMENT):kC[e]===Wt||kC[e]===Jt?new Uint32Array(c.buffer,c.byteOffset,c.byteLength/Uint32Array.BYTES_PER_ELEMENT):c,i.push({data:h,width:s,height:a,depth:o})}const r=0===t.levelCount||i.length>1;let s;if(FC.has(NC[e]))s=0===t.pixelDepth?new Za(i[0].data,t.pixelWidth,t.pixelHeight):new zi(i[0].data,t.pixelWidth,t.pixelHeight,t.pixelDepth),s.minFilter=r?Bt:bt,s.magFilter=bt,s.generateMipmaps=0===t.levelCount;else{if(t.pixelDepth>0)throw new Error("THREE.KTX2Loader: Unsupported pixelDepth.");s=new ul(i,t.pixelWidth,t.pixelHeight),s.minFilter=r?Ut:Qt,s.magFilter=Qt}return s.mipmaps=i,s.type=kC[e],s.format=NC[e],s.colorSpace=OC(t),s.needsUpdate=!0,Promise.resolve(s)}(n);const r=e,s=this.init().then(()=>this.workerPool.postMessage({type:"transcode",buffer:t,taskConfig:r},[t])).then(t=>this._createTextureFrom(t.data,n));return RC.set(t,{promise:s}),s}dispose(){this.workerPool.dispose(),this.workerSourceURL&&URL.revokeObjectURL(this.workerSourceURL),PC--}}LC.BasisFormat={ETC1S:0,UASTC:1,UASTC_HDR:2},LC.TranscoderFormat={ETC1:0,ETC2:1,BC1:2,BC3:3,BC4:4,BC5:5,BC7_M6_OPAQUE_ONLY:6,BC7_M5:7,PVRTC1_4_RGB:8,PVRTC1_4_RGBA:9,ASTC_4x4:10,ATC_RGB:11,ATC_RGBA_INTERPOLATED_ALPHA:12,RGBA32:13,RGB565:14,BGR565:15,RGBA4444:16,BC6H:22,RGB_HALF:24,RGBA_HALF:25},LC.EngineFormat={RGBAFormat:Kt,RGBA_ASTC_4x4_Format:me,RGB_BPTC_UNSIGNED_Format:Re,RGBA_BPTC_Format:Qe,RGBA_ETC2_EAC_Format:fe,RGBA_PVRTC_4BPPV1_Format:ue,RGBA_S3TC_DXT5_Format:ce,RGB_ETC1_Format:pe,RGB_ETC2_Format:ge,RGB_PVRTC_4BPPV1_Format:he,RGBA_S3TC_DXT1_Format:oe},LC.EngineType={UnsignedByteType:Lt,HalfFloatType:Ht,FloatType:Gt},LC.BasisWorker=function(){let t,e,n;const i=_EngineFormat,r=_EngineType,s=_TranscoderFormat,a=_BasisFormat;self.addEventListener("message",function(i){const s=i.data;switch(s.type){case"init":t=s.config,o=s.transcoderBinary,e=new Promise(t=>{n={wasmBinary:o,onRuntimeInitialized:t},BASIS(n)}).then(()=>{n.initializeBasis(),void 0===n.KTX2File&&console.warn("THREE.KTX2Loader: Please update Basis Universal transcoder.")});break;case"transcode":e.then(()=>{try{const{faces:e,buffers:i,width:o,height:A,hasAlpha:u,format:d,type:p,dfdFlags:g}=function(e){const i=new n.KTX2File(new Uint8Array(e));function s(){i.close(),i.delete()}if(!i.isValid())throw s(),new Error("THREE.KTX2Loader:\tInvalid or unsupported .ktx2 file");let o;if(i.isUASTC())o=a.UASTC;else if(i.isETC1S())o=a.ETC1S;else{if(!i.isHDR())throw new Error("THREE.KTX2Loader: Unknown Basis encoding");o=a.UASTC_HDR}const A=i.getWidth(),u=i.getHeight(),d=i.getLayers()||1,p=i.getLevels(),g=i.getFaces(),f=i.getHasAlpha(),m=i.getDFDFlags(),{transcoderFormat:y,engineFormat:v,engineType:x}=function(e,n,i,r){const s=l[e];for(let a=0;a<s.length;a++){const o=s[a];if((!o.if||t[o.if])&&(o.basisFormat.includes(e)&&!(r&&o.transcoderFormat.length<2)&&(!o.needsPowerOfTwo||c(n)&&c(i))))return{transcoderFormat:o.transcoderFormat[r?1:0],engineFormat:o.engineFormat[r?1:0],engineType:o.engineType[0]}}throw new Error("THREE.KTX2Loader: Failed to identify transcoding target.")}(o,A,u,f);if(!A||!u||!p)throw s(),new Error("THREE.KTX2Loader:\tInvalid texture");if(!i.startTranscoding())throw s(),new Error("THREE.KTX2Loader: .startTranscoding failed");const C=[],I=[];for(let t=0;t<g;t++){const e=[];for(let n=0;n<p;n++){const a=[];let o,l;for(let e=0;e<d;e++){const c=i.getImageLevelInfo(n,e,t);0!==t||0!==n||0!==e||c.origWidth%4==0&&c.origHeight%4==0||console.warn("THREE.KTX2Loader: ETC1S and UASTC textures should use multiple-of-four dimensions."),p>1?(o=c.origWidth,l=c.origHeight):(o=c.width,l=c.height);let h=new Uint8Array(i.getImageTranscodedSizeInBytes(n,e,0,y));const A=i.transcodeImage(h,n,e,t,y,0,-1,-1);if(x===r.HalfFloatType&&(h=new Uint16Array(h.buffer,h.byteOffset,h.byteLength/Uint16Array.BYTES_PER_ELEMENT)),!A)throw s(),new Error("THREE.KTX2Loader: .transcodeImage failed.");a.push(h)}const c=h(a);e.push({data:c,width:o,height:l}),I.push(c.buffer)}C.push({mipmaps:e,width:A,height:u,format:v,type:x})}return s(),{faces:C,buffers:I,width:A,height:u,hasAlpha:f,dfdFlags:m,format:v,type:x}}(s.buffer);self.postMessage({type:"transcode",id:s.id,data:{faces:e,width:o,height:A,hasAlpha:u,format:d,type:p,dfdFlags:g}},i)}catch(t){console.error(t),self.postMessage({type:"error",id:s.id,error:t.message})}})}var o});const o=[{if:"astcSupported",basisFormat:[a.UASTC],transcoderFormat:[s.ASTC_4x4,s.ASTC_4x4],engineFormat:[i.RGBA_ASTC_4x4_Format,i.RGBA_ASTC_4x4_Format],engineType:[r.UnsignedByteType],priorityETC1S:1/0,priorityUASTC:1,needsPowerOfTwo:!1},{if:"bptcSupported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[s.BC7_M5,s.BC7_M5],engineFormat:[i.RGBA_BPTC_Format,i.RGBA_BPTC_Format],engineType:[r.UnsignedByteType],priorityETC1S:3,priorityUASTC:2,needsPowerOfTwo:!1},{if:"dxtSupported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[s.BC1,s.BC3],engineFormat:[i.RGBA_S3TC_DXT1_Format,i.RGBA_S3TC_DXT5_Format],engineType:[r.UnsignedByteType],priorityETC1S:4,priorityUASTC:5,needsPowerOfTwo:!1},{if:"etc2Supported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[s.ETC1,s.ETC2],engineFormat:[i.RGB_ETC2_Format,i.RGBA_ETC2_EAC_Format],engineType:[r.UnsignedByteType],priorityETC1S:1,priorityUASTC:3,needsPowerOfTwo:!1},{if:"etc1Supported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[s.ETC1],engineFormat:[i.RGB_ETC1_Format],engineType:[r.UnsignedByteType],priorityETC1S:2,priorityUASTC:4,needsPowerOfTwo:!1},{if:"pvrtcSupported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[s.PVRTC1_4_RGB,s.PVRTC1_4_RGBA],engineFormat:[i.RGB_PVRTC_4BPPV1_Format,i.RGBA_PVRTC_4BPPV1_Format],engineType:[r.UnsignedByteType],priorityETC1S:5,priorityUASTC:6,needsPowerOfTwo:!0},{if:"bptcSupported",basisFormat:[a.UASTC_HDR],transcoderFormat:[s.BC6H],engineFormat:[i.RGB_BPTC_UNSIGNED_Format],engineType:[r.HalfFloatType],priorityHDR:1,needsPowerOfTwo:!1},{basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[s.RGBA32,s.RGBA32],engineFormat:[i.RGBAFormat,i.RGBAFormat],engineType:[r.UnsignedByteType,r.UnsignedByteType],priorityETC1S:100,priorityUASTC:100,needsPowerOfTwo:!1},{basisFormat:[a.UASTC_HDR],transcoderFormat:[s.RGBA_HALF],engineFormat:[i.RGBAFormat],engineType:[r.HalfFloatType],priorityHDR:100,needsPowerOfTwo:!1}],l={[a.ETC1S]:o.filter(t=>t.basisFormat.includes(a.ETC1S)).sort((t,e)=>t.priorityUASTC-e.priorityUASTC),[a.UASTC]:o.filter(t=>t.basisFormat.includes(a.UASTC)).sort((t,e)=>t.priorityUASTC-e.priorityUASTC),[a.UASTC_HDR]:o.filter(t=>t.basisFormat.includes(a.UASTC_HDR)).sort((t,e)=>t.priorityHDR-e.priorityHDR)};function c(t){return t<=2||!(t&t-1)&&0!==t}function h(t){if(1===t.length)return t[0];let e=0;for(let n=0;n<t.length;n++)e+=t[n].byteLength;const n=new Uint8Array(e);let i=0;for(let e=0;e<t.length;e++){const r=t[e];n.set(r,i),i+=r.byteLength}return n}};const FC=new Set([Kt,Xt,ne,te]),NC={[Kx]:Kt,[Xx]:ne,[jx]:te,[Jx]:Kt,[Wx]:ne,[Yx]:te,[qx]:Kt,[Vx]:Kt,[Hx]:ne,[Gx]:ne,[zx]:te,[Ox]:te,[$x]:Xt,[Zx]:Xt,[dC]:fe,[uC]:ge,[IC]:me,[gC]:me,[pC]:me,[EC]:Ce,[mC]:Ce,[fC]:Ce,[iC]:oe,[nC]:oe,[eC]:ae,[tC]:ae,[sC]:le,[rC]:le,[oC]:Pe,[aC]:Ue,[cC]:Fe,[lC]:Le,[AC]:Qe,[hC]:Qe,[CC]:ue,[vC]:ue,[xC]:de,[yC]:de},kC={[Kx]:Gt,[Xx]:Gt,[jx]:Gt,[Jx]:Ht,[Wx]:Ht,[Yx]:Ht,[qx]:Lt,[Vx]:Lt,[Hx]:Lt,[Gx]:Lt,[zx]:Lt,[Ox]:Lt,[$x]:Wt,[Zx]:Jt,[dC]:Lt,[uC]:Lt,[IC]:Ht,[gC]:Lt,[pC]:Lt,[EC]:Ht,[mC]:Lt,[fC]:Lt,[iC]:Lt,[nC]:Lt,[eC]:Lt,[tC]:Lt,[sC]:Lt,[rC]:Lt,[oC]:Lt,[aC]:Lt,[cC]:Lt,[lC]:Lt,[AC]:Lt,[hC]:Lt,[CC]:Lt,[vC]:Lt,[xC]:Lt,[yC]:Lt};function OC(t){const e=t.dataFormatDescriptor[0];return 1===e.colorPrimaries?2===e.transferFunction?an:on:10===e.colorPrimaries?2===e.transferFunction?"display-p3":"display-p3-linear":(0===e.colorPrimaries||console.warn(`THREE.KTX2Loader: Unsupported color primaries, "${e.colorPrimaries}"`),sn)}const zC=new ZA,GC=new hi,HC=new hi,VC=new ci,qC={X:new hi(1,0,0),Y:new hi(0,1,0),Z:new hi(0,0,1)},YC={type:"change"},WC={type:"mouseDown",mode:null},JC={type:"mouseUp",mode:null},jC={type:"objectChange"};function XC(t){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:t.button};{const e=this.domElement.getBoundingClientRect();return{x:(t.clientX-e.left)/e.width*2-1,y:-(t.clientY-e.top)/e.height*2+1,button:t.button}}}function KC(t){if(this.enabled)switch(t.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(t))}}function ZC(t){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(t.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(t)),this.pointerDown(this._getPointer(t)))}function $C(t){this.enabled&&this.pointerMove(this._getPointer(t))}function tI(t){this.enabled&&(this.domElement.releasePointerCapture(t.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(t)))}function eI(t,e,n){const i=e.intersectObject(t,!0);for(let t=0;t<i.length;t++)if(i[t].object.visible||n)return i[t];return!1}const nI=new br,iI=new hi(0,1,0),rI=new hi(0,0,0),sI=new fr,aI=new ci,oI=new ci,lI=new hi,cI=new fr,hI=new hi(1,0,0),AI=new hi(0,1,0),uI=new hi(0,0,1),dI=new hi,pI=new hi,gI=new hi;class fI extends Hr{constructor(t){super(),this.isTransformControlsRoot=!0,this.controls=t,this.visible=!1}updateMatrixWorld(t){const e=this.controls;void 0!==e.object&&(e.object.updateMatrixWorld(),null===e.object.parent?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):e.object.parent.matrixWorld.decompose(e._parentPosition,e._parentQuaternion,e._parentScale),e.object.matrixWorld.decompose(e.worldPosition,e.worldQuaternion,e._worldScale),e._parentQuaternionInv.copy(e._parentQuaternion).invert(),e._worldQuaternionInv.copy(e.worldQuaternion).invert()),e.camera.updateMatrixWorld(),e.camera.matrixWorld.decompose(e.cameraPosition,e.cameraQuaternion,e._cameraScale),e.camera.isOrthographicCamera?e.camera.getWorldDirection(e.eye).negate():e.eye.copy(e.cameraPosition).sub(e.worldPosition).normalize(),super.updateMatrixWorld(t)}dispose(){this.traverse(function(t){t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()})}}class mI extends Hr{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const t=new us({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),e=new Go({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),n=t.clone();n.opacity=.15;const i=e.clone();i.opacity=.5;const r=t.clone();r.color.setHex(16711680);const s=t.clone();s.color.setHex(65280);const a=t.clone();a.color.setHex(255);const o=t.clone();o.color.setHex(16711680),o.opacity=.5;const l=t.clone();l.color.setHex(65280),l.opacity=.5;const c=t.clone();c.color.setHex(255),c.opacity=.5;const h=t.clone();h.opacity=.25;const A=t.clone();A.color.setHex(16776960),A.opacity=.25;const u=t.clone();u.color.setHex(16776960);const d=t.clone();d.color.setHex(7895160),this.materialLib={xAxis:r,yAxis:s,zAxis:a,active:u,xAxisTransparent:o,yAxisTransparent:l,zAxisTransparent:c,activeTransparent:A};const p=new xl(0,.04,.1,12);p.translate(0,.05,0);const g=new Zs(.08,.08,.08);g.translate(0,.04,0);const f=new Ns;f.setAttribute("position",new Ts([0,0,0,1,0,0],3));const m=new xl(.0075,.0075,.5,3);function y(t,e){const n=new Fc(t,.0075,3,64,e*Math.PI*2);return n.rotateY(Math.PI/2),n.rotateX(Math.PI/2),n}m.translate(0,.25,0);const v={X:[[new Xs(p,r),[.5,0,0],[0,0,-Math.PI/2]],[new Xs(p,r),[-.5,0,0],[0,0,Math.PI/2]],[new Xs(m,r),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new Xs(p,s),[0,.5,0]],[new Xs(p,s),[0,-.5,0],[Math.PI,0,0]],[new Xs(m,s)]],Z:[[new Xs(p,a),[0,0,.5],[Math.PI/2,0,0]],[new Xs(p,a),[0,0,-.5],[-Math.PI/2,0,0]],[new Xs(m,a),null,[Math.PI/2,0,0]]],XYZ:[[new Xs(new Qc(.1,0),h),[0,0,0]]],XY:[[new Xs(new Zs(.15,.15,.01),c),[.15,.15,0]]],YZ:[[new Xs(new Zs(.15,.15,.01),o),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Xs(new Zs(.15,.15,.01),l),[.15,0,.15],[-Math.PI/2,0,0]]]},x={X:[[new Xs(new xl(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new Xs(new xl(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new Xs(new xl(.2,0,.6,4),n),[0,.3,0]],[new Xs(new xl(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new Xs(new xl(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new Xs(new xl(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new Xs(new Qc(.2,0),n)]],XY:[[new Xs(new Zs(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new Xs(new Zs(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Xs(new Zs(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]]},C={START:[[new Xs(new Qc(.01,2),i),null,null,null,"helper"]],END:[[new Xs(new Qc(.01,2),i),null,null,null,"helper"]],DELTA:[[new Xo(function(){const t=new Ns;return t.setAttribute("position",new Ts([0,0,0,1,1,1],3)),t}(),i),null,null,null,"helper"]],X:[[new Xo(f,i),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Xo(f,i),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Xo(f,i),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},I={XYZE:[[new Xs(y(.5,1),d),null,[0,Math.PI/2,0]]],X:[[new Xs(y(.5,.5),r)]],Y:[[new Xs(y(.5,.5),s),null,[0,0,-Math.PI/2]]],Z:[[new Xs(y(.5,.5),a),null,[0,Math.PI/2,0]]],E:[[new Xs(y(.75,1),A),null,[0,Math.PI/2,0]]]},E={AXIS:[[new Xo(f,i),[-1e3,0,0],null,[1e6,1,1],"helper"]]},w={XYZE:[[new Xs(new Pc(.25,10,8),n)]],X:[[new Xs(new Fc(.5,.1,4,24),n),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new Xs(new Fc(.5,.1,4,24),n),[0,0,0],[Math.PI/2,0,0]]],Z:[[new Xs(new Fc(.5,.1,4,24),n),[0,0,0],[0,0,-Math.PI/2]]],E:[[new Xs(new Fc(.75,.1,2,24),n)]]},_={X:[[new Xs(g,r),[.5,0,0],[0,0,-Math.PI/2]],[new Xs(m,r),[0,0,0],[0,0,-Math.PI/2]],[new Xs(g,r),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new Xs(g,s),[0,.5,0]],[new Xs(m,s)],[new Xs(g,s),[0,-.5,0],[0,0,Math.PI]]],Z:[[new Xs(g,a),[0,0,.5],[Math.PI/2,0,0]],[new Xs(m,a),[0,0,0],[Math.PI/2,0,0]],[new Xs(g,a),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new Xs(new Zs(.15,.15,.01),c),[.15,.15,0]]],YZ:[[new Xs(new Zs(.15,.15,.01),o),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Xs(new Zs(.15,.15,.01),l),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new Xs(new Zs(.1,.1,.1),h)]]},b={X:[[new Xs(new xl(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new Xs(new xl(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new Xs(new xl(.2,0,.6,4),n),[0,.3,0]],[new Xs(new xl(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new Xs(new xl(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new Xs(new xl(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new Xs(new Zs(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new Xs(new Zs(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Xs(new Zs(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new Xs(new Zs(.2,.2,.2),n),[0,0,0]]]},B={X:[[new Xo(f,i),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Xo(f,i),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Xo(f,i),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function S(t){const e=new Hr;for(const n in t)for(let i=t[n].length;i--;){const r=t[n][i][0].clone(),s=t[n][i][1],a=t[n][i][2],o=t[n][i][3],l=t[n][i][4];r.name=n,r.tag=l,s&&r.position.set(s[0],s[1],s[2]),a&&r.rotation.set(a[0],a[1],a[2]),o&&r.scale.set(o[0],o[1],o[2]),r.updateMatrix();const c=r.geometry.clone();c.applyMatrix4(r.matrix),r.geometry=c,r.renderOrder=1/0,r.position.set(0,0,0),r.rotation.set(0,0,0),r.scale.set(1,1,1),e.add(r)}return e}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=S(v)),this.add(this.gizmo.rotate=S(I)),this.add(this.gizmo.scale=S(_)),this.add(this.picker.translate=S(x)),this.add(this.picker.rotate=S(w)),this.add(this.picker.scale=S(b)),this.add(this.helper.translate=S(C)),this.add(this.helper.rotate=S(E)),this.add(this.helper.scale=S(B)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(t){const e="local"===("scale"===this.mode?"local":this.space)?this.worldQuaternion:oI;this.gizmo.translate.visible="translate"===this.mode,this.gizmo.rotate.visible="rotate"===this.mode,this.gizmo.scale.visible="scale"===this.mode,this.helper.translate.visible="translate"===this.mode,this.helper.rotate.visible="rotate"===this.mode,this.helper.scale.visible="scale"===this.mode;let n=[];n=n.concat(this.picker[this.mode].children),n=n.concat(this.gizmo[this.mode].children),n=n.concat(this.helper[this.mode].children);for(let t=0;t<n.length;t++){const i=n[t];let r;if(i.visible=!0,i.rotation.set(0,0,0),i.position.copy(this.worldPosition),r=this.camera.isOrthographicCamera?(this.camera.top-this.camera.bottom)/this.camera.zoom:this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),i.scale.set(1,1,1).multiplyScalar(r*this.size/4),"helper"!==i.tag){if(i.quaternion.copy(e),"translate"===this.mode||"scale"===this.mode){const t=.99,n=.2;"X"===i.name&&Math.abs(iI.copy(hI).applyQuaternion(e).dot(this.eye))>t&&(i.scale.set(1e-10,1e-10,1e-10),i.visible=!1),"Y"===i.name&&Math.abs(iI.copy(AI).applyQuaternion(e).dot(this.eye))>t&&(i.scale.set(1e-10,1e-10,1e-10),i.visible=!1),"Z"===i.name&&Math.abs(iI.copy(uI).applyQuaternion(e).dot(this.eye))>t&&(i.scale.set(1e-10,1e-10,1e-10),i.visible=!1),"XY"===i.name&&Math.abs(iI.copy(uI).applyQuaternion(e).dot(this.eye))<n&&(i.scale.set(1e-10,1e-10,1e-10),i.visible=!1),"YZ"===i.name&&Math.abs(iI.copy(hI).applyQuaternion(e).dot(this.eye))<n&&(i.scale.set(1e-10,1e-10,1e-10),i.visible=!1),"XZ"===i.name&&Math.abs(iI.copy(AI).applyQuaternion(e).dot(this.eye))<n&&(i.scale.set(1e-10,1e-10,1e-10),i.visible=!1)}else"rotate"===this.mode&&(aI.copy(e),iI.copy(this.eye).applyQuaternion(VC.copy(e).invert()),-1!==i.name.search("E")&&i.quaternion.setFromRotationMatrix(sI.lookAt(this.eye,rI,AI)),"X"===i.name&&(VC.setFromAxisAngle(hI,Math.atan2(-iI.y,iI.z)),VC.multiplyQuaternions(aI,VC),i.quaternion.copy(VC)),"Y"===i.name&&(VC.setFromAxisAngle(AI,Math.atan2(iI.x,iI.z)),VC.multiplyQuaternions(aI,VC),i.quaternion.copy(VC)),"Z"===i.name&&(VC.setFromAxisAngle(uI,Math.atan2(iI.y,iI.x)),VC.multiplyQuaternions(aI,VC),i.quaternion.copy(VC)));i.visible=i.visible&&(-1===i.name.indexOf("X")||this.showX),i.visible=i.visible&&(-1===i.name.indexOf("Y")||this.showY),i.visible=i.visible&&(-1===i.name.indexOf("Z")||this.showZ),i.visible=i.visible&&(-1===i.name.indexOf("E")||this.showX&&this.showY&&this.showZ),i.material._color=i.material._color||i.material.color.clone(),i.material._opacity=i.material._opacity||i.material.opacity,i.material.color.copy(i.material._color),i.material.opacity=i.material._opacity,this.enabled&&this.axis&&(i.name===this.axis||this.axis.split("").some(function(t){return i.name===t}))&&(i.material.color.copy(this.materialLib.active.color),i.material.opacity=1)}else i.visible=!1,"AXIS"===i.name?(i.visible=!!this.axis,"X"===this.axis&&(VC.setFromEuler(nI.set(0,0,0)),i.quaternion.copy(e).multiply(VC),Math.abs(iI.copy(hI).applyQuaternion(e).dot(this.eye))>.9&&(i.visible=!1)),"Y"===this.axis&&(VC.setFromEuler(nI.set(0,0,Math.PI/2)),i.quaternion.copy(e).multiply(VC),Math.abs(iI.copy(AI).applyQuaternion(e).dot(this.eye))>.9&&(i.visible=!1)),"Z"===this.axis&&(VC.setFromEuler(nI.set(0,Math.PI/2,0)),i.quaternion.copy(e).multiply(VC),Math.abs(iI.copy(uI).applyQuaternion(e).dot(this.eye))>.9&&(i.visible=!1)),"XYZE"===this.axis&&(VC.setFromEuler(nI.set(0,Math.PI/2,0)),iI.copy(this.rotationAxis),i.quaternion.setFromRotationMatrix(sI.lookAt(rI,iI,AI)),i.quaternion.multiply(VC),i.visible=this.dragging),"E"===this.axis&&(i.visible=!1)):"START"===i.name?(i.position.copy(this.worldPositionStart),i.visible=this.dragging):"END"===i.name?(i.position.copy(this.worldPosition),i.visible=this.dragging):"DELTA"===i.name?(i.position.copy(this.worldPositionStart),i.quaternion.copy(this.worldQuaternionStart),GC.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),GC.applyQuaternion(this.worldQuaternionStart.clone().invert()),i.scale.copy(GC),i.visible=this.dragging):(i.quaternion.copy(e),this.dragging?i.position.copy(this.worldPositionStart):i.position.copy(this.worldPosition),this.axis&&(i.visible=-1!==this.axis.search(i.name)))}super.updateMatrixWorld(t)}}class yI extends Xs{constructor(){super(new Dc(1e5,1e5,2,2),new us({visible:!1,wireframe:!0,side:E,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(t){let e=this.space;switch(this.position.copy(this.worldPosition),"scale"===this.mode&&(e="local"),dI.copy(hI).applyQuaternion("local"===e?this.worldQuaternion:oI),pI.copy(AI).applyQuaternion("local"===e?this.worldQuaternion:oI),gI.copy(uI).applyQuaternion("local"===e?this.worldQuaternion:oI),iI.copy(pI),this.mode){case"translate":case"scale":switch(this.axis){case"X":iI.copy(this.eye).cross(dI),lI.copy(dI).cross(iI);break;case"Y":iI.copy(this.eye).cross(pI),lI.copy(pI).cross(iI);break;case"Z":iI.copy(this.eye).cross(gI),lI.copy(gI).cross(iI);break;case"XY":lI.copy(gI);break;case"YZ":lI.copy(dI);break;case"XZ":iI.copy(gI),lI.copy(pI);break;case"XYZ":case"E":lI.set(0,0,0)}break;default:lI.set(0,0,0)}0===lI.length()?this.quaternion.copy(this.cameraQuaternion):(cI.lookAt(GC.set(0,0,0),lI,iI),this.quaternion.setFromRotationMatrix(cI)),super.updateMatrixWorld(t)}}const vI="csm_DiffuseColor",xI="csm_Roughness",CI="csm_Metalness",II="csm_Emissive",EI="csm_AO",wI="csm_FragNormal",_I="csm_Clearcoat",bI="csm_ClearcoatRoughness",BI="csm_ClearcoatNormal",SI="csm_Transmission",MI="csm_Thickness",TI="csm_Iridescence",QI="csm_PointSize",DI="csm_FragColor",RI="csm_DepthAlpha",UI="csm_UnlitFac",PI="csm_Position",LI="csm_PositionRaw",FI="csm_Normal",NI={[`${PI}`]:"*",[`${LI}`]:"*",[`${FI}`]:"*",[`${RI}`]:"*",[`${QI}`]:["PointsMaterial"],[`${vI}`]:"*",[`${DI}`]:"*",[`${wI}`]:"*",[`${UI}`]:"*",[`${II}`]:["MeshStandardMaterial","MeshPhysicalMaterial"],[`${xI}`]:["MeshStandardMaterial","MeshPhysicalMaterial"],[`${CI}`]:["MeshStandardMaterial","MeshPhysicalMaterial"],[`${TI}`]:["MeshStandardMaterial","MeshPhysicalMaterial"],[`${EI}`]:["MeshStandardMaterial","MeshPhysicalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial"],[`${_I}`]:["MeshPhysicalMaterial"],[`${bI}`]:["MeshPhysicalMaterial"],[`${BI}`]:["MeshPhysicalMaterial"],[`${SI}`]:["MeshPhysicalMaterial"],[`${MI}`]:["MeshPhysicalMaterial"]},kI={"*":{"#include <lights_physical_fragment>":$u.lights_physical_fragment,"#include <transmission_fragment>":$u.transmission_fragment},[`${FI}`]:{"#include <beginnormal_vertex>":`\n    vec3 objectNormal = ${FI};\n    #ifdef USE_TANGENT\n\t    vec3 objectTangent = vec3( tangent.xyz );\n    #endif\n    `},[`${PI}`]:{"#include <begin_vertex>":`\n    vec3 transformed = ${PI};\n  `},[`${LI}`]:{"#include <project_vertex>":`\n    #include <project_vertex>\n    gl_Position = ${LI};\n  `},[`${QI}`]:{"gl_PointSize = size;":`\n    gl_PointSize = ${QI};\n    `},[`${vI}`]:{"#include <color_fragment>":`\n    #include <color_fragment>\n    diffuseColor = ${vI};\n  `},[`${DI}`]:{"#include <opaque_fragment>":`\n    #include <opaque_fragment>\n    gl_FragColor = mix(gl_FragColor, ${DI}, ${UI});\n  `},[`${II}`]:{"vec3 totalEmissiveRadiance = emissive;":`\n    vec3 totalEmissiveRadiance = ${II};\n    `},[`${xI}`]:{"#include <roughnessmap_fragment>":`\n    #include <roughnessmap_fragment>\n    roughnessFactor = ${xI};\n    `},[`${CI}`]:{"#include <metalnessmap_fragment>":`\n    #include <metalnessmap_fragment>\n    metalnessFactor = ${CI};\n    `},[`${EI}`]:{"#include <aomap_fragment>":`\n    #include <aomap_fragment>\n    reflectedLight.indirectDiffuse *= 1. - ${EI};\n    `},[`${wI}`]:{"#include <normal_fragment_maps>":`\n      #include <normal_fragment_maps>\n      normal = ${wI};\n    `},[`${RI}`]:{"gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );":`\n      gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity * 1.0 - ${RI} );\n    `,"gl_FragColor = packDepthToRGBA( fragCoordZ );":`\n      if(${RI} < 1.0) discard;\n      gl_FragColor = packDepthToRGBA( dist );\n    `,"gl_FragColor = packDepthToRGBA( dist );":`\n      if(${RI} < 1.0) discard;\n      gl_FragColor = packDepthToRGBA( dist );\n    `},[`${_I}`]:{"material.clearcoat = clearcoat;":`material.clearcoat = ${_I};`},[`${bI}`]:{"material.clearcoatRoughness = clearcoatRoughness;":`material.clearcoatRoughness = ${bI};`},[`${BI}`]:{"#include <clearcoat_normal_fragment_begin>":"\n      vec3 csm_coat_internal_orthogonal = csm_ClearcoatNormal - (dot(csm_ClearcoatNormal, nonPerturbedNormal) * nonPerturbedNormal);\n      vec3 csm_coat_internal_projectedbump = mat3(csm_internal_vModelViewMatrix) * csm_coat_internal_orthogonal;\n      vec3 clearcoatNormal = normalize(nonPerturbedNormal - csm_coat_internal_projectedbump);\n    "},[`${SI}`]:{"material.transmission = transmission;":`\n      material.transmission = ${SI};\n    `},[`${MI}`]:{"material.thickness = thickness;":`\n      material.thickness = ${MI};\n    `},[`${TI}`]:{"material.iridescence = iridescence;":`\n      material.iridescence = ${TI};\n    `}},OI={clearcoat:[_I,BI,bI],transmission:[SI],iridescence:[TI]};function zI(t){return t.replace(/\/\*[\s\S]*?\*\/|\/\/.*/g,"")}var GI={d:(t,e)=>{for(var n in e)GI.o(e,n)&&!GI.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},HI={};GI.d(HI,{g1:()=>qI,gO:()=>lw,km:()=>VI,zV:()=>jE,ol:()=>fw,uM:()=>YI,N1:()=>_w,xv:()=>gw,PH:()=>JI,UH:()=>WI,ZP:()=>Sw,Vx:()=>bw});var VI={};GI.r(VI),GI.d(VI,{COLUMN:()=>ZI,COLUMN_REVERSE:()=>$I,ROW:()=>XI,ROW_REVERSE:()=>KI,contentDirection:()=>tE});var qI={};GI.r(qI),GI.d(qI,{CENTER:()=>nE,END:()=>iE,START:()=>eE,STRETCH:()=>rE,alignItems:()=>sE,warnAboutDeprecatedAlignItems:()=>aE});var YI={};GI.r(YI),GI.d(YI,{CENTER:()=>hE,END:()=>AE,SPACE_AROUND:()=>uE,SPACE_BETWEEN:()=>dE,SPACE_EVENLY:()=>pE,START:()=>cE,justifyContent:()=>gE});var WI={};GI.r(WI),GI.d(WI,{NORMAL:()=>vE,NOWRAP:()=>xE,PRE:()=>CE,PRE_LINE:()=>IE,PRE_WRAP:()=>EE,WHITE_CHARS:()=>yE,collapseWhitespaceOnInlines:()=>BE,collapseWhitespaceOnString:()=>wE,newlineBreakability:()=>_E,shouldBreak:()=>bE});var JI={};GI.r(JI),GI.d(JI,{CENTER:()=>RE,JUSTIFY:()=>UE,JUSTIFY_CENTER:()=>FE,JUSTIFY_LEFT:()=>PE,JUSTIFY_RIGHT:()=>LE,LEFT:()=>QE,RIGHT:()=>DE,textAlign:()=>NE});const jI=(t=>{var e={};return GI.d(e,t),e})({BufferAttribute:()=>Cs,BufferGeometry:()=>Ns,CanvasTexture:()=>gl,Color:()=>ls,FileLoader:()=>Bh,LinearFilter:()=>Qt,Mesh:()=>Xs,Object3D:()=>Hr,Plane:()=>go,PlaneGeometry:()=>Dc,ShaderMaterial:()=>ia,TextureLoader:()=>Uh,Vector2:()=>li,Vector3:()=>hi}),XI="row",KI="row-reverse",ZI="column",$I="column-reverse";function tE(t,e,n,i){let r=n,s="getWidth",a="x",o="y";0===e.indexOf(ZI)&&(s="getHeight",a="y",o="x");for(let e=0;e<t.childrenBoxes.length;e++){const n=t.childrenBoxes[e],l=n.id,c=n[s](),h=n.margin||0;r+=h*i,t.childrenPos[l]={[a]:r+c/2*i,[o]:0},r+=i*(c+h)}}const eE="start",nE="center",iE="end",rE="stretch";function sE(t,e){const n=t.getAlignItems();-1===oE.indexOf(n)&&console.warn(`alignItems === '${n}' is not supported`);let i="getWidth",r="x";0===e.indexOf(XI)&&(i="getHeight",r="y");const s=t[i]()/2-(t.padding||0);t.childrenBoxes.forEach(a=>{let o;switch(n){case iE:case"right":case"bottom":o=0===e.indexOf(XI)?-s+a[i]()/2+(a.margin||0):s-a[i]()/2-(a.margin||0);break;case eE:case"left":case"top":o=0===e.indexOf(XI)?s-a[i]()/2-(a.margin||0):-s+a[i]()/2+(a.margin||0)}t.childrenPos[a.id][r]=o||0})}function aE(t){-1!==lE.indexOf(t)&&console.warn(`alignItems === '${t}' is deprecated and will be remove in 7.x.x. Fallback are 'start'|'end'`)}const oE=[eE,nE,iE,rE,"top","right","bottom","left"],lE=["top","right","bottom","left"],cE="start",hE="center",AE="end",uE="space-around",dE="space-between",pE="space-evenly";function gE(t,e,n,i){const r=t.getJustifyContent();-1===fE.indexOf(r)&&console.warn(`justifyContent === '${r}' is not supported`);const s=0===e.indexOf("row")?"width":"height",a=t.getChildrenSideSum(s),o=("width"===s?t.getInnerWidth():t.getInnerHeight())-a,l=function(t,e){switch(t){case AE:return e;case hE:return e/2}return 0}(r,2*n-a*Math.sign(n)),c=function(t,e,n,i){const r=Array(t.length).fill(0);if(e>0)switch(n){case dE:if(t.length>1){const n=e/(t.length-1)*i;r[0]=0;for(let e=1;e<t.length;e++)r[e]=n*e}break;case pE:if(t.length>1){const n=e/(t.length+1)*i;for(let e=0;e<t.length;e++)r[e]=n*(e+1)}break;case uE:if(t.length>1){const n=e/t.length*i,s=n/2;r[0]=s;for(let e=1;e<t.length;e++)r[e]=s+n*e}}return r}(t.childrenBoxes,o,r,i),h=0===e.indexOf("row")?"x":"y";t.childrenBoxes.forEach((e,n)=>{t.childrenPos[e.id][h]-=l-c[n]})}const fE=[cE,hE,AE,uE,dE,pE];function mE(t){return class extends t{constructor(t){super(t),this.isBoxComponent=!0,this.childrenPos={}}getInnerWidth(){const t=this.getContentDirection();switch(t){case"row":case"row-reverse":return this.width-(2*this.padding||0)||this.getChildrenSideSum("width");case"column":case"column-reverse":return this.getHighestChildSizeOn("width");default:console.error(`Invalid contentDirection : ${t}`)}}getInnerHeight(){const t=this.getContentDirection();switch(t){case"row":case"row-reverse":return this.getHighestChildSizeOn("height");case"column":case"column-reverse":return this.height-(2*this.padding||0)||this.getChildrenSideSum("height");default:console.error(`Invalid contentDirection : ${t}`)}}getChildrenSideSum(t){return this.childrenBoxes.reduce((e,n)=>{const i=2*n.margin||0;return e+("width"===t?n.getWidth()+i:n.getHeight()+i)},0)}setPosFromParentRecords(){this.parentUI&&this.parentUI.childrenPos[this.id]&&(this.position.x=this.parentUI.childrenPos[this.id].x,this.position.y=this.parentUI.childrenPos[this.id].y)}computeChildrenPosition(){if(this.children.length>0){const t=this.getContentDirection();let e;switch(t){case XI:e=-this.getInnerWidth()/2;break;case KI:e=this.getInnerWidth()/2;break;case ZI:e=this.getInnerHeight()/2;break;case $I:e=-this.getInnerHeight()/2}const n=-Math.sign(e);tE(this,t,e,n),gE(this,t,e,n),sE(this,t)}}getHighestChildSizeOn(t){return this.childrenBoxes.reduce((e,n)=>{const i=n.margin||0,r="width"===t?n.getWidth()+2*i:n.getHeight()+2*i;return Math.max(e,r)},0)}getWidth(){return this.parentUI&&"stretch"===this.parentUI.getAlignItems()&&-1!==this.parentUI.getContentDirection().indexOf("column")?this.parentUI.getWidth()-(2*this.parentUI.padding||0):this.width||this.getInnerWidth()+(2*this.padding||0)}getHeight(){return this.parentUI&&"stretch"===this.parentUI.getAlignItems()&&-1!==this.parentUI.getContentDirection().indexOf("row")?this.parentUI.getHeight()-(2*this.parentUI.padding||0):this.height||this.getInnerHeight()+(2*this.padding||0)}}}const yE={"\t":"\t","\n":"\n","\r":"\r"," ":" "},vE="normal",xE="nowrap",CE="pre",IE="pre-line",EE="pre-wrap",wE=function(t,e){switch(e){case xE:case vE:t=t.replace(/\n/g," ");case IE:t=t.replace(/[ ]{2,}/g," ")}return t},_E=function(t){switch(t){case CE:case EE:case IE:return"mandatory"}},bE=function(t,e,n,i){const r=t[e];switch(i.WHITESPACE){case vE:case IE:case EE:if("mandatory"===r.lineBreak)return!0;const s=r.kerning?r.kerning:0,a=r.xoffset?r.xoffset:0;if(n+(r.xadvance?r.xadvance:r.width)+a+s>i.INNER_WIDTH)return!0;const o=TE(t,e,i);return function(t,e,n,i){return!(!t||!t.glyph)&&!(e+n<i.INNER_WIDTH)&&i.BREAKON.indexOf(t.glyph)>-1}(t[e-1],n,o,i);case CE:return"mandatory"===r.lineBreak;default:return!1}},BE=function(t,e){const n=t[0],i=t[t.length-1];switch(e){case EE:n.glyph&&"\n"===n.glyph&&t.length>1&&ME([n],t[1]),i.glyph&&"\n"===i.glyph&&t.length>1&&SE([i],t[t.length-2]);break;case IE:case xE:case vE:let r,s=[];for(let e=0;e<t.length;e++){const n=t[e];if(!(n.glyph&&yE[n.glyph]&&t.length>e))break;s.push(n),r=t[e+1]}ME(s,r),s=[],r=null;for(let e=t.length-1;e>0;e--){const n=t[e];if(!(n.glyph&&yE[n.glyph]&&e>0))break;s.push(n),r=t[e-1]}SE(s,r);break;case CE:break;default:return console.warn(`whiteSpace: '${e}' is not valid`),0}return n.offsetX};function SE(t,e){if(e)for(let n=0;n<t.length;n++){const i=t[n];i.width=0,i.height=0,i.offsetX=e.offsetX+e.width}}function ME(t,e){if(e)for(let n=0;n<t.length;n++){const i=t[n];i.width=0,i.height=0,i.offsetX=e.offsetX}}function TE(t,e,n,i){if(i=i||0,!t[e])return i;const r=t[e],s=r.kerning?r.kerning:0,a=r.xoffset?r.xoffset:0,o=r.xadvance?r.xadvance:r.width;return r.lineBreak?i+o:TE(t,e+1,n,i+o+n.LETTERSPACING+a+s)}const QE="left",DE="right",RE="center",UE="justify",PE="justify-left",LE="justify-right",FE="justify-center";function NE(t,e,n){for(let i=0;i<t.length;i++){const r=t[i],s=kE(r,e,n,i===t.length-1);for(let t=0;t<r.length;t++)r[t].offsetX+=s;r.x=s}if(0===e.indexOf(UE))for(let i=0;i<t.length;i++){const r=t[i];if(-1!==e.indexOf("-")&&i===t.length-1)return;const s=n-r.width;if(s<=0)return;let a=0;for(let t=1;t<r.length-1;t++)a+=" "===r[t].glyph?1:0;const o=s/a;let l=1;e===LE&&(r.reverse(),l=-1);let c=0;for(let t=1;t<=r.length-1;t++){const e=r[t];e.offsetX+=c*l,c+=" "===e.glyph?o:0}e===LE&&r.reverse()}}const kE=(t,e,n,i)=>{switch(e){case PE:case UE:case QE:return-n/2;case LE:case DE:return-t.width+n/2;case RE:return-t.width/2;case FE:return i?-t.width/2:-n/2;default:console.warn(`textAlign: '${e}' is not valid`)}};function OE(t){return class extends t{computeInlinesPosition(){const t=this.getWidth()-(2*this.padding||0),e=this.getHeight()-(2*this.padding||0),n=this.getJustifyContent(),i=this.getTextAlign(),r=this.getInterLine(),s=this.computeLines();s.interLine=r;const a=Math.abs(s.height),o=(()=>{switch(n){case"start":return e/2;case"end":return a-e/2;case"center":return a/2;default:console.warn(`justifyContent: '${n}' is not valid`)}})();s.forEach(t=>{t.y+=o,t.forEach(t=>{t.offsetY+=o})}),NE(s,i,t),this.lines=s}calculateBestFit(t){if(0!==this.childrenInlines.length)switch(t){case"grow":this.calculateGrowFit();break;case"shrink":this.calculateShrinkFit();break;case"auto":this.calculateAutoFit()}}calculateGrowFit(){const t=this.getHeight()-(2*this.padding||0);let e=1;const n=this.childrenInlines.find(t=>t.isText);let i,r=1,s=2,a=n._fitFontSize?n._fitFontSize/n.getFontSize():1;do{if(i=this.calculateHeight(a),i>t){if(a<=r){this.childrenInlines.forEach(t=>{t.isInlineBlock||(t._fitFontSize=t.getFontSize())});break}s=a,a-=(s-r)/2}else{if(Math.abs(t-i)<.075)break;Math.abs(a-s)<5e-10&&(s*=2),r=a,a+=(s-r)/2}}while(++e<=10)}calculateShrinkFit(){const t=this.getHeight()-(2*this.padding||0);let e=1;const n=this.childrenInlines.find(t=>t.isText);let i,r=0,s=1,a=n._fitFontSize?n._fitFontSize/n.getFontSize():1;do{if(i=this.calculateHeight(a),i>t)s=a,a-=(s-r)/2;else{if(a>=s){this.childrenInlines.forEach(t=>{t.isInlineBlock||(t._fitFontSize=t.getFontSize())});break}if(Math.abs(t-i)<.075)break;r=a,a+=(s-r)/2}}while(++e<=10)}calculateAutoFit(){const t=this.getHeight()-(2*this.padding||0);let e=1;const n=this.childrenInlines.find(t=>t.isText);let i,r=0,s=2,a=n._fitFontSize?n._fitFontSize/n.getFontSize():1;do{if(i=this.calculateHeight(a),i>t)s=a,a-=(s-r)/2;else{if(Math.abs(t-i)<.075)break;Math.abs(a-s)<5e-10&&(s*=2),r=a,a+=(s-r)/2}}while(++e<=10)}computeLines(){const t=this.getWidth()-(2*this.padding||0),e=[[]];e.height=0;const n=this.getInterLine();this.childrenInlines.reduce((n,i)=>{if(!i.inlines)return;const r=i._fitFontSize||i.getFontSize(),s=i.isText?i.getLetterSpacing()*r:0,a=i.getWhiteSpace(),o=i.getBreakOn(),l={WHITESPACE:a,LETTERSPACING:s,BREAKON:o,INNER_WIDTH:t},c=i.inlines.reduce((t,n,i,r)=>{const a=n.kerning?n.kerning:0,o=n.xoffset?n.xoffset:0,c=n.xadvance?n.xadvance:n.width;return bE(r,i,t,l)?(e.push([n]),n.offsetX=o,0===n.width?0:c+s):(e[e.length-1].push(n),n.offsetX=t+o+a,t+c+a+s)},n);return c},0);let i=0,r=0,s=-n/2;return e.forEach(t=>{if(t.lineHeight=t.reduce((t,e)=>{const n=void 0!==e.lineHeight?e.lineHeight:e.height;return Math.max(t,n)},0),t.lineBase=t.reduce((t,e)=>{const n=void 0!==e.lineBase?e.lineBase:e.height;return Math.max(t,n)},0),t.width=0,t.height=t.lineHeight,t[0]){const e=this.getWhiteSpace(),a=BE(t,e);t.forEach(t=>{t.offsetX-=a}),t.width=this.computeLineWidth(t),t.width>i&&(i=t.width),t.forEach(e=>{e.offsetY=s-e.height-e.anchor,e.lineHeight<t.lineHeight&&(e.offsetY-=t.lineBase-e.lineBase)}),t.y=s,r+=t.lineHeight+n,s-=t.lineHeight+n}}),e.height=r,e.width=i,e}calculateHeight(t){this.childrenInlines.forEach(e=>{e.isInlineBlock||(e._fitFontSize=e.getFontSize()*t,e.calculateInlines(e._fitFontSize))});const e=this.computeLines();return Math.abs(e.height)}computeLineWidth(t){const e=t[0],n=t[t.length-1];return n.offsetX+n.width+e.offsetX}}}const zE=new jI.FileLoader,GE=[],HE={},VE=new jI.TextureLoader,qE=[],YE={},WE={};function JE(t){if(t._kernings)return;const e={};for(let n=0;n<t.kernings.length;n++){const i=t.kernings[n];0!==i.amount&&(e[String.fromCharCode(i.first,i.second)]=i.amount)}t._kernings=e}const jE={setFontFamily:function(t,e){"string"==typeof e?function(t,e){-1===GE.indexOf(e)&&(GE.push(e),zE.load(e,t=>{const n=JSON.parse(t);JE(n),HE[e]=n;for(const t of Object.keys(WE))e===WE[t].jsonURL&&WE[t].component._updateFontFamily(n)})),WE[t.id]||(WE[t.id]={component:t}),WE[t.id].jsonURL=e,HE[e]&&t._updateFontFamily(HE[e])}(t,e):(WE[t.id]||(WE[t.id]={component:t}),JE(e),WE[t.id].json=e,t._updateFontFamily(e))},setFontTexture:function(t,e){-1===qE.indexOf(e)&&(qE.push(e),VE.load(e,t=>{t.generateMipmaps=!1,t.minFilter=jI.LinearFilter,t.magFilter=jI.LinearFilter,YE[e]=t;for(const n of Object.keys(WE))e===WE[n].textureURL&&WE[n].component._updateFontTexture(t)})),WE[t.id]||(WE[t.id]={component:t}),WE[t.id].textureURL=e,YE[e]&&t._updateFontTexture(YE[e])},getFontOf:function t(e){const n=WE[e.id];return!n&&e.parentUI?t(e.parentUI):n},addFont:function(t,e,n){n.generateMipmaps=!1,n.minFilter=jI.LinearFilter,n.magFilter=jI.LinearFilter,GE.push(t),HE[t]=e,JE(e),n&&(qE.push(t),YE[t]=n)}};class XE{static requestUpdate(t,e,n,i){t.traverse(t=>{t.isUI&&(this.requestedUpdates[t.id]?(e&&(this.requestedUpdates[t.id].updateParsing=!0),n&&(this.requestedUpdates[t.id].updateLayout=!0),i&&(this.requestedUpdates[t.id].updateInner=!0)):this.requestedUpdates[t.id]={updateParsing:e,updateLayout:n,updateInner:i,needCallback:e||n||i})})}static register(t){this.components.includes(t)||this.components.push(t)}static disposeOf(t){const e=this.components.indexOf(t);e>-1&&this.components.splice(e,1)}static update(){if(Object.keys(this.requestedUpdates).length>0){const t=this.components.filter(t=>!t.parentUI);t.forEach(t=>this.traverseParsing(t)),t.forEach(t=>this.traverseUpdates(t))}}static traverseParsing(t){const e=this.requestedUpdates[t.id];e&&e.updateParsing&&(t.parseParams(),e.updateParsing=!1),t.childrenUIs.forEach(t=>this.traverseParsing(t))}static traverseUpdates(t){const e=this.requestedUpdates[t.id];delete this.requestedUpdates[t.id],e&&e.updateLayout&&(e.updateLayout=!1,t.updateLayout()),e&&e.updateInner&&(e.updateInner=!1,t.updateInner()),t.childrenUIs.forEach(t=>{this.traverseUpdates(t)}),e&&e.needCallback&&t.onAfterUpdate()}}XE.components=[],XE.requestedUpdates={};const KE={container:null,fontFamily:null,fontSize:.05,fontKerning:"normal",bestFit:"none",offset:.01,interLine:.01,breakOn:"- ,.:?!\n",whiteSpace:IE,contentDirection:ZI,alignItems:nE,justifyContent:cE,textAlign:RE,textType:"MSDF",fontColor:new jI.Color(16777215),fontOpacity:1,fontPXRange:4,fontSupersampling:!0,borderRadius:.01,borderWidth:0,borderColor:new jI.Color("black"),borderOpacity:1,backgroundSize:"cover",backgroundColor:new jI.Color(2236962),backgroundWhiteColor:new jI.Color(16777215),backgroundOpacity:.8,backgroundOpaqueOpacity:1,getDefaultTexture:function(){if(!ZE){const t=document.createElement("canvas").getContext("2d");t.canvas.width=1,t.canvas.height=1,t.fillStyle="#ffffff",t.fillRect(0,0,1,1),ZE=new jI.CanvasTexture(t.canvas),ZE.isDefault=!0}return ZE},hiddenOverflow:!1,letterSpacing:0};let ZE;function $E(t){return class extends t{constructor(t){super(t),this.states={},this.currentState=void 0,this.isUI=!0,this.autoLayout=!0,this.childrenUIs=[],this.childrenBoxes=[],this.childrenTexts=[],this.childrenInlines=[],this.parentUI=null,this.addEventListener("added",this._rebuildParentUI),this.addEventListener("removed",this._rebuildParentUI)}getClippingPlanes(){const t=[];if(this.parentUI){if(this.isBlock&&this.parentUI.getHiddenOverflow()){const e=this.parentUI.getHeight()/2-(this.parentUI.padding||0),n=this.parentUI.getWidth()/2-(this.parentUI.padding||0),i=[new jI.Plane(new jI.Vector3(0,1,0),e),new jI.Plane(new jI.Vector3(0,-1,0),e),new jI.Plane(new jI.Vector3(1,0,0),n),new jI.Plane(new jI.Vector3(-1,0,0),n)];i.forEach(t=>{t.applyMatrix4(this.parent.matrixWorld)}),t.push(...i)}this.parentUI.parentUI&&t.push(...this.parentUI.getClippingPlanes())}return t}getHighestParent(){return this.parentUI?this.parent.getHighestParent():this}_getProperty(t){return void 0===this[t]&&this.parentUI?this.parent._getProperty(t):void 0!==this[t]?this[t]:KE[t]}getFontSize(){return this._getProperty("fontSize")}getFontKerning(){return this._getProperty("fontKerning")}getLetterSpacing(){return this._getProperty("letterSpacing")}getFontTexture(){return void 0===this.fontTexture&&this.parentUI?this.parent._getProperty("fontTexture"):void 0!==this.fontTexture?this.fontTexture:KE.getDefaultTexture()}getFontFamily(){return this._getProperty("fontFamily")}getBreakOn(){return this._getProperty("breakOn")}getWhiteSpace(){return this._getProperty("whiteSpace")}getTextAlign(){return this._getProperty("textAlign")}getTextType(){return this._getProperty("textType")}getFontColor(){return this._getProperty("fontColor")}getFontSupersampling(){return this._getProperty("fontSupersampling")}getFontOpacity(){return this._getProperty("fontOpacity")}getFontPXRange(){return this._getProperty("fontPXRange")}getBorderRadius(){return this._getProperty("borderRadius")}getBorderWidth(){return this._getProperty("borderWidth")}getBorderColor(){return this._getProperty("borderColor")}getBorderOpacity(){return this._getProperty("borderOpacity")}getContainer(){return!this.threeOBJ&&this.parent?this.parent.getContainer():this.threeOBJ?this:KE.container}getParentsNumber(t){return t=t||0,this.parentUI?this.parentUI.getParentsNumber(t+1):t}getBackgroundOpacity(){return this.backgroundOpacity||0===this.backgroundOpacity?this.backgroundOpacity:KE.backgroundOpacity}getBackgroundColor(){return this.backgroundColor||KE.backgroundColor}getBackgroundTexture(){return this.backgroundTexture||KE.getDefaultTexture()}getAlignContent(){return this.alignContent||KE.alignContent}getAlignItems(){return this.alignItems||KE.alignItems}getContentDirection(){return this.contentDirection||KE.contentDirection}getJustifyContent(){return this.justifyContent||KE.justifyContent}getInterLine(){return void 0===this.interLine?KE.interLine:this.interLine}getOffset(){return void 0===this.offset?KE.offset:this.offset}getBackgroundSize(){return void 0===this.backgroundSize?KE.backgroundSize:this.backgroundSize}getHiddenOverflow(){return void 0===this.hiddenOverflow?KE.hiddenOverflow:this.hiddenOverflow}getBestFit(){return void 0===this.bestFit?KE.bestFit:this.bestFit}_rebuildChildrenLists(){this.childrenUIs=this.children.filter(t=>t.isUI),this.childrenBoxes=this.children.filter(t=>t.isBoxComponent),this.childrenInlines=this.children.filter(t=>t.isInline),this.childrenTexts=this.children.filter(t=>t.isText)}_rebuildParentUI=()=>{this.parent&&this.parent.isUI?this.parentUI=this.parent:this.parentUI=null};add(){for(const t of Object.keys(arguments))arguments[t].isInline&&this.update(null,!0);const t=super.add(...arguments);return this._rebuildChildrenLists(),t}remove(){for(const t of Object.keys(arguments))arguments[t].isInline&&this.update(null,!0);const t=super.remove(...arguments);return this._rebuildChildrenLists(),t}update(t,e,n){XE.requestUpdate(this,t,e,n)}onAfterUpdate(){}_updateFontFamily(t){this.fontFamily=t,this.traverse(t=>{t.isUI&&t.update(!0,!0,!1)}),this.getHighestParent().update(!1,!0,!1)}_updateFontTexture(t){this.fontTexture=t,this.getHighestParent().update(!1,!0,!1)}set(t){let e,n,i;if(XE.register(this),t&&JSON.stringify(t)!==JSON.stringify({})){t.alignContent&&(t.alignItems=t.alignContent,t.textAlign||(t.textAlign=t.alignContent),console.warn("`alignContent` property has been deprecated, please rely on `alignItems` and `textAlign` instead."),delete t.alignContent),t.alignItems&&aE(t.alignItems);for(const r of Object.keys(t))if(this[r]!=t[r])switch(r){case"content":case"fontSize":case"fontKerning":case"breakOn":case"whiteSpace":this.isText&&(e=!0),n=!0,this[r]=t[r];break;case"bestFit":this.isBlock&&(e=!0,n=!0),this[r]=t[r];break;case"width":case"height":case"padding":(this.isInlineBlock||this.isBlock&&"none"!=this.getBestFit())&&(e=!0),n=!0,this[r]=t[r];break;case"letterSpacing":case"interLine":this.isBlock&&"none"!=this.getBestFit()&&(e=!0),n=!0,this[r]=t[r];break;case"margin":case"contentDirection":case"justifyContent":case"alignContent":case"alignItems":case"textAlign":case"textType":n=!0,this[r]=t[r];break;case"fontColor":case"fontOpacity":case"fontSupersampling":case"offset":case"backgroundColor":case"backgroundOpacity":case"backgroundTexture":case"backgroundSize":case"borderRadius":case"borderWidth":case"borderColor":case"borderOpacity":i=!0,this[r]=t[r];break;case"hiddenOverflow":this[r]=t[r]}t.fontFamily&&jE.setFontFamily(this,t.fontFamily),t.fontTexture&&jE.setFontTexture(this,t.fontTexture),this.parentUI&&"none"!=this.parentUI.getBestFit()&&this.parentUI.update(!0,!0,!1),this.update(e,n,i),n&&this.getHighestParent().update(!1,!0,!1)}}setupState(t){this.states[t.state]={attributes:t.attributes,onSet:t.onSet}}setState(t){const e=this.states[t];e?t!==this.currentState&&(this.currentState=t,e.onSet&&e.onSet(),e.attributes&&this.set(e.attributes)):console.warn(`state "${t}" does not exist within this component:`,this.name)}clear(){this.traverse(t=>{XE.disposeOf(t),t.material&&t.material.dispose(),t.geometry&&t.geometry.dispose()})}}}function tw(t){return class extends t{constructor(t){super(t),this.textUniforms={u_texture:{value:this.getFontTexture()},u_color:{value:this.getFontColor()},u_opacity:{value:this.getFontOpacity()},u_pxRange:{value:this.getFontPXRange()},u_useRGSS:{value:this.getFontSupersampling()}},this.backgroundUniforms={u_texture:{value:this.getBackgroundTexture()},u_color:{value:this.getBackgroundColor()},u_opacity:{value:this.getBackgroundOpacity()},u_backgroundMapping:{value:this.getBackgroundSize()},u_borderWidth:{value:this.getBorderWidth()},u_borderColor:{value:this.getBorderColor()},u_borderRadiusTopLeft:{value:this.getBorderRadius()},u_borderRadiusTopRight:{value:this.getBorderRadius()},u_borderRadiusBottomRight:{value:this.getBorderRadius()},u_borderRadiusBottomLeft:{value:this.getBorderRadius()},u_borderOpacity:{value:this.getBorderOpacity()},u_size:{value:new jI.Vector2(1,1)},u_tSize:{value:new jI.Vector2(1,1)}}}updateBackgroundMaterial(){this.backgroundUniforms.u_texture.value=this.getBackgroundTexture(),this.backgroundUniforms.u_tSize.value.set(this.backgroundUniforms.u_texture.value.image.width,this.backgroundUniforms.u_texture.value.image.height),this.size&&this.backgroundUniforms.u_size.value.copy(this.size),this.backgroundUniforms.u_texture.value.isDefault?(this.backgroundUniforms.u_color.value=this.getBackgroundColor(),this.backgroundUniforms.u_opacity.value=this.getBackgroundOpacity()):(this.backgroundUniforms.u_color.value=this.backgroundColor||KE.backgroundWhiteColor,this.backgroundUniforms.u_opacity.value=this.backgroundOpacity||0===this.backgroundOpacity?this.backgroundOpacity:KE.backgroundOpaqueOpacity),this.backgroundUniforms.u_backgroundMapping.value=(()=>{switch(this.getBackgroundSize()){case"stretch":return 0;case"contain":return 1;case"cover":return 2}})();const t=this.getBorderRadius();this.backgroundUniforms.u_borderWidth.value=this.getBorderWidth(),this.backgroundUniforms.u_borderColor.value=this.getBorderColor(),this.backgroundUniforms.u_borderOpacity.value=this.getBorderOpacity(),Array.isArray(t)?(this.backgroundUniforms.u_borderRadiusTopLeft.value=t[0],this.backgroundUniforms.u_borderRadiusTopRight.value=t[1],this.backgroundUniforms.u_borderRadiusBottomRight.value=t[2],this.backgroundUniforms.u_borderRadiusBottomLeft.value=t[3]):(this.backgroundUniforms.u_borderRadiusTopLeft.value=t,this.backgroundUniforms.u_borderRadiusTopRight.value=t,this.backgroundUniforms.u_borderRadiusBottomRight.value=t,this.backgroundUniforms.u_borderRadiusBottomLeft.value=t)}updateTextMaterial(){this.textUniforms.u_texture.value=this.getFontTexture(),this.textUniforms.u_color.value=this.getFontColor(),this.textUniforms.u_opacity.value=this.getFontOpacity(),this.textUniforms.u_pxRange.value=this.getFontPXRange(),this.textUniforms.u_useRGSS.value=this.getFontSupersampling()}getBackgroundMaterial(){return this.backgroundMaterial&&this.backgroundUniforms||(this.backgroundMaterial=this._makeBackgroundMaterial()),this.backgroundMaterial}getFontMaterial(){return this.fontMaterial&&this.textUniforms||(this.fontMaterial=this._makeTextMaterial()),this.fontMaterial}_makeTextMaterial(){return new jI.ShaderMaterial({uniforms:this.textUniforms,transparent:!0,clipping:!0,vertexShader:ew,fragmentShader:nw,extensions:{derivatives:!0}})}_makeBackgroundMaterial(){return new jI.ShaderMaterial({uniforms:this.backgroundUniforms,transparent:!0,clipping:!0,vertexShader:iw,fragmentShader:rw,extensions:{derivatives:!0}})}updateClippingPlanes(t){const e=void 0!==t?t:this.getClippingPlanes();JSON.stringify(e)!==JSON.stringify(this.clippingPlanes)&&(this.clippingPlanes=e,this.fontMaterial&&(this.fontMaterial.clippingPlanes=this.clippingPlanes),this.backgroundMaterial&&(this.backgroundMaterial.clippingPlanes=this.clippingPlanes))}}}const ew="\nvarying vec2 vUv;\n\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvUv = uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\tgl_Position.z -= 0.00001;\n\n\t#include <clipping_planes_vertex>\n\n}\n",nw="\n\nuniform sampler2D u_texture;\nuniform vec3 u_color;\nuniform float u_opacity;\nuniform float u_pxRange;\nuniform bool u_useRGSS;\n\nvarying vec2 vUv;\n\n#include <clipping_planes_pars_fragment>\n\n// functions from the original msdf repo:\n// https://github.com/Chlumsky/msdfgen#using-a-multi-channel-distance-field\n\nfloat median(float r, float g, float b) {\n\treturn max(min(r, g), min(max(r, g), b));\n}\n\nfloat screenPxRange() {\n\tvec2 unitRange = vec2(u_pxRange)/vec2(textureSize(u_texture, 0));\n\tvec2 screenTexSize = vec2(1.0)/fwidth(vUv);\n\treturn max(0.5*dot(unitRange, screenTexSize), 1.0);\n}\n\nfloat tap(vec2 offsetUV) {\n\tvec3 msd = texture( u_texture, offsetUV ).rgb;\n\tfloat sd = median(msd.r, msd.g, msd.b);\n\tfloat screenPxDistance = screenPxRange() * (sd - 0.5);\n\tfloat alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n\treturn alpha;\n}\n\nvoid main() {\n\n\tfloat alpha;\n\n\tif ( u_useRGSS ) {\n\n\t\t// shader-based supersampling based on https://bgolus.medium.com/sharper-mipmapping-using-shader-based-supersampling-ed7aadb47bec\n\t\t// per pixel partial derivatives\n\t\tvec2 dx = dFdx(vUv);\n\t\tvec2 dy = dFdy(vUv);\n\n\t\t// rotated grid uv offsets\n\t\tvec2 uvOffsets = vec2(0.125, 0.375);\n\t\tvec2 offsetUV = vec2(0.0, 0.0);\n\n\t\t// supersampled using 2x2 rotated grid\n\t\talpha = 0.0;\n\t\toffsetUV.xy = vUv + uvOffsets.x * dx + uvOffsets.y * dy;\n\t\talpha += tap(offsetUV);\n\t\toffsetUV.xy = vUv - uvOffsets.x * dx - uvOffsets.y * dy;\n\t\talpha += tap(offsetUV);\n\t\toffsetUV.xy = vUv + uvOffsets.y * dx - uvOffsets.x * dy;\n\t\talpha += tap(offsetUV);\n\t\toffsetUV.xy = vUv - uvOffsets.y * dx + uvOffsets.x * dy;\n\t\talpha += tap(offsetUV);\n\t\talpha *= 0.25;\n\n\t} else {\n\n\t\talpha = tap( vUv );\n\n\t}\n\n\n\t// apply the opacity\n\talpha *= u_opacity;\n\n\t// this is useful to avoid z-fighting when quads overlap because of kerning\n\tif ( alpha < 0.02) discard;\n\n\n\tgl_FragColor = vec4( u_color, alpha );\n\n\t#include <clipping_planes_fragment>\n\n}\n",iw="\nvarying vec2 vUv;\n\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvUv = uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <clipping_planes_vertex>\n\n}\n",rw="\n\nuniform sampler2D u_texture;\nuniform vec3 u_color;\nuniform float u_opacity;\n\nuniform float u_borderRadiusTopLeft;\nuniform float u_borderRadiusTopRight;\nuniform float u_borderRadiusBottomLeft;\nuniform float u_borderRadiusBottomRight;\nuniform float u_borderWidth;\nuniform vec3 u_borderColor;\nuniform float u_borderOpacity;\nuniform vec2 u_size;\nuniform vec2 u_tSize;\nuniform int u_backgroundMapping;\n\nvarying vec2 vUv;\n\n#include <clipping_planes_pars_fragment>\n\nfloat getEdgeDist() {\n\tvec2 ndc = vec2( vUv.x * 2.0 - 1.0, vUv.y * 2.0 - 1.0 );\n\tvec2 planeSpaceCoord = vec2( u_size.x * 0.5 * ndc.x, u_size.y * 0.5 * ndc.y );\n\tvec2 corner = u_size * 0.5;\n\tvec2 offsetCorner = corner - abs( planeSpaceCoord );\n\tfloat innerRadDist = min( offsetCorner.x, offsetCorner.y ) * -1.0;\n\tif (vUv.x < 0.5 && vUv.y >= 0.5) {\n\t\tfloat roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusTopLeft, 0.0 ) ) - u_borderRadiusTopLeft;\n\t\tfloat s = step( innerRadDist * -1.0, u_borderRadiusTopLeft );\n\t\treturn mix( innerRadDist, roundedDist, s );\n\t}\n\tif (vUv.x >= 0.5 && vUv.y >= 0.5) {\n\t\tfloat roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusTopRight, 0.0 ) ) - u_borderRadiusTopRight;\n\t\tfloat s = step( innerRadDist * -1.0, u_borderRadiusTopRight );\n\t\treturn mix( innerRadDist, roundedDist, s );\n\t}\n\tif (vUv.x >= 0.5 && vUv.y < 0.5) {\n\t\tfloat roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusBottomRight, 0.0 ) ) - u_borderRadiusBottomRight;\n\t\tfloat s = step( innerRadDist * -1.0, u_borderRadiusBottomRight );\n\t\treturn mix( innerRadDist, roundedDist, s );\n\t}\n\tif (vUv.x < 0.5 && vUv.y < 0.5) {\n\t\tfloat roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusBottomLeft, 0.0 ) ) - u_borderRadiusBottomLeft;\n\t\tfloat s = step( innerRadDist * -1.0, u_borderRadiusBottomLeft );\n\t\treturn mix( innerRadDist, roundedDist, s );\n\t}\n}\n\nvec4 sampleTexture() {\n\tfloat textureRatio = u_tSize.x / u_tSize.y;\n\tfloat panelRatio = u_size.x / u_size.y;\n\tvec2 uv = vUv;\n\tif ( u_backgroundMapping == 1 ) { // contain\n\t\tif ( textureRatio < panelRatio ) { // repeat on X\n\t\t\tfloat newX = uv.x * ( panelRatio / textureRatio );\n\t\t\tnewX += 0.5 - 0.5 * ( panelRatio / textureRatio );\n\t\t\tuv.x = newX;\n\t\t} else { // repeat on Y\n\t\t\tfloat newY = uv.y * ( textureRatio / panelRatio );\n\t\t\tnewY += 0.5 - 0.5 * ( textureRatio / panelRatio );\n\t\t\tuv.y = newY;\n\t\t}\n\t} else if ( u_backgroundMapping == 2 ) { // cover\n\t\tif ( textureRatio < panelRatio ) { // stretch on Y\n\t\t\tfloat newY = uv.y * ( textureRatio / panelRatio );\n\t\t\tnewY += 0.5 - 0.5 * ( textureRatio / panelRatio );\n\t\t\tuv.y = newY;\n\t\t} else { // stretch on X\n\t\t\tfloat newX = uv.x * ( panelRatio / textureRatio );\n\t\t\tnewX += 0.5 - 0.5 * ( panelRatio / textureRatio );\n\t\t\tuv.x = newX;\n\t\t}\n\t}\n\treturn texture2D( u_texture, uv ).rgba;\n}\n\nvoid main() {\n\n\tfloat edgeDist = getEdgeDist();\n\tfloat change = fwidth( edgeDist );\n\n\tvec4 textureSample = sampleTexture();\n\tvec3 blendedColor = textureSample.rgb * u_color;\n\n\tfloat alpha = smoothstep( change, 0.0, edgeDist );\n\tfloat blendedOpacity = u_opacity * textureSample.a * alpha;\n\n\tvec4 frameColor = vec4( blendedColor, blendedOpacity );\n\n\tif ( u_borderWidth <= 0.0 ) {\n\t\tgl_FragColor = frameColor;\n\t} else {\n\t\tvec4 borderColor = vec4( u_borderColor, u_borderOpacity * alpha );\n\t\tfloat stp = smoothstep( edgeDist + change, edgeDist, u_borderWidth * -1.0 );\n\t\tgl_FragColor = mix( frameColor, borderColor, stp );\n\t}\n\n\t#include <clipping_planes_fragment>\n}\n";class sw extends jI.Mesh{constructor(t){super(new jI.PlaneGeometry,t),this.castShadow=!0,this.receiveShadow=!0,this.name="MeshUI-Frame"}}let aw=null;function ow(...t){if(!aw)throw new Error("Cannot use mixins with Base null");let e=aw;aw=null;let n,i=t.length;for(;--i>=0;)n=t[i],e=n(e);return e}ow.withBase=t=>(aw=t,ow);class lw extends(ow.withBase(jI.Object3D)(mE,OE,tw,$E)){constructor(t){super(t),this.isBlock=!0,this.size=new jI.Vector2(1,1),this.frame=new sw(this.getBackgroundMaterial()),this.frame.onBeforeRender=()=>{this.updateClippingPlanes&&this.updateClippingPlanes()},this.add(this.frame),this.set(t)}parseParams(){const t=this.getBestFit();"none"!=t&&this.childrenTexts.length?this.calculateBestFit(t):this.childrenTexts.forEach(t=>{t._fitFontSize=void 0})}updateLayout(){const t=this.getWidth(),e=this.getHeight();t&&e?(this.size.set(t,e),this.frame.scale.set(t,e,1),this.frame&&this.updateBackgroundMaterial(),this.frame.renderOrder=this.getParentsNumber(),this.autoLayout&&this.setPosFromParentRecords(),this.childrenInlines.length&&this.computeInlinesPosition(),this.computeChildrenPosition(),this.parentUI&&(this.position.z=this.getOffset())):console.warn("Block got no dimension from its parameters or from children parameters")}updateInner(){this.parentUI&&(this.position.z=this.getOffset()),this.frame&&this.updateBackgroundMaterial()}}function cw(t){return class extends t{constructor(t){super(t),this.isInline=!0}}}function hw(t){let e,n,i,r=0;for(let s=0;s<t.length;++s){const a=t[s];if(a.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(void 0===e&&(e=a.array.constructor),e!==a.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(void 0===n&&(n=a.itemSize),n!==a.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(void 0===i&&(i=a.normalized),i!==a.normalized)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;r+=a.array.length}const s=new e(r);let a=0;for(let e=0;e<t.length;++e)s.set(t[e].array,a),a+=t[e].array.length;return new jI.BufferAttribute(s,n,i)}class Aw extends jI.PlaneGeometry{constructor(t,e){const n=t.glyph,i=t.fontSize;super(t.width,t.height),null===n.match(/\s/g)?(-1===e.info.charset.indexOf(n)&&console.error(`The character '${n}' is not included in the font characters set.`),this.mapUVs(e,n),this.transformGeometry(t)):(this.nullifyUVs(),this.scale(0,0,1),this.translate(0,i/2,0))}mapUVs(t,e){const n=t.chars.find(t=>t.char===e),i=t.common,r=n.x/i.scaleW,s=(n.x+n.width)/i.scaleW,a=1-(n.y+n.height)/i.scaleH,o=1-n.y/i.scaleH,l=this.attributes.uv;for(let t=0;t<l.count;t++){let e=l.getX(t),n=l.getY(t);[e,n]=(()=>{switch(t){case 0:return[r,o];case 1:return[s,o];case 2:return[r,a];case 3:return[s,a]}})(),l.setXY(t,e,n)}}nullifyUVs(){const t=this.attributes.uv;for(let e=0;e<t.count;e++)t.setXY(e,0,0)}transformGeometry(t){this.translate(t.width/2,t.height/2,0)}}const uw={getGlyphDimensions:function(t){const e=t.font,n=t.fontSize,i=t.glyph,r=n/e.info.size,s=e.chars.find(t=>t.char===i);let a=s?s.width*r:n/3,o=s?s.height*r:0;0===a&&(a=s?s.xadvance*r:n),0===o&&(o=.7*n),"\n"===i&&(a=0);const l=s?s.xadvance*r:a,c=s?s.xoffset*r:0;return{width:a,height:o,anchor:s?s.yoffset*r:0,xadvance:l,xoffset:c}},getGlyphPairKerning:function(t,e){const n=t._kernings;return n[e]?n[e]:0},buildText:function(){const t=[];this.inlines.forEach((e,n)=>{t[n]=new Aw(e,this.getFontFamily()),t[n].translate(e.offsetX,e.offsetY,0)});const e=function(t,e=!1){const n=null!==t[0].index,i=new Set(Object.keys(t[0].attributes)),r=new Set(Object.keys(t[0].morphAttributes)),s={},a={},o=t[0].morphTargetsRelative,l=new jI.BufferGeometry;let c=0;for(let h=0;h<t.length;++h){const A=t[h];let u=0;if(n!==(null!==A.index))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+h+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const t in A.attributes){if(!i.has(t))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+h+'. All geometries must have compatible attributes; make sure "'+t+'" attribute exists among all geometries, or in none of them.'),null;void 0===s[t]&&(s[t]=[]),s[t].push(A.attributes[t]),u++}if(u!==i.size)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+h+". Make sure all geometries have the same number of attributes."),null;if(o!==A.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+h+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const t in A.morphAttributes){if(!r.has(t))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+h+".  .morphAttributes must be consistent throughout all geometries."),null;void 0===a[t]&&(a[t]=[]),a[t].push(A.morphAttributes[t])}if(l.userData.mergedUserData=l.userData.mergedUserData||[],l.userData.mergedUserData.push(A.userData),e){let t;if(n)t=A.index.count;else{if(void 0===A.attributes.position)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+h+". The geometry must have either an index or a position attribute"),null;t=A.attributes.position.count}l.addGroup(c,t,h),c+=t}}if(n){let e=0;const n=[];for(let i=0;i<t.length;++i){const r=t[i].index;for(let t=0;t<r.count;++t)n.push(r.getX(t)+e);e+=t[i].attributes.position.count}l.setIndex(n)}for(const t in s){const e=hw(s[t]);if(!e)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+t+" attribute."),null;l.setAttribute(t,e)}for(const t in a){const e=a[t][0].length;if(0===e)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[t]=[];for(let n=0;n<e;++n){const e=[];for(let i=0;i<a[t].length;++i)e.push(a[t][i][n]);const i=hw(e);if(!i)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+t+" morphAttribute."),null;l.morphAttributes[t].push(i)}}return l}(t);return new jI.Mesh(e,this.getFontMaterial())}};function dw(t){return class extends t{createText(){const t=this,e=(()=>{if("MSDF"===this.getTextType())return uw.buildText.call(this);console.warn(`'${this.getTextType()}' is not a supported text type.\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type`)})();return e.renderOrder=1/0,e.onBeforeRender=function(){t.updateClippingPlanes&&t.updateClippingPlanes()},e}getGlyphDimensions(t){if("MSDF"===t.textType)return uw.getGlyphDimensions(t);console.warn(`'${t.textType}' is not a supported text type.\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type`)}getGlyphPairKerning(t,e,n){if("MSDF"===t)return uw.getGlyphPairKerning(e,n);console.warn(`'${t}' is not a supported text type.\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type`)}}}const pw=function t(e){e.children.forEach(n=>{n.children.length>0&&t(n),e.remove(n),XE.disposeOf(n),n.material&&n.material.dispose(),n.geometry&&n.geometry.dispose()}),e.children=[]};class gw extends(ow.withBase(jI.Object3D)(cw,dw,tw,$E)){constructor(t){super(t),this.isText=!0,this.set(t)}parseParams(){this.calculateInlines(this._fitFontSize||this.getFontSize())}updateLayout(){pw(this),this.inlines&&(this.textContent=this.createText(),this.updateTextMaterial(),this.add(this.textContent)),this.position.z=this.getOffset()}updateInner(){this.position.z=this.getOffset(),this.textContent&&this.updateTextMaterial()}calculateInlines(t){const e=this.content,n=this.getFontFamily(),i=this.getBreakOn(),r=this.getTextType(),s=this.getWhiteSpace();if(!n||"string"==typeof n)return void(jE.getFontOf(this)||console.warn("no font was found"));if(!this.content)return void(this.inlines=null);if(!r)return void console.error("You must provide a 'textType' attribute so three-mesh-ui knows how to render your text.\n See https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type");const a=wE(e,s),o=Array.from?Array.from(a):String(a).split(""),l=t/n.info.size,c=n.common.lineHeight*l,h=n.common.base*l,A=o.map(e=>{const a=this.getGlyphDimensions({textType:r,glyph:e,font:n,fontSize:t});let o=null;return s!==xE&&(i.includes(e)||e.match(/\s/g))&&(o="possible"),e.match(/\n/g)&&(o=_E(s)),{height:a.height,width:a.width,anchor:a.anchor,xadvance:a.xadvance,xoffset:a.xoffset,lineBreak:o,glyph:e,fontSize:t,lineHeight:c,lineBase:h}});if("none"!==this.getFontKerning())for(let e=1;e<A.length;e++){const i=A[e],s=A[e-1].glyph+A[e].glyph,a=this.getGlyphPairKerning(r,n,s);i.kerning=a*(t/n.info.size)}this.inlines=A}}class fw extends(ow.withBase(jI.Object3D)(cw,mE,OE,tw,$E)){constructor(t){super(t),this.isInlineBlock=!0,this.size=new jI.Vector2(1,1),this.frame=new sw(this.getBackgroundMaterial()),this.frame.onBeforeRender=()=>{this.updateClippingPlanes&&this.updateClippingPlanes()},this.add(this.frame),this.set(t)}parseParams(){this.width||console.warn("inlineBlock has no width. Set to 0.3 by default"),this.height||console.warn("inlineBlock has no height. Set to 0.3 by default"),this.inlines=[{height:this.height||.3,width:this.width||.3,anchor:0,lineBreak:"possible"}]}updateLayout(){const t=this.getWidth(),e=this.getHeight();if(this.inlines){const t=this.inlines[0];this.position.set(t.width/2,t.height/2,0),this.position.x+=t.offsetX,this.position.y+=t.offsetY}this.size.set(t,e),this.frame.scale.set(t,e,1),this.frame&&this.updateBackgroundMaterial(),this.frame.renderOrder=this.getParentsNumber(),this.childrenInlines.length&&this.computeInlinesPosition(),this.computeChildrenPosition(),this.position.z=this.getOffset()}updateInner(){this.position.z=this.getOffset(),this.frame&&this.updateBackgroundMaterial()}}const mw=[[[{width:.1,chars:[{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"l",upperCase:"L"}]},{width:.1,chars:[{lowerCase:"m",upperCase:"M"}]}],[{width:.2,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"n",upperCase:"N"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],yw=[[[{width:.1,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"l",upperCase:"L"}]}],[{width:.15,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"n",upperCase:"N"}]},{width:.1,chars:[{lowerCase:"m",upperCase:"M"}]},{width:.15,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],vw=[[[{width:1/12,chars:[{lowerCase:"й",upperCase:"Й"},{lowerCase:"q",upperCase:"Q"}]},{width:1/12,chars:[{lowerCase:"ц",upperCase:"Ц"},{lowerCase:"w",upperCase:"W"}]},{width:1/12,chars:[{lowerCase:"у",upperCase:"У"},{lowerCase:"e",upperCase:"E"}]},{width:1/12,chars:[{lowerCase:"к",upperCase:"К"},{lowerCase:"r",upperCase:"R"}]},{width:1/12,chars:[{lowerCase:"е",upperCase:"Е"},{lowerCase:"t",upperCase:"T"}]},{width:1/12,chars:[{lowerCase:"н",upperCase:"Н"},{lowerCase:"y",upperCase:"Y"}]},{width:1/12,chars:[{lowerCase:"г",upperCase:"Г"},{lowerCase:"u",upperCase:"U"}]},{width:1/12,chars:[{lowerCase:"ш",upperCase:"Ш"},{lowerCase:"i",upperCase:"I"}]},{width:1/12,chars:[{lowerCase:"щ",upperCase:"Щ"},{lowerCase:"o",upperCase:"O"}]},{width:1/12,chars:[{lowerCase:"з",upperCase:"З"},{lowerCase:"p",upperCase:"P"}]},{width:1/12,chars:[{lowerCase:"х",upperCase:"Х"},{lowerCase:"{",upperCase:"["}]},{width:1/12,chars:[{lowerCase:"ъ",upperCase:"Ъ"},{lowerCase:"}",upperCase:"]"}]}],[{width:1/12,chars:[{lowerCase:"ф",upperCase:"Ф"},{lowerCase:"a",upperCase:"A"}]},{width:1/12,chars:[{lowerCase:"ы",upperCase:"Ы"},{lowerCase:"s",upperCase:"S"}]},{width:1/12,chars:[{lowerCase:"в",upperCase:"В"},{lowerCase:"d",upperCase:"D"}]},{width:1/12,chars:[{lowerCase:"а",upperCase:"А"},{lowerCase:"f",upperCase:"F"}]},{width:1/12,chars:[{lowerCase:"п",upperCase:"П"},{lowerCase:"g",upperCase:"G"}]},{width:1/12,chars:[{lowerCase:"р",upperCase:"Р"},{lowerCase:"h",upperCase:"H"}]},{width:1/12,chars:[{lowerCase:"о",upperCase:"О"},{lowerCase:"j",upperCase:"J"}]},{width:1/12,chars:[{lowerCase:"л",upperCase:"Л"},{lowerCase:"k",upperCase:"K"}]},{width:1/12,chars:[{lowerCase:"д",upperCase:"Д"},{lowerCase:"l",upperCase:"L"}]},{width:1/12,chars:[{lowerCase:"ж",upperCase:"Ж"},{lowerCase:":",upperCase:";"}]},{width:1/12,chars:[{lowerCase:"э",upperCase:"Э"},{lowerCase:'"',upperCase:"'"}]},{width:1/12,chars:[{lowerCase:"ё",upperCase:"Ё"},{lowerCase:"|",upperCase:"\\"}]}],[{width:.125,command:"shift",chars:[{icon:"shift"}]},{width:1/12,chars:[{lowerCase:"я",upperCase:"Я"},{lowerCase:"z",upperCase:"Z"}]},{width:1/12,chars:[{lowerCase:"ч",upperCase:"Ч"},{lowerCase:"x",upperCase:"X"}]},{width:1/12,chars:[{lowerCase:"с",upperCase:"С"},{lowerCase:"c",upperCase:"C"}]},{width:1/12,chars:[{lowerCase:"м",upperCase:"М"},{lowerCase:"v",upperCase:"V"}]},{width:1/12,chars:[{lowerCase:"и",upperCase:"И"},{lowerCase:"b",upperCase:"B"}]},{width:1/12,chars:[{lowerCase:"т",upperCase:"Т"},{lowerCase:"n",upperCase:"N"}]},{width:1/12,chars:[{lowerCase:"ь",upperCase:"Ь"},{lowerCase:"m",upperCase:"M"}]},{width:1/12,chars:[{lowerCase:"б",upperCase:"Б"},{lowerCase:",",upperCase:""}]},{width:1/12,chars:[{lowerCase:"ю",upperCase:"Ю"},{lowerCase:".",upperCase:""}]},{width:.125,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.15,command:"switch-set",chars:[{lowerCase:"eng"}]},{width:.15,command:"switch",chars:[{lowerCase:".?12"}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.3,command:"switch",chars:[{lowerCase:"АБВ"}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],xw=[[[{width:1/11,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:1/11,chars:[{lowerCase:"w",upperCase:"W"}]},{width:1/11,chars:[{lowerCase:"e",upperCase:"E"}]},{width:1/11,chars:[{lowerCase:"r",upperCase:"R"}]},{width:1/11,chars:[{lowerCase:"t",upperCase:"T"}]},{width:1/11,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:1/11,chars:[{lowerCase:"u",upperCase:"U"}]},{width:1/11,chars:[{lowerCase:"i",upperCase:"I"}]},{width:1/11,chars:[{lowerCase:"o",upperCase:"O"}]},{width:1/11,chars:[{lowerCase:"p",upperCase:"P"}]},{width:1/11,chars:[{lowerCase:"ü",upperCase:"Ü"}]}],[{width:1/11,chars:[{lowerCase:"a",upperCase:"A"}]},{width:1/11,chars:[{lowerCase:"s",upperCase:"S"}]},{width:1/11,chars:[{lowerCase:"d",upperCase:"D"}]},{width:1/11,chars:[{lowerCase:"f",upperCase:"F"}]},{width:1/11,chars:[{lowerCase:"g",upperCase:"G"}]},{width:1/11,chars:[{lowerCase:"h",upperCase:"H"}]},{width:1/11,chars:[{lowerCase:"j",upperCase:"J"}]},{width:1/11,chars:[{lowerCase:"k",upperCase:"K"}]},{width:1/11,chars:[{lowerCase:"l",upperCase:"L"}]},{width:1/11,chars:[{lowerCase:"ö",upperCase:"Ö"}]},{width:1/11,chars:[{lowerCase:"ä",upperCase:"Ä"}]}],[{width:2/11,command:"shift",chars:[{icon:"shift"}]},{width:1/11,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:1/11,chars:[{lowerCase:"x",upperCase:"X"}]},{width:1/11,chars:[{lowerCase:"c",upperCase:"C"}]},{width:1/11,chars:[{lowerCase:"v",upperCase:"V"}]},{width:1/11,chars:[{lowerCase:"b",upperCase:"B"}]},{width:1/11,chars:[{lowerCase:"n",upperCase:"N"}]},{width:1/11,chars:[{lowerCase:"m",upperCase:"M"}]},{width:2/11,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],Cw=[[[{width:.1,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"l",upperCase:"L"}]},{width:.1,chars:[{lowerCase:"ñ",upperCase:"Ñ"}]}],[{width:.15,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"n",upperCase:"N"}]},{width:.1,chars:[{lowerCase:"m",upperCase:"M"}]},{width:.15,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],Iw=[[[{width:.1,chars:[{lowerCase:";",upperCase:":"},{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"ς",upperCase:"ς"},{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"ε",upperCase:"Ε"},{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"ρ",upperCase:"Ρ"},{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"τ",upperCase:"Τ"},{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"υ",upperCase:"Υ"},{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"θ",upperCase:"Θ"},{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"ι",upperCase:"Ι"},{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"ο",upperCase:"Ο"},{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"π",upperCase:"Π"},{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"α",upperCase:"Α"},{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"σ",upperCase:"Σ"},{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"δ",upperCase:"Δ"},{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"φ",upperCase:"Φ"},{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"γ",upperCase:"Γ"},{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"η",upperCase:"Η"},{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"ξ",upperCase:"Ξ"},{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"κ",upperCase:"Κ"},{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"λ",upperCase:"Λ"},{lowerCase:"l",upperCase:"L"}]}],[{width:.15,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"ζ",upperCase:"Ζ"},{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"χ",upperCase:"Χ"},{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"ψ",upperCase:"Ψ"},{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"ω",upperCase:"Ω"},{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"β",upperCase:"Β"},{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"ν",upperCase:"Ν"},{lowerCase:"n",upperCase:"N"}]},{width:.1,chars:[{lowerCase:"μ",upperCase:"Μ"},{lowerCase:"m",upperCase:"M"}]},{width:.15,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.15,command:"switch-set",chars:[{lowerCase:"eng"}]},{width:.15,command:"switch",chars:[{lowerCase:".?12"}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],Ew=[[[{width:1/11,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:1/11,chars:[{lowerCase:"w",upperCase:"W"}]},{width:1/11,chars:[{lowerCase:"e",upperCase:"E"}]},{width:1/11,chars:[{lowerCase:"r",upperCase:"R"}]},{width:1/11,chars:[{lowerCase:"t",upperCase:"T"}]},{width:1/11,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:1/11,chars:[{lowerCase:"u",upperCase:"U"}]},{width:1/11,chars:[{lowerCase:"i",upperCase:"I"}]},{width:1/11,chars:[{lowerCase:"o",upperCase:"O"}]},{width:1/11,chars:[{lowerCase:"p",upperCase:"P"}]},{width:1/11,chars:[{lowerCase:"å",upperCase:"Å"}]}],[{width:1/11,chars:[{lowerCase:"a",upperCase:"A"}]},{width:1/11,chars:[{lowerCase:"s",upperCase:"S"}]},{width:1/11,chars:[{lowerCase:"d",upperCase:"D"}]},{width:1/11,chars:[{lowerCase:"f",upperCase:"F"}]},{width:1/11,chars:[{lowerCase:"g",upperCase:"G"}]},{width:1/11,chars:[{lowerCase:"h",upperCase:"H"}]},{width:1/11,chars:[{lowerCase:"j",upperCase:"J"}]},{width:1/11,chars:[{lowerCase:"k",upperCase:"K"}]},{width:1/11,chars:[{lowerCase:"l",upperCase:"L"}]},{width:1/11,chars:[{lowerCase:"æ",upperCase:"Æ"}]},{width:1/11,chars:[{lowerCase:"ø",upperCase:"Ø"}]}],[{width:2/11,command:"shift",chars:[{icon:"shift"}]},{width:1/11,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:1/11,chars:[{lowerCase:"x",upperCase:"X"}]},{width:1/11,chars:[{lowerCase:"c",upperCase:"C"}]},{width:1/11,chars:[{lowerCase:"v",upperCase:"V"}]},{width:1/11,chars:[{lowerCase:"b",upperCase:"B"}]},{width:1/11,chars:[{lowerCase:"n",upperCase:"N"}]},{width:1/11,chars:[{lowerCase:"m",upperCase:"M"}]},{width:2/11,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],ww=new jI.TextureLoader;class _w extends(ow.withBase(jI.Object3D)(mE,$E)){constructor(t){let e;if(t||(t={}),t.width||(t.width=1),t.height||(t.height=.4),t.margin||(t.margin=.003),t.padding||(t.padding=.01),super(t),this.currentPanel=0,this.isLowerCase=!0,this.charsetCount=1,t.language||navigator.language)switch(t.language||navigator.language){case"fr":case"fr-CH":case"fr-CA":e=mw;break;case"ru":this.charsetCount=2,e=vw;break;case"de":case"de-DE":case"de-AT":case"de-LI":case"de-CH":e=xw;break;case"es":case"es-419":case"es-AR":case"es-CL":case"es-CO":case"es-ES":case"es-CR":case"es-US":case"es-HN":case"es-MX":case"es-PE":case"es-UY":case"es-VE":e=Cw;break;case"el":this.charsetCount=2,e=Iw;break;case"nord":e=Ew;break;default:e=yw}else e=yw;this.keys=[],this.panels=e.map(e=>{const n=t.height/e.length-2*t.margin,i=new lw({width:t.width+2*t.padding,height:t.height+2*t.padding,offset:0,padding:t.padding,fontFamily:t.fontFamily,fontTexture:t.fontTexture,backgroundColor:t.backgroundColor,backgroundOpacity:t.backgroundOpacity});return i.charset=0,i.add(...e.map(e=>{const r=new lw({width:t.width,height:n,margin:t.margin,contentDirection:"row",justifyContent:"center"});r.frame.visible=!1;const s=[];return e.forEach(e=>{const r=new lw({width:t.width*e.width-2*t.margin,height:n,margin:t.margin,justifyContent:"center",offset:0}),a=e.chars[i.charset].lowerCase||e.chars[i.charset].icon||"undif";if("enter"===a&&t.enterTexture||"shift"===a&&t.shiftTexture||"backspace"===a&&t.backspaceTexture){const e=(()=>{switch(a){case"backspace":return t.backspaceTexture;case"enter":return t.enterTexture;case"shift":return t.shiftTexture;default:console.warn("There is no icon image for this key")}})();ww.load(e,t=>{r.add(new fw({width:.65*r.width,height:.65*r.height,backgroundSize:"contain",backgroundTexture:t}))})}else r.add(new gw({content:a,offset:0}));r.type="Key",r.info=e,r.info.input=a,r.panel=i,s.push(r),this.keys.push(r)}),r.add(...s),r})),i}),this.add(this.panels[0]),this.set(t)}setNextPanel(){this.panels.forEach(t=>{this.remove(t)}),this.currentPanel=(this.currentPanel+1)%this.panels.length,this.add(this.panels[this.currentPanel]),this.update(!0,!0,!0)}setNextCharset(){this.panels[this.currentPanel].charset=(this.panels[this.currentPanel].charset+1)%this.charsetCount,this.keys.forEach(t=>{if(!this.panels[this.currentPanel].getObjectById(t.id))return;const e=t.info.chars[t.panel.charset]||t.info.chars[0],n=this.isLowerCase||!e.upperCase?e.lowerCase:e.upperCase;if(!t.childrenTexts.length)return;const i=t.childrenTexts[0];t.info.input=n,i.set({content:n}),i.update(!0,!0,!0)})}toggleCase(){this.isLowerCase=!this.isLowerCase,this.keys.forEach(t=>{const e=t.info.chars[t.panel.charset]||t.info.chars[0],n=this.isLowerCase||!e.upperCase?e.lowerCase:e.upperCase;if(!t.childrenTexts.length)return;const i=t.childrenTexts[0];t.info.input=n,i.set({content:n}),i.update(!0,!0,!0)})}parseParams(){}updateLayout(){}updateInner(){}}const bw=()=>XE.update(),Bw={Block:lw,Text:gw,InlineBlock:fw,Keyboard:_w,FontLibrary:jE,update:bw,TextAlign:JI,Whitespace:WI,JustifyContent:YI,AlignItems:qI,ContentDirection:VI};void 0!==n.g&&(n.g.ThreeMeshUI=Bw);const Sw=Bw;var Mw=HI.ZP;function Tw(t,e,n){return null===t?null:(t.point.applyMatrix4(e.matrixWorld),t.distance=t.point.distanceTo(n.ray.origin),t.object=e,t)}const Qw=0,Dw=1,Rw=2,Uw=0,Pw=1,Lw=2,Fw=1.25,Nw=1,kw=32,Ow=65535,zw=Math.pow(2,-24),Gw=Symbol("SKIP_GENERATION");function Hw(t){return t.index?t.index.count:t.attributes.position.count}function Vw(t){return Hw(t)/3}function qw(t,e=ArrayBuffer){return t>65535?new Uint32Array(new e(4*t)):new Uint16Array(new e(2*t))}function Yw(t,e){const n=Vw(t),i=e||t.drawRange,r=i.start/3,s=(i.start+i.count)/3,a=Math.max(0,r),o=Math.min(n,s)-a;return[{offset:Math.floor(a),count:Math.floor(o)}]}function Ww(t,e){if(!t.groups||!t.groups.length)return Yw(t,e);const n=[],i=new Set,r=e||t.drawRange,s=r.start/3,a=(r.start+r.count)/3;for(const e of t.groups){const t=e.start/3,n=(e.start+e.count)/3;i.add(Math.max(s,t)),i.add(Math.min(a,n))}const o=Array.from(i.values()).sort((t,e)=>t-e);for(let t=0;t<o.length-1;t++){const e=o[t],i=o[t+1];n.push({offset:Math.floor(e),count:Math.floor(i-e)})}return n}function Jw(t,e,n,i,r){let s=1/0,a=1/0,o=1/0,l=-1/0,c=-1/0,h=-1/0,A=1/0,u=1/0,d=1/0,p=-1/0,g=-1/0,f=-1/0;for(let i=6*e,r=6*(e+n);i<r;i+=6){const e=t[i+0],n=t[i+1],r=e-n,m=e+n;r<s&&(s=r),m>l&&(l=m),e<A&&(A=e),e>p&&(p=e);const y=t[i+2],v=t[i+3],x=y-v,C=y+v;x<a&&(a=x),C>c&&(c=C),y<u&&(u=y),y>g&&(g=y);const I=t[i+4],E=t[i+5],w=I-E,_=I+E;w<o&&(o=w),_>h&&(h=_),I<d&&(d=I),I>f&&(f=I)}i[0]=s,i[1]=a,i[2]=o,i[3]=l,i[4]=c,i[5]=h,r[0]=A,r[1]=u,r[2]=d,r[3]=p,r[4]=g,r[5]=f}function jw(t,e,n){return n.min.x=e[t],n.min.y=e[t+1],n.min.z=e[t+2],n.max.x=e[t+3],n.max.y=e[t+4],n.max.z=e[t+5],n}function Xw(t){let e=-1,n=-1/0;for(let i=0;i<3;i++){const r=t[i+3]-t[i];r>n&&(n=r,e=i)}return e}function Kw(t,e){e.set(t)}function Zw(t,e,n){let i,r;for(let s=0;s<3;s++){const a=s+3;i=t[s],r=e[s],n[s]=i<r?i:r,i=t[a],r=e[a],n[a]=i>r?i:r}}function $w(t,e,n){for(let i=0;i<3;i++){const r=e[t+2*i],s=e[t+2*i+1],a=r-s,o=r+s;a<n[i]&&(n[i]=a),o>n[i+3]&&(n[i+3]=o)}}function t_(t){const e=t[3]-t[0],n=t[4]-t[1],i=t[5]-t[2];return 2*(e*n+n*i+i*e)}const e_=(t,e)=>t.candidate-e.candidate,n_=new Array(32).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),i_=new Float32Array(6);class r_{constructor(){this.boundingData=new Float32Array(6)}}function s_(t,e,n,i,r,s){let a=i,o=i+r-1;const l=s.pos,c=2*s.axis;for(;;){for(;a<=o&&n[6*a+c]<l;)a++;for(;a<=o&&n[6*o+c]>=l;)o--;if(!(a<o))return a;for(let t=0;t<3;t++){let n=e[3*a+t];e[3*a+t]=e[3*o+t],e[3*o+t]=n}for(let t=0;t<6;t++){let e=n[6*a+t];n[6*a+t]=n[6*o+t],n[6*o+t]=e}a++,o--}}function a_(t,e,n,i,r,s){let a=i,o=i+r-1;const l=s.pos,c=2*s.axis;for(;;){for(;a<=o&&n[6*a+c]<l;)a++;for(;a<=o&&n[6*o+c]>=l;)o--;if(!(a<o))return a;{let e=t[a];t[a]=t[o],t[o]=e;for(let t=0;t<6;t++){let e=n[6*a+t];n[6*a+t]=n[6*o+t],n[6*o+t]=e}a++,o--}}}function o_(t,e){return 65535===e[t+15]}function l_(t,e){return e[t+6]}function c_(t,e){return e[t+14]}function h_(t){return t+8}function A_(t,e){return e[t+6]}function u_(t,e){return e[t+7]}function d_(t){return t}let p_,g_,f_,m_;const y_=Math.pow(2,32);function v_(t){return"count"in t?1:1+v_(t.left)+v_(t.right)}function x_(t,e,n){return p_=new Float32Array(n),g_=new Uint32Array(n),f_=new Uint16Array(n),m_=new Uint8Array(n),C_(t,e)}function C_(t,e){const n=t/4,i=t/2,r="count"in e,s=e.boundingData;for(let t=0;t<6;t++)p_[n+t]=s[t];if(r){if(e.buffer){const i=e.buffer;m_.set(new Uint8Array(i),t);for(let e=t,r=t+i.byteLength;e<r;e+=kw)o_(e/2,f_)||(g_[e/4+6]+=n);return t+i.byteLength}{const r=e.offset,s=e.count;return g_[n+6]=r,f_[i+14]=s,f_[i+15]=Ow,t+kw}}{const i=e.left,r=e.right,s=e.splitAxis;let a;if(a=C_(t+kw,i),a/4>y_)throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return g_[n+6]=a/4,a=C_(a,r),g_[n+7]=s,a}}function I_(t,e){const n=t.geometry;e.indirect&&(t._indirectBuffer=function(t,e){const n=(t.index?t.index.count:t.attributes.position.count)/3,i=n>65536,r=i?4:2,s=e?new SharedArrayBuffer(n*r):new ArrayBuffer(n*r),a=i?new Uint32Array(s):new Uint16Array(s);for(let t=0,e=a.length;t<e;t++)a[t]=t;return a}(n,e.useSharedArrayBuffer),function(t,e){const n=Vw(t),i=Ww(t,e).sort((t,e)=>t.offset-e.offset),r=i[i.length-1];r.count=Math.min(n-r.offset,r.count);let s=0;return i.forEach(({count:t})=>s+=t),n!==s}(n,e.range)&&!e.verbose&&console.warn('MeshBVH: Provided geometry contains groups or a range that do not fully span the vertex contents while using the "indirect" option. BVH may incorrectly report intersections on unrendered portions of the geometry.')),t._indirectBuffer||function(t,e){if(!t.index){const n=t.attributes.position.count,i=qw(n,e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer);t.setIndex(new Cs(i,1));for(let t=0;t<n;t++)i[t]=t}}(n,e);const i=e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer,r=function(t,e=null,n=null,i=null){const r=t.attributes.position,s=t.index?t.index.array:null,a=Vw(t),o=r.normalized;let l;null===e?(l=new Float32Array(6*a),n=0,i=a):(l=e,n=n||0,i=i||a);const c=r.array,h=r.offset||0;let A=3;r.isInterleavedBufferAttribute&&(A=r.data.stride);const u=["getX","getY","getZ"];for(let t=n;t<n+i;t++){const e=3*t,n=6*t;let i=e+0,a=e+1,d=e+2;s&&(i=s[i],a=s[a],d=s[d]),o||(i=i*A+h,a=a*A+h,d=d*A+h);for(let t=0;t<3;t++){let e,s,h;o?(e=r[u[t]](i),s=r[u[t]](a),h=r[u[t]](d)):(e=c[i+t],s=c[a+t],h=c[d+t]);let A=e;s<A&&(A=s),h<A&&(A=h);let p=e;s>p&&(p=s),h>p&&(p=h);const g=(p-A)/2,f=2*t;l[n+f+0]=A+g,l[n+f+1]=g+(Math.abs(A)+g)*zw}}return l}(n),s=e.indirect?Yw(n,e.range):Ww(n,e.range);t._roots=s.map(n=>{const s=function(t,e,n,i,r){const{maxDepth:s,verbose:a,maxLeafTris:o,strategy:l,onProgress:c,indirect:h}=r,A=t._indirectBuffer,u=t.geometry,d=u.index?u.index.array:null,p=h?a_:s_,g=Vw(u),f=new Float32Array(6);let m=!1;const y=new r_;return Jw(e,n,i,y.boundingData,f),function t(n,i,r,c=null,h=0){if(!m&&h>=s&&(m=!0,a&&(console.warn(`MeshBVH: Max depth of ${s} reached when generating BVH. Consider increasing maxDepth.`),console.warn(u))),r<=o||h>=s)return v(i+r),n.offset=i,n.count=r,n;const g=function(t,e,n,i,r,s){let a=-1,o=0;if(s===Qw)a=Xw(e),-1!==a&&(o=(e[a]+e[a+3])/2);else if(s===Dw)a=Xw(t),-1!==a&&(o=function(t,e,n,i){let r=0;for(let s=e,a=e+n;s<a;s++)r+=t[6*s+2*i];return r/n}(n,i,r,a));else if(s===Rw){const s=t_(t);let l=Fw*r;const c=6*i,h=6*(i+r);for(let t=0;t<3;t++){const i=e[t],A=(e[t+3]-i)/32;if(r<8){const e=[...n_];e.length=r;let i=0;for(let r=c;r<h;r+=6,i++){const s=e[i];s.candidate=n[r+2*t],s.count=0;const{bounds:a,leftCacheBounds:o,rightCacheBounds:l}=s;for(let t=0;t<3;t++)l[t]=1/0,l[t+3]=-1/0,o[t]=1/0,o[t+3]=-1/0,a[t]=1/0,a[t+3]=-1/0;$w(r,n,a)}e.sort(e_);let A=r;for(let t=0;t<A;t++){const n=e[t];for(;t+1<A&&e[t+1].candidate===n.candidate;)e.splice(t+1,1),A--}for(let i=c;i<h;i+=6){const r=n[i+2*t];for(let t=0;t<A;t++){const s=e[t];r>=s.candidate?$w(i,n,s.rightCacheBounds):($w(i,n,s.leftCacheBounds),s.count++)}}for(let n=0;n<A;n++){const i=e[n],c=i.count,h=r-i.count,A=i.leftCacheBounds,u=i.rightCacheBounds;let d=0;0!==c&&(d=t_(A)/s);let p=0;0!==h&&(p=t_(u)/s);const g=Nw+Fw*(d*c+p*h);g<l&&(a=t,l=g,o=i.candidate)}}else{for(let t=0;t<32;t++){const e=n_[t];e.count=0,e.candidate=i+A+t*A;const n=e.bounds;for(let t=0;t<3;t++)n[t]=1/0,n[t+3]=-1/0}for(let e=c;e<h;e+=6){let r=~~((n[e+2*t]-i)/A);r>=32&&(r=31);const s=n_[r];s.count++,$w(e,n,s.bounds)}const e=n_[31];Kw(e.bounds,e.rightCacheBounds);for(let t=30;t>=0;t--){const e=n_[t],n=n_[t+1];Zw(e.bounds,n.rightCacheBounds,e.rightCacheBounds)}let u=0;for(let e=0;e<31;e++){const n=n_[e],i=n.count,c=n.bounds,h=n_[e+1].rightCacheBounds;0!==i&&(0===u?Kw(c,i_):Zw(c,i_,i_)),u+=i;let A=0,d=0;0!==u&&(A=t_(i_)/s);const p=r-u;0!==p&&(d=t_(h)/s);const g=Nw+Fw*(A*u+d*p);g<l&&(a=t,l=g,o=n.candidate)}}}}else console.warn(`MeshBVH: Invalid build strategy value ${s} used.`);return{axis:a,pos:o}}(n.boundingData,c,e,i,r,l);if(-1===g.axis)return v(i+r),n.offset=i,n.count=r,n;const y=p(A,d,e,i,r,g);if(y===i||y===i+r)v(i+r),n.offset=i,n.count=r;else{n.splitAxis=g.axis;const s=new r_,a=i,o=y-i;n.left=s,Jw(e,a,o,s.boundingData,f),t(s,a,o,f,h+1);const l=new r_,c=y,A=r-o;n.right=l,Jw(e,c,A,l.boundingData,f),t(l,c,A,f,h+1)}return n}(y,n,i,f),y;function v(t){c&&c(t/g)}}(t,r,n.offset,n.count,e),a=v_(s),o=new i(kw*a);return x_(0,s,o),o})}class E_{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(t,e){let n=1/0,i=-1/0;for(let r=0,s=t.length;r<s;r++){const s=t[r][e];n=s<n?s:n,i=s>i?s:i}this.min=n,this.max=i}setFromPoints(t,e){let n=1/0,i=-1/0;for(let r=0,s=e.length;r<s;r++){const s=e[r],a=t.dot(s);n=a<n?a:n,i=a>i?a:i}this.min=n,this.max=i}isSeparated(t){return this.min>t.max||t.min>this.max}}E_.prototype.setFromBox=function(){const t=new hi;return function(e,n){const i=n.min,r=n.max;let s=1/0,a=-1/0;for(let n=0;n<=1;n++)for(let o=0;o<=1;o++)for(let l=0;l<=1;l++){t.x=i.x*n+r.x*(1-n),t.y=i.y*o+r.y*(1-o),t.z=i.z*l+r.z*(1-l);const c=e.dot(t);s=Math.min(c,s),a=Math.max(c,a)}this.min=s,this.max=a}}(),new E_;const w_=function(){const t=new hi,e=new hi,n=new hi;return function(i,r,s){const a=i.start,o=t,l=r.start,c=e;n.subVectors(a,l),t.subVectors(i.end,i.start),e.subVectors(r.end,r.start);const h=n.dot(c),A=c.dot(o),u=c.dot(c),d=n.dot(o),p=o.dot(o)*u-A*A;let g,f;g=0!==p?(h*A-d*u)/p:0,f=(h+g*A)/u,s.x=g,s.y=f}}(),__=function(){const t=new li,e=new hi,n=new hi;return function(i,r,s,a){w_(i,r,t);let o=t.x,l=t.y;if(o>=0&&o<=1&&l>=0&&l<=1)return i.at(o,s),void r.at(l,a);if(o>=0&&o<=1)return l<0?r.at(0,a):r.at(1,a),void i.closestPointToPoint(a,!0,s);if(l>=0&&l<=1)return o<0?i.at(0,s):i.at(1,s),void r.closestPointToPoint(s,!0,a);{let t,c;t=o<0?i.start:i.end,c=l<0?r.start:r.end;const h=e,A=n;return i.closestPointToPoint(c,!0,e),r.closestPointToPoint(t,!0,n),h.distanceToSquared(c)<=A.distanceToSquared(t)?(s.copy(h),void a.copy(c)):(s.copy(t),void a.copy(A))}}}(),b_=function(){const t=new hi,e=new hi,n=new go,i=new gu;return function(r,s){const{radius:a,center:o}=r,{a:l,b:c,c:h}=s;if(i.start=l,i.end=c,i.closestPointToPoint(o,!0,t).distanceTo(o)<=a)return!0;if(i.start=l,i.end=h,i.closestPointToPoint(o,!0,t).distanceTo(o)<=a)return!0;if(i.start=c,i.end=h,i.closestPointToPoint(o,!0,t).distanceTo(o)<=a)return!0;const A=s.getPlane(n);if(Math.abs(A.distanceToPoint(o))<=a){const t=A.projectPoint(o,e);if(s.containsPoint(t))return!0}return!1}}();function B_(t){return Math.abs(t)<1e-15}class S_ extends is{constructor(...t){super(...t),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new hi),this.satBounds=new Array(4).fill().map(()=>new E_),this.points=[this.a,this.b,this.c],this.sphere=new or,this.plane=new go,this.needsUpdate=!0}intersectsSphere(t){return b_(t,this)}update(){const t=this.a,e=this.b,n=this.c,i=this.points,r=this.satAxes,s=this.satBounds,a=r[0],o=s[0];this.getNormal(a),o.setFromPoints(a,i);const l=r[1],c=s[1];l.subVectors(t,e),c.setFromPoints(l,i);const h=r[2],A=s[2];h.subVectors(e,n),A.setFromPoints(h,i);const u=r[3],d=s[3];u.subVectors(n,t),d.setFromPoints(u,i),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(a,t),this.needsUpdate=!1}}S_.prototype.closestPointToSegment=function(){const t=new hi,e=new hi,n=new gu;return function(i,r=null,s=null){const{start:a,end:o}=i,l=this.points;let c,h=1/0;for(let a=0;a<3;a++){const o=(a+1)%3;n.start.copy(l[a]),n.end.copy(l[o]),__(n,i,t,e),c=t.distanceToSquared(e),c<h&&(h=c,r&&r.copy(t),s&&s.copy(e))}return this.closestPointToPoint(a,t),c=a.distanceToSquared(t),c<h&&(h=c,r&&r.copy(t),s&&s.copy(a)),this.closestPointToPoint(o,t),c=o.distanceToSquared(t),c<h&&(h=c,r&&r.copy(t),s&&s.copy(o)),Math.sqrt(h)}}(),S_.prototype.intersectsTriangle=function(){const t=new S_,e=new Array(3),n=new Array(3),i=new E_,r=new E_,s=new hi,a=new hi,o=new hi,l=new hi,c=new hi,h=new gu,A=new gu,u=new gu,d=new hi;function p(t,e,n){const i=t.points;let r=0,s=-1;for(let t=0;t<3;t++){const{start:o,end:l}=h;o.copy(i[t]),l.copy(i[(t+1)%3]),h.delta(a);const c=B_(e.distanceToPoint(o));if(B_(e.normal.dot(a))&&c){n.copy(h),r=2;break}const A=e.intersectLine(h,d);if(!A&&c&&d.copy(o),(A||c)&&!B_(d.distanceTo(l))){if(r<=1)(1===r?n.start:n.end).copy(d),c&&(s=r);else if(r>=2){(1===s?n.start:n.end).copy(d),r=2;break}if(r++,2===r&&-1===s)break}}return r}return function(a,h=null,d=!1){this.needsUpdate&&this.update(),a.isExtendedTriangle?a.needsUpdate&&a.update():(t.copy(a),t.update(),a=t);const g=this.plane,f=a.plane;if(Math.abs(g.normal.dot(f.normal))>1-1e-10){const t=this.satBounds,o=this.satAxes;n[0]=a.a,n[1]=a.b,n[2]=a.c;for(let e=0;e<4;e++){const r=t[e],s=o[e];if(i.setFromPoints(s,n),r.isSeparated(i))return!1}const l=a.satBounds,c=a.satAxes;e[0]=this.a,e[1]=this.b,e[2]=this.c;for(let t=0;t<4;t++){const n=l[t],r=c[t];if(i.setFromPoints(r,e),n.isSeparated(i))return!1}for(let t=0;t<4;t++){const a=o[t];for(let t=0;t<4;t++){const o=c[t];if(s.crossVectors(a,o),i.setFromPoints(s,e),r.setFromPoints(s,n),i.isSeparated(r))return!1}}return h&&(d||console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0."),h.start.set(0,0,0),h.end.set(0,0,0)),!0}{const t=p(this,f,A);if(1===t&&a.containsPoint(A.end))return h&&(h.start.copy(A.end),h.end.copy(A.end)),!0;if(2!==t)return!1;const e=p(a,g,u);if(1===e&&this.containsPoint(u.end))return h&&(h.start.copy(u.end),h.end.copy(u.end)),!0;if(2!==e)return!1;if(A.delta(o),u.delta(l),o.dot(l)<0){let t=u.start;u.start=u.end,u.end=t}const n=A.start.dot(o),i=A.end.dot(o),r=u.start.dot(o),s=u.end.dot(o);return(n===s||r===i||i<r!=n<s)&&(h&&(c.subVectors(A.start,u.start),c.dot(o)>0?h.start.copy(A.start):h.start.copy(u.start),c.subVectors(A.end,u.end),c.dot(o)<0?h.end.copy(A.end):h.end.copy(u.end)),!0)}}}(),S_.prototype.distanceToPoint=function(){const t=new hi;return function(e){return this.closestPointToPoint(e,t),e.distanceTo(t)}}(),S_.prototype.distanceToTriangle=function(){const t=new hi,e=new hi,n=["a","b","c"],i=new gu,r=new gu;return function(s,a=null,o=null){const l=a||o?i:null;if(this.intersectsTriangle(s,l))return(a||o)&&(a&&l.getCenter(a),o&&l.getCenter(o)),0;let c=1/0;for(let e=0;e<3;e++){let i;const r=n[e],l=s[r];this.closestPointToPoint(l,t),i=l.distanceToSquared(t),i<c&&(c=i,a&&a.copy(t),o&&o.copy(l));const h=this[r];s.closestPointToPoint(h,t),i=h.distanceToSquared(t),i<c&&(c=i,a&&a.copy(h),o&&o.copy(t))}for(let l=0;l<3;l++){const h=n[l],A=n[(l+1)%3];i.set(this[h],this[A]);for(let l=0;l<3;l++){const h=n[l],A=n[(l+1)%3];r.set(s[h],s[A]),__(i,r,t,e);const u=t.distanceToSquared(e);u<c&&(c=u,a&&a.copy(t),o&&o.copy(e))}}return Math.sqrt(c)}}();class M_{constructor(t,e,n){this.isOrientedBox=!0,this.min=new hi,this.max=new hi,this.matrix=new fr,this.invMatrix=new fr,this.points=new Array(8).fill().map(()=>new hi),this.satAxes=new Array(3).fill().map(()=>new hi),this.satBounds=new Array(3).fill().map(()=>new E_),this.alignedSatBounds=new Array(3).fill().map(()=>new E_),this.needsUpdate=!1,t&&this.min.copy(t),e&&this.max.copy(e),n&&this.matrix.copy(n)}set(t,e,n){this.min.copy(t),this.max.copy(e),this.matrix.copy(n),this.needsUpdate=!0}copy(t){this.min.copy(t.min),this.max.copy(t.max),this.matrix.copy(t.matrix),this.needsUpdate=!0}}M_.prototype.update=function(){const t=this.matrix,e=this.min,n=this.max,i=this.points;for(let r=0;r<=1;r++)for(let s=0;s<=1;s++)for(let a=0;a<=1;a++){const o=i[1*r|2*s|4*a];o.x=r?n.x:e.x,o.y=s?n.y:e.y,o.z=a?n.z:e.z,o.applyMatrix4(t)}const r=this.satBounds,s=this.satAxes,a=i[0];for(let t=0;t<3;t++){const e=s[t],n=r[t],o=i[1<<t];e.subVectors(a,o),n.setFromPoints(e,i)}const o=this.alignedSatBounds;o[0].setFromPointsField(i,"x"),o[1].setFromPointsField(i,"y"),o[2].setFromPointsField(i,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1},M_.prototype.intersectsBox=function(){const t=new E_;return function(e){this.needsUpdate&&this.update();const n=e.min,i=e.max,r=this.satBounds,s=this.satAxes,a=this.alignedSatBounds;if(t.min=n.x,t.max=i.x,a[0].isSeparated(t))return!1;if(t.min=n.y,t.max=i.y,a[1].isSeparated(t))return!1;if(t.min=n.z,t.max=i.z,a[2].isSeparated(t))return!1;for(let n=0;n<3;n++){const i=s[n],a=r[n];if(t.setFromBox(i,e),a.isSeparated(t))return!1}return!0}}(),M_.prototype.intersectsTriangle=function(){const t=new S_,e=new Array(3),n=new E_,i=new E_,r=new hi;return function(s){this.needsUpdate&&this.update(),s.isExtendedTriangle?s.needsUpdate&&s.update():(t.copy(s),t.update(),s=t);const a=this.satBounds,o=this.satAxes;e[0]=s.a,e[1]=s.b,e[2]=s.c;for(let t=0;t<3;t++){const i=a[t],r=o[t];if(n.setFromPoints(r,e),i.isSeparated(n))return!1}const l=s.satBounds,c=s.satAxes,h=this.points;for(let t=0;t<3;t++){const e=l[t],i=c[t];if(n.setFromPoints(i,h),e.isSeparated(n))return!1}for(let t=0;t<3;t++){const s=o[t];for(let t=0;t<4;t++){const a=c[t];if(r.crossVectors(s,a),n.setFromPoints(r,e),i.setFromPoints(r,h),n.isSeparated(i))return!1}}return!0}}(),M_.prototype.closestPointToPoint=function(t,e){return this.needsUpdate&&this.update(),e.copy(t).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),e},M_.prototype.distanceToPoint=function(){const t=new hi;return function(e){return this.closestPointToPoint(e,t),e.distanceTo(t)}}(),M_.prototype.distanceToBox=function(){const t=["x","y","z"],e=new Array(12).fill().map(()=>new gu),n=new Array(12).fill().map(()=>new gu),i=new hi,r=new hi;return function(s,a=0,o=null,l=null){if(this.needsUpdate&&this.update(),this.intersectsBox(s))return(o||l)&&(s.getCenter(r),this.closestPointToPoint(r,i),s.closestPointToPoint(i,r),o&&o.copy(i),l&&l.copy(r)),0;const c=a*a,h=s.min,A=s.max,u=this.points;let d=1/0;for(let t=0;t<8;t++){const e=u[t];r.copy(e).clamp(h,A);const n=e.distanceToSquared(r);if(n<d&&(d=n,o&&o.copy(e),l&&l.copy(r),n<c))return Math.sqrt(n)}let p=0;for(let i=0;i<3;i++)for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){const a=(i+1)%3,o=(i+2)%3,l=1<<i|r<<a|s<<o,c=u[r<<a|s<<o],d=u[l];e[p].set(c,d);const g=t[i],f=t[a],m=t[o],y=n[p],v=y.start,x=y.end;v[g]=h[g],v[f]=r?h[f]:A[f],v[m]=s?h[m]:A[f],x[g]=A[g],x[f]=r?h[f]:A[f],x[m]=s?h[m]:A[f],p++}for(let t=0;t<=1;t++)for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){r.x=t?A.x:h.x,r.y=e?A.y:h.y,r.z=n?A.z:h.z,this.closestPointToPoint(r,i);const s=r.distanceToSquared(i);if(s<d&&(d=s,o&&o.copy(i),l&&l.copy(r),s<c))return Math.sqrt(s)}for(let t=0;t<12;t++){const s=e[t];for(let t=0;t<12;t++){const e=n[t];__(s,e,i,r);const a=i.distanceToSquared(r);if(a<d&&(d=a,o&&o.copy(i),l&&l.copy(r),a<c))return Math.sqrt(a)}}return Math.sqrt(d)}}();class T_{constructor(t){this._getNewPrimitive=t,this._primitives=[]}getPrimitive(){const t=this._primitives;return 0===t.length?this._getNewPrimitive():t.pop()}releasePrimitive(t){this._primitives.push(t)}}class Q_ extends T_{constructor(){super(()=>new S_)}}const D_=new Q_,R_=new class{constructor(){this.float32Array=null,this.uint16Array=null,this.uint32Array=null;const t=[];let e=null;this.setBuffer=n=>{e&&t.push(e),e=n,this.float32Array=new Float32Array(n),this.uint16Array=new Uint16Array(n),this.uint32Array=new Uint32Array(n)},this.clearBuffer=()=>{e=null,this.float32Array=null,this.uint16Array=null,this.uint32Array=null,0!==t.length&&this.setBuffer(t.pop())}}};let U_,P_;const L_=[],F_=new T_(()=>new Hi);function N_(t,e,n,i,r,s){U_=F_.getPrimitive(),P_=F_.getPrimitive(),L_.push(U_,P_),R_.setBuffer(t._roots[e]);const a=k_(0,t.geometry,n,i,r,s);R_.clearBuffer(),F_.releasePrimitive(U_),F_.releasePrimitive(P_),L_.pop(),L_.pop();const o=L_.length;return o>0&&(P_=L_[o-1],U_=L_[o-2]),a}function k_(t,e,n,i,r=null,s=0,a=0){const{float32Array:o,uint16Array:l,uint32Array:c}=R_;let h=2*t;if(o_(h,l)){const A=l_(t,c),u=c_(h,l);return jw(t,o,U_),i(A,u,!1,a,s+t,U_)}{const d=h_(t),p=A_(t,c);let g,f,m,y,v=d,x=p;if(r&&(m=U_,y=P_,jw(v,o,m),jw(x,o,y),g=r(m),f=r(y),f<g)){v=p,x=d;const B=g;g=f,f=B,m=y}m||(m=U_,jw(v,o,m));const C=n(m,o_(2*v,l),g,a+1,s+v);let I;if(C===Lw){const S=_(v);I=i(S,b(v)-S,!0,a+1,s+v,m)}else I=C&&k_(v,e,n,i,r,s,a+1);if(I)return!0;y=P_,jw(x,o,y);const E=n(y,o_(2*x,l),f,a+1,s+x);let w;if(E===Lw){const M=_(x);w=i(M,b(x)-M,!0,a+1,s+x,y)}else w=E&&k_(x,e,n,i,r,s,a+1);return!!w;function _(t){const{uint16Array:e,uint32Array:n}=R_;let i=2*t;for(;!o_(i,e);)i=2*(t=h_(t));return l_(t,n)}function b(t){const{uint16Array:e,uint32Array:n}=R_;let i=2*t;for(;!o_(i,e);)i=2*(t=A_(t,n));return l_(t,n)+c_(i,e)}}}const O_=new hi,z_=new hi,G_=parseInt(h)>=169,H_=new hi,V_=new hi,q_=new hi,Y_=new li,W_=new li,J_=new li,j_=new hi,X_=new hi,K_=new hi,Z_=new hi;function $_(t,e,n,i,r,s,a){const o=3*i;let l=o+0,c=o+1,h=o+2;const A=t.index;t.index&&(l=A.getX(l),c=A.getX(c),h=A.getX(h));const{position:u,normal:d,uv:p,uv1:g}=t.attributes,f=function(t,e,n,i,r,s,a,o,l,c,h){H_.fromBufferAttribute(e,s),V_.fromBufferAttribute(e,a),q_.fromBufferAttribute(e,o);const A=function(t,e,n,i,r,s,a,o){let l;if(l=s===I?t.intersectTriangle(i,n,e,!0,r):t.intersectTriangle(e,n,i,s!==E,r),null===l)return null;const c=t.origin.distanceTo(r);return c<a||c>o?null:{distance:c,point:r.clone()}}(t,H_,V_,q_,Z_,l,c,h);if(A){const e=new hi;is.getBarycoord(Z_,H_,V_,q_,e),i&&(Y_.fromBufferAttribute(i,s),W_.fromBufferAttribute(i,a),J_.fromBufferAttribute(i,o),A.uv=is.getInterpolation(Z_,H_,V_,q_,Y_,W_,J_,new li)),r&&(Y_.fromBufferAttribute(r,s),W_.fromBufferAttribute(r,a),J_.fromBufferAttribute(r,o),A.uv1=is.getInterpolation(Z_,H_,V_,q_,Y_,W_,J_,new li)),n&&(j_.fromBufferAttribute(n,s),X_.fromBufferAttribute(n,a),K_.fromBufferAttribute(n,o),A.normal=is.getInterpolation(Z_,H_,V_,q_,j_,X_,K_,new hi),A.normal.dot(t.direction)>0&&A.normal.multiplyScalar(-1));const l={a:s,b:a,c:o,normal:new hi,materialIndex:0};is.getNormal(H_,V_,q_,l.normal),A.face=l,A.faceIndex=s,G_&&(A.barycoord=e)}return A}(n,u,d,p,g,l,c,h,e,s,a);return f?(f.faceIndex=i,r&&r.push(f),f):null}function tb(t,e,n,i){const r=t.a,s=t.b,a=t.c;let o=e,l=e+1,c=e+2;n&&(o=n.getX(o),l=n.getX(l),c=n.getX(c)),r.x=i.getX(o),r.y=i.getY(o),r.z=i.getZ(o),s.x=i.getX(l),s.y=i.getY(l),s.z=i.getZ(l),a.x=i.getX(c),a.y=i.getY(c),a.z=i.getZ(c)}const eb=new hi,nb=new hi,ib=new hi,rb=new li,sb=new li,ab=new li;function ob(t,e,n,i){const r=e.getIndex().array,s=e.getAttribute("position"),a=e.getAttribute("uv"),o=r[3*n],l=r[3*n+1],c=r[3*n+2];eb.fromBufferAttribute(s,o),nb.fromBufferAttribute(s,l),ib.fromBufferAttribute(s,c);let h=0;const A=e.groups,u=3*n;for(let t=0,e=A.length;t<e;t++){const e=A[t],{start:n,count:i}=e;if(u>=n&&u<n+i){h=e.materialIndex;break}}const d=i&&i.barycoord?i.barycoord:new hi;is.getBarycoord(t,eb,nb,ib,d);let p=null;return a&&(rb.fromBufferAttribute(a,o),sb.fromBufferAttribute(a,l),ab.fromBufferAttribute(a,c),p=i&&i.uv?i.uv:new li,is.getInterpolation(t,eb,nb,ib,rb,sb,ab,p)),i?(i.face||(i.face={}),i.face.a=o,i.face.b=l,i.face.c=c,i.face.materialIndex=h,i.face.normal||(i.face.normal=new hi),is.getNormal(eb,nb,ib,i.face.normal),p&&(i.uv=p),i.barycoord=d,i):{face:{a:o,b:l,c,materialIndex:h,normal:is.getNormal(eb,nb,ib,new hi)},uv:p,barycoord:d}}function lb(t,e,n,i,r,s,a){const{geometry:o}=n,{index:l}=o,c=o.attributes.position;for(let n=t,o=e+t;n<o;n++){let t;if(t=n,tb(a,3*t,l,c),a.needsUpdate=!0,i(a,t,r,s))return!0}return!1}function cb(t,e=null){e&&Array.isArray(e)&&(e=new Set(e));const n=t.geometry,i=n.index?n.index.array:null,r=n.attributes.position;let s,a,o,l,c=0;const h=t._roots;for(let t=0,e=h.length;t<e;t++)s=h[t],a=new Uint32Array(s),o=new Uint16Array(s),l=new Float32Array(s),A(0,c),c+=s.byteLength;function A(t,n,s=!1){const c=2*t;if(o[c+15]===Ow){const e=a[t+6];let n=1/0,s=1/0,h=1/0,A=-1/0,u=-1/0,d=-1/0;for(let t=3*e,a=3*(e+o[c+14]);t<a;t++){let e=i[t];const a=r.getX(e),o=r.getY(e),l=r.getZ(e);a<n&&(n=a),a>A&&(A=a),o<s&&(s=o),o>u&&(u=o),l<h&&(h=l),l>d&&(d=l)}return(l[t+0]!==n||l[t+1]!==s||l[t+2]!==h||l[t+3]!==A||l[t+4]!==u||l[t+5]!==d)&&(l[t+0]=n,l[t+1]=s,l[t+2]=h,l[t+3]=A,l[t+4]=u,l[t+5]=d,!0)}{const i=t+8,r=a[t+6],o=i+n,c=r+n;let h=s,u=!1,d=!1;e?h||(u=e.has(o),d=e.has(c),h=!u&&!d):(u=!0,d=!0);const p=h||d;let g=!1;(h||u)&&(g=A(i,n,h));let f=!1;p&&(f=A(r,n,h));const m=g||f;if(m)for(let e=0;e<3;e++){const n=i+e,s=r+e,a=l[n],o=l[n+3],c=l[s],h=l[s+3];l[t+e]=a<c?a:c,l[t+e+3]=o>h?o:h}return m}}}function hb(t,e,n,i,r){let s,a,o,l,c,h;const A=1/n.direction.x,u=1/n.direction.y,d=1/n.direction.z,p=n.origin.x,g=n.origin.y,f=n.origin.z;let m=e[t],y=e[t+3],v=e[t+1],x=e[t+3+1],C=e[t+2],I=e[t+3+2];return A>=0?(s=(m-p)*A,a=(y-p)*A):(s=(y-p)*A,a=(m-p)*A),u>=0?(o=(v-g)*u,l=(x-g)*u):(o=(x-g)*u,l=(v-g)*u),!(s>l||o>a)&&((o>s||isNaN(s))&&(s=o),(l<a||isNaN(a))&&(a=l),d>=0?(c=(C-f)*d,h=(I-f)*d):(c=(I-f)*d,h=(C-f)*d),!(s>h||c>a)&&((c>s||s!=s)&&(s=c),(h<a||a!=a)&&(a=h),s<=r&&a>=i))}function Ab(t,e,n,i,r,s,a){R_.setBuffer(t._roots[e]),ub(0,t,n,i,r,s,a),R_.clearBuffer()}function ub(t,e,n,i,r,s,a){const{float32Array:o,uint16Array:l,uint32Array:c}=R_,h=2*t;if(o_(h,l))!function(t,e,n,i,r,s,a,o){const{geometry:l,_indirectBuffer:c}=t;for(let t=i,c=i+r;t<c;t++)$_(l,e,n,t,s,a,o)}(e,n,i,l_(t,c),c_(h,l),r,s,a);else{const l=h_(t);hb(l,o,i,s,a)&&ub(l,e,n,i,r,s,a);const h=A_(t,c);hb(h,o,i,s,a)&&ub(h,e,n,i,r,s,a)}}const db=["x","y","z"];function pb(t,e,n,i,r,s){R_.setBuffer(t._roots[e]);const a=gb(0,t,n,i,r,s);return R_.clearBuffer(),a}function gb(t,e,n,i,r,s){const{float32Array:a,uint16Array:o,uint32Array:l}=R_;let c=2*t;if(o_(c,o))return function(t,e,n,i,r,s,a){const{geometry:o,_indirectBuffer:l}=t;let c=1/0,h=null;for(let t=i,l=i+r;t<l;t++){let i;i=$_(o,e,n,t,null,s,a),i&&i.distance<c&&(h=i,c=i.distance)}return h}(e,n,i,l_(t,l),c_(c,o),r,s);{const o=u_(t,l),c=db[o],h=i.direction[c]>=0;let A,u;h?(A=h_(t),u=A_(t,l)):(A=A_(t,l),u=h_(t));const d=hb(A,a,i,r,s)?gb(A,e,n,i,r,s):null;if(d){const t=d.point[c];if(h?t<=a[u+o]:t>=a[u+o+3])return d}const p=hb(u,a,i,r,s)?gb(u,e,n,i,r,s):null;return d&&p?d.distance<=p.distance?d:p:d||p||null}}const fb=new Hi,mb=new S_,yb=new S_,vb=new fr,xb=new M_,Cb=new M_;function Ib(t,e,n,i){R_.setBuffer(t._roots[e]);const r=Eb(0,t,n,i);return R_.clearBuffer(),r}function Eb(t,e,n,i,r=null){const{float32Array:s,uint16Array:a,uint32Array:o}=R_;let l=2*t;if(null===r&&(n.boundingBox||n.computeBoundingBox(),xb.set(n.boundingBox.min,n.boundingBox.max,i),r=xb),!o_(l,a)){const a=t+8,l=o[t+6];return jw(a,s,fb),r.intersectsBox(fb)&&Eb(a,e,n,i,r)?!0:(jw(l,s,fb),!(!r.intersectsBox(fb)||!Eb(l,e,n,i,r)))}{const r=e.geometry,c=r.index,h=r.attributes.position,A=n.index,u=n.attributes.position,d=l_(t,o),p=c_(l,a);if(vb.copy(i).invert(),n.boundsTree){jw(t,s,Cb),Cb.matrix.copy(vb),Cb.needsUpdate=!0;const e=n.boundsTree.shapecast({intersectsBounds:t=>Cb.intersectsBox(t),intersectsTriangle:t=>{t.a.applyMatrix4(i),t.b.applyMatrix4(i),t.c.applyMatrix4(i),t.needsUpdate=!0;for(let e=3*d,n=3*(p+d);e<n;e+=3)if(tb(yb,e,c,h),yb.needsUpdate=!0,t.intersectsTriangle(yb))return!0;return!1}});return e}for(let t=3*d,e=3*(p+d);t<e;t+=3){tb(mb,t,c,h),mb.a.applyMatrix4(vb),mb.b.applyMatrix4(vb),mb.c.applyMatrix4(vb),mb.needsUpdate=!0;for(let t=0,e=A.count;t<e;t+=3)if(tb(yb,t,A,u),yb.needsUpdate=!0,mb.intersectsTriangle(yb))return!0}}}const wb=new fr,_b=new M_,bb=new M_,Bb=new hi,Sb=new hi,Mb=new hi,Tb=new hi;function Qb(t,e,n,i={},r={},s=0,a=1/0){e.boundingBox||e.computeBoundingBox(),_b.set(e.boundingBox.min,e.boundingBox.max,n),_b.needsUpdate=!0;const o=t.geometry,l=o.attributes.position,c=o.index,h=e.attributes.position,A=e.index,u=D_.getPrimitive(),d=D_.getPrimitive();let p=Bb,g=Sb,f=null,m=null;r&&(f=Mb,m=Tb);let y=1/0,v=null,x=null;return wb.copy(n).invert(),bb.matrix.copy(wb),t.shapecast({boundsTraverseOrder:t=>_b.distanceToBox(t),intersectsBounds:(t,e,n)=>n<y&&n<a&&(e&&(bb.min.copy(t.min),bb.max.copy(t.max),bb.needsUpdate=!0),!0),intersectsRange:(t,i)=>{if(e.boundsTree)return e.boundsTree.shapecast({boundsTraverseOrder:t=>bb.distanceToBox(t),intersectsBounds:(t,e,n)=>n<y&&n<a,intersectsRange:(e,r)=>{for(let a=e,o=e+r;a<o;a++){tb(d,3*a,A,h),d.a.applyMatrix4(n),d.b.applyMatrix4(n),d.c.applyMatrix4(n),d.needsUpdate=!0;for(let e=t,n=t+i;e<n;e++){tb(u,3*e,c,l),u.needsUpdate=!0;const t=u.distanceToTriangle(d,p,f);if(t<y&&(g.copy(p),m&&m.copy(f),y=t,v=e,x=a),t<s)return!0}}}});for(let r=0,a=Vw(e);r<a;r++){tb(d,3*r,A,h),d.a.applyMatrix4(n),d.b.applyMatrix4(n),d.c.applyMatrix4(n),d.needsUpdate=!0;for(let e=t,n=t+i;e<n;e++){tb(u,3*e,c,l),u.needsUpdate=!0;const t=u.distanceToTriangle(d,p,f);if(t<y&&(g.copy(p),m&&m.copy(f),y=t,v=e,x=r),t<s)return!0}}}}),D_.releasePrimitive(u),D_.releasePrimitive(d),y===1/0?null:(i.point?i.point.copy(g):i.point=g.clone(),i.distance=y,i.faceIndex=v,r&&(r.point?r.point.copy(m):r.point=m.clone(),r.point.applyMatrix4(wb),g.applyMatrix4(wb),r.distance=g.sub(r.point).length(),r.faceIndex=x),i)}function Db(t,e,n,i,r,s,a){const{geometry:o}=n,{index:l}=o,c=o.attributes.position;for(let o=t,h=e+t;o<h;o++){let t;if(t=n.resolveTriangleIndex(o),tb(a,3*t,l,c),a.needsUpdate=!0,i(a,t,r,s))return!0}return!1}function Rb(t,e=null){e&&Array.isArray(e)&&(e=new Set(e));const n=t.geometry,i=n.index?n.index.array:null,r=n.attributes.position;let s,a,o,l,c=0;const h=t._roots;for(let t=0,e=h.length;t<e;t++)s=h[t],a=new Uint32Array(s),o=new Uint16Array(s),l=new Float32Array(s),A(0,c),c+=s.byteLength;function A(n,s,c=!1){const h=2*n;if(o[h+15]===Ow){const e=a[n+6];let s=1/0,c=1/0,A=1/0,u=-1/0,d=-1/0,p=-1/0;for(let n=e,a=e+o[h+14];n<a;n++){const e=3*t.resolveTriangleIndex(n);for(let t=0;t<3;t++){let n=e+t;n=i?i[n]:n;const a=r.getX(n),o=r.getY(n),l=r.getZ(n);a<s&&(s=a),a>u&&(u=a),o<c&&(c=o),o>d&&(d=o),l<A&&(A=l),l>p&&(p=l)}}return(l[n+0]!==s||l[n+1]!==c||l[n+2]!==A||l[n+3]!==u||l[n+4]!==d||l[n+5]!==p)&&(l[n+0]=s,l[n+1]=c,l[n+2]=A,l[n+3]=u,l[n+4]=d,l[n+5]=p,!0)}{const t=n+8,i=a[n+6],r=t+s,o=i+s;let h=c,u=!1,d=!1;e?h||(u=e.has(r),d=e.has(o),h=!u&&!d):(u=!0,d=!0);const p=h||d;let g=!1;(h||u)&&(g=A(t,s,h));let f=!1;p&&(f=A(i,s,h));const m=g||f;if(m)for(let e=0;e<3;e++){const r=t+e,s=i+e,a=l[r],o=l[r+3],c=l[s],h=l[s+3];l[n+e]=a<c?a:c,l[n+e+3]=o>h?o:h}return m}}}function Ub(t,e,n,i,r,s,a){R_.setBuffer(t._roots[e]),Pb(0,t,n,i,r,s,a),R_.clearBuffer()}function Pb(t,e,n,i,r,s,a){const{float32Array:o,uint16Array:l,uint32Array:c}=R_,h=2*t;if(o_(h,l))!function(t,e,n,i,r,s,a,o){const{geometry:l,_indirectBuffer:c}=t;for(let t=i,h=i+r;t<h;t++)$_(l,e,n,c?c[t]:t,s,a,o)}(e,n,i,l_(t,c),c_(h,l),r,s,a);else{const l=h_(t);hb(l,o,i,s,a)&&Pb(l,e,n,i,r,s,a);const h=A_(t,c);hb(h,o,i,s,a)&&Pb(h,e,n,i,r,s,a)}}const Lb=["x","y","z"];function Fb(t,e,n,i,r,s){R_.setBuffer(t._roots[e]);const a=Nb(0,t,n,i,r,s);return R_.clearBuffer(),a}function Nb(t,e,n,i,r,s){const{float32Array:a,uint16Array:o,uint32Array:l}=R_;let c=2*t;if(o_(c,o))return function(t,e,n,i,r,s,a){const{geometry:o,_indirectBuffer:l}=t;let c=1/0,h=null;for(let t=i,A=i+r;t<A;t++){let i;i=$_(o,e,n,l?l[t]:t,null,s,a),i&&i.distance<c&&(h=i,c=i.distance)}return h}(e,n,i,l_(t,l),c_(c,o),r,s);{const o=u_(t,l),c=Lb[o],h=i.direction[c]>=0;let A,u;h?(A=h_(t),u=A_(t,l)):(A=A_(t,l),u=h_(t));const d=hb(A,a,i,r,s)?Nb(A,e,n,i,r,s):null;if(d){const t=d.point[c];if(h?t<=a[u+o]:t>=a[u+o+3])return d}const p=hb(u,a,i,r,s)?Nb(u,e,n,i,r,s):null;return d&&p?d.distance<=p.distance?d:p:d||p||null}}const kb=new Hi,Ob=new S_,zb=new S_,Gb=new fr,Hb=new M_,Vb=new M_;function qb(t,e,n,i){R_.setBuffer(t._roots[e]);const r=Yb(0,t,n,i);return R_.clearBuffer(),r}function Yb(t,e,n,i,r=null){const{float32Array:s,uint16Array:a,uint32Array:o}=R_;let l=2*t;if(null===r&&(n.boundingBox||n.computeBoundingBox(),Hb.set(n.boundingBox.min,n.boundingBox.max,i),r=Hb),!o_(l,a)){const a=t+8,l=o[t+6];return jw(a,s,kb),r.intersectsBox(kb)&&Yb(a,e,n,i,r)?!0:(jw(l,s,kb),!(!r.intersectsBox(kb)||!Yb(l,e,n,i,r)))}{const r=e.geometry,c=r.index,h=r.attributes.position,A=n.index,u=n.attributes.position,d=l_(t,o),p=c_(l,a);if(Gb.copy(i).invert(),n.boundsTree){jw(t,s,Vb),Vb.matrix.copy(Gb),Vb.needsUpdate=!0;const r=n.boundsTree.shapecast({intersectsBounds:t=>Vb.intersectsBox(t),intersectsTriangle:t=>{t.a.applyMatrix4(i),t.b.applyMatrix4(i),t.c.applyMatrix4(i),t.needsUpdate=!0;for(let n=d,i=p+d;n<i;n++)if(tb(zb,3*e.resolveTriangleIndex(n),c,h),zb.needsUpdate=!0,t.intersectsTriangle(zb))return!0;return!1}});return r}for(let t=d,n=p+d;t<n;t++){const n=e.resolveTriangleIndex(t);tb(Ob,3*n,c,h),Ob.a.applyMatrix4(Gb),Ob.b.applyMatrix4(Gb),Ob.c.applyMatrix4(Gb),Ob.needsUpdate=!0;for(let t=0,e=A.count;t<e;t+=3)if(tb(zb,t,A,u),zb.needsUpdate=!0,Ob.intersectsTriangle(zb))return!0}}}const Wb=new fr,Jb=new M_,jb=new M_,Xb=new hi,Kb=new hi,Zb=new hi,$b=new hi;function tB(t,e,n,i={},r={},s=0,a=1/0){e.boundingBox||e.computeBoundingBox(),Jb.set(e.boundingBox.min,e.boundingBox.max,n),Jb.needsUpdate=!0;const o=t.geometry,l=o.attributes.position,c=o.index,h=e.attributes.position,A=e.index,u=D_.getPrimitive(),d=D_.getPrimitive();let p=Xb,g=Kb,f=null,m=null;r&&(f=Zb,m=$b);let y=1/0,v=null,x=null;return Wb.copy(n).invert(),jb.matrix.copy(Wb),t.shapecast({boundsTraverseOrder:t=>Jb.distanceToBox(t),intersectsBounds:(t,e,n)=>n<y&&n<a&&(e&&(jb.min.copy(t.min),jb.max.copy(t.max),jb.needsUpdate=!0),!0),intersectsRange:(i,r)=>{if(e.boundsTree){const o=e.boundsTree;return o.shapecast({boundsTraverseOrder:t=>jb.distanceToBox(t),intersectsBounds:(t,e,n)=>n<y&&n<a,intersectsRange:(e,a)=>{for(let C=e,I=e+a;C<I;C++){const e=o.resolveTriangleIndex(C);tb(d,3*e,A,h),d.a.applyMatrix4(n),d.b.applyMatrix4(n),d.c.applyMatrix4(n),d.needsUpdate=!0;for(let e=i,n=i+r;e<n;e++){const n=t.resolveTriangleIndex(e);tb(u,3*n,c,l),u.needsUpdate=!0;const i=u.distanceToTriangle(d,p,f);if(i<y&&(g.copy(p),m&&m.copy(f),y=i,v=e,x=C),i<s)return!0}}}})}for(let a=0,o=Vw(e);a<o;a++){tb(d,3*a,A,h),d.a.applyMatrix4(n),d.b.applyMatrix4(n),d.c.applyMatrix4(n),d.needsUpdate=!0;for(let e=i,n=i+r;e<n;e++){const n=t.resolveTriangleIndex(e);tb(u,3*n,c,l),u.needsUpdate=!0;const i=u.distanceToTriangle(d,p,f);if(i<y&&(g.copy(p),m&&m.copy(f),y=i,v=e,x=a),i<s)return!0}}}}),D_.releasePrimitive(u),D_.releasePrimitive(d),y===1/0?null:(i.point?i.point.copy(g):i.point=g.clone(),i.distance=y,i.faceIndex=v,r&&(r.point?r.point.copy(m):r.point=m.clone(),r.point.applyMatrix4(Wb),g.applyMatrix4(Wb),r.distance=g.sub(r.point).length(),r.faceIndex=x),i)}function eB(){return"undefined"!=typeof SharedArrayBuffer}const nB=new R_.constructor,iB=new R_.constructor,rB=new T_(()=>new Hi),sB=new Hi,aB=new Hi,oB=new Hi,lB=new Hi;let cB=!1;function hB(t,e,n,i,r,s=0,a=0,o=0,l=0,c=null,h=!1){let A,u;h?(A=iB,u=nB):(A=nB,u=iB);const d=A.float32Array,p=A.uint32Array,g=A.uint16Array,f=u.float32Array,m=u.uint32Array,y=u.uint16Array,v=2*e,x=o_(2*t,g),C=o_(v,y);let I=!1;if(C&&x)I=h?r(l_(e,m),c_(2*e,y),l_(t,p),c_(2*t,g),l,a+e,o,s+t):r(l_(t,p),c_(2*t,g),l_(e,m),c_(2*e,y),o,s+t,l,a+e);else if(C){const c=rB.getPrimitive();jw(e,f,c),c.applyMatrix4(n);const A=h_(t),u=A_(t,p);jw(A,d,sB),jw(u,d,aB);const g=c.intersectsBox(sB),m=c.intersectsBox(aB);I=g&&hB(e,A,i,n,r,a,s,l,o+1,c,!h)||m&&hB(e,u,i,n,r,a,s,l,o+1,c,!h),rB.releasePrimitive(c)}else{const A=h_(e),u=A_(e,m);jw(A,f,oB),jw(u,f,lB);const g=c.intersectsBox(oB),y=c.intersectsBox(lB);if(g&&y)I=hB(t,A,n,i,r,s,a,o,l+1,c,h)||hB(t,u,n,i,r,s,a,o,l+1,c,h);else if(g)if(x)I=hB(t,A,n,i,r,s,a,o,l+1,c,h);else{const e=rB.getPrimitive();e.copy(oB).applyMatrix4(n);const c=h_(t),u=A_(t,p);jw(c,d,sB),jw(u,d,aB);const g=e.intersectsBox(sB),f=e.intersectsBox(aB);I=g&&hB(A,c,i,n,r,a,s,l,o+1,e,!h)||f&&hB(A,u,i,n,r,a,s,l,o+1,e,!h),rB.releasePrimitive(e)}else if(y)if(x)I=hB(t,u,n,i,r,s,a,o,l+1,c,h);else{const e=rB.getPrimitive();e.copy(lB).applyMatrix4(n);const c=h_(t),A=A_(t,p);jw(c,d,sB),jw(A,d,aB);const g=e.intersectsBox(sB),f=e.intersectsBox(aB);I=g&&hB(u,c,i,n,r,a,s,l,o+1,e,!h)||f&&hB(u,A,i,n,r,a,s,l,o+1,e,!h),rB.releasePrimitive(e)}}return I}const AB=new M_,uB=new Hi,dB={strategy:Qw,maxDepth:40,maxLeafTris:10,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,indirect:!1,verbose:!0,range:null};class pB{static serialize(t,e={}){e={cloneBuffers:!0,...e};const n=t.geometry,i=t._roots,r=t._indirectBuffer,s=n.getIndex();let a;return a=e.cloneBuffers?{roots:i.map(t=>t.slice()),index:s?s.array.slice():null,indirectBuffer:r?r.slice():null}:{roots:i,index:s?s.array:null,indirectBuffer:r},a}static deserialize(t,e,n={}){n={setIndex:!0,indirect:Boolean(t.indirectBuffer),...n};const{index:i,roots:r,indirectBuffer:s}=t,a=new pB(e,{...n,[Gw]:!0});if(a._roots=r,a._indirectBuffer=s||null,n.setIndex){const n=e.getIndex();if(null===n){const n=new Cs(t.index,1,!1);e.setIndex(n)}else n.array!==i&&(n.array.set(i),n.needsUpdate=!0)}return a}get indirect(){return!!this._indirectBuffer}constructor(t,e={}){if(!t.isBufferGeometry)throw new Error("MeshBVH: Only BufferGeometries are supported.");if(t.index&&t.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.");if((e=Object.assign({...dB,[Gw]:!1},e)).useSharedArrayBuffer&&!eB())throw new Error("MeshBVH: SharedArrayBuffer is not available.");this.geometry=t,this._roots=null,this._indirectBuffer=null,e[Gw]||(I_(this,e),!t.boundingBox&&e.setBoundingBox&&(t.boundingBox=this.getBoundingBox(new Hi))),this.resolveTriangleIndex=e.indirect?t=>this._indirectBuffer[t]:t=>t}refit(t=null){return(this.indirect?Rb:cb)(this,t)}traverse(t,e=0){const n=this._roots[e],i=new Uint32Array(n),r=new Uint16Array(n);!function e(s,a=0){const o=2*s,l=r[o+15]===Ow;if(l){const e=i[s+6],c=r[o+14];t(a,l,new Float32Array(n,4*s,6),e,c)}else{const r=s+8,o=i[s+6],c=i[s+7];t(a,l,new Float32Array(n,4*s,6),c)||(e(r,a+1),e(o,a+1))}}(0)}raycast(t,e=C,n=0,i=1/0){const r=this._roots,s=this.geometry,a=[],o=e.isMaterial,l=Array.isArray(e),c=s.groups,h=o?e.side:e,A=this.indirect?Ub:Ab;for(let s=0,o=r.length;s<o;s++){const r=l?e[c[s].materialIndex].side:h,o=a.length;if(A(this,s,r,t,a,n,i),l){const t=c[s].materialIndex;for(let e=o,n=a.length;e<n;e++)a[e].face.materialIndex=t}}return a}raycastFirst(t,e=C,n=0,i=1/0){const r=this._roots,s=this.geometry,a=e.isMaterial,o=Array.isArray(e);let l=null;const c=s.groups,h=a?e.side:e,A=this.indirect?Fb:pb;for(let s=0,a=r.length;s<a;s++){const r=A(this,s,o?e[c[s].materialIndex].side:h,t,n,i);null!=r&&(null==l||r.distance<l.distance)&&(l=r,o&&(r.face.materialIndex=c[s].materialIndex))}return l}intersectsGeometry(t,e){let n=!1;const i=this._roots,r=this.indirect?qb:Ib;for(let s=0,a=i.length;s<a&&(n=r(this,s,t,e),!n);s++);return n}shapecast(t){const e=D_.getPrimitive(),n=this.indirect?Db:lb;let{boundsTraverseOrder:i,intersectsBounds:r,intersectsRange:s,intersectsTriangle:a}=t;if(s&&a){const t=s;s=(i,r,s,o,l)=>!!t(i,r,s,o,l)||n(i,r,this,a,s,o,e)}else s||(s=a?(t,i,r,s)=>n(t,i,this,a,r,s,e):(t,e,n)=>n);let o=!1,l=0;const c=this._roots;for(let t=0,e=c.length;t<e;t++){const e=c[t];if(o=N_(this,t,r,s,i,l),o)break;l+=e.byteLength}return D_.releasePrimitive(e),o}bvhcast(t,e,n){let{intersectsRanges:i,intersectsTriangles:r}=n;const s=D_.getPrimitive(),a=this.geometry.index,o=this.geometry.attributes.position,l=this.indirect?t=>{const e=this.resolveTriangleIndex(t);tb(s,3*e,a,o)}:t=>{tb(s,3*t,a,o)},c=D_.getPrimitive(),h=t.geometry.index,A=t.geometry.attributes.position,u=t.indirect?e=>{const n=t.resolveTriangleIndex(e);tb(c,3*n,h,A)}:t=>{tb(c,3*t,h,A)};if(r){const t=(t,n,i,a,o,h,A,d)=>{for(let p=i,g=i+a;p<g;p++){u(p),c.a.applyMatrix4(e),c.b.applyMatrix4(e),c.c.applyMatrix4(e),c.needsUpdate=!0;for(let e=t,i=t+n;e<i;e++)if(l(e),s.needsUpdate=!0,r(s,c,e,p,o,h,A,d))return!0}return!1};if(i){const e=i;i=function(n,i,r,s,a,o,l,c){return!!e(n,i,r,s,a,o,l,c)||t(n,i,r,s,a,o,l,c)}}else i=t}return function(t,e,n,i){if(cB)throw new Error("MeshBVH: Recursive calls to bvhcast not supported.");cB=!0;const r=t._roots,s=e._roots;let a,o=0,l=0;const c=(new fr).copy(n).invert();for(let t=0,e=r.length;t<e;t++){nB.setBuffer(r[t]),l=0;const e=rB.getPrimitive();jw(d_(0),nB.float32Array,e),e.applyMatrix4(c);for(let t=0,r=s.length;t<r&&(iB.setBuffer(s[t]),a=hB(0,0,n,c,i,o,l,0,0,e),iB.clearBuffer(),l+=s[t].length,!a);t++);if(rB.releasePrimitive(e),nB.clearBuffer(),o+=r[t].length,a)break}return cB=!1,a}(this,t,e,i)}intersectsBox(t,e){return AB.set(t.min,t.max,e),AB.needsUpdate=!0,this.shapecast({intersectsBounds:t=>AB.intersectsBox(t),intersectsTriangle:t=>AB.intersectsTriangle(t)})}intersectsSphere(t){return this.shapecast({intersectsBounds:e=>t.intersectsBox(e),intersectsTriangle:e=>e.intersectsSphere(t)})}closestPointToGeometry(t,e,n={},i={},r=0,s=1/0){return(this.indirect?tB:Qb)(this,t,e,n,i,r,s)}closestPointToPoint(t,e={},n=0,i=1/0){return function(t,e,n={},i=0,r=1/0){const s=i*i,a=r*r;let o=1/0,l=null;if(t.shapecast({boundsTraverseOrder:t=>(O_.copy(e).clamp(t.min,t.max),O_.distanceToSquared(e)),intersectsBounds:(t,e,n)=>n<o&&n<a,intersectsTriangle:(t,n)=>{t.closestPointToPoint(e,O_);const i=e.distanceToSquared(O_);return i<o&&(z_.copy(O_),o=i,l=n),i<s}}),o===1/0)return null;const c=Math.sqrt(o);return n.point?n.point.copy(z_):n.point=z_.clone(),n.distance=c,n.faceIndex=l,n}(this,t,e,n,i)}getBoundingBox(t){return t.makeEmpty(),this._roots.forEach(e=>{jw(0,new Float32Array(e),uB),t.union(uB)}),t}}const gB=parseInt(h)>=166,fB=new gr,mB=new hi,yB=new fr,vB=Xs.prototype.raycast,xB=zo.prototype.raycast,CB=new hi,IB=new Xs,EB=[];function wB(t,e){this.isBatchedMesh?_B.call(this,t,e):bB.call(this,t,e)}function _B(t,e){if(this.boundsTrees){const n=this.boundsTrees,i=this._drawInfo||this._instanceInfo,r=this._drawRanges||this._geometryInfo,s=this.matrixWorld;IB.material=this.material,IB.geometry=this.geometry;const a=IB.geometry.boundsTree,o=IB.geometry.drawRange;null===IB.geometry.boundingSphere&&(IB.geometry.boundingSphere=new or);for(let a=0,o=i.length;a<o;a++){if(!this.getVisibleAt(a))continue;const o=i[a].geometryIndex;if(IB.geometry.boundsTree=n[o],this.getMatrixAt(a,IB.matrixWorld).premultiply(s),!IB.geometry.boundsTree){this.getBoundingBoxAt(o,IB.geometry.boundingBox),this.getBoundingSphereAt(o,IB.geometry.boundingSphere);const t=r[o];IB.geometry.setDrawRange(t.start,t.count)}IB.raycast(t,EB);for(let t=0,n=EB.length;t<n;t++){const n=EB[t];n.object=this,n.batchId=a,e.push(n)}EB.length=0}IB.geometry.boundsTree=a,IB.geometry.drawRange=o,IB.material=null,IB.geometry=null}else xB.call(this,t,e)}function bB(t,e){if(this.geometry.boundsTree){if(void 0===this.material)return;yB.copy(this.matrixWorld).invert(),fB.copy(t.ray).applyMatrix4(yB),CB.setFromMatrixScale(this.matrixWorld),mB.copy(fB.direction).multiply(CB);const n=mB.length(),i=t.near/n,r=t.far/n,s=this.geometry.boundsTree;if(!0===t.firstHitOnly){const n=Tw(s.raycastFirst(fB,this.material,i,r),this,t);n&&e.push(n)}else{const n=s.raycast(fB,this.material,i,r);for(let i=0,r=n.length;i<r;i++){const r=Tw(n[i],this,t);r&&e.push(r)}}}else vB.call(this,t,e)}function BB(t={}){return this.boundsTree=new pB(this,t),this.boundsTree}function SB(){this.boundsTree=null}function MB(t=-1,e={}){if(!gB)throw new Error("BatchedMesh: Three r166+ is required to compute bounds trees.");e.indirect&&console.warn('"Indirect" is set to false because it is not supported for BatchedMesh.'),e={...e,indirect:!1,range:null};const n=this._drawRanges||this._geometryInfo,i=this._geometryCount;this.boundsTrees||(this.boundsTrees=new Array(i).fill(null));const r=this.boundsTrees;for(;r.length<i;)r.push(null);if(t<0){for(let t=0;t<i;t++)e.range=n[t],r[t]=new pB(this.geometry,e);return r}return t<n.length&&(e.range=n[t],r[t]=new pB(this.geometry,e)),r[t]||null}function TB(t=-1){t<0?this.boundsTrees.fill(null):t<this.boundsTree.length&&(this.boundsTrees[t]=null)}const QB=new Hi,DB=new fr;class RB extends Hr{get isMesh(){return!this.displayEdges}get isLineSegments(){return this.displayEdges}get isLine(){return this.displayEdges}getVertexPosition(...t){return Xs.prototype.getVertexPosition.call(this,...t)}constructor(t,e,n=10,i=0){super(),this.material=e,this.geometry=new Ns,this.name="MeshBVHRootHelper",this.depth=n,this.displayParents=!1,this.bvh=t,this.displayEdges=!0,this._group=i}raycast(){}update(){const t=this.geometry,e=this.bvh,n=this._group;if(t.dispose(),this.visible=!1,e){const i=this.depth-1,r=this.displayParents;let s=0;e.traverse((t,e)=>{if(t>=i||e)return s++,!0;r&&s++},n);let a=0;const o=new Float32Array(24*s);let l,c;e.traverse((t,e,n)=>{const s=t>=i||e;if(s||r){jw(0,n,QB);const{min:t,max:e}=QB;for(let n=-1;n<=1;n+=2){const i=n<0?t.x:e.x;for(let n=-1;n<=1;n+=2){const r=n<0?t.y:e.y;for(let n=-1;n<=1;n+=2){const s=n<0?t.z:e.z;o[a+0]=i,o[a+1]=r,o[a+2]=s,a+=3}}}return s}},n),c=this.displayEdges?new Uint8Array([0,4,1,5,2,6,3,7,0,2,1,3,4,6,5,7,0,1,2,3,4,5,6,7]):new Uint8Array([0,1,2,2,1,3,4,6,5,6,7,5,1,4,5,0,4,1,2,3,6,3,7,6,0,2,4,2,6,4,1,5,3,3,5,7]),l=o.length>65535?new Uint32Array(c.length*s):new Uint16Array(c.length*s);const h=c.length;for(let t=0;t<s;t++){const e=8*t,n=t*h;for(let t=0;t<h;t++)l[n+t]=e+c[t]}t.setIndex(new Cs(l,1,!1)),t.setAttribute("position",new Cs(o,3,!1)),this.visible=!0}}}class UB extends da{get color(){return this.edgeMaterial.color}get opacity(){return this.edgeMaterial.opacity}set opacity(t){this.edgeMaterial.opacity=t,this.meshMaterial.opacity=t}constructor(t=null,e=null,n=10){t instanceof pB&&(n=e||10,e=t,t=null),"number"==typeof e&&(n=e,e=null),super(),this.name="MeshBVHHelper",this.depth=n,this.mesh=t,this.bvh=e,this.displayParents=!1,this.displayEdges=!0,this.objectIndex=0,this._roots=[];const i=new Go({color:65416,transparent:!0,opacity:.3,depthWrite:!1}),r=new us({color:65416,transparent:!0,opacity:.3,depthWrite:!1});r.color=i.color,this.edgeMaterial=i,this.meshMaterial=r,this.update()}update(){const t=this.mesh;let e=this.bvh||t.geometry.boundsTree||null;if(t.isBatchedMesh&&t.boundsTrees&&!e){const n=t._drawInfo[this.objectIndex];n&&(e=t.boundsTrees[n.geometryIndex]||e)}const n=e?e._roots.length:0;for(;this._roots.length>n;){const t=this._roots.pop();t.geometry.dispose(),this.remove(t)}for(let t=0;t<n;t++){const{depth:n,edgeMaterial:i,meshMaterial:r,displayParents:s,displayEdges:a}=this;if(t>=this._roots.length){const r=new RB(e,i,n,t);this.add(r),this._roots.push(r)}const o=this._roots[t];o.bvh=e,o.depth=n,o.displayParents=s,o.displayEdges=a,o.material=a?i:r,o.update()}}updateMatrixWorld(...t){const e=this.mesh,n=this.parent;null!==e&&(e.updateWorldMatrix(!0,!1),n?this.matrix.copy(n.matrixWorld).invert().multiply(e.matrixWorld):this.matrix.copy(e.matrixWorld),(e.isInstancedMesh||e.isBatchedMesh)&&(e.getMatrixAt(this.objectIndex,DB),this.matrix.multiply(DB)),this.matrix.decompose(this.position,this.quaternion,this.scale)),super.updateMatrixWorld(...t)}copy(t){this.depth=t.depth,this.mesh=t.mesh,this.bvh=t.bvh,this.opacity=t.opacity,this.color.copy(t.color)}clone(){return new UB(this.mesh,this.bvh,this.depth)}dispose(){this.edgeMaterial.dispose(),this.meshMaterial.dispose();const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].geometry.dispose()}}const PB=new Hi,LB=new Hi,FB=new hi;function NB(t){switch(typeof t){case"number":return 8;case"string":return 2*t.length;case"boolean":return 4;default:return 0}}function kB(t){return/(Uint|Int|Float)(8|16|32)Array/.test(t.constructor.name)}function OB(t){return t._roots.map((e,n)=>function(t,e){const n={nodeCount:0,leafNodeCount:0,depth:{min:1/0,max:-1/0},tris:{min:1/0,max:-1/0},splits:[0,0,0],surfaceAreaScore:0};return t.traverse((t,e,i,r,s)=>{const a=i[3]-i[0],o=i[4]-i[1],l=i[5]-i[2],c=2*(a*o+o*l+l*a);n.nodeCount++,e?(n.leafNodeCount++,n.depth.min=Math.min(t,n.depth.min),n.depth.max=Math.max(t,n.depth.max),n.tris.min=Math.min(s,n.tris.min),n.tris.max=Math.max(s,n.tris.max),n.surfaceAreaScore+=c*Fw*s):(n.splits[r]++,n.surfaceAreaScore+=c*Nw)},e),n.tris.min===1/0&&(n.tris.min=0,n.tris.max=0),n.depth.min===1/0&&(n.depth.min=0,n.depth.max=0),n}(t,n))}function zB(t){const e=new Set,n=[t];let i=0;for(;n.length;){const t=n.pop();if(!e.has(t)){e.add(t);for(let e in t){if(!Object.hasOwn(t,e))continue;i+=NB(e);const r=t[e];!r||"object"!=typeof r&&"function"!=typeof r?i+=NB(r):kB(r)||eB()&&r instanceof SharedArrayBuffer||r instanceof ArrayBuffer?i+=r.byteLength:n.push(r)}}}return i}function GB(t){const e=t.geometry,n=[],i=e.index,r=e.getAttribute("position");let s=!0;return t.traverse((e,a,o,l,c)=>{const h={depth:e,isLeaf:a,boundingData:o,offset:l,count:c};n[e]=h,jw(0,o,PB);const A=n[e-1];if(a)for(let e=l,n=l+c;e<n;e++){const n=t.resolveTriangleIndex(e);let a,o=3*n,l=3*n+1,c=3*n+2;i&&(o=i.getX(o),l=i.getX(l),c=i.getX(c)),FB.fromBufferAttribute(r,o),a=PB.containsPoint(FB),FB.fromBufferAttribute(r,l),a=a&&PB.containsPoint(FB),FB.fromBufferAttribute(r,c),a=a&&PB.containsPoint(FB),console.assert(a,"Leaf bounds does not fully contain triangle."),s=s&&a}if(A){jw(0,o,LB);const t=LB.containsBox(PB);console.assert(t,"Parent bounds does not fully contain child."),s=s&&t}}),s}function HB(t){const e=[];return t.traverse((t,n,i,r,s)=>{const a={bounds:jw(0,i,new Hi)};n?(a.count=s,a.offset=r):(a.left=null,a.right=null),e[t]=a;const o=e[t-1];o&&(null===o.left?o.left=a:o.right=a)}),e[0]}function VB(t){switch(t){case 1:return ee;case 2:return ie;case 3:case 4:return se}}class qB extends Za{constructor(){super(),this.minFilter=bt,this.magFilter=bt,this.generateMipmaps=!1,this.overrideItemSize=null,this._forcedType=null}updateFrom(t){const e=this.overrideItemSize,n=t.itemSize,i=t.count;if(null!==e){if(n*i%e!==0)throw new Error("VertexAttributeTexture: overrideItemSize must divide evenly into buffer length.");t.itemSize=e,t.count=i*n/e}const r=t.itemSize,s=t.count,a=t.normalized,o=t.array.constructor,l=o.BYTES_PER_ELEMENT;let c,h,A,u,d=this._forcedType,p=r;if(null===d)switch(o){case Float32Array:d=Gt;break;case Uint8Array:case Uint16Array:case Uint32Array:d=zt;break;case Int8Array:case Int16Array:case Int32Array:d=Ot}let g=function(t){switch(t){case 1:return"R";case 2:return"RG";case 3:case 4:return"RGBA"}throw new Error}(r);switch(d){case Gt:A=1,h=function(t){switch(t){case 1:return te;case 2:return ne;case 3:case 4:return Kt}}(r),a&&1===l?(u=o,g+="8",o===Uint8Array?c=Lt:(c=Ft,g+="_SNORM")):(u=Float32Array,g+="32F",c=Gt);break;case Ot:g+=8*l+"I",A=a?Math.pow(2,8*o.BYTES_PER_ELEMENT-1):1,h=VB(r),1===l?(u=Int8Array,c=Ft):2===l?(u=Int16Array,c=Nt):(u=Int32Array,c=Ot);break;case zt:g+=8*l+"UI",A=a?Math.pow(2,8*o.BYTES_PER_ELEMENT-1):1,h=VB(r),1===l?(u=Uint8Array,c=Lt):2===l?(u=Uint16Array,c=kt):(u=Uint32Array,c=zt)}3!==p||h!==Kt&&h!==se||(p=4);const f=Math.ceil(Math.sqrt(s))||1,m=new u(p*f*f),y=t.normalized;t.normalized=!1;for(let e=0;e<s;e++){const n=p*e;m[n]=t.getX(e)/A,r>=2&&(m[n+1]=t.getY(e)/A),r>=3&&(m[n+2]=t.getZ(e)/A,4===p&&(m[n+3]=1)),r>=4&&(m[n+3]=t.getW(e)/A)}t.normalized=y,this.internalFormat=g,this.format=h,this.type=c,this.image.width=f,this.image.height=f,this.image.data=m,this.needsUpdate=!0,this.dispose(),t.itemSize=n,t.count=i}}class YB extends qB{constructor(){super(),this._forcedType=zt}}class WB extends qB{constructor(){super(),this._forcedType=Ot}}class JB extends qB{constructor(){super(),this._forcedType=Gt}}class jB{constructor(){this.index=new YB,this.position=new JB,this.bvhBounds=new Za,this.bvhContents=new Za,this._cachedIndexAttr=null,this.index.overrideItemSize=3}updateFrom(t){const{geometry:e}=t;if(function(t,e,n){const i=t._roots;if(1!==i.length)throw new Error("MeshBVHUniformStruct: Multi-root BVHs not supported.");const r=i[0],s=new Uint16Array(r),a=new Uint32Array(r),o=new Float32Array(r),l=r.byteLength/kw,c=2*Math.ceil(Math.sqrt(l/2)),h=new Float32Array(4*c*c),A=Math.ceil(Math.sqrt(l)),u=new Uint32Array(2*A*A);for(let t=0;t<l;t++){const e=t*kw/4,n=2*e,i=d_(e);for(let e=0;e<3;e++)h[8*t+0+e]=o[i+0+e],h[8*t+4+e]=o[i+3+e];if(o_(n,s)){const i=c_(n,s),r=l_(e,a),o=4294901760|i;u[2*t+0]=o,u[2*t+1]=r}else{const n=4*A_(e,a)/kw,i=u_(e,a);u[2*t+0]=i,u[2*t+1]=n}}e.image.data=h,e.image.width=c,e.image.height=c,e.format=Kt,e.type=Gt,e.internalFormat="RGBA32F",e.minFilter=bt,e.magFilter=bt,e.generateMipmaps=!1,e.needsUpdate=!0,e.dispose(),n.image.data=u,n.image.width=A,n.image.height=A,n.format=ie,n.type=zt,n.internalFormat="RG32UI",n.minFilter=bt,n.magFilter=bt,n.generateMipmaps=!1,n.needsUpdate=!0,n.dispose()}(t,this.bvhBounds,this.bvhContents),this.position.updateFrom(e.attributes.position),t.indirect){const n=t._indirectBuffer;if(null===this._cachedIndexAttr||this._cachedIndexAttr.count!==n.length)if(e.index)this._cachedIndexAttr=e.index.clone();else{const t=qw(Hw(e));this._cachedIndexAttr=new Cs(t,1,!1)}!function(t,e,n){const i=n.array,r=t.index?t.index.array:null;for(let t=0,n=e.length;t<n;t++){const n=3*t,s=3*e[t];for(let t=0;t<3;t++)i[n+t]=r?r[s+t]:s+t}}(e,n,this._cachedIndexAttr),this.index.updateFrom(this._cachedIndexAttr)}else this.index.updateFrom(e.index)}dispose(){const{index:t,position:e,bvhBounds:n,bvhContents:i}=this;t&&t.dispose(),e&&e.dispose(),n&&n.dispose(),i&&i.dispose()}}const XB=new hi,KB=new hi,ZB=new hi,$B=new Li,tS=new hi,eS=new hi,nS=new Li,iS=new Li,rS=new fr,sS=new fr;function aS(t,e){if(!t&&!e)return;const n=t.count===e.count,i=t.normalized===e.normalized,r=t.array.constructor===e.array.constructor,s=t.itemSize===e.itemSize;if(!(n&&i&&r&&s))throw new Error}function oS(t,e=null){const n=t.array.constructor,i=t.normalized,r=t.itemSize,s=null===e?t.count:e;return new Cs(new n(r*s),r,i)}function lS(t,e,n=0){if(t.isInterleavedBufferAttribute){const i=t.itemSize;for(let r=0,s=t.count;r<s;r++){const s=r+n;e.setX(s,t.getX(r)),i>=2&&e.setY(s,t.getY(r)),i>=3&&e.setZ(s,t.getZ(r)),i>=4&&e.setW(s,t.getW(r))}}else{const i=e.array,r=i.constructor,s=i.BYTES_PER_ELEMENT*t.itemSize*n;new r(i.buffer,s,t.array.length).set(t.array)}}function cS(t,e,n){const i=t.elements,r=e.elements;for(let t=0,e=r.length;t<e;t++)i[t]+=r[t]*n}function hS(t,e,n){const i=t.skeleton,r=t.geometry,s=i.bones,a=i.boneInverses;nS.fromBufferAttribute(r.attributes.skinIndex,e),iS.fromBufferAttribute(r.attributes.skinWeight,e),rS.elements.fill(0);for(let t=0;t<4;t++){const e=iS.getComponent(t);if(0!==e){const n=nS.getComponent(t);sS.multiplyMatrices(s[n].matrixWorld,a[n]),cS(rS,sS,e)}}return rS.multiply(t.bindMatrix).premultiply(t.bindMatrixInverse),n.transformDirection(rS),n}function AS(t,e,n,i,r){tS.set(0,0,0);for(let s=0,a=t.length;s<a;s++){const a=e[s],o=t[s];0!==a&&(eS.fromBufferAttribute(o,i),n?tS.addScaledVector(eS,a):tS.addScaledVector(eS.sub(r),a))}r.add(tS)}class uS{constructor(t){this.matrixWorld=new fr,this.geometryHash=null,this.boneMatrices=null,this.primitiveCount=-1,this.mesh=t,this.update()}update(){const t=this.mesh,e=t.geometry,n=t.skeleton,i=(e.index?e.index.count:e.attributes.position.count)/3;if(this.matrixWorld.copy(t.matrixWorld),this.geometryHash=e.attributes.position.version,this.primitiveCount=i,n){n.boneTexture||n.computeBoneTexture(),n.update();const t=n.boneMatrices;this.boneMatrices&&this.boneMatrices.length===t.length?this.boneMatrices.set(t):this.boneMatrices=t.slice()}else this.boneMatrices=null}didChange(){const t=this.mesh,e=t.geometry,n=(e.index?e.index.count:e.attributes.position.count)/3,i=this.matrixWorld.equals(t.matrixWorld)&&this.geometryHash===e.attributes.position.version&&function(t,e){if(null===t||null===e)return t===e;if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}(t.skeleton&&t.skeleton.boneMatrices||null,this.boneMatrices)&&this.primitiveCount===n;return!i}}class dS{constructor(t){Array.isArray(t)||(t=[t]);const e=[];t.forEach(t=>{t.traverseVisible(t=>{t.isMesh&&e.push(t)})}),this.meshes=e,this.useGroups=!0,this.applyWorldTransforms=!0,this.attributes=["position","normal","color","tangent","uv","uv2"],this._intermediateGeometry=new Array(e.length).fill().map(()=>new Ns),this._diffMap=new WeakMap}getMaterials(){const t=[];return this.meshes.forEach(e=>{Array.isArray(e.material)?t.push(...e.material):t.push(e.material)}),t}generate(t=new Ns){let e=[];const{meshes:n,useGroups:i,_intermediateGeometry:r,_diffMap:s}=this;for(let t=0,i=n.length;t<i;t++){const i=n[t],a=r[t],o=s.get(i);!o||o.didChange(i)?(this._convertToStaticGeometry(i,a),e.push(!1),o?o.update():s.set(i,new uS(i))):e.push(!0)}if(0===r.length){t.setIndex(null);const e=t.attributes;for(const n in e)t.deleteAttribute(n);for(const e in this.attributes)t.setAttribute(this.attributes[e],new Cs(new Float32Array(0),4,!1))}else!function(t,e={useGroups:!1,updateIndex:!1,skipAttributes:[]},n=new Ns){const i=null!==t[0].index,{useGroups:r=!1,updateIndex:s=!1,skipAttributes:a=[]}=e,o=new Set(Object.keys(t[0].attributes)),l={};let c=0;n.clearGroups();for(let e=0;e<t.length;++e){const s=t[e];let a=0;if(i!==(null!==s.index))throw new Error("StaticGeometryGenerator: All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.");for(const t in s.attributes){if(!o.has(t))throw new Error('StaticGeometryGenerator: All geometries must have compatible attributes; make sure "'+t+'" attribute exists among all geometries, or in none of them.');void 0===l[t]&&(l[t]=[]),l[t].push(s.attributes[t]),a++}if(a!==o.size)throw new Error("StaticGeometryGenerator: Make sure all geometries have the same number of attributes.");if(r){let t;if(i)t=s.index.count;else{if(void 0===s.attributes.position)throw new Error("StaticGeometryGenerator: The geometry must have either an index or a position attribute");t=s.attributes.position.count}n.addGroup(c,t,e),c+=t}}if(i){let e=!1;if(!n.index){let i=0;for(let e=0;e<t.length;++e)i+=t[e].index.count;n.setIndex(new Cs(new Uint32Array(i),1,!1)),e=!0}if(s||e){const e=n.index;let i=0,r=0;for(let n=0;n<t.length;++n){const s=t[n],o=s.index;if(!0!==a[n])for(let t=0;t<o.count;++t)e.setX(i,o.getX(t)+r),i++;r+=s.attributes.position.count}}}for(const t in l){const e=l[t];if(!(t in n.attributes)){let i=0;for(const t in e)i+=e[t].count;n.setAttribute(t,oS(l[t][0],i))}const i=n.attributes[t];let r=0;for(let t=0,n=e.length;t<n;t++){const n=e[t];!0!==a[t]&&lS(n,i,r),r+=n.count}}}(r,{useGroups:i,skipAttributes:e},t);for(const e in t.attributes)t.attributes[e].needsUpdate=!0;return t}_convertToStaticGeometry(t,e=new Ns){const n=t.geometry,i=this.applyWorldTransforms,r=this.attributes.includes("normal"),s=this.attributes.includes("tangent"),a=n.attributes,o=e.attributes;!e.index&&n.index&&(e.index=n.index.clone()),o.position||e.setAttribute("position",oS(a.position)),r&&!o.normal&&a.normal&&e.setAttribute("normal",oS(a.normal)),s&&!o.tangent&&a.tangent&&e.setAttribute("tangent",oS(a.tangent)),aS(n.index,e.index),aS(a.position,o.position),r&&aS(a.normal,o.normal),s&&aS(a.tangent,o.tangent);const l=a.position,c=r?a.normal:null,h=s?a.tangent:null,A=n.morphAttributes.position,u=n.morphAttributes.normal,d=n.morphAttributes.tangent,p=n.morphTargetsRelative,g=t.morphTargetInfluences,f=new di;f.getNormalMatrix(t.matrixWorld),n.index&&e.index.array.set(n.index.array);for(let e=0,n=a.position.count;e<n;e++)XB.fromBufferAttribute(l,e),c&&KB.fromBufferAttribute(c,e),h&&($B.fromBufferAttribute(h,e),ZB.fromBufferAttribute(h,e)),g&&(A&&AS(A,g,p,e,XB),u&&AS(u,g,p,e,KB),d&&AS(d,g,p,e,ZB)),t.isSkinnedMesh&&(t.applyBoneTransform(e,XB),c&&hS(t,e,KB),h&&hS(t,e,ZB)),i&&XB.applyMatrix4(t.matrixWorld),o.position.setXYZ(e,XB.x,XB.y,XB.z),c&&(i&&KB.applyNormalMatrix(f),o.normal.setXYZ(e,KB.x,KB.y,KB.z)),h&&(i&&ZB.transformDirection(t.matrixWorld),o.tangent.setXYZW(e,ZB.x,ZB.y,ZB.z,$B.w));for(const t in this.attributes){const n=this.attributes[t];"position"!==n&&"tangent"!==n&&"normal"!==n&&n in a&&(o[n]||e.setAttribute(n,oS(a[n])),aS(a[n],o[n]),lS(a[n],o[n]))}return t.matrixWorld.determinant()<0&&function(t){const{index:e,attributes:n}=t;if(e)for(let t=0,n=e.count;t<n;t+=3){const n=e.getX(t),i=e.getX(t+2);e.setX(t,i),e.setX(t+2,n)}else for(const t in n){const e=n[t],i=e.itemSize;for(let t=0,n=e.count;t<n;t+=3)for(let n=0;n<i;n++){const i=e.getComponent(t,n),r=e.getComponent(t+2,n);e.setComponent(t,n,r),e.setComponent(t+2,n,i)}}}(e),e}}const pS="\n\n// A stack of uint32 indices can can store the indices for\n// a perfectly balanced tree with a depth up to 31. Lower stack\n// depth gets higher performance.\n//\n// However not all trees are balanced. Best value to set this to\n// is the trees max depth.\n#ifndef BVH_STACK_DEPTH\n#define BVH_STACK_DEPTH 60\n#endif\n\n#ifndef INFINITY\n#define INFINITY 1e20\n#endif\n\n// Utilities\nuvec4 uTexelFetch1D( usampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nivec4 iTexelFetch1D( isampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 texelFetch1D( sampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {\n\n\treturn\n\t\tbarycoord.x * texelFetch1D( tex, faceIndices.x ) +\n\t\tbarycoord.y * texelFetch1D( tex, faceIndices.y ) +\n\t\tbarycoord.z * texelFetch1D( tex, faceIndices.z );\n\n}\n\nvoid ndcToCameraRay(\n\tvec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,\n\tout vec3 rayOrigin, out vec3 rayDirection\n) {\n\n\t// get camera look direction and near plane for camera clipping\n\tvec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );\n\tvec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );\n\tfloat near = abs( nearVector.z / nearVector.w );\n\n\t// get the camera direction and position from camera matrices\n\tvec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );\n\tdirection /= direction.w;\n\tdirection = cameraWorld * direction - origin;\n\n\t// slide the origin along the ray until it sits at the near clip plane position\n\torigin.xyz += direction.xyz * near / dot( direction, lookDirection );\n\n\trayOrigin = origin.xyz;\n\trayDirection = direction.xyz;\n\n}\n",gS="\n\nfloat dot2( vec3 v ) {\n\n\treturn dot( v, v );\n\n}\n\n// https://www.shadertoy.com/view/ttfGWl\nvec3 closestPointToTriangle( vec3 p, vec3 v0, vec3 v1, vec3 v2, out vec3 barycoord ) {\n\n    vec3 v10 = v1 - v0;\n    vec3 v21 = v2 - v1;\n    vec3 v02 = v0 - v2;\n\n\tvec3 p0 = p - v0;\n\tvec3 p1 = p - v1;\n\tvec3 p2 = p - v2;\n\n    vec3 nor = cross( v10, v02 );\n\n    // method 2, in barycentric space\n    vec3  q = cross( nor, p0 );\n    float d = 1.0 / dot2( nor );\n    float u = d * dot( q, v02 );\n    float v = d * dot( q, v10 );\n    float w = 1.0 - u - v;\n\n\tif( u < 0.0 ) {\n\n\t\tw = clamp( dot( p2, v02 ) / dot2( v02 ), 0.0, 1.0 );\n\t\tu = 0.0;\n\t\tv = 1.0 - w;\n\n\t} else if( v < 0.0 ) {\n\n\t\tu = clamp( dot( p0, v10 ) / dot2( v10 ), 0.0, 1.0 );\n\t\tv = 0.0;\n\t\tw = 1.0 - u;\n\n\t} else if( w < 0.0 ) {\n\n\t\tv = clamp( dot( p1, v21 ) / dot2( v21 ), 0.0, 1.0 );\n\t\tw = 0.0;\n\t\tu = 1.0-v;\n\n\t}\n\n\tbarycoord = vec3( u, v, w );\n    return u * v1 + v * v2 + w * v0;\n\n}\n\nfloat distanceToTriangles(\n\t// geometry info and triangle range\n\tsampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,\n\n\t// point and cut off range\n\tvec3 point, float closestDistanceSquared,\n\n\t// outputs\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord, inout float side, inout vec3 outPoint\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;\n\t\tvec3 a = texelFetch1D( positionAttr, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( positionAttr, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( positionAttr, indices.z ).rgb;\n\n\t\t// get the closest point and barycoord\n\t\tvec3 closestPoint = closestPointToTriangle( point, a, b, c, localBarycoord );\n\t\tvec3 delta = point - closestPoint;\n\t\tfloat sqDist = dot2( delta );\n\t\tif ( sqDist < closestDistanceSquared ) {\n\n\t\t\t// set the output results\n\t\t\tclosestDistanceSquared = sqDist;\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = normalize( cross( a - b, b - c ) );\n\t\t\tbarycoord = localBarycoord;\n\t\t\toutPoint = closestPoint;\n\t\t\tside = sign( dot( faceNormal, delta ) );\n\n\t\t}\n\n\t}\n\n\treturn closestDistanceSquared;\n\n}\n\nfloat distanceSqToBounds( vec3 point, vec3 boundsMin, vec3 boundsMax ) {\n\n\tvec3 clampedPoint = clamp( point, boundsMin, boundsMax );\n\tvec3 delta = point - clampedPoint;\n\treturn dot( delta, delta );\n\n}\n\nfloat distanceSqToBVHNodeBoundsPoint( vec3 point, sampler2D bvhBounds, uint currNodeIndex ) {\n\n\tuint cni2 = currNodeIndex * 2u;\n\tvec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;\n\treturn distanceSqToBounds( point, boundsMin, boundsMax );\n\n}\n\n// use a macro to hide the fact that we need to expand the struct into separate fields\n#define\tbvhClosestPointToPoint(\t\tbvh,\t\tpoint, maxDistance, faceIndices, faceNormal, barycoord, side, outPoint\t)\t_bvhClosestPointToPoint(\t\tbvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,\t\tpoint, maxDistance, faceIndices, faceNormal, barycoord, side, outPoint\t)\n\nfloat _bvhClosestPointToPoint(\n\t// bvh info\n\tsampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,\n\n\t// point to check\n\tvec3 point, float maxDistance,\n\n\t// output variables\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout vec3 outPoint\n ) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ BVH_STACK_DEPTH ];\n\tstack[ 0 ] = 0u;\n\n\tfloat closestDistanceSquared = maxDistance * maxDistance;\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance = distanceSqToBVHNodeBoundsPoint( point, bvh_bvhBounds, currNodeIndex );\n\t\tif ( boundsHitDistance > closestDistanceSquared ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\t\t\tclosestDistanceSquared = distanceToTriangles(\n\t\t\t\tbvh_position, bvh_index, offset, count, point, closestDistanceSquared,\n\n\t\t\t\t// outputs\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, outPoint\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\t\t\tbool leftToRight = distanceSqToBVHNodeBoundsPoint( point, bvh_bvhBounds, leftIndex ) < distanceSqToBVHNodeBoundsPoint( point, bvh_bvhBounds, rightIndex );//rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn sqrt( closestDistanceSquared );\n\n}\n",fS="\n\n#ifndef TRI_INTERSECT_EPSILON\n#define TRI_INTERSECT_EPSILON 1e-5\n#endif\n\n// Raycasting\nbool intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax, out float dist ) {\n\n\t// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/\n\t// https://tavianator.com/2011/ray_box.html\n\tvec3 invDir = 1.0 / rayDirection;\n\n\t// find intersection distances for each plane\n\tvec3 tMinPlane = invDir * ( boundsMin - rayOrigin );\n\tvec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );\n\n\t// get the min and max distances from each intersection\n\tvec3 tMinHit = min( tMaxPlane, tMinPlane );\n\tvec3 tMaxHit = max( tMaxPlane, tMinPlane );\n\n\t// get the furthest hit distance\n\tvec2 t = max( tMinHit.xx, tMinHit.yz );\n\tfloat t0 = max( t.x, t.y );\n\n\t// get the minimum hit distance\n\tt = min( tMaxHit.xx, tMaxHit.yz );\n\tfloat t1 = min( t.x, t.y );\n\n\t// set distance to 0.0 if the ray starts inside the box\n\tdist = max( t0, 0.0 );\n\n\treturn t1 >= dist;\n\n}\n\nbool intersectsTriangle(\n\tvec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,\n\tout vec3 barycoord, out vec3 norm, out float dist, out float side\n) {\n\n\t// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d\n\tvec3 edge1 = b - a;\n\tvec3 edge2 = c - a;\n\tnorm = cross( edge1, edge2 );\n\n\tfloat det = - dot( rayDirection, norm );\n\tfloat invdet = 1.0 / det;\n\n\tvec3 AO = rayOrigin - a;\n\tvec3 DAO = cross( AO, rayDirection );\n\n\tvec4 uvt;\n\tuvt.x = dot( edge2, DAO ) * invdet;\n\tuvt.y = - dot( edge1, DAO ) * invdet;\n\tuvt.z = dot( AO, norm ) * invdet;\n\tuvt.w = 1.0 - uvt.x - uvt.y;\n\n\t// set the hit information\n\tbarycoord = uvt.wxy; // arranged in A, B, C order\n\tdist = uvt.z;\n\tside = sign( det );\n\tnorm = side * normalize( norm );\n\n\t// add an epsilon to avoid misses between triangles\n\tuvt += vec4( TRI_INTERSECT_EPSILON );\n\n\treturn all( greaterThanEqual( uvt, vec4( 0.0 ) ) );\n\n}\n\nbool intersectTriangles(\n\t// geometry info and triangle range\n\tsampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,\n\n\t// ray\n\tvec3 rayOrigin, vec3 rayDirection,\n\n\t// outputs\n\tinout float minDistance, inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout float dist\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord, localNormal;\n\tfloat localDist, localSide;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;\n\t\tvec3 a = texelFetch1D( positionAttr, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( positionAttr, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( positionAttr, indices.z ).rgb;\n\n\t\tif (\n\t\t\tintersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )\n\t\t\t&& localDist < minDistance\n\t\t) {\n\n\t\t\tfound = true;\n\t\t\tminDistance = localDist;\n\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = localNormal;\n\n\t\t\tside = localSide;\n\t\t\tbarycoord = localBarycoord;\n\t\t\tdist = localDist;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n\nbool intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, sampler2D bvhBounds, uint currNodeIndex, out float dist ) {\n\n\tuint cni2 = currNodeIndex * 2u;\n\tvec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;\n\treturn intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax, dist );\n\n}\n\n// use a macro to hide the fact that we need to expand the struct into separate fields\n#define\tbvhIntersectFirstHit(\t\tbvh,\t\trayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist\t)\t_bvhIntersectFirstHit(\t\tbvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,\t\trayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist\t)\n\nbool _bvhIntersectFirstHit(\n\t// bvh info\n\tsampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,\n\n\t// ray\n\tvec3 rayOrigin, vec3 rayDirection,\n\n\t// output variables split into separate variables due to output precision\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout float dist\n) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ BVH_STACK_DEPTH ];\n\tstack[ 0 ] = 0u;\n\n\tfloat triangleDistance = INFINITY;\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance;\n\t\tif (\n\t\t\t! intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh_bvhBounds, currNodeIndex, boundsHitDistance )\n\t\t\t|| boundsHitDistance > triangleDistance\n\t\t) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\n\t\t\tfound = intersectTriangles(\n\t\t\t\tbvh_position, bvh_index, offset, count,\n\t\t\t\trayOrigin, rayDirection, triangleDistance,\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, dist\n\t\t\t) || found;\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\n\t\t\tbool leftToRight = rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n",mS="\nstruct BVH {\n\n\tusampler2D index;\n\tsampler2D position;\n\n\tsampler2D bvhBounds;\n\tusampler2D bvhContents;\n\n};\n",yS=mS,vS=gS,xS=`\n\t${pS}\n\t${fS}\n`;class CS{get unloadPriorityCallback(){return this._unloadPriorityCallback}set unloadPriorityCallback(t){1===t.length?(console.warn('LRUCache: "unloadPriorityCallback" function has been changed to take two arguments.'),this._unloadPriorityCallback=(e,n)=>{const i=t(e),r=t(n);return i<r?-1:i>r?1:0}):this._unloadPriorityCallback=t}constructor(){this.minSize=6e3,this.maxSize=8e3,this.minBytesSize=322122547.2,this.maxBytesSize=429496729.6,this.unloadPercent=.05,this.autoMarkUnused=!0,this.itemSet=new Map,this.itemList=[],this.usedSet=new Set,this.callbacks=new Map,this.unloadingHandle=-1,this.cachedBytes=0,this.bytesMap=new Map,this.loadedSet=new Set,this._unloadPriorityCallback=null;const t=this.itemSet;this.defaultPriorityCallback=e=>t.get(e)}isFull(){return this.itemSet.size>=this.maxSize||this.cachedBytes>=this.maxBytesSize}getMemoryUsage(t){return this.bytesMap.get(t)||0}setMemoryUsage(t,e){const{bytesMap:n,itemSet:i}=this;i.has(t)&&(this.cachedBytes-=n.get(t)||0,n.set(t,e),this.cachedBytes+=e)}add(t,e){const n=this.itemSet;if(n.has(t)||this.isFull())return!1;const i=this.usedSet,r=this.itemList,s=this.callbacks;return r.push(t),i.add(t),n.set(t,Date.now()),s.set(t,e),!0}has(t){return this.itemSet.has(t)}remove(t){const e=this.usedSet,n=this.itemSet,i=this.itemList,r=this.bytesMap,s=this.callbacks,a=this.loadedSet;if(n.has(t)){this.cachedBytes-=r.get(t)||0,r.delete(t),s.get(t)(t);const o=i.indexOf(t);return i.splice(o,1),e.delete(t),n.delete(t),s.delete(t),a.delete(t),!0}return!1}setLoaded(t,e){const{itemSet:n,loadedSet:i}=this;n.has(t)&&(!0===e?i.add(t):i.delete(t))}markUsed(t){const e=this.itemSet,n=this.usedSet;e.has(t)&&!n.has(t)&&(e.set(t,Date.now()),n.add(t))}markUnused(t){this.usedSet.delete(t)}markAllUnused(){this.usedSet.clear()}unloadUnusedContent(){const{unloadPercent:t,minSize:e,maxSize:n,itemList:i,itemSet:r,usedSet:s,loadedSet:a,callbacks:o,bytesMap:l,minBytesSize:c,maxBytesSize:h}=this,A=i.length-s.size,u=i.length-a.size,d=Math.max(Math.min(i.length-e,A),0),p=this.cachedBytes-c,g=this.unloadPriorityCallback||this.defaultPriorityCallback;let f=!1;const m=d>0&&A>0||u&&i.length>n;if(A&&this.cachedBytes>c||u&&this.cachedBytes>h||m){i.sort((t,e)=>{const n=s.has(t);if(n===s.has(e)){const n=a.has(t);return n===a.has(e)?-g(t,e):n?1:-1}return n?1:-1});const u=Math.max(e*t,d*t),m=Math.ceil(Math.min(u,A,d)),y=Math.max(t*p,t*c),v=Math.min(y,p);let x=0,C=0;for(;this.cachedBytes-C>h||i.length-x>n;){const t=i[x],e=l.get(t)||0;if(s.has(t)&&a.has(t)||this.cachedBytes-C-e<h&&i.length-x<=n)break;C+=e,x++}for(;C<v||x<m;){const t=i[x],e=l.get(t)||0;if(s.has(t)||this.cachedBytes-C-e<c&&x>=m)break;C+=e,x++}i.splice(0,x).forEach(t=>{this.cachedBytes-=l.get(t)||0,o.get(t)(t),l.delete(t),r.delete(t),o.delete(t),a.delete(t),s.delete(t)}),f=x<d||C<p&&x<A,f=f&&x>0}f&&(this.unloadingHandle=requestAnimationFrame(()=>this.scheduleUnload()))}scheduleUnload(){cancelAnimationFrame(this.unloadingHandle),this.scheduled||(this.scheduled=!0,queueMicrotask(()=>{this.scheduled=!1,this.unloadUnusedContent()}))}}class IS{get running(){return 0!==this.items.length||0!==this.currJobs}constructor(){this.maxJobs=6,this.items=[],this.callbacks=new Map,this.currJobs=0,this.scheduled=!1,this.autoUpdate=!0,this.priorityCallback=null,this.schedulingCallback=t=>{requestAnimationFrame(t)},this._runjobs=()=>{this.scheduled=!1,this.tryRunJobs()}}sort(){const t=this.priorityCallback,e=this.items;null!==t&&e.sort(t)}has(t){return this.callbacks.has(t)}add(t,e){const n={callback:e,reject:null,resolve:null,promise:null};return n.promise=new Promise((e,i)=>{const r=this.items,s=this.callbacks;n.resolve=e,n.reject=i,r.unshift(t),s.set(t,n),this.autoUpdate&&this.scheduleJobRun()}),n.promise}remove(t){const e=this.items,n=this.callbacks,i=e.indexOf(t);if(-1!==i){const r=n.get(t);r.promise.catch(()=>{}),r.reject(new Error("PriorityQueue: Item removed.")),e.splice(i,1),n.delete(t)}}removeByFilter(t){const{items:e}=this;for(let n=0;n<e.length;n++){const i=e[n];t(i)&&this.remove(i)}}tryRunJobs(){this.sort();const t=this.items,e=this.callbacks,n=this.maxJobs;let i=0;const r=()=>{this.currJobs--,this.autoUpdate&&this.scheduleJobRun()};for(;n>this.currJobs&&t.length>0&&i<n;){this.currJobs++,i++;const n=t.pop(),{callback:s,resolve:a,reject:o}=e.get(n);let l;e.delete(n);try{l=s(n)}catch(t){o(t),r()}l instanceof Promise?l.then(a).catch(o).finally(r):(a(l),r())}}scheduleJobRun(){this.scheduled||(this.schedulingCallback(this._runjobs),this.scheduled=!0)}}const ES=-1,wS=0,_S=1,bS=2,BS=3,SS=6378137,MS=1/298.257223563,TS=6356752.314245179;function QS(t,e=null,n=null){const i=[];for(i.push(t),i.push(null),i.push(0);i.length>0;){const t=i.pop(),r=i.pop(),s=i.pop();if(e&&e(s,r,t))return void(n&&n(s,r,t));const a=s.children;if(a)for(let e=a.length-1;e>=0;e--)i.push(a[e]),i.push(s),i.push(t+1);n&&n(s,r,t)}}const DS=Object.freeze(Object.defineProperty({__proto__:null,traverseAncestors:function(t,e=null){let n=t;for(;n;){const t=n.__depth,i=n.parent;e&&e(n,i,t),n=i}},traverseSet:QS},Symbol.toStringTag,{value:"Module"}));function RS(t){if(null===t||t.byteLength<4)return"";let e;if(e=t instanceof DataView?t:new DataView(t),"{"===String.fromCharCode(e.getUint8(0)))return null;let n="";for(let t=0;t<4;t++)n+=String.fromCharCode(e.getUint8(t));return n}const US=new TextDecoder;function PS(t){return US.decode(t)}function LS(t){return t.replace(/[\\/][^\\/]+$/,"")+"/"}const FS=Object.freeze(Object.defineProperty({__proto__:null,arrayToString:PS,getWorkingPath:LS,readMagicBytes:RS},Symbol.toStringTag,{value:"Module"}));class NS{constructor(){this.fetchOptions={},this.workingPath=""}load(...t){return console.warn('Loader: "load" function has been deprecated in favor of "loadAsync".'),this.loadAsync(...t)}loadAsync(t){return fetch(t,this.fetchOptions).then(e=>{if(!e.ok)throw new Error(`Failed to load file "${t}" with status ${e.status} : ${e.statusText}`);return e.arrayBuffer()}).then(e=>(""===this.workingPath&&(this.workingPath=LS(t)),this.parse(e)))}resolveExternalURL(t){return new URL(t,this.workingPath).href}parse(t){throw new Error("LoaderBase: Parse not implemented.")}}function kS(t){if(!t)return null;let e=t.length;const n=t.indexOf("?"),i=t.indexOf("#");-1!==n&&(e=Math.min(e,n)),-1!==i&&(e=Math.min(e,i));const r=t.lastIndexOf(".",e),s=t.lastIndexOf("/",e),a=t.indexOf("://");return-1!==a&&a+2===s||-1===r||r<s?null:t.substring(r+1,e)||null}const OS={inView:!1,error:1/0,distanceFromCamera:1/0};function zS(t){return t===BS||t===ES}function GS(t,e){return t.__lastFrameVisited===e&&t.__used}function HS(t){return t.__childrenProcessed===t.children.length}function VS(t,e){t.__lastFrameVisited!==e.frameCount&&(t.__lastFrameVisited=e.frameCount,t.__used=!1,t.__inFrustum=!1,t.__isLeaf=!1,t.__visible=!1,t.__active=!1,t.__error=1/0,t.__distanceFromCamera=1/0,t.__allChildrenLoaded=!1,e.calculateTileViewError(t,OS),t.__inFrustum=OS.inView,t.__error=OS.error,t.__distanceFromCamera=OS.distanceFromCamera)}function qS(t,e){if(e.ensureChildrenArePreprocessed(t),VS(t,e),WS(t,e),t.__hasUnrenderableContent&&HS(t)){const n=t.children;for(let t=0,i=n.length;t<i;t++)qS(n[t],e)}}function YS(t,e){if(e.ensureChildrenArePreprocessed(t),GS(t,e.frameCount)&&(t.__hasContent&&e.queueTileForDownload(t),HS(t))){const n=t.children;for(let t=0,i=n.length;t<i;t++)YS(n[t],e)}}function WS(t,e){t.__used||(t.__used=!0,e.markTileUsed(t),e.stats.used++,!0===t.__inFrustum&&e.stats.inFrustum++)}function JS(t,e){if(e.ensureChildrenArePreprocessed(t),VS(t,e),!t.__inFrustum)return;if(!function(t,e){return!(t.__error<=e.errorTarget&&!t.__hasUnrenderableContent||e.maxDepth>0&&t.__depth+1>=e.maxDepth||!HS(t))}(t,e))return void WS(t,e);let n=!1,i=!1;const r=t.children;for(let t=0,s=r.length;t<s;t++){const s=r[t];JS(s,e),n=n||GS(s,e.frameCount),i=i||s.__inFrustum}if(WS(t,e),n&&"REPLACE"===t.refine&&(t.__depth,1))for(let t=0,n=r.length;t<n;t++)qS(r[t],e)}function jS(t,e){const n=e.frameCount;if(!GS(t,n))return;const i=t.children;let r=!1;for(let t=0,e=i.length;t<e;t++){const e=i[t];r=r||GS(e,n)}if(r){let r=!0;for(let t=0,s=i.length;t<s;t++){const s=i[t];if(jS(s,e),GS(s,n)){const t=s.__allChildrenLoaded||!s.__hasContent||s.__hasRenderableContent&&zS(s.__loadingState)||s.__hasUnrenderableContent&&s.__loadingState===ES;r=r&&t}}t.__allChildrenLoaded=r}else t.__isLeaf=!0}function XS(t,e){const n=e.stats;if(!GS(t,e.frameCount))return;if(t.__isLeaf)return void(t.__loadingState===BS?(t.__inFrustum&&(t.__visible=!0,n.visible++),t.__active=!0,n.active++):t.__hasContent&&e.queueTileForDownload(t));const i=t.children,r=t.__hasContent,s=zS(t.__loadingState)&&r,a=(e.errorTarget+1)*e.errorThreshold,o=t.__error<=a,l="ADD"===t.refine,c=t.__allChildrenLoaded||0===t.__depth&&!1;if(r&&(o||l)&&e.queueTileForDownload(t),(o&&s&&!c||s&&l)&&(t.__inFrustum&&(t.__visible=!0,n.visible++),t.__active=!0,n.active++),l||!o||c)for(let t=0,n=i.length;t<n;t++)XS(i[t],e);else for(let t=0,n=i.length;t<n;t++){const n=i[t];GS(n,e.frameCount)&&YS(n,e)}}function KS(t,e){const n=GS(t,e.frameCount);if(n||t.__usedLastFrame){let i=!1,r=!1;n?(i=t.__active,r=e.displayActiveTiles&&t.__active||t.__visible):VS(t,e),t.__hasRenderableContent&&t.__loadingState===BS&&(t.__wasSetActive!==i&&e.invokeOnePlugin(e=>e.setTileActive&&e.setTileActive(t,i)),t.__wasSetVisible!==r&&e.invokeOnePlugin(e=>e.setTileVisible&&e.setTileVisible(t,r))),t.__wasSetActive=i,t.__wasSetVisible=r,t.__usedLastFrame=n;const s=t.children;for(let t=0,n=s.length;t<n;t++)KS(s[t],e)}}const ZS=Symbol("PLUGIN_REGISTERED"),$S=(t,e)=>{const n=t.priority||0,i=e.priority||0;return n!==i?n>i?1:-1:t.__used!==e.__used?t.__used?1:-1:t.__error!==e.__error?t.__error>e.__error?1:-1:t.__distanceFromCamera!==e.__distanceFromCamera?t.__distanceFromCamera>e.__distanceFromCamera?-1:1:t.__depthFromRenderedParent!==e.__depthFromRenderedParent?t.__depthFromRenderedParent>e.__depthFromRenderedParent?-1:1:0},tM=(t,e)=>{const n=t.priority||0,i=e.priority||0;return n!==i?n>i?1:-1:t.__lastFrameVisited!==e.__lastFrameVisited?t.__lastFrameVisited>e.__lastFrameVisited?-1:1:t.__depthFromRenderedParent!==e.__depthFromRenderedParent?t.__depthFromRenderedParent>e.__depthFromRenderedParent?1:-1:t.__loadingState!==e.__loadingState?t.__loadingState>e.__loadingState?-1:1:t.__hasUnrenderableContent!==e.__hasUnrenderableContent?t.__hasUnrenderableContent?-1:1:t.__error!==e.__error?t.__error>e.__error?-1:1:0};class eM{get root(){const t=this.rootTileSet;return t?t.root:null}get loadProgress(){const{stats:t,isLoading:e}=this,n=t.downloading+t.parsing,i=t.inCacheSinceLoad+(e?1:0);return 0===i?1:1-n/i}get errorThreshold(){return this._errorThreshold}set errorThreshold(t){console.warn('TilesRenderer: The "errorThreshold" option has been deprecated.'),this._errorThreshold=t}constructor(t=null){this.rootLoadingState=wS,this.rootTileSet=null,this.rootURL=t,this.fetchOptions={},this.plugins=[],this.queuedTiles=[],this.cachedSinceLoadComplete=new Set,this.isLoading=!1;const e=new CS;e.unloadPriorityCallback=tM;const n=new IS;n.maxJobs=25,n.priorityCallback=$S;const i=new IS;i.maxJobs=5,i.priorityCallback=$S;const r=new IS;r.maxJobs=25,this.processedTiles=new WeakSet,this.visibleTiles=new Set,this.activeTiles=new Set,this.usedSet=new Set,this.lruCache=e,this.downloadQueue=n,this.parseQueue=i,this.processNodeQueue=r,this.stats={inCacheSinceLoad:0,inCache:0,parsing:0,downloading:0,failed:0,inFrustum:0,used:0,active:0,visible:0},this.frameCount=0,this._dispatchNeedsUpdateEvent=function(t){let e=null;return()=>{null===e&&(e=requestAnimationFrame(()=>{e=null,t()}))}}(()=>{this.dispatchEvent({type:"needs-update"})}),this.errorTarget=16,this._errorThreshold=1/0,this.displayActiveTiles=!1,this.maxDepth=1/0}registerPlugin(t){if(!0===t[ZS])throw new Error("TilesRendererBase: A plugin can only be registered to a single tile set");const e=this.plugins,n=t.priority||0;let i=e.length;for(let t=0;t<e.length;t++)if((e[t].priority||0)>n){i=t;break}e.splice(i,0,t),t[ZS]=!0,t.init&&t.init(this)}unregisterPlugin(t){const e=this.plugins;if("string"==typeof t&&(t=this.getPluginByName(name)),e.includes(t)){const n=e.indexOf(t);return e.splice(n,1),t.dispose&&t.dispose(),!0}return!1}getPluginByName(t){return this.plugins.find(e=>e.name===t)||null}traverse(t,e,n=!0){this.root&&QS(this.root,(e,...i)=>(n&&this.ensureChildrenArePreprocessed(e,!0),!!t&&t(e,...i)),e)}queueTileForDownload(t){t.__loadingState!==wS||this.lruCache.isFull()||this.queuedTiles.push(t)}markTileUsed(t){this.usedSet.add(t),this.lruCache.markUsed(t)}update(){const{lruCache:t,usedSet:e,stats:n,root:i,downloadQueue:r,parseQueue:s,processNodeQueue:a}=this;if(this.rootLoadingState===wS&&(this.rootLoadingState=_S,this.invokeOnePlugin(t=>t.loadRootTileSet&&t.loadRootTileSet()).then(t=>{let e=this.rootURL;null!==e&&this.invokeAllPlugins(t=>e=t.preprocessURL?t.preprocessURL(e,null):e),this.rootLoadingState=BS,this.rootTileSet=t,this.dispatchEvent({type:"needs-update"}),this.dispatchEvent({type:"load-content"}),this.dispatchEvent({type:"load-tile-set",tileSet:t,url:e})}).catch(t=>{this.rootLoadingState=ES,console.error(t),this.rootTileSet=null,this.dispatchEvent({type:"load-error",tile:null,error:t,url:this.rootURL})})),!i)return;n.inFrustum=0,n.used=0,n.active=0,n.visible=0,this.frameCount++,e.forEach(e=>t.markUnused(e)),e.clear(),JS(i,this),jS(i,this),XS(i,this),KS(i,this);const o=this.queuedTiles;o.sort(t.unloadPriorityCallback);for(let e=0,n=o.length;e<n&&!t.isFull();e++)this.requestTileContents(o[e]);o.length=0,t.scheduleUnload(),!1===(r.running||s.running||a.running)&&!0===this.isLoading&&(this.cachedSinceLoadComplete.clear(),n.inCacheSinceLoad=0,this.dispatchEvent({type:"tiles-load-end"}),this.isLoading=!1)}resetFailedTiles(){this.rootLoadingState===ES&&(this.rootLoadingState=wS);const t=this.stats;0!==t.failed&&(this.traverse(t=>{t.__loadingState===ES&&(t.__loadingState=wS)},null,!1),t.failed=0)}dispose(){[...this.plugins].forEach(t=>{this.unregisterPlugin(t)});const t=this.lruCache,e=[];this.traverse(t=>(e.push(t),!1),null,!1);for(let n=0,i=e.length;n<i;n++)t.remove(e[n]);this.stats={parsing:0,downloading:0,failed:0,inFrustum:0,used:0,active:0,visible:0},this.frameCount=0}calculateBytesUsed(t,e){return 0}dispatchEvent(t){}fetchData(t,e){return fetch(t,e)}parseTile(t,e,n){return null}disposeTile(t){t.__visible&&(this.invokeOnePlugin(e=>e.setTileVisible&&e.setTileVisible(t,!1)),t.__visible=!1),t.__active&&(this.invokeOnePlugin(e=>e.setTileActive&&e.setTileActive(t,!1)),t.__active=!1)}preprocessNode(t,e,n=null){var i;if(this.processedTiles.add(t),t.content&&(!("uri"in t.content)&&"url"in t.content&&(t.content.uri=t.content.url,delete t.content.url),t.content.boundingVolume&&!("box"in t.content.boundingVolume||"sphere"in t.content.boundingVolume||"region"in t.content.boundingVolume)&&delete t.content.boundingVolume),t.parent=n,t.children=t.children||[],null!=(i=t.content)&&i.uri){const e=kS(t.content.uri);t.__hasContent=!0,t.__hasUnrenderableContent=!(!e||!/json$/.test(e)),t.__hasRenderableContent=!t.__hasUnrenderableContent}else t.__hasContent=!1,t.__hasUnrenderableContent=!1,t.__hasRenderableContent=!1;t.__childrenProcessed=0,n&&n.__childrenProcessed++,t.__distanceFromCamera=1/0,t.__error=1/0,t.__inFrustum=!1,t.__isLeaf=!1,t.__usedLastFrame=!1,t.__used=!1,t.__wasSetVisible=!1,t.__visible=!1,t.__allChildrenLoaded=!1,t.__wasSetActive=!1,t.__active=!1,t.__loadingState=wS,null===n?(t.__depth=0,t.__depthFromRenderedParent=t.__hasRenderableContent?1:0,t.refine=t.refine||"REPLACE"):(t.__depth=n.__depth+1,t.__depthFromRenderedParent=n.__depthFromRenderedParent+(t.__hasRenderableContent?1:0),t.refine=t.refine||n.refine),t.__basePath=e,t.__lastFrameVisited=-1,this.invokeAllPlugins(i=>{i!==this&&i.preprocessNode&&i.preprocessNode(t,e,n)})}setTileActive(t,e){e?this.activeTiles.add(t):this.activeTiles.delete(t)}setTileVisible(t,e){e?this.visibleTiles.add(t):this.visibleTiles.delete(t)}calculateTileViewError(t,e){}ensureChildrenArePreprocessed(t,e=!1){const n=t.children;for(let i=0,r=n.length;i<r;i++){const r=n[i];if("__depth"in r)break;e?(this.processNodeQueue.remove(r),this.preprocessNode(r,t.__basePath,t)):this.processNodeQueue.has(r)||this.processNodeQueue.add(r,e=>{this.preprocessNode(e,t.__basePath,t),this._dispatchNeedsUpdateEvent()})}}getBytesUsed(t){let e=0;return this.invokeAllPlugins(n=>{n.calculateBytesUsed&&(e+=n.calculateBytesUsed(t,t.cached.scene)||0)}),e}recalculateBytesUsed(t=null){const{lruCache:e,processedTiles:n}=this;null===t?e.itemSet.forEach(t=>{n.has(t)&&e.setMemoryUsage(t,this.getBytesUsed(t))}):e.setMemoryUsage(t,this.getBytesUsed(t))}preprocessTileSet(t,e,n=null){const i=t.asset.version,[r,s]=i.split(".").map(t=>parseInt(t));console.assert(r<=1,"TilesRenderer: asset.version is expected to be a 1.x or a compatible version."),1===r&&s>0&&console.warn("TilesRenderer: tiles versions at 1.1 or higher have limited support. Some new extensions and features may not be supported.");let a=e.replace(/\/[^/]*$/,"");a=new URL(a,window.location.href).toString(),this.preprocessNode(t.root,a,n)}loadRootTileSet(){let t=this.rootURL;return this.invokeAllPlugins(e=>t=e.preprocessURL?e.preprocessURL(t,null):t),this.invokeOnePlugin(e=>e.fetchData&&e.fetchData(t,this.fetchOptions)).then(e=>{if(e instanceof Response){if(e.ok)return e.json();throw new Error(`TilesRenderer: Failed to load tileset "${t}" with status ${e.status} : ${e.statusText}`)}return e}).then(e=>(this.preprocessTileSet(e,t),e))}requestTileContents(t){if(t.__loadingState!==wS)return;let e=!1,n=null,i=new URL(t.content.uri,t.__basePath+"/").toString();this.invokeAllPlugins(e=>i=e.preprocessURL?e.preprocessURL(i,t):i);const r=this.stats,s=this.lruCache,a=this.downloadQueue,o=this.parseQueue,l=kS(i),c=new AbortController,h=c.signal;return s.add(t,n=>{c.abort(),e?(n.children.length=0,n.__childrenProcessed=0):this.invokeAllPlugins(t=>{t.disposeTile&&t.disposeTile(n)}),r.inCache--,this.cachedSinceLoadComplete.has(t)&&(this.cachedSinceLoadComplete.delete(t),r.inCacheSinceLoad--),n.__loadingState===_S?r.downloading--:n.__loadingState===bS&&r.parsing--,n.__loadingState=wS,o.remove(n),a.remove(n)})?(this.isLoading||(this.isLoading=!0,this.dispatchEvent({type:"tiles-load-start"})),s.setMemoryUsage(t,this.getBytesUsed(t)),this.cachedSinceLoadComplete.add(t),r.inCacheSinceLoad++,r.inCache++,r.downloading++,t.__loadingState=_S,a.add(t,e=>{if(h.aborted)return Promise.resolve();const n=this.invokeOnePlugin(t=>t.fetchData&&t.fetchData(i,{...this.fetchOptions,signal:h}));return this.dispatchEvent({type:"tile-download-start",tile:t}),n}).then(t=>{if(!h.aborted){if(t instanceof Response){if(t.ok)return"json"===l?t.json():t.arrayBuffer();throw new Error(`Failed to load model with error code ${t.status}`)}return t}}).then(s=>{if(!h.aborted)return r.downloading--,r.parsing++,t.__loadingState=bS,o.add(t,r=>h.aborted?Promise.resolve():"json"===l&&s.root?(this.preprocessTileSet(s,i,t),t.children.push(s.root),n=s,e=!0,Promise.resolve()):this.invokeOnePlugin(t=>t.parseTile&&t.parseTile(s,r,l,i,h)))}).then(()=>{if(h.aborted)return;r.parsing--,t.__loadingState=BS,s.setLoaded(t,!0);const a=this.getBytesUsed(t);0===s.getMemoryUsage(t)&&a>0&&s.isFull()?s.remove(t):(s.setMemoryUsage(t,a),this.dispatchEvent({type:"needs-update"}),this.dispatchEvent({type:"load-content"}),e&&this.dispatchEvent({type:"load-tile-set",tileSet:n,url:i}),t.cached.scene&&this.dispatchEvent({type:"load-model",scene:t.cached.scene,tile:t}))}).catch(e=>{h.aborted||("AbortError"!==e.name?(o.remove(t),a.remove(t),t.__loadingState===bS?r.parsing--:t.__loadingState===_S&&r.downloading--,r.failed++,console.error(`TilesRenderer : Failed to load tile at url "${t.content.uri}".`),console.error(e),t.__loadingState=ES,s.setLoaded(t,!0),this.dispatchEvent({type:"load-error",tile:t,error:e,url:i})):s.remove(t))})):void 0}getAttributions(t=[]){return this.invokeAllPlugins(e=>e!==this&&e.getAttributions&&e.getAttributions(t)),t}invokeOnePlugin(t){const e=[...this.plugins,this];for(let n=0;n<e.length;n++){const i=t(e[n]);if(i)return i}return null}invokeAllPlugins(t){const e=[...this.plugins,this],n=[];for(let i=0;i<e.length;i++){const r=t(e[i]);r&&n.push(r)}return 0===n.length?null:Promise.all(n)}}function nM(t,e,n,i,r,s){let a,o;switch(i){case"SCALAR":a=1;break;case"VEC2":a=2;break;case"VEC3":a=3;break;case"VEC4":a=4;break;default:throw new Error(`FeatureTable : Feature type not provided for "${s}".`)}const l=n*a;switch(r){case"BYTE":o=new Int8Array(t,e,l);break;case"UNSIGNED_BYTE":o=new Uint8Array(t,e,l);break;case"SHORT":o=new Int16Array(t,e,l);break;case"UNSIGNED_SHORT":o=new Uint16Array(t,e,l);break;case"INT":o=new Int32Array(t,e,l);break;case"UNSIGNED_INT":o=new Uint32Array(t,e,l);break;case"FLOAT":o=new Float32Array(t,e,l);break;case"DOUBLE":o=new Float64Array(t,e,l);break;default:throw new Error(`FeatureTable : Feature component type not provided for "${s}".`)}return o}class iM{constructor(t,e,n,i){this.buffer=t,this.binOffset=e+n,this.binLength=i;let r=null;if(0!==n){const i=new Uint8Array(t,e,n);r=JSON.parse(PS(i))}else r={};this.header=r}getKeys(){return Object.keys(this.header).filter(t=>"extensions"!==t)}getData(t,e,n=null,i=null){const r=this.header;if(!(t in r))return null;const s=r[t];if(s instanceof Object){if(Array.isArray(s))return s;{const{buffer:r,binOffset:a,binLength:o}=this,l=s.byteOffset||0,c=s.type||i,h=s.componentType||n;if("type"in s&&i&&s.type!==i)throw new Error("FeatureTable: Specified type does not match expected type.");const A=a+l,u=nM(r,A,e,c,h,t);if(A+u.byteLength>a+o)throw new Error("FeatureTable: Feature data read outside binary body length.");return u}}return s}getBuffer(t,e){const{buffer:n,binOffset:i}=this;return n.slice(i+t,i+t+e)}}class rM{constructor(t){this.batchTable=t;const e=t.header.extensions["3DTILES_batch_table_hierarchy"];this.classes=e.classes;for(const t of this.classes){const e=t.instances;for(const n in e)t.instances[n]=this._parseProperty(e[n],t.length,n)}if(this.instancesLength=e.instancesLength,this.classIds=this._parseProperty(e.classIds,this.instancesLength,"classIds"),e.parentCounts?this.parentCounts=this._parseProperty(e.parentCounts,this.instancesLength,"parentCounts"):this.parentCounts=new Array(this.instancesLength).fill(1),e.parentIds){const t=this.parentCounts.reduce((t,e)=>t+e,0);this.parentIds=this._parseProperty(e.parentIds,t,"parentIds")}else this.parentIds=null;this.instancesIds=[];const n={};for(const t of this.classIds)n[t]=n[t]??0,this.instancesIds.push(n[t]),n[t]++}_parseProperty(t,e,n){if(Array.isArray(t))return t;{const{buffer:i,binOffset:r}=this.batchTable;return nM(i,r+t.byteOffset,e,"SCALAR",t.componentType||"UNSIGNED_SHORT",n)}}getDataFromId(t,e={}){const n=this.parentCounts[t];if(this.parentIds&&n>0){let i=0;for(let e=0;e<t;e++)i+=this.parentCounts[e];for(let r=0;r<n;r++){const n=this.parentIds[i+r];n!==t&&this.getDataFromId(n,e)}}const i=this.classIds[t],r=this.classes[i].instances,s=this.classes[i].name,a=this.instancesIds[t];for(const t in r)e[s]=e[s]||{},e[s][t]=r[t][a];return e}}class sM extends iM{get batchSize(){return console.warn("BatchTable.batchSize has been deprecated and replaced with BatchTable.count."),this.count}constructor(t,e,n,i,r){super(t,n,i,r),this.count=e,this.extensions={};const s=this.header.extensions;s&&s["3DTILES_batch_table_hierarchy"]&&(this.extensions["3DTILES_batch_table_hierarchy"]=new rM(this))}getData(t,e=null,n=null){return console.warn("BatchTable: BatchTable.getData is deprecated. Use BatchTable.getDataFromId to get allproperties for an id or BatchTable.getPropertyArray for getting an array of value for a property."),super.getData(t,this.count,e,n)}getDataFromId(t,e={}){if(t<0||t>=this.count)throw new Error(`BatchTable: id value "${t}" out of bounds for "${this.count}" features number.`);for(const n of this.getKeys())e[n]=super.getData(n,this.count)[t];for(const n in this.extensions){const i=this.extensions[n];i.getDataFromId instanceof Function&&(e[n]=e[n]||{},i.getDataFromId(t,e[n]))}return e}getPropertyArray(t){return super.getData(t,this.count)}}class aM extends NS{parse(t){const e=new DataView(t),n=RS(e);console.assert("b3dm"===n);const i=e.getUint32(4,!0);console.assert(1===i);const r=e.getUint32(8,!0);console.assert(r===t.byteLength);const s=e.getUint32(12,!0),a=e.getUint32(16,!0),o=e.getUint32(20,!0),l=e.getUint32(24,!0),c=t.slice(28,28+s+a),h=new iM(c,0,s,a),A=28+s+a,u=t.slice(A,A+o+l),d=new sM(u,h.getData("BATCH_LENGTH"),0,o,l),p=A+o+l;return{version:i,featureTable:h,batchTable:d,glbBytes:new Uint8Array(t,p,r-p)}}}class oM extends NS{parse(t){const e=new DataView(t),n=RS(e);console.assert("i3dm"===n);const i=e.getUint32(4,!0);console.assert(1===i);const r=e.getUint32(8,!0);console.assert(r===t.byteLength);const s=e.getUint32(12,!0),a=e.getUint32(16,!0),o=e.getUint32(20,!0),l=e.getUint32(24,!0),c=e.getUint32(28,!0),h=t.slice(32,32+s+a),A=new iM(h,0,s,a),u=32+s+a,d=t.slice(u,u+o+l),p=new sM(d,A.getData("INSTANCES_LENGTH"),0,o,l),g=u+o+l,f=new Uint8Array(t,g,r-g);let m=null,y=null,v=null;if(c)m=f,y=Promise.resolve();else{const t=this.resolveExternalURL(PS(f));v=LS(t),y=fetch(t,this.fetchOptions).then(e=>{if(!e.ok)throw new Error(`I3DMLoaderBase : Failed to load file "${t}" with status ${e.status} : ${e.statusText}`);return e.arrayBuffer()}).then(t=>{m=new Uint8Array(t)})}return y.then(()=>({version:i,featureTable:A,batchTable:p,glbBytes:m,gltfWorkingPath:v}))}}class lM extends NS{parse(t){const e=new DataView(t),n=RS(e);console.assert("pnts"===n);const i=e.getUint32(4,!0);console.assert(1===i);const r=e.getUint32(8,!0);console.assert(r===t.byteLength);const s=e.getUint32(12,!0),a=e.getUint32(16,!0),o=e.getUint32(20,!0),l=e.getUint32(24,!0),c=t.slice(28,28+s+a),h=new iM(c,0,s,a),A=28+s+a,u=t.slice(A,A+o+l),d=new sM(u,h.getData("BATCH_LENGTH")||h.getData("POINTS_LENGTH"),0,o,l);return Promise.resolve({version:i,featureTable:h,batchTable:d})}}class cM extends NS{parse(t){const e=new DataView(t),n=RS(e);console.assert("cmpt"===n,'CMPTLoader: The magic bytes equal "cmpt".');const i=e.getUint32(4,!0);console.assert(1===i,'CMPTLoader: The version listed in the header is "1".');const r=e.getUint32(8,!0);console.assert(r===t.byteLength,"CMPTLoader: The contents buffer length listed in the header matches the file.");const s=e.getUint32(12,!0),a=[];let o=16;for(let e=0;e<s;e++){const e=new DataView(t,o,12),n=RS(e),i=e.getUint32(4,!0),r=e.getUint32(8,!0),s=new Uint8Array(t,o,r);a.push({type:n,buffer:s,version:i}),o+=r}return{version:i,tiles:a}}}const hM=new iu,AM=new hi,uM={};function dM(t){const{x:e,y:n,z:i}=t;t.x=i,t.y=e,t.z=n}function pM(t){return-(t-Math.PI/2)}function gM(t){return-t+Math.PI/2}function fM(t,e="E",n="W"){const i=t<0?n:e,r=~~(t=Math.abs(t)),s=60*(t-r),a=~~s;return`${r}° ${a}' ${~~(60*(s-a))}" ${i}`}const mM=Object.freeze(Object.defineProperty({__proto__:null,latitudeToSphericalPhi:gM,sphericalPhiToLatitude:pM,swapToGeoFrame:dM,swapToThreeFrame:function(t){const{x:e,y:n,z:i}=t;t.z=e,t.x=n,t.y=i},toLatLonString:function(t,e,n=!1){const i=function(t,e,n={}){return hM.theta=e,hM.phi=gM(t),AM.setFromSpherical(hM),hM.setFromVector3(AM),n.lat=pM(hM.phi),n.lon=hM.theta,n}(t,e,uM);let r,s;return n?(r=`${(oi.RAD2DEG*i.lat).toFixed(4)}°`,s=`${(oi.RAD2DEG*i.lon).toFixed(4)}°`):(r=fM(oi.RAD2DEG*i.lat,"N","S"),s=fM(oi.RAD2DEG*i.lon,"E","W")),`${r} ${s}`}},Symbol.toStringTag,{value:"Module"})),yM=new iu,vM=new hi,xM=new hi,CM=new hi,IM=new fr,EM=new fr,wM=new fr,_M=new or,bM=new br,BM=new hi,SM=new hi,MM=new hi,TM=new hi,QM=new gr,DM=0,RM=1,UM=2;class PM{constructor(t=1,e=1,n=1){this.name="",this.radius=new hi(t,e,n)}intersectRay(t,e){return IM.makeScale(...this.radius).invert(),_M.center.set(0,0,0),_M.radius=1,QM.copy(t).applyMatrix4(IM),QM.intersectSphere(_M,e)?(IM.makeScale(...this.radius),e.applyMatrix4(IM),e):null}getEastNorthUpFrame(t,e,n,i){return n.isMatrix4&&(i=n,n=0,console.warn('Ellipsoid: The signature for "getEastNorthUpFrame" has changed.')),this.getEastNorthUpAxes(t,e,BM,SM,MM),this.getCartographicToPosition(t,e,n,TM),i.makeBasis(BM,SM,MM).setPosition(TM)}getOrientedEastNorthUpFrame(t,e,n,i,r,s,a){return this.getObjectFrame(t,e,n,i,r,s,a,DM)}getObjectFrame(t,e,n,i,r,s,a,o=UM){return this.getEastNorthUpFrame(t,e,n,IM),bM.set(r,s,-i,"ZXY"),a.makeRotationFromEuler(bM).premultiply(IM),o===RM?(bM.set(Math.PI/2,0,0,"XYZ"),EM.makeRotationFromEuler(bM),a.multiply(EM)):o===UM&&(bM.set(-Math.PI/2,0,Math.PI,"XYZ"),EM.makeRotationFromEuler(bM),a.multiply(EM)),a}getCartographicFromObjectFrame(t,e,n=UM){return n===RM?(bM.set(-Math.PI/2,0,0,"XYZ"),EM.makeRotationFromEuler(bM).premultiply(t)):n===UM?(bM.set(-Math.PI/2,0,Math.PI,"XYZ"),EM.makeRotationFromEuler(bM).premultiply(t)):EM.copy(t),TM.setFromMatrixPosition(EM),this.getPositionToCartographic(TM,e),this.getEastNorthUpFrame(e.lat,e.lon,0,IM).invert(),EM.premultiply(IM),bM.setFromRotationMatrix(EM,"ZXY"),e.azimuth=-bM.z,e.elevation=bM.x,e.roll=bM.y,e}getEastNorthUpAxes(t,e,n,i,r,s=TM){this.getCartographicToPosition(t,e,0,s),this.getCartographicToNormal(t,e,r),n.set(-s.y,s.x,0).normalize(),i.crossVectors(r,n).normalize()}getAzElRollFromRotationMatrix(t,e,n,i,r=DM){return console.warn('Ellipsoid: "getAzElRollFromRotationMatrix" is deprecated. Use "getCartographicFromObjectFrame", instead.'),this.getCartographicToPosition(t,e,0,TM),wM.copy(n).setPosition(TM),this.getCartographicFromObjectFrame(wM,i,r),delete i.height,delete i.lat,delete i.lon,i}getRotationMatrixFromAzElRoll(t,e,n,i,r,s,a=DM){return console.warn('Ellipsoid: "getRotationMatrixFromAzElRoll" function has been deprecated. Use "getObjectFrame", instead.'),this.getObjectFrame(t,e,0,n,i,r,s,a),s.setPosition(0,0,0),s}getFrame(t,e,n,i,r,s,a,o=DM){return console.warn('Ellipsoid: "getFrame" function has been deprecated. Use "getObjectFrame", instead.'),this.getObjectFrame(t,e,s,n,i,r,a,o)}getCartographicToPosition(t,e,n,i){this.getCartographicToNormal(t,e,vM);const r=this.radius;xM.copy(vM),xM.x*=r.x**2,xM.y*=r.y**2,xM.z*=r.z**2;const s=Math.sqrt(vM.dot(xM));return xM.divideScalar(s),i.copy(xM).addScaledVector(vM,n)}getPositionToCartographic(t,e){this.getPositionToSurfacePoint(t,xM),this.getPositionToNormal(t,vM);const n=CM.subVectors(t,xM);return e.lon=Math.atan2(vM.y,vM.x),e.lat=Math.asin(vM.z),e.height=Math.sign(n.dot(t))*n.length(),e}getCartographicToNormal(t,e,n){return yM.set(1,gM(t),e),n.setFromSpherical(yM).normalize(),dM(n),n}getPositionToNormal(t,e){const n=this.radius;return e.copy(t),e.x/=n.x**2,e.y/=n.y**2,e.z/=n.z**2,e.normalize(),e}getPositionToSurfacePoint(t,e){const n=this.radius,i=1/n.x**2,r=1/n.y**2,s=1/n.z**2,a=t.x*t.x*i,o=t.y*t.y*r,l=t.z*t.z*s,c=a+o+l,h=Math.sqrt(1/c),A=xM.copy(t).multiplyScalar(h);if(c<.1)return isFinite(h)?e.copy(A):null;const u=CM.set(A.x*i*2,A.y*r*2,A.z*s*2);let d,p,g,f,m,y,v,x,C,I,E,w=(1-h)*t.length()/(.5*u.length()),_=0;do{w-=_,g=1/(1+w*i),f=1/(1+w*r),m=1/(1+w*s),y=g*g,v=f*f,x=m*m,C=y*g,I=v*f,E=x*m,d=a*y+o*v+l*x-1,p=a*C*i+o*I*r+l*E*s,_=d/(-2*p)}while(Math.abs(d)>1e-12);return e.set(t.x*g,t.y*f,t.z*m)}calculateHorizonDistance(t,e){const n=this.calculateEffectiveRadius(t);return Math.sqrt(2*n*e+e**2)}calculateEffectiveRadius(t){const e=this.radius.x,n=1-this.radius.z**2/e**2,i=t*oi.DEG2RAD,r=Math.sin(i)**2;return e/Math.sqrt(1-n*r)}getPositionElevation(t){this.getPositionToSurfacePoint(t,xM);const e=CM.subVectors(t,xM);return Math.sign(e.dot(t))*e.length()}closestPointToRayEstimate(t,e){return this.intersectRay(t,e)?e:(IM.makeScale(...this.radius).invert(),QM.copy(t).applyMatrix4(IM),xM.set(0,0,0),QM.closestPointToPoint(xM,e).normalize(),IM.makeScale(...this.radius),e.applyMatrix4(IM))}copy(t){return this.radius.copy(t.radius),this}clone(){return(new this.constructor).copy(this)}}const LM=new PM(SS,SS,TS);LM.name="WGS84 Earth";const FM=new hi,NM=new hi,kM=new hi,OM=new gr;class zM{constructor(t=new Hi,e=new fr){this.box=t.clone(),this.transform=e.clone(),this.inverseTransform=new fr,this.points=new Array(8).fill().map(()=>new hi),this.planes=new Array(6).fill().map(()=>new go)}copy(t){return this.box.copy(t.box),this.transform.copy(t.transform),this.update(),this}clone(){return(new this.constructor).copy(this)}clampPoint(t,e){return e.copy(t).applyMatrix4(this.inverseTransform).clamp(this.box.min,this.box.max).applyMatrix4(this.transform)}distanceToPoint(t){return this.clampPoint(t,kM).distanceTo(t)}containsPoint(t){return kM.copy(t).applyMatrix4(this.inverseTransform),this.box.containsPoint(kM)}intersectsRay(t){return OM.copy(t).applyMatrix4(this.inverseTransform),OM.intersectsBox(this.box)}intersectRay(t,e){return OM.copy(t).applyMatrix4(this.inverseTransform),OM.intersectBox(this.box,e)?(e.applyMatrix4(this.transform),e):null}update(){const{points:t,inverseTransform:e,transform:n,box:i}=this;e.copy(n).invert();const{min:r,max:s}=i;let a=0;for(let e=-1;e<=1;e+=2)for(let i=-1;i<=1;i+=2)for(let o=-1;o<=1;o+=2)t[a].set(e<0?r.x:s.x,i<0?r.y:s.y,o<0?r.z:s.z).applyMatrix4(n),a++;this.updatePlanes()}updatePlanes(){FM.copy(this.box.min).applyMatrix4(this.transform),NM.copy(this.box.max).applyMatrix4(this.transform),kM.set(0,0,1).transformDirection(this.transform),this.planes[0].setFromNormalAndCoplanarPoint(kM,FM),this.planes[1].setFromNormalAndCoplanarPoint(kM,NM).negate(),kM.set(0,1,0).transformDirection(this.transform),this.planes[2].setFromNormalAndCoplanarPoint(kM,FM),this.planes[3].setFromNormalAndCoplanarPoint(kM,NM).negate(),kM.set(1,0,0).transformDirection(this.transform),this.planes[4].setFromNormalAndCoplanarPoint(kM,FM),this.planes[5].setFromNormalAndCoplanarPoint(kM,NM).negate()}intersectsSphere(t){return this.clampPoint(t.center,kM),kM.distanceToSquared(t.center)<=t.radius*t.radius}intersectsFrustum(t){return this._intersectsPlaneShape(t.planes,t.points)}intersectsOBB(t){return this._intersectsPlaneShape(t.planes,t.points)}_intersectsPlaneShape(t,e){const n=this.points,i=this.planes;for(let e=0;e<6;e++){const i=t[e];let r=-1/0;for(let t=0;t<8;t++){const e=n[t],s=i.distanceToPoint(e);r=r<s?s:r}if(r<0)return!1}for(let t=0;t<6;t++){const n=i[t];let r=-1/0;for(let t=0;t<8;t++){const i=e[t],s=n.distanceToPoint(i);r=r<s?s:r}if(r<0)return!1}return!0}}const GM=Math.PI,HM=GM/2,VM=new hi,qM=new hi,YM=new hi,WM=new fr;let JM=0;const jM=[];function XM(t=!1){return t?(jM[JM]||(jM[JM]=new hi),JM++,jM[JM-1]):new hi}function KM(){JM=0}class ZM extends PM{constructor(t,e,n,i=-HM,r=HM,s=0,a=2*GM,o=0,l=0){super(t,e,n),this.latStart=i,this.latEnd=r,this.lonStart=s,this.lonEnd=a,this.heightStart=o,this.heightEnd=l}_getPoints(t=!1){const{latStart:e,latEnd:n,lonStart:i,lonEnd:r,heightStart:s,heightEnd:a}=this,o=oi.mapLinear(.5,0,1,e,n),l=oi.mapLinear(.5,0,1,i,r),c=Math.floor(i/HM)*HM,h=[[-GM/2,0],[GM/2,0],[0,c],[0,c+GM/2],[0,c+GM],[0,c+3*GM/2],[e,r],[n,r],[e,i],[n,i],[0,i],[0,r],[o,l],[e,l],[n,l],[o,i],[o,r]],A=[],u=h.length;for(let o=0;o<=1;o++){const l=oi.mapLinear(o,0,1,s,a);for(let s=0,a=u;s<a;s++){const[a,o]=h[s];if(a>=e&&a<=n&&o>=i&&o<=r){const e=XM(t);A.push(e),this.getCartographicToPosition(a,o,l,e)}}}return A}getBoundingBox(t,e){KM();const{latStart:n,latEnd:i,lonStart:r,lonEnd:s}=this;if(i-n<GM/2){const t=oi.mapLinear(.5,0,1,n,i),a=oi.mapLinear(.5,0,1,r,s);this.getCartographicToNormal(t,a,YM),qM.set(0,0,1),VM.crossVectors(qM,YM),qM.crossVectors(VM,YM),e.makeBasis(VM,qM,YM)}else VM.set(1,0,0),qM.set(0,1,0),YM.set(0,0,1),e.makeBasis(VM,qM,YM);WM.copy(e).invert();const a=this._getPoints(!0);for(let t=0,e=a.length;t<e;t++)a[t].applyMatrix4(WM);t.makeEmpty(),t.setFromPoints(a)}getBoundingSphere(t,e){KM();const n=this._getPoints(!0);t.makeEmpty(),t.setFromPoints(n,e)}}function $M(t){const{TextureUtils:e}=i;if(!e||!t)return 0;const{format:n,type:r,image:s}=t,{width:a,height:o}=s;let l=e.getByteLength(a,o,n,r);return l*=t.generateMipmaps?4/3:1,l}function tT(t){const e=new Set;let n=0;return t.traverse(t=>{if(t.geometry&&!e.has(t.geometry)&&(n+=Kf(t.geometry),e.add(t.geometry)),t.material){const i=t.material;for(const t in i){const r=i[t];r&&r.isTexture&&!e.has(r)&&(n+=$M(r),e.add(r))}}}),n}const eT=Object.freeze(Object.defineProperty({__proto__:null,estimateBytesUsed:tT,safeTextureGetByteLength:$M},Symbol.toStringTag,{value:"Module"}));class nT extends aM{constructor(t=Eh){super(),this.manager=t,this.adjustmentTransform=new fr}parse(t){const e=super.parse(t),n=e.glbBytes.slice().buffer;return new Promise((t,i)=>{const r=this.manager,s=this.fetchOptions,a=r.getHandler("path.gltf")||new $f(r);"include"===s.credentials&&"cors"===s.mode&&a.setCrossOrigin("use-credentials"),"credentials"in s&&a.setWithCredentials("include"===s.credentials),s.headers&&a.setRequestHeader(s.headers);let o=this.workingPath;!/[\\/]$/.test(o)&&o.length&&(o+="/");const l=this.adjustmentTransform;a.parse(n,o,n=>{const{batchTable:i,featureTable:r}=e,{scene:s}=n,a=r.getData("RTC_CENTER",1,"FLOAT","VEC3");a&&(s.position.x+=a[0],s.position.y+=a[1],s.position.z+=a[2]),n.scene.updateMatrix(),n.scene.matrix.multiply(l),n.scene.matrix.decompose(n.scene.position,n.scene.quaternion,n.scene.scale),n.batchTable=i,n.featureTable=r,s.batchTable=i,s.featureTable=r,t(n)},i)})}}function iT(t){const e=t>>11,n=t>>5&63,i=31&t;return[Math.round(e/31*255),Math.round(n/63*255),Math.round(i/31*255)]}const rT=new li;function sT(t,e,n=new hi){rT.set(t,e).divideScalar(256).multiplyScalar(2).subScalar(1),n.set(rT.x,rT.y,1-Math.abs(rT.x)-Math.abs(rT.y));const i=oi.clamp(-n.z,0,1);return n.x>=0?n.setX(n.x-i):n.setX(n.x+i),n.y>=0?n.setY(n.y-i):n.setY(n.y+i),n.normalize(),n}const aT={RGB:"color",POSITION:"position"};class oT extends lM{constructor(t=Eh){super(),this.manager=t}parse(t){return super.parse(t).then(async t=>{const{featureTable:e,batchTable:n}=t,i=new nl,r=e.header.extensions,s=new hi;let a;if(r&&r["3DTILES_draco_point_compression"]){const{byteOffset:t,byteLength:n,properties:s}=r["3DTILES_draco_point_compression"],o=this.manager.getHandler("draco.drc");if(null==o)throw new Error("PNTSLoader: dracoLoader not available.");const l={};for(const t in s)t in aT&&t in s&&(l[aT[t]]=s[t]);const c={attributeIDs:l,attributeTypes:{position:"Float32Array",color:"Uint8Array"},useUniqueIDs:!0},h=e.getBuffer(t,n);a=await o.decodeGeometry(h,c),a.attributes.color&&(i.vertexColors=!0)}else{const t=e.getData("POINTS_LENGTH"),n=e.getData("POSITION",t,"FLOAT","VEC3"),r=e.getData("NORMAL",t,"FLOAT","VEC3"),o=e.getData("NORMAL",t,"UNSIGNED_BYTE","VEC2"),l=e.getData("RGB",t,"UNSIGNED_BYTE","VEC3"),c=e.getData("RGBA",t,"UNSIGNED_BYTE","VEC4"),h=e.getData("RGB565",t,"UNSIGNED_SHORT","SCALAR"),A=e.getData("CONSTANT_RGBA",t,"UNSIGNED_BYTE","VEC4"),u=e.getData("POSITION_QUANTIZED",t,"UNSIGNED_SHORT","VEC3"),d=e.getData("QUANTIZED_VOLUME_SCALE",t,"FLOAT","VEC3"),p=e.getData("QUANTIZED_VOLUME_OFFSET",t,"FLOAT","VEC3");if(a=new Ns,u){const e=new Float32Array(3*t);for(let n=0;n<t;n++)for(let t=0;t<3;t++){const i=3*n+t;e[i]=u[i]/65535*d[t]}s.x=p[0],s.y=p[1],s.z=p[2],a.setAttribute("position",new Cs(e,3,!1))}else a.setAttribute("position",new Cs(n,3,!1));if(null!==r)a.setAttribute("normal",new Cs(r,3,!1));else if(null!==o){const e=new Float32Array(3*t),n=new hi;for(let i=0;i<t;i++){const t=sT(o[2*i],o[2*i+1],n);e[3*i]=t.x,e[3*i+1]=t.y,e[3*i+2]=t.z}a.setAttribute("normal",new Cs(e,3,!1))}if(null!==c)a.setAttribute("color",new Cs(c,4,!0)),i.vertexColors=!0,i.transparent=!0,i.depthWrite=!1;else if(null!==l)a.setAttribute("color",new Cs(l,3,!0)),i.vertexColors=!0;else if(null!==h){const e=new Uint8Array(3*t);for(let n=0;n<t;n++){const t=iT(h[n]);for(let i=0;i<3;i++)e[3*n+i]=t[i]}a.setAttribute("color",new Cs(e,3,!0)),i.vertexColors=!0}else if(null!==A){const t=new ls(A[0],A[1],A[2]);i.color=t;const e=A[3]/255;e<1&&(i.opacity=e,i.transparent=!0,i.depthWrite=!1)}}const o=new ol(a,i);o.position.copy(s),t.scene=o,t.scene.featureTable=e,t.scene.batchTable=n;const l=e.getData("RTC_CENTER",1,"FLOAT","VEC3");return l&&(t.scene.position.x+=l[0],t.scene.position.y+=l[1],t.scene.position.z+=l[2]),t})}}const lT=new hi,cT=new hi,hT=new hi,AT=new hi,uT=new ci,dT=new hi,pT=new fr,gT=new fr,fT=new hi,mT=new fr,yT=new ci,vT={};class xT extends oM{constructor(t=Eh){super(),this.manager=t,this.adjustmentTransform=new fr,this.ellipsoid=LM.clone()}resolveExternalURL(t){return this.manager.resolveURL(super.resolveExternalURL(t))}parse(t){return super.parse(t).then(t=>{const{featureTable:e,batchTable:n}=t,i=t.glbBytes.slice().buffer;return new Promise((r,s)=>{const a=this.fetchOptions,o=this.manager,l=o.getHandler("path.gltf")||new $f(o);"include"===a.credentials&&"cors"===a.mode&&l.setCrossOrigin("use-credentials"),"credentials"in a&&l.setWithCredentials("include"===a.credentials),a.headers&&l.setRequestHeader(a.headers);let c=t.gltfWorkingPath??this.workingPath;/[\\/]$/.test(c)||(c+="/");const h=this.adjustmentTransform;l.parse(i,c,t=>{const i=e.getData("INSTANCES_LENGTH");let s=e.getData("POSITION",i,"FLOAT","VEC3");const a=e.getData("POSITION_QUANTIZED",i,"UNSIGNED_SHORT","VEC3"),o=e.getData("QUANTIZED_VOLUME_OFFSET",1,"FLOAT","VEC3"),l=e.getData("QUANTIZED_VOLUME_SCALE",1,"FLOAT","VEC3"),c=e.getData("NORMAL_UP",i,"FLOAT","VEC3"),A=e.getData("NORMAL_RIGHT",i,"FLOAT","VEC3"),u=e.getData("SCALE_NON_UNIFORM",i,"FLOAT","VEC3"),d=e.getData("SCALE",i,"FLOAT","SCALAR"),p=e.getData("RTC_CENTER",1,"FLOAT","VEC3"),g=e.getData("EAST_NORTH_UP");if(["NORMAL_UP_OCT32P","NORMAL_RIGHT_OCT32P"].forEach(t=>{t in e.header&&console.warn(`I3DMLoader: Unsupported FeatureTable feature "${t}" detected.`)}),!s&&a){s=new Float32Array(3*i);for(let t=0;t<i;t++)s[3*t+0]=o[0]+a[3*t+0]/65535*l[0],s[3*t+1]=o[1]+a[3*t+1]/65535*l[1],s[3*t+2]=o[2]+a[3*t+2]/65535*l[2]}const f=new hi;for(let t=0;t<i;t++)f.x+=s[3*t+0]/i,f.y+=s[3*t+1]/i,f.z+=s[3*t+2]/i;const m=[],y=[];t.scene.updateMatrixWorld(),t.scene.traverse(t=>{if(t.isMesh){y.push(t);const{geometry:e,material:n}=t,r=new ho(e,n,i);r.position.copy(f),p&&(r.position.x+=p[0],r.position.y+=p[1],r.position.z+=p[2]),m.push(r)}});for(let t=0;t<i;t++){AT.set(s[3*t+0]-f.x,s[3*t+1]-f.y,s[3*t+2]-f.z),uT.identity(),c&&(cT.set(c[3*t+0],c[3*t+1],c[3*t+2]),hT.set(A[3*t+0],A[3*t+1],A[3*t+2]),lT.crossVectors(hT,cT).normalize(),pT.makeBasis(hT,cT,lT),uT.setFromRotationMatrix(pT)),dT.set(1,1,1),u&&dT.set(u[3*t+0],u[3*t+1],u[3*t+2]),d&&dT.multiplyScalar(d[t]);for(let e=0,n=m.length;e<n;e++){const n=m[e];yT.copy(uT),g&&(n.updateMatrixWorld(),fT.copy(AT).applyMatrix4(n.matrixWorld),this.ellipsoid.getPositionToCartographic(fT,vT),this.ellipsoid.getEastNorthUpFrame(vT.lat,vT.lon,mT),yT.setFromRotationMatrix(mT)),pT.compose(AT,yT,dT).multiply(h);const i=y[e];gT.multiplyMatrices(pT,i.matrixWorld),n.setMatrixAt(t,gT)}}t.scene.clear(),t.scene.add(...m),t.batchTable=n,t.featureTable=e,t.scene.batchTable=n,t.scene.featureTable=e,r(t)},s)})})}}class CT extends cM{constructor(t=Eh){super(),this.manager=t,this.adjustmentTransform=new fr,this.ellipsoid=LM.clone()}parse(t){const e=super.parse(t),{manager:n,ellipsoid:i,adjustmentTransform:r}=this,s=[];for(const t in e.tiles){const{type:a,buffer:o}=e.tiles[t];switch(a){case"b3dm":{const t=o.slice(),e=new nT(n);e.workingPath=this.workingPath,e.fetchOptions=this.fetchOptions,e.adjustmentTransform.copy(r);const i=e.parse(t.buffer);s.push(i);break}case"pnts":{const t=o.slice(),e=new oT(n);e.workingPath=this.workingPath,e.fetchOptions=this.fetchOptions;const i=e.parse(t.buffer);s.push(i);break}case"i3dm":{const t=o.slice(),e=new xT(n);e.workingPath=this.workingPath,e.fetchOptions=this.fetchOptions,e.ellipsoid.copy(i),e.adjustmentTransform.copy(r);const a=e.parse(t.buffer);s.push(a);break}}}return Promise.all(s).then(t=>{const e=new da;return t.forEach(t=>{e.add(t.scene)}),{tiles:t,scene:e}})}}const IT=new fr;class ET extends da{constructor(t){super(),this.isTilesGroup=!0,this.name="TilesRenderer.TilesGroup",this.tilesRenderer=t,this.matrixWorldInverse=new fr}raycast(t,e){return!this.tilesRenderer.optimizeRaycast||(this.tilesRenderer.raycast(t,e),!1)}updateMatrixWorld(t){if(this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldNeedsUpdate||t){null===this.parent?IT.copy(this.matrix):IT.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1;const t=IT.elements,e=this.matrixWorld.elements;let n=!1;for(let i=0;i<16;i++){const r=t[i],s=e[i];if(Math.abs(r-s)>Number.EPSILON){n=!0;break}}if(n){this.matrixWorld.copy(IT),this.matrixWorldInverse.copy(IT).invert();const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateMatrixWorld()}}}updateWorldMatrix(t,e){this.parent&&t&&this.parent.updateWorldMatrix(t,!1),this.updateMatrixWorld(!0)}}const wT=new gr,_T=new hi,bT=[];function BT(t,e){return t.distance-e.distance}function ST(t,e,n,i){const{scene:r}=t.cached;n.invokeOnePlugin(n=>n.raycastTile&&n.raycastTile(t,r,e,i))||e.intersectObject(r,!0,i)}function MT(t){return"__used"in t}function TT(t,e,n,i=null){const{group:r,activeTiles:s}=t;null===i&&(i=wT).copy(n.ray).applyMatrix4(r.matrixWorldInverse);const a=[],o=e.children;for(let t=0,e=o.length;t<e;t++){const e=o[t];MT(e)&&e.__used&&null!==e.cached.boundingVolume.intersectRay(i,_T)&&(_T.applyMatrix4(r.matrixWorld),a.push({distance:_T.distanceToSquared(n.ray.origin),tile:e}))}a.sort(BT);let l=null,c=1/0;if(s.has(e)){const i=function(t,e,n){ST(t,e,n,bT),bT.sort(BT);const i=bT[0]||null;return bT.length=0,i}(e,n,t);i&&(l=i,c=i.distance*i.distance)}for(let e=0,r=a.length;e<r;e++){const r=a[e],s=r.distance,o=r.tile;if(s>c)break;const h=TT(t,o,n,i);if(h){const t=h.distance*h.distance;t<c&&(l=h,c=t)}}return l}function QT(t,e,n,i,r=null){if(!MT(e))return;const{group:s,activeTiles:a}=t,{boundingVolume:o}=e.cached;if(null===r&&(r=wT).copy(n.ray).applyMatrix4(s.matrixWorldInverse),!e.__used||!o.intersectsRay(r))return;a.has(e)&&ST(e,n,t,i);const l=e.children;for(let e=0,s=l.length;e<s;e++)QT(t,l[e],n,i,r)}const DT=new hi,RT=new hi,UT=new hi,PT=new hi,LT=new hi;class FT{constructor(){this.sphere=null,this.obb=null,this.region=null,this.regionObb=null}intersectsRay(t){const e=this.sphere,n=this.obb||this.regionObb;return!(e&&!t.intersectsSphere(e)||n&&!n.intersectsRay(t))}intersectRay(t,e=null){const n=this.sphere,i=this.obb||this.regionObb;let r=-1/0,s=-1/0;n&&t.intersectSphere(n,PT)&&(r=n.containsPoint(t.origin)?0:t.origin.distanceToSquared(PT)),i&&i.intersectRay(t,LT)&&(s=i.containsPoint(t.origin)?0:t.origin.distanceToSquared(LT));const a=Math.max(r,s);return a===-1/0?null:(t.at(Math.sqrt(a),e),e)}distanceToPoint(t){const e=this.sphere,n=this.obb||this.regionObb;let i=-1/0,r=-1/0;return e&&(i=Math.max(e.distanceToPoint(t),0)),n&&(r=n.distanceToPoint(t)),i>r?i:r}intersectsFrustum(t){const e=this.obb||this.regionObb,n=this.sphere;return!(n&&!t.intersectsSphere(n)||e&&!e.intersectsFrustum(t)||!n&&!e)}intersectsSphere(t){const e=this.obb||this.regionObb,n=this.sphere;return!(n&&!n.intersectsSphere(t)||e&&!e.intersectsSphere(t)||!n&&!e)}intersectsOBB(t){const e=this.obb||this.regionObb,n=this.sphere;return!(n&&!t.intersectsSphere(n)||e&&!e.intersectsOBB(t)||!n&&!e)}getOBB(t,e){const n=this.obb||this.regionObb;n?(t.copy(n.box),e.copy(n.transform)):(this.getAABB(t),e.identity())}getAABB(t){if(this.sphere)this.sphere.getBoundingBox(t);else{const e=this.obb||this.regionObb;t.copy(e.box).applyMatrix4(e.transform)}}getSphere(t){if(this.sphere)t.copy(this.sphere);else if(this.region)this.region.getBoundingSphere(t);else{const e=this.obb||this.regionObb;e.box.getBoundingSphere(t),t.applyMatrix4(e.transform)}}setObbData(t,e){const n=new zM;DT.set(t[3],t[4],t[5]),RT.set(t[6],t[7],t[8]),UT.set(t[9],t[10],t[11]);const i=DT.length(),r=RT.length(),s=UT.length();DT.normalize(),RT.normalize(),UT.normalize(),0===i&&DT.crossVectors(RT,UT),0===r&&RT.crossVectors(DT,UT),0===s&&UT.crossVectors(DT,RT),n.transform.set(DT.x,RT.x,UT.x,t[0],DT.y,RT.y,UT.y,t[1],DT.z,RT.z,UT.z,t[2],0,0,0,1).premultiply(e),n.box.min.set(-i,-r,-s),n.box.max.set(i,r,s),n.update(),this.obb=n}setSphereData(t,e,n,i,r){const s=new or;s.center.set(t,e,n),s.radius=i,s.applyMatrix4(r),this.sphere=s}setRegionData(t,e,n,i,r,s,a){const o=new ZM(...t.radius,n,r,e,i,s,a),l=new zM;o.getBoundingBox(l.box,l.transform),l.update(),this.region=o,this.regionObb=l}}const NT=new di;class kT extends vo{constructor(){super(),this.points=Array(8).fill().map(()=>new hi)}setFromProjectionMatrix(t,e){return super.setFromProjectionMatrix(t,e),this.calculateFrustumPoints(),this}calculateFrustumPoints(){const{planes:t,points:e}=this;[[t[0],t[3],t[4]],[t[1],t[3],t[4]],[t[0],t[2],t[4]],[t[1],t[2],t[4]],[t[0],t[3],t[5]],[t[1],t[3],t[5]],[t[0],t[2],t[5]],[t[1],t[2],t[5]]].forEach((t,n)=>{!function(t,e,n,i){const r=NT.set(t.normal.x,t.normal.y,t.normal.z,e.normal.x,e.normal.y,e.normal.z,n.normal.x,n.normal.y,n.normal.z);i.set(-t.constant,-e.constant,-n.constant),i.applyMatrix3(r.invert())}(t[0],t[1],t[2],e[n])})}}const OT=new fr,zT=new br,GT=Symbol("INITIAL_FRUSTUM_CULLED"),HT=new fr,VT=new hi,qT=new li,YT={inView:!1,error:1/0},WT=new hi(1,0,0),JT=new hi(0,1,0);function jT(t,e){t.traverse(t=>{t.frustumCulled=t[GT]&&e})}class XT extends eM{get autoDisableRendererCulling(){return this._autoDisableRendererCulling}set autoDisableRendererCulling(t){this._autoDisableRendererCulling!==t&&(super._autoDisableRendererCulling=t,this.forEachLoadedModel(e=>{jT(e,!t)}))}get optimizeRaycast(){return this._optimizeRaycast}set optimizeRaycast(t){console.warn('TilesRenderer: The "optimizeRaycast" option has been deprecated.'),this._optimizeRaycast=t}constructor(...t){super(...t),this.group=new ET(this),this.ellipsoid=LM.clone(),this.cameras=[],this.cameraMap=new Map,this.cameraInfo=[],this._optimizeRaycast=!0,this._upRotationMatrix=new fr,this._bytesUsed=new WeakMap,this._autoDisableRendererCulling=!0,this.manager=new Ih,this._listeners={}}addEventListener(...t){Xn.prototype.addEventListener.call(this,...t)}hasEventListener(...t){Xn.prototype.hasEventListener.call(this,...t)}removeEventListener(...t){Xn.prototype.removeEventListener.call(this,...t)}dispatchEvent(...t){Xn.prototype.dispatchEvent.call(this,...t)}getBoundingBox(t){if(!this.root)return!1;const e=this.root.cached.boundingVolume;return!!e&&(e.getAABB(t),!0)}getOrientedBoundingBox(t,e){if(!this.root)return!1;const n=this.root.cached.boundingVolume;return!!n&&(n.getOBB(t,e),!0)}getBoundingSphere(t){if(!this.root)return!1;const e=this.root.cached.boundingVolume;return!!e&&(e.getSphere(t),!0)}forEachLoadedModel(t){this.traverse(e=>{const n=e.cached&&e.cached.scene;n&&t(n,e)},null,!1)}raycast(t,e){if(this.root)if(t.firstHitOnly){const n=TT(this,this.root,t);n&&e.push(n)}else QT(this,this.root,t,e)}hasCamera(t){return this.cameraMap.has(t)}setCamera(t){const e=this.cameras,n=this.cameraMap;return!n.has(t)&&(n.set(t,new li),e.push(t),this.dispatchEvent({type:"add-camera",camera:t}),!0)}setResolution(t,e,n){const i=this.cameraMap;if(!i.has(t))return!1;const r=e.isVector2?e.x:e,s=e.isVector2?e.y:n,a=i.get(t);return(a.width!==r||a.height!==s)&&(a.set(r,s),this.dispatchEvent({type:"camera-resolution-change"})),!0}setResolutionFromRenderer(t,e){return e.getSize(qT),this.setResolution(t,qT.x,qT.y)}deleteCamera(t){const e=this.cameras,n=this.cameraMap;if(n.has(t)){const i=e.indexOf(t);return e.splice(i,1),n.delete(t),this.dispatchEvent({type:"delete-camera",camera:t}),!0}return!1}loadRootTileSet(...t){return super.loadRootTileSet(...t).then(t=>{const{asset:e,extensions:n={}}=t;switch((e&&e.gltfUpAxis||"y").toLowerCase()){case"x":this._upRotationMatrix.makeRotationAxis(JT,-Math.PI/2);break;case"y":this._upRotationMatrix.makeRotationAxis(WT,Math.PI/2)}if("3DTILES_ellipsoid"in n){const t=n["3DTILES_ellipsoid"],{ellipsoid:e}=this;e.name=t.body,t.radii?e.radius.set(...t.radii):e.radius.set(1,1,1)}return t})}update(){let t=null;if(this.invokeAllPlugins(e=>{if(e.doTilesNeedUpdate){const n=e.doTilesNeedUpdate();t=null===t?n:!(!t&&!n)}}),!1===t)return this.dispatchEvent({type:"update-before"}),void this.dispatchEvent({type:"update-after"});this.dispatchEvent({type:"update-before"});const e=this.group,n=this.cameras,i=this.cameraMap,r=this.cameraInfo;for(;r.length>n.length;)r.pop();for(;r.length<n.length;)r.push({frustum:new kT,isOrthographic:!1,sseDenominator:-1,position:new hi,invScale:-1,pixelSize:0});VT.setFromMatrixScale(e.matrixWorldInverse),Math.abs(Math.max(VT.x-VT.y,VT.x-VT.z))>1e-6&&console.warn("ThreeTilesRenderer : Non uniform scale used for tile which may cause issues when calculating screen space error.");for(let t=0,s=r.length;t<s;t++){const s=n[t],a=r[t],o=a.frustum,l=a.position,c=i.get(s);(0===c.width||0===c.height)&&console.warn("TilesRenderer: resolution for camera error calculation is not set.");const h=s.projectionMatrix.elements;if(a.isOrthographic=1===h[15],a.isOrthographic){const t=2/h[0],e=2/h[5];a.pixelSize=Math.max(e/c.height,t/c.width)}else a.sseDenominator=2/h[5]/c.height;HT.copy(e.matrixWorld),HT.premultiply(s.matrixWorldInverse),HT.premultiply(s.projectionMatrix),o.setFromProjectionMatrix(HT),l.set(0,0,0),l.applyMatrix4(s.matrixWorld),l.applyMatrix4(e.matrixWorldInverse)}if(super.update(),this.dispatchEvent({type:"update-after"}),0===n.length&&this.root){let t=!1;this.invokeAllPlugins(e=>t=t||!(e===this||!e.calculateTileViewError)),!1===t&&console.warn("TilesRenderer: no cameras defined. Cannot update 3d tiles.")}}preprocessNode(t,e,n=null){super.preprocessNode(t,e,n);const i=new fr;if(t.transform){const e=t.transform;for(let t=0;t<16;t++)i.elements[t]=e[t]}n&&i.premultiply(n.cached.transform);const r=(new fr).copy(i).invert(),s=new FT;"sphere"in t.boundingVolume&&s.setSphereData(...t.boundingVolume.sphere,i),"box"in t.boundingVolume&&s.setObbData(t.boundingVolume.box,i),"region"in t.boundingVolume&&s.setRegionData(this.ellipsoid,...t.boundingVolume.region),t.cached={transform:i,transformInverse:r,active:!1,boundingVolume:s,metadata:null,scene:null,geometry:null,materials:null,textures:null}}async parseTile(t,e,n,i,r){const s=e.cached,a=LS(i),o=this.fetchOptions,l=this.manager;let c=null;const h=s.transform,A=this._upRotationMatrix,u=(RS(t)||n).toLowerCase();switch(u){case"b3dm":{const e=new nT(l);e.workingPath=a,e.fetchOptions=o,e.adjustmentTransform.copy(A),c=e.parse(t);break}case"pnts":{const e=new oT(l);e.workingPath=a,e.fetchOptions=o,c=e.parse(t);break}case"i3dm":{const e=new xT(l);e.workingPath=a,e.fetchOptions=o,e.adjustmentTransform.copy(A),e.ellipsoid.copy(this.ellipsoid),c=e.parse(t);break}case"cmpt":{const e=new CT(l);e.workingPath=a,e.fetchOptions=o,e.adjustmentTransform.copy(A),e.ellipsoid.copy(this.ellipsoid),c=e.parse(t).then(t=>t.scene);break}case"gltf":case"glb":{const e=l.getHandler("path.gltf")||l.getHandler("path.glb")||new $f(l);e.setWithCredentials("include"===o.credentials),e.setRequestHeader(o.headers||{}),"include"===o.credentials&&"cors"===o.mode&&e.setCrossOrigin("use-credentials");let n=e.resourcePath||e.path||a;!/[\\/]$/.test(n)&&n.length&&(n+="/"),c=e.parseAsync(t,n).then(t=>{t.scene=t.scene||new da;const{scene:e}=t;return e.updateMatrix(),e.matrix.multiply(A).decompose(e.position,e.quaternion,e.scale),t});break}default:c=this.invokeOnePlugin(s=>s.parseToMesh&&s.parseToMesh(t,e,n,i,r))}const d=await c;if(null===d)throw new Error(`TilesRenderer: Content type "${u}" not supported.`);let p,g;d.isObject3D?(p=d,g=null):(p=d.scene,g=d),p.updateMatrix(),p.matrix.premultiply(h),p.matrix.decompose(p.position,p.quaternion,p.scale),await this.invokeAllPlugins(t=>t.processTileModel&&t.processTileModel(p,e)),p.traverse(t=>{t[GT]=t.frustumCulled}),jT(p,!this.autoDisableRendererCulling);const f=[],m=[],y=[];if(p.traverse(t=>{if(t.geometry&&m.push(t.geometry),t.material){const e=t.material;f.push(t.material);for(const t in e){const n=e[t];n&&n.isTexture&&y.push(n)}}}),r.aborted)for(let t=0,e=y.length;t<e;t++){const e=y[t];e.image instanceof ImageBitmap&&e.image.close(),e.dispose()}else s.materials=f,s.geometry=m,s.textures=y,s.scene=p,s.metadata=g}disposeTile(t){super.disposeTile(t);const e=t.cached;if(e.scene){const n=e.materials,i=e.geometry,r=e.textures,s=e.scene.parent;e.scene.traverse(t=>{t.userData.meshFeatures&&t.userData.meshFeatures.dispose(),t.userData.structuralMetadata&&t.userData.structuralMetadata.dispose()});for(let t=0,e=i.length;t<e;t++)i[t].dispose();for(let t=0,e=n.length;t<e;t++)n[t].dispose();for(let t=0,e=r.length;t<e;t++){const e=r[t];e.image instanceof ImageBitmap&&e.image.close(),e.dispose()}s&&s.remove(e.scene),this.dispatchEvent({type:"dispose-model",scene:e.scene,tile:t}),e.scene=null,e.materials=null,e.textures=null,e.geometry=null,e.metadata=null}}setTileVisible(t,e){const n=t.cached.scene,i=this.group;e?n&&(i.add(n),n.updateMatrixWorld(!0)):n&&i.remove(n),super.setTileVisible(t,e),this.dispatchEvent({type:"tile-visibility-change",scene:n,tile:t,visible:e})}calculateBytesUsed(t,e){const n=this._bytesUsed;return!n.has(t)&&e&&n.set(t,tT(e)),n.get(t)??null}calculateTileViewError(t,e){const n=t.cached,i=this.cameras,r=this.cameraInfo,s=n.boundingVolume;let a=!1,o=-1/0,l=1/0,c=-1/0,h=1/0;for(let e=0,n=i.length;e<n;e++){const n=r[e];let i,A;if(n.isOrthographic){const e=n.pixelSize;i=t.geometricError/e,A=1/0}else{const e=n.sseDenominator;A=s.distanceToPoint(n.position),i=0===A?1/0:t.geometricError/(A*e)}const u=r[e].frustum;s.intersectsFrustum(u)&&(a=!0,o=Math.max(o,i),l=Math.min(l,A)),c=Math.max(c,i),h=Math.min(h,A)}this.invokeAllPlugins(e=>{e!==this&&e.calculateTileViewError&&e.calculateTileViewError(t,YT)&&(a=a&&YT.inView,c=Math.max(c,YT.error),YT.inView&&(o=Math.max(o,YT.error)))}),a?(e.inView=!0,e.error=o,e.distanceFromCamera=l):(e.inView=YT.inView,e.error=c,e.distanceFromCamera=h)}setLatLonToYUp(t,e){console.warn("TilesRenderer: setLatLonToYUp is deprecated. Use the ReorientationPlugin, instead.");const{ellipsoid:n,group:i}=this;zT.set(Math.PI/2,Math.PI/2,0),OT.makeRotationFromEuler(zT),n.getEastNorthUpFrame(t,e,0,i.matrix).multiply(OT).invert().decompose(i.position,i.quaternion,i.scale),i.updateMatrixWorld(!0)}dispose(){super.dispose(),this.group.removeFromParent()}}class KT extends Xs{constructor(){super(new Dc(0,0),new ZT),this.renderOrder=1/0}onBeforeRender(t){const e=this.material.uniforms;t.getSize(e.resolution.value)}updateMatrixWorld(){this.matrixWorld.makeTranslation(this.position)}dispose(){this.geometry.dispose(),this.material.dispose()}}class ZT extends ia{constructor(){super({depthWrite:!1,depthTest:!1,transparent:!0,uniforms:{resolution:{value:new li},size:{value:15},thickness:{value:2},opacity:{value:1}},vertexShader:"\n\n\t\t\t\tuniform float pixelRatio;\n\t\t\t\tuniform float size;\n\t\t\t\tuniform float thickness;\n\t\t\t\tuniform vec2 resolution;\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvUv = uv;\n\n\t\t\t\t\tfloat aspect = resolution.x / resolution.y;\n\t\t\t\t\tvec2 offset = uv * 2.0 - vec2( 1.0 );\n\t\t\t\t\toffset.y *= aspect;\n\n\t\t\t\t\tvec4 screenPoint = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t\tscreenPoint.xy += offset * ( size + thickness ) * screenPoint.w / resolution.x;\n\n\t\t\t\t\tgl_Position = screenPoint;\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform float size;\n\t\t\t\tuniform float thickness;\n\t\t\t\tuniform float opacity;\n\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tfloat ht = 0.5 * thickness;\n\t\t\t\t\tfloat planeDim = size + thickness;\n\t\t\t\t\tfloat offset = ( planeDim - ht - 2.0 ) / planeDim;\n\t\t\t\t\tfloat texelThickness = ht / planeDim;\n\n\t\t\t\t\tvec2 vec = vUv * 2.0 - vec2( 1.0 );\n\t\t\t\t\tfloat dist = abs( length( vec ) - offset );\n\t\t\t\t\tfloat fw = fwidth( dist ) * 0.5;\n\t\t\t\t\tfloat a = smoothstep( texelThickness - fw, texelThickness + fw, dist );\n\n\t\t\t\t\tgl_FragColor = vec4( 1, 1, 1, opacity * ( 1.0 - a ) );\n\n\t\t\t\t}\n\t\t\t"})}}const $T=new li,tQ=new li;class eQ{constructor(){this.domElement=null,this.buttons=0,this.pointerType=null,this.pointerOrder=[],this.previousPositions={},this.pointerPositions={},this.startPositions={},this.pointerSetThisFrame={},this.hoverPosition=new li,this.hoverSet=!1}reset(){this.buttons=0,this.pointerType=null,this.pointerOrder=[],this.previousPositions={},this.pointerPositions={},this.startPositions={},this.pointerSetThisFrame={},this.hoverPosition=new li,this.hoverSet=!1}updateFrame(){const{previousPositions:t,pointerPositions:e}=this;for(const n in e)t[n].copy(e[n])}setHoverEvent(t){("mouse"===t.pointerType||"wheel"===t.type)&&(this.getAdjustedPointer(t,this.hoverPosition),this.hoverSet=!0)}getLatestPoint(t){return null!==this.pointerType?(this.getCenterPoint(t),t):this.hoverSet?(t.copy(this.hoverPosition),t):null}getAdjustedPointer(t,e){const n=(this.domElement?this.domElement:t.target).getBoundingClientRect(),i=t.clientX-n.left,r=t.clientY-n.top;e.set(i,r)}addPointer(t){const e=t.pointerId,n=new li;this.getAdjustedPointer(t,n),this.pointerOrder.push(e),this.pointerPositions[e]=n,this.previousPositions[e]=n.clone(),this.startPositions[e]=n.clone(),1===this.getPointerCount()&&(this.pointerType=t.pointerType,this.buttons=t.buttons)}updatePointer(t){const e=t.pointerId;return e in this.pointerPositions&&(this.getAdjustedPointer(t,this.pointerPositions[e]),!0)}deletePointer(t){const e=t.pointerId,n=this.pointerOrder;n.splice(n.indexOf(e),1),delete this.pointerPositions[e],delete this.previousPositions[e],delete this.startPositions[e],0===this.getPointerCount.length&&(this.buttons=0,this.pointerType=null)}getPointerCount(){return this.pointerOrder.length}getCenterPoint(t,e=this.pointerPositions){const n=this.pointerOrder;if(1===this.getPointerCount()||"mouse"===this.getPointerType()){const i=n[0];return t.copy(e[i]),t}if(2===this.getPointerCount()){const n=this.pointerOrder[0],i=this.pointerOrder[1],r=e[n],s=e[i];return t.addVectors(r,s).multiplyScalar(.5),t}return null}getPreviousCenterPoint(t){return this.getCenterPoint(t,this.previousPositions)}getStartCenterPoint(t){return this.getCenterPoint(t,this.startPositions)}getMoveDistance(){return this.getCenterPoint($T),this.getPreviousCenterPoint(tQ),$T.sub(tQ).length()}getTouchPointerDistance(t=this.pointerPositions){if(this.getPointerCount()<=1||"mouse"===this.getPointerType())return 0;const{pointerOrder:e}=this,n=e[0],i=e[1],r=t[n],s=t[i];return r.distanceTo(s)}getPreviousTouchPointerDistance(){return this.getTouchPointerDistance(this.previousPositions)}getStartTouchPointerDistance(){return this.getTouchPointerDistance(this.startPositions)}getPointerType(){return this.pointerType}isPointerTouch(){return"touch"===this.getPointerType()}getPointerButtons(){return this.buttons}isLeftClicked(){return!!(1&this.buttons)}isRightClicked(){return!!(2&this.buttons)}}const nQ=new fr;function iQ(t,e,n){return n.makeTranslation(-t.x,-t.y,-t.z),nQ.makeRotationFromQuaternion(e),n.premultiply(nQ),nQ.makeTranslation(t.x,t.y,t.z),n.premultiply(nQ),n}function rQ(t,e,n,i){i.x=(t-n.offsetLeft)/n.clientWidth*2-1,i.y=-(e-n.offsetTop)/n.clientHeight*2+1,i.isVector3&&(i.z=0)}function sQ(t,e,n){const i=t instanceof gr?t:t.ray,{origin:r,direction:s}=i;r.set(e.x,e.y,-1).unproject(n),s.set(e.x,e.y,1).unproject(n).sub(r),t.isRay||(t.near=0,t.far=s.length(),t.camera=n),s.normalize()}new hi;const aQ=.05,oQ=.025,lQ=new fr,cQ=new fr,hQ=new hi,AQ=new hi,uQ=new hi,dQ=new hi,pQ=new hi,gQ=new hi,fQ=new hi,mQ=new hi,yQ=new ci,vQ=new go,xQ=new hi,CQ=new hi,IQ=new hi,EQ=new ci,wQ=new gr,_Q=new li,bQ=new li,BQ=new li,SQ=new li,MQ=new li,TQ=new li,QQ={type:"change"},DQ={type:"start"},RQ={type:"end"};class UQ extends Xn{get enabled(){return this._enabled}set enabled(t){t!==this.enabled&&(this._enabled=t,this.resetState(),this.pointerTracker.reset(),this.enabled||(this.dragInertia.set(0,0,0),this.rotationInertia.set(0,0)))}constructor(t=null,e=null,n=null,i=null){super(),this.isEnvironmentControls=!0,this.domElement=null,this.camera=null,this.scene=null,this.tilesRenderer=null,this._enabled=!0,this.cameraRadius=5,this.rotationSpeed=1,this.minAltitude=0,this.maxAltitude=.45*Math.PI,this.minDistance=10,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.zoomSpeed=1,this.adjustHeight=!0,this.enableDamping=!1,this.dampingFactor=.15,this.fallbackPlane=new go(new hi(0,1,0),0),this.useFallbackPlane=!0,this.scaleZoomOrientationAtEdges=!1,this.autoAdjustCameraRotation=!0,this.state=0,this.pointerTracker=new eQ,this.needsUpdate=!1,this.actionHeightOffset=0,this.pivotPoint=new hi,this.zoomDirectionSet=!1,this.zoomPointSet=!1,this.zoomDirection=new hi,this.zoomPoint=new hi,this.zoomDelta=0,this.rotationInertiaPivot=new hi,this.rotationInertia=new li,this.dragInertia=new hi,this.inertiaTargetDistance=1/0,this.inertiaStableFrames=0,this.pivotMesh=new KT,this.pivotMesh.raycast=()=>{},this.pivotMesh.scale.setScalar(.25),this.raycaster=new ZA,this.raycaster.firstHitOnly=!0,this.up=new hi(0,1,0),this.clock=new vA,this._detachCallback=null,this._upInitialized=!1,this._lastUsedState=0,this._zoomPointWasSet=!1,this._tilesOnChangeCallback=()=>this.zoomPointSet=!1,n&&this.attach(n),e&&this.setCamera(e),t&&this.setScene(t),i&&this.setTilesRenderer(i)}setScene(t){this.scene=t}setCamera(t){this.camera=t,this._upInitialized=!1,this.zoomDirectionSet=!1,this.zoomPointSet=!1,this.needsUpdate=!0,this.raycaster.camera=t,this.resetState()}setTilesRenderer(t){console.warn('EnvironmentControls: "setTilesRenderer" has been deprecated. Use "setScene" and "setEllipsoid", instead.'),this.tilesRenderer=t,null!==this.tilesRenderer&&this.setScene(this.tilesRenderer.group)}attach(t){if(this.domElement)throw new Error("EnvironmentControls: Controls already attached to element");this.domElement=t,this.pointerTracker.domElement=t,t.style.touchAction="none";const e=t=>{this.enabled&&t.preventDefault()},n=t=>{if(!this.enabled)return;t.preventDefault();const{camera:e,raycaster:n,domElement:i,up:r,pivotMesh:s,pointerTracker:a,scene:o,pivotPoint:l,enabled:c}=this;if(a.addPointer(t),this.needsUpdate=!0,a.isPointerTouch())if(s.visible=!1,0===a.getPointerCount())i.setPointerCapture(t.pointerId);else if(a.getPointerCount()>2)return void this.resetState();a.getCenterPoint(bQ),rQ(bQ.x,bQ.y,i,bQ),sQ(n,bQ,e);const h=Math.abs(n.ray.direction.dot(r));if(h<aQ||h<oQ)return;const A=this._raycast(n);A&&(2===a.getPointerCount()||a.isRightClicked()||a.isLeftClicked()&&t.shiftKey?(this.setState(a.isPointerTouch()?4:2),l.copy(A.point),s.position.copy(A.point),s.visible=!a.isPointerTouch()&&c,s.updateMatrixWorld(),o.add(s)):a.isLeftClicked()&&(this.setState(1),l.copy(A.point),s.position.copy(A.point),s.updateMatrixWorld(),o.add(s)))};let i=!1;const r=t=>{const{pointerTracker:e}=this;if(!this.enabled)return;t.preventDefault();const{pivotMesh:n,enabled:r}=this;this.zoomDirectionSet=!1,this.zoomPointSet=!1,0!==this.state&&(this.needsUpdate=!0),e.setHoverEvent(t),e.updatePointer(t)&&(e.isPointerTouch()&&2===e.getPointerCount()&&(i||(i=!0,queueMicrotask(()=>{i=!1,e.getCenterPoint(MQ);const t=e.getStartTouchPointerDistance(),s=e.getTouchPointerDistance(),a=s-t;if(0===this.state||4===this.state){e.getCenterPoint(MQ),e.getStartCenterPoint(TQ);const t=2*window.devicePixelRatio,n=MQ.distanceTo(TQ);(Math.abs(a)>t||n>t)&&(Math.abs(a)>n?(this.setState(3),this.zoomDirectionSet=!1):this.setState(2))}if(3===this.state){const t=e.getPreviousTouchPointerDistance();this.zoomDelta+=s-t,n.visible=!1}else 2===this.state&&(n.visible=r)}))),this.dispatchEvent(QQ))},s=e=>{const{pointerTracker:n}=this;!this.enabled||0===n.getPointerCount()||(n.deletePointer(e),"touch"===n.getPointerType()&&0===n.getPointerCount()&&t.releasePointerCapture(e.pointerId),this.resetState(),this.needsUpdate=!0)},a=t=>{if(!this.enabled)return;t.preventDefault();const{pointerTracker:e}=this;let n;switch(e.setHoverEvent(t),e.updatePointer(t),this.dispatchEvent(DQ),t.deltaMode){case 2:n=800*t.deltaY;break;case 1:n=40*t.deltaY;break;case 0:n=t.deltaY}const i=Math.sign(n),r=Math.abs(n);this.zoomDelta-=.25*i*r,this.needsUpdate=!0,this._lastUsedState=3,this.dispatchEvent(RQ)},o=t=>{this.enabled&&this.resetState()};t.addEventListener("contextmenu",e),t.addEventListener("pointerdown",n),t.addEventListener("wheel",a,{passive:!1});const l=t.getRootNode();l.addEventListener("pointermove",r),l.addEventListener("pointerup",s),l.addEventListener("pointerleave",o),this._detachCallback=()=>{t.removeEventListener("contextmenu",e),t.removeEventListener("pointerdown",n),t.removeEventListener("wheel",a),l.removeEventListener("pointermove",r),l.removeEventListener("pointerup",s),l.removeEventListener("pointerleave",o)}}detach(){this.domElement=null,this._detachCallback&&(this._detachCallback(),this._detachCallback=null,this.pointerTracker.reset())}getUpDirection(t,e){e.copy(this.up)}getCameraUpDirection(t){this.getUpDirection(this.camera.position,t)}getPivotPoint(t){let e=null;3===this._lastUsedState?this._zoomPointWasSet&&(e=t.copy(this.zoomPoint)):(2===this._lastUsedState||1===this._lastUsedState)&&(e=t.copy(this.pivotPoint));const{camera:n,raycaster:i}=this;null!==e&&(AQ.copy(e).project(n),(AQ.x<-1||AQ.x>1||AQ.y<-1||AQ.y>1)&&(e=null)),sQ(i,{x:0,y:0},n);const r=this._raycast(i);return r&&(null===e||r.distance<e.distanceTo(i.ray.origin))&&(e=t.copy(r.point)),e}resetState(){0!==this.state&&this.dispatchEvent(RQ),this.state=0,this.pivotMesh.removeFromParent(),this.pivotMesh.visible=this.enabled,this.actionHeightOffset=0,this.pointerTracker.reset()}setState(t=this.state,e=!0){this.state!==t&&(0===this.state&&e&&this.dispatchEvent(DQ),this.pivotMesh.visible=this.enabled,this.dragInertia.set(0,0,0),this.rotationInertia.set(0,0),this.inertiaStableFrames=0,this.state=t,0!==t&&4!==t&&(this._lastUsedState=t))}update(t=Math.min(this.clock.getDelta(),.064)){if(!this.enabled||!this.camera||0===t)return;const{camera:e,cameraRadius:n,pivotPoint:i,up:r,state:s,adjustHeight:a,autoAdjustCameraRotation:o}=this;e.updateMatrixWorld(),this.getCameraUpDirection(xQ),this._upInitialized||(this._upInitialized=!0,this.up.copy(xQ)),this.zoomPointSet=!1;const l=this._inertiaNeedsUpdate(),c=this.needsUpdate||l;if(this.needsUpdate||l){const n=this.zoomDelta;this._updateZoom(),this._updatePosition(t),this._updateRotation(t),1===s||2===s?(pQ.set(0,0,-1).transformDirection(e.matrixWorld),this.inertiaTargetDistance=AQ.copy(i).sub(e.position).dot(pQ)):0===s&&this._updateInertia(t),(0!==s||0!==n||l)&&this.dispatchEvent(QQ),this.needsUpdate=!1}const h=e.isOrthographicCamera?null:a&&this._getPointBelowCamera()||null;if(this.getCameraUpDirection(xQ),this._setFrame(xQ),(1===this.state||2===this.state)&&0!==this.actionHeightOffset){const{actionHeightOffset:t}=this;e.position.addScaledVector(r,-t),i.addScaledVector(r,-t),h&&(h.distance-=t)}if(this.actionHeightOffset=0,h){const t=h.distance;if(t<n){const s=n-t;e.position.addScaledVector(r,s),i.addScaledVector(r,s),this.actionHeightOffset=s}}this.pointerTracker.updateFrame(),c&&o&&(this.getCameraUpDirection(xQ),this._alignCameraUp(xQ,1),this.getCameraUpDirection(xQ),this._clampRotation(xQ))}adjustCamera(t){const{adjustHeight:e,cameraRadius:n}=this;if(t.isPerspectiveCamera){this.getUpDirection(t.position,xQ);const i=e&&this._getPointBelowCamera(t.position,xQ)||null;if(i){const e=i.distance;e<n&&t.position.addScaledVector(xQ,n-e)}}}dispose(){this.detach()}_updateInertia(t){const{rotationInertia:e,pivotPoint:n,dragInertia:i,enableDamping:r,dampingFactor:s,camera:a,cameraRadius:o,minDistance:l,inertiaTargetDistance:c}=this;if(!this.enableDamping||this.inertiaStableFrames>1)return i.set(0,0,0),void e.set(0,0,0);const h=Math.pow(2,-t/s),A=Math.max(a.near,o,l,c),u=25e-5;if(e.lengthSq()>0){sQ(wQ,AQ.set(0,0,-1),a),wQ.applyMatrix4(a.matrixWorldInverse),wQ.direction.normalize(),wQ.recast(-wQ.direction.dot(wQ.origin)).at(A/wQ.direction.z,AQ),AQ.applyMatrix4(a.matrixWorld),sQ(wQ,hQ.set(u,u,-1),a),wQ.applyMatrix4(a.matrixWorldInverse),wQ.direction.normalize(),wQ.recast(-wQ.direction.dot(wQ.origin)).at(A/wQ.direction.z,hQ),hQ.applyMatrix4(a.matrixWorld),AQ.sub(n).normalize(),hQ.sub(n).normalize();const i=AQ.angleTo(hQ)/t;e.multiplyScalar(h),(e.lengthSq()<i**2||!r)&&e.set(0,0)}if(i.lengthSq()>0){sQ(wQ,AQ.set(0,0,-1),a),wQ.applyMatrix4(a.matrixWorldInverse),wQ.direction.normalize(),wQ.recast(-wQ.direction.dot(wQ.origin)).at(A/wQ.direction.z,AQ),AQ.applyMatrix4(a.matrixWorld),sQ(wQ,hQ.set(u,u,-1),a),wQ.applyMatrix4(a.matrixWorldInverse),wQ.direction.normalize(),wQ.recast(-wQ.direction.dot(wQ.origin)).at(A/wQ.direction.z,hQ),hQ.applyMatrix4(a.matrixWorld);const e=AQ.distanceTo(hQ)/t;i.multiplyScalar(h),(i.lengthSq()<e**2||!r)&&i.set(0,0,0)}e.lengthSq()>0&&this._applyRotation(e.x*t,e.y*t,n),i.lengthSq()>0&&(a.position.addScaledVector(i,t),a.updateMatrixWorld())}_inertiaNeedsUpdate(){const{rotationInertia:t,dragInertia:e}=this;return 0!==t.lengthSq()||0!==e.lengthSq()}_updateZoom(){const{zoomPoint:t,zoomDirection:e,camera:n,minDistance:i,maxDistance:r,pointerTracker:s,domElement:a,minZoom:o,maxZoom:l,zoomSpeed:c,state:h}=this;let A=this.zoomDelta;if(this.zoomDelta=0,s.getLatestPoint(bQ)&&(0!==A||3===h))if(this.rotationInertia.set(0,0),this.dragInertia.set(0,0,0),n.isOrthographicCamera){this._updateZoomDirection();const t=this.zoomPointSet||this._updateZoomPoint();CQ.unproject(n);const e=Math.pow(.95,Math.abs(.05*A));let i=A>0?1/Math.abs(e):e;i*=c,i>1?l<n.zoom*i&&(i=1):o>n.zoom*i&&(i=1),n.zoom*=i,n.updateProjectionMatrix(),t&&(rQ(bQ.x,bQ.y,a,IQ),IQ.unproject(n),n.position.sub(IQ).add(CQ),n.updateMatrixWorld())}else{this._updateZoomDirection();const s=AQ.copy(e);if(this.zoomPointSet||this._updateZoomPoint()){const s=t.distanceTo(n.position);if(A<0){const t=Math.min(0,s-r);A=A*s*c*.0025,A=Math.max(A,t)}else{const t=Math.max(0,s-i);A=A*Math.max(s-i,0)*c*.0025,A=Math.min(A,t)}n.position.addScaledVector(e,A),n.updateMatrixWorld()}else{const t=this._getPointBelowCamera();if(t){const e=t.distance;s.set(0,0,-1).transformDirection(n.matrixWorld),n.position.addScaledVector(s,A*e*.01),n.updateMatrixWorld()}}}}_updateZoomDirection(){if(this.zoomDirectionSet)return;const{domElement:t,raycaster:e,camera:n,zoomDirection:i,pointerTracker:r}=this;r.getLatestPoint(bQ),rQ(bQ.x,bQ.y,t,CQ),sQ(e,CQ,n),i.copy(e.ray.direction).normalize(),this.zoomDirectionSet=!0}_updateZoomPoint(){const{camera:t,zoomDirectionSet:e,zoomDirection:n,raycaster:i,zoomPoint:r,pointerTracker:s,domElement:a}=this;if(this._zoomPointWasSet=!1,!e)return!1;t.isOrthographicCamera&&s.getLatestPoint(_Q)?(rQ(_Q.x,_Q.y,a,_Q),sQ(i,_Q,t)):(i.ray.origin.copy(t.position),i.ray.direction.copy(n),i.near=0,i.far=1/0);const o=this._raycast(i);return!!o&&(r.copy(o.point),this.zoomPointSet=!0,this._zoomPointWasSet=!0,!0)}_getPointBelowCamera(t=this.camera.position,e=this.up){const{raycaster:n}=this;n.ray.direction.copy(e).multiplyScalar(-1),n.ray.origin.copy(t).addScaledVector(e,1e5),n.near=0,n.far=1/0;const i=this._raycast(n);return i&&(i.distance-=1e5),i}_updatePosition(t){const{raycaster:e,camera:n,pivotPoint:i,up:r,pointerTracker:s,domElement:a,state:o,dragInertia:l}=this;if(1===o){if(s.getCenterPoint(bQ),rQ(bQ.x,bQ.y,a,bQ),vQ.setFromNormalAndCoplanarPoint(r,i),sQ(e,bQ,n),Math.abs(e.ray.direction.dot(r))<aQ){const t=Math.acos(aQ);mQ.crossVectors(e.ray.direction,r).normalize(),e.ray.direction.copy(r).applyAxisAngle(mQ,t).multiplyScalar(-1)}if(this.getUpDirection(i,xQ),Math.abs(e.ray.direction.dot(xQ))<oQ){const t=Math.acos(oQ);mQ.crossVectors(e.ray.direction,xQ).normalize(),e.ray.direction.copy(xQ).applyAxisAngle(mQ,t).multiplyScalar(-1)}e.ray.intersectPlane(vQ,AQ)&&(hQ.subVectors(i,AQ),n.position.add(hQ),n.updateMatrixWorld(),hQ.multiplyScalar(1/t),s.getMoveDistance()/t<2*window.devicePixelRatio?this.inertiaStableFrames++:(l.copy(hQ),this.inertiaStableFrames=0))}}_updateRotation(t){const{pivotPoint:e,pointerTracker:n,domElement:i,state:r,rotationInertia:s}=this;2===r&&(n.getCenterPoint(bQ),n.getPreviousCenterPoint(BQ),SQ.subVectors(bQ,BQ).multiplyScalar(2*Math.PI/i.clientHeight),this._applyRotation(SQ.x,SQ.y,e),SQ.multiplyScalar(1/t),n.getMoveDistance()/t<2*window.devicePixelRatio?this.inertiaStableFrames++:(s.copy(SQ),this.inertiaStableFrames=0))}_applyRotation(t,e,n){if(0===t&&0===e)return;const{camera:i,minAltitude:r,maxAltitude:s,rotationSpeed:a}=this,o=-t*a;let l,c=e*a;pQ.set(0,0,1).transformDirection(i.matrixWorld),gQ.set(1,0,0).transformDirection(i.matrixWorld),this.getUpDirection(n,xQ),xQ.dot(pQ)>1-1e-10?l=0:(AQ.crossVectors(xQ,pQ).normalize(),l=Math.sign(AQ.dot(gQ))*xQ.angleTo(pQ)),c>0?(c=Math.min(l-r,c),c=Math.max(0,c)):(c=Math.max(l-s,c),c=Math.min(0,c)),yQ.setFromAxisAngle(xQ,o),iQ(n,yQ,lQ),i.matrixWorld.premultiply(lQ),gQ.set(1,0,0).transformDirection(i.matrixWorld),yQ.setFromAxisAngle(gQ,-c),iQ(n,yQ,lQ),i.matrixWorld.premultiply(lQ),i.matrixWorld.decompose(i.position,i.quaternion,AQ)}_setFrame(t){const{up:e,camera:n,zoomPoint:i,zoomDirectionSet:r,zoomPointSet:s,scaleZoomOrientationAtEdges:a}=this;if(r&&(s||this._updateZoomPoint())){if(yQ.setFromUnitVectors(e,t),a){this.getUpDirection(i,AQ);let t=Math.max(AQ.dot(e)-.6,0)/.4;t=oi.mapLinear(t,0,.5,0,1),t=Math.min(t,1),n.isOrthographicCamera&&(t*=.1),yQ.slerp(EQ,1-t)}iQ(i,yQ,lQ),n.updateMatrixWorld(),n.matrixWorld.premultiply(lQ),n.matrixWorld.decompose(n.position,n.quaternion,AQ),this.zoomDirectionSet=!1,this._updateZoomDirection()}e.copy(t),n.updateMatrixWorld()}_raycast(t){const{scene:e,useFallbackPlane:n,fallbackPlane:i}=this,r=t.intersectObject(e)[0]||null;if(r)return r;if(n){const e=i;if(t.ray.intersectPlane(e,AQ))return{point:AQ.clone(),distance:t.ray.origin.distanceTo(AQ)}}return null}_alignCameraUp(t,e=1){const{camera:n,state:i,pivotPoint:r,zoomPoint:s,zoomPointSet:a}=this;n.updateMatrixWorld(),pQ.set(0,0,-1).transformDirection(n.matrixWorld),gQ.set(-1,0,0).transformDirection(n.matrixWorld);let o=oi.mapLinear(1-Math.abs(pQ.dot(t)),0,.2,0,1);o=oi.clamp(o,0,1),e*=o,fQ.crossVectors(t,pQ),fQ.lerp(gQ,1-e).normalize(),yQ.setFromUnitVectors(gQ,fQ),n.quaternion.premultiply(yQ);let l=null;1===i||2===i?l=uQ.copy(r):a&&(l=uQ.copy(s)),l&&(cQ.copy(n.matrixWorld).invert(),AQ.copy(l).applyMatrix4(cQ),n.updateMatrixWorld(),AQ.applyMatrix4(n.matrixWorld),dQ.subVectors(l,AQ),n.position.add(dQ)),n.updateMatrixWorld()}_clampRotation(t){const{camera:e,minAltitude:n,maxAltitude:i,state:r,pivotPoint:s,zoomPoint:a,zoomPointSet:o}=this;let l,c;if(e.updateMatrixWorld(),pQ.set(0,0,1).transformDirection(e.matrixWorld),gQ.set(1,0,0).transformDirection(e.matrixWorld),t.dot(pQ)>1-1e-10?l=0:(AQ.crossVectors(t,pQ),l=Math.sign(AQ.dot(gQ))*t.angleTo(pQ)),l>i)c=i;else{if(!(l<n))return;c=n}pQ.copy(t),yQ.setFromAxisAngle(gQ,c),pQ.applyQuaternion(yQ).normalize(),AQ.crossVectors(pQ,gQ).normalize(),lQ.makeBasis(gQ,AQ,pQ),e.quaternion.setFromRotationMatrix(lQ);let h=null;1===r||2===r?h=uQ.copy(s):o&&(h=uQ.copy(a)),h&&(cQ.copy(e.matrixWorld).invert(),AQ.copy(h).applyMatrix4(cQ),e.updateMatrixWorld(),AQ.applyMatrix4(e.matrixWorld),dQ.subVectors(h,AQ),e.position.add(dQ)),e.updateMatrixWorld()}}const PQ=new fr,LQ=new fr,FQ=new hi,NQ=new hi,kQ=new hi,OQ=new hi,zQ=new hi,GQ=new hi,HQ=new ci,VQ=new hi,qQ=new hi,YQ=new gr,WQ=new PM,JQ=new li,jQ={};class XQ extends UQ{get tilesGroup(){return console.warn('GlobeControls: "tilesGroup" has been deprecated. Use "ellipsoidGroup", instead.'),this.ellipsoidFrame}get ellipsoidFrame(){return this.ellipsoidGroup.matrixWorld}get ellipsoidFrameInverse(){const{ellipsoidGroup:t,ellipsoidFrame:e,_ellipsoidFrameInverse:n}=this;return t.matrixWorldInverse?t.matrixWorldInverse:n.copy(e).invert()}constructor(t=null,e=null,n=null,i=null){super(t,e,n),this.isGlobeControls=!0,this._dragMode=0,this._rotationMode=0,this.maxZoom=.01,this.nearMargin=.25,this.farMargin=0,this.useFallbackPlane=!1,this.autoAdjustCameraRotation=!1,this.globeInertia=new ci,this.globeInertiaFactor=0,this.ellipsoid=LM.clone(),this.ellipsoidGroup=new da,this._ellipsoidFrameInverse=new fr,null!==i&&this.setTilesRenderer(i)}setTilesRenderer(t){super.setTilesRenderer(t),null!==t&&this.setEllipsoid(t.ellipsoid,t.group)}setEllipsoid(t,e){this.ellipsoid=t||LM.clone(),this.ellipsoidGroup=e||new da}getPivotPoint(t){const{camera:e,ellipsoidFrame:n,ellipsoidFrameInverse:i,ellipsoid:r}=this;return OQ.set(0,0,-1).transformDirection(e.matrixWorld),YQ.origin.copy(e.position),YQ.direction.copy(OQ),YQ.applyMatrix4(i),r.closestPointToRayEstimate(YQ,NQ).applyMatrix4(n),(null===super.getPivotPoint(t)||FQ.subVectors(t,YQ.origin).dot(YQ.direction)>FQ.subVectors(NQ,YQ.origin).dot(YQ.direction))&&t.copy(NQ),t}getVectorToCenter(t){const{ellipsoidFrame:e,camera:n}=this;return t.setFromMatrixPosition(e).sub(n.position)}getDistanceToCenter(){return this.getVectorToCenter(NQ).length()}getUpDirection(t,e){const{ellipsoidFrame:n,ellipsoidFrameInverse:i,ellipsoid:r}=this;NQ.copy(t).applyMatrix4(i),r.getPositionToNormal(NQ,e),e.transformDirection(n)}getCameraUpDirection(t){const{ellipsoidFrame:e,ellipsoidFrameInverse:n,ellipsoid:i,camera:r}=this;r.isOrthographicCamera?(this._getVirtualOrthoCameraPosition(NQ),NQ.applyMatrix4(n),i.getPositionToNormal(NQ,t),t.transformDirection(e)):this.getUpDirection(r.position,t)}update(t=Math.min(this.clock.getDelta(),.064)){if(!this.enabled||!this.camera||0===t)return;const{camera:e,pivotMesh:n}=this;this._isNearControls()?this.scaleZoomOrientationAtEdges=this.zoomDelta<0:(0!==this.state&&1!==this._dragMode&&1!==this._rotationMode&&(n.visible=!1),this.scaleZoomOrientationAtEdges=!1);const i=this.needsUpdate||this._inertiaNeedsUpdate();super.update(t),this.adjustCamera(e),i&&this._isNearControls()&&(this.getCameraUpDirection(GQ),this._alignCameraUp(GQ,1),this.getCameraUpDirection(GQ),this._clampRotation(GQ))}adjustCamera(t){super.adjustCamera(t);const{ellipsoidFrame:e,ellipsoidFrameInverse:n,ellipsoid:i,nearMargin:r,farMargin:s}=this,a=Math.max(...i.radius);if(t.isPerspectiveCamera){const o=NQ.setFromMatrixPosition(e).sub(t.position).length(),l=r*a,c=oi.clamp((o-a)/l,0,1),h=oi.lerp(1,1e3,c);t.near=Math.max(h,o-a-l),FQ.copy(t.position).applyMatrix4(n),i.getPositionToCartographic(FQ,jQ);const A=Math.max(i.getPositionElevation(FQ),2550),u=i.calculateHorizonDistance(jQ.lat,A);t.far=u+.1+a*s,t.updateProjectionMatrix()}else{this._getVirtualOrthoCameraPosition(t.position,t),t.updateMatrixWorld(),PQ.copy(t.matrixWorld).invert(),NQ.setFromMatrixPosition(e).applyMatrix4(PQ);const n=-NQ.z;t.near=n-a*(1+r),t.far=n+.1+a*s,t.position.addScaledVector(OQ,t.near),t.far-=t.near,t.near=0,t.updateProjectionMatrix(),t.updateMatrixWorld()}}setState(...t){super.setState(...t),this._dragMode=0,this._rotationMode=0}_updateInertia(t){super._updateInertia(t);const{globeInertia:e,enableDamping:n,dampingFactor:i,camera:r,cameraRadius:s,minDistance:a,inertiaTargetDistance:o,ellipsoidFrame:l}=this;if(!this.enableDamping||this.inertiaStableFrames>1)return this.globeInertiaFactor=0,void this.globeInertia.identity();const c=Math.pow(2,-t/i),h=Math.max(r.near,s,a,o),A=25e-5;if(kQ.setFromMatrixPosition(l),0!==this.globeInertiaFactor){sQ(YQ,NQ.set(0,0,-1),r),YQ.applyMatrix4(r.matrixWorldInverse),YQ.direction.normalize(),YQ.recast(-YQ.direction.dot(YQ.origin)).at(h/YQ.direction.z,NQ),NQ.applyMatrix4(r.matrixWorld),sQ(YQ,FQ.set(A,A,-1),r),YQ.applyMatrix4(r.matrixWorldInverse),YQ.direction.normalize(),YQ.recast(-YQ.direction.dot(YQ.origin)).at(h/YQ.direction.z,FQ),FQ.applyMatrix4(r.matrixWorld),NQ.sub(kQ).normalize(),FQ.sub(kQ).normalize(),this.globeInertiaFactor*=c;const i=NQ.angleTo(FQ)/t;(2*Math.acos(e.w)*this.globeInertiaFactor<i||!n)&&(this.globeInertiaFactor=0,e.identity())}0!==this.globeInertiaFactor&&(1===e.w&&(0!==e.x||0!==e.y||0!==e.z)&&(e.w=Math.min(e.w,1-1e-9)),kQ.setFromMatrixPosition(l),HQ.identity().slerp(e,this.globeInertiaFactor*t),iQ(kQ,HQ,LQ),r.matrixWorld.premultiply(LQ),r.matrixWorld.decompose(r.position,r.quaternion,NQ))}_inertiaNeedsUpdate(){return super._inertiaNeedsUpdate()||0!==this.globeInertiaFactor}_updatePosition(t){if(1===this.state){0===this._dragMode&&(this._dragMode=this._isNearControls()?1:-1);const{raycaster:e,camera:n,pivotPoint:i,pointerTracker:r,domElement:s,ellipsoidFrame:a,ellipsoidFrameInverse:o}=this,l=FQ,c=zQ;r.getCenterPoint(JQ),rQ(JQ.x,JQ.y,s,JQ),sQ(e,JQ,n),e.ray.applyMatrix4(o);const h=NQ.copy(i).applyMatrix4(o).length();if(WQ.radius.setScalar(h),!WQ.intersectRay(e.ray,NQ))return this.resetState(),void this._updateInertia(t);NQ.applyMatrix4(a),kQ.setFromMatrixPosition(a),l.subVectors(i,kQ).normalize(),c.subVectors(NQ,kQ).normalize(),HQ.setFromUnitVectors(c,l),iQ(kQ,HQ,LQ),n.matrixWorld.premultiply(LQ),n.matrixWorld.decompose(n.position,n.quaternion,NQ),r.getMoveDistance()/t<2*window.devicePixelRatio?this.inertiaStableFrames++:(this.globeInertia.copy(HQ),this.globeInertiaFactor=1/t,this.inertiaStableFrames=0)}}_updateRotation(...t){1===this._rotationMode||this._isNearControls()?(this._rotationMode=1,super._updateRotation(...t)):(this.pivotMesh.visible=!1,this._rotationMode=-1)}_updateZoom(){const{zoomDelta:t,ellipsoid:e,zoomSpeed:n,zoomPoint:i,camera:r,maxZoom:s,state:a}=this;if(3!==a&&0===t)return;this.rotationInertia.set(0,0),this.dragInertia.set(0,0,0),this.globeInertia.identity(),this.globeInertiaFactor=0;const o=oi.clamp(oi.mapLinear(Math.abs(t),0,20,0,1),0,1);if(this._isNearControls()||t>0){if(this._updateZoomDirection(),t<0&&(this.zoomPointSet||this._updateZoomPoint())){OQ.set(0,0,-1).transformDirection(r.matrixWorld).normalize(),qQ.copy(this.up).multiplyScalar(-1),this.getUpDirection(i,VQ);const t=oi.clamp(oi.mapLinear(-VQ.dot(qQ),1,.95,0,1),0,1),e=1-OQ.dot(qQ),n=r.isOrthographicCamera?.05:1,s=oi.clamp(3*o,0,1),a=Math.min(t*e*n*s,.1);qQ.lerpVectors(OQ,qQ,a).normalize(),HQ.setFromUnitVectors(OQ,qQ),iQ(i,HQ,LQ),r.matrixWorld.premultiply(LQ),r.matrixWorld.decompose(r.position,r.quaternion,qQ),this.zoomDirection.subVectors(i,r.position).normalize()}super._updateZoom()}else if(r.isPerspectiveCamera){const i=this._getPerspectiveTransitionDistance(),r=this._getMaxPerspectiveDistance(),s=oi.mapLinear(this.getDistanceToCenter(),i,r,0,1);this._tiltTowardsCenter(oi.lerp(0,.4,s*o)),this._alignCameraUpToNorth(oi.lerp(0,.2,s*o));const a=t*(this.getDistanceToCenter()-e.radius.x)*n*.0025,l=Math.max(a,Math.min(this.getDistanceToCenter()-r,0));this.getVectorToCenter(NQ).normalize(),this.camera.position.addScaledVector(NQ,l),this.camera.updateMatrixWorld(),this.zoomDelta=0}else{const t=this._getOrthographicTransitionZoom(),e=this._getMinOrthographicZoom(),i=oi.mapLinear(r.zoom,t,e,0,1);this._tiltTowardsCenter(oi.lerp(0,.4,i*o)),this._alignCameraUpToNorth(oi.lerp(0,.2,i*o));const a=this.zoomDelta,l=Math.pow(.95,Math.abs(.05*a)),c=a>0?1/Math.abs(l):l,h=e/r.zoom,A=Math.max(c*n,Math.min(h,1));r.zoom=Math.min(s,r.zoom*A),r.updateProjectionMatrix(),this.zoomDelta=0,this.zoomDirectionSet=!1}}_alignCameraUpToNorth(t){const{ellipsoidFrame:e}=this;GQ.set(0,0,1).transformDirection(e),this._alignCameraUp(GQ,t)}_tiltTowardsCenter(t){const{camera:e,ellipsoidFrame:n}=this;OQ.set(0,0,-1).transformDirection(e.matrixWorld).normalize(),NQ.setFromMatrixPosition(n).sub(e.position).normalize(),NQ.lerp(OQ,1-t).normalize(),HQ.setFromUnitVectors(OQ,NQ),e.quaternion.premultiply(HQ),e.updateMatrixWorld()}_getPerspectiveTransitionDistance(){const{camera:t,ellipsoid:e}=this;if(!t.isPerspectiveCamera)throw new Error;const n=Math.max(...e.radius),i=2*Math.atan(Math.tan(oi.DEG2RAD*t.fov*.5)*t.aspect),r=n/Math.tan(oi.DEG2RAD*t.fov*.5),s=n/Math.tan(.5*i);return Math.max(r,s)}_getMaxPerspectiveDistance(){const{camera:t,ellipsoid:e}=this;if(!t.isPerspectiveCamera)throw new Error;const n=Math.max(...e.radius),i=2*Math.atan(Math.tan(oi.DEG2RAD*t.fov*.5)*t.aspect),r=n/Math.tan(oi.DEG2RAD*t.fov*.5),s=n/Math.tan(.5*i);return 2*Math.max(r,s)}_getOrthographicTransitionZoom(){const{camera:t,ellipsoid:e}=this;if(!t.isOrthographicCamera)throw new Error;const n=t.top-t.bottom,i=t.right-t.left;return 2*Math.max(n,i)/(2*Math.max(...e.radius))}_getMinOrthographicZoom(){const{camera:t,ellipsoid:e}=this;if(!t.isOrthographicCamera)throw new Error;const n=t.top-t.bottom,i=t.right-t.left;return.7*Math.min(n,i)/(2*Math.max(...e.radius))}_getVirtualOrthoCameraPosition(t,e=this.camera){const{ellipsoidFrame:n,ellipsoidFrameInverse:i,ellipsoid:r}=this;if(!e.isOrthographicCamera)throw new Error;YQ.origin.copy(e.position),YQ.direction.set(0,0,-1).transformDirection(e.matrixWorld),YQ.applyMatrix4(i),r.closestPointToRayEstimate(YQ,FQ).applyMatrix4(n);const s=e.top-e.bottom,a=e.right-e.left,o=Math.max(s,a)/e.zoom;OQ.set(0,0,-1).transformDirection(e.matrixWorld);const l=FQ.sub(e.position).dot(OQ);t.copy(e.position).addScaledVector(OQ,l-4*o)}_isNearControls(){const{camera:t}=this;return t.isPerspectiveCamera?this.getDistanceToCenter()<this._getPerspectiveTransitionDistance():t.zoom>this._getOrthographicTransitionZoom()}_raycast(t){const e=super._raycast(t);if(null===e){const{ellipsoid:e,ellipsoidFrame:n,ellipsoidFrameInverse:i}=this;YQ.copy(t.ray).applyMatrix4(i);const r=e.intersectRay(YQ,NQ);return null!==r?(r.applyMatrix4(n),{point:r.clone(),distance:r.distanceTo(t.ray.origin)}):null}return e}}const KQ=new hi,ZQ=new hi,$Q=new Jh,tD=new hi,eD=new hi,nD=new hi,iD=new ci,rD=new ci;class sD extends Xn{get animating(){return 0!==this._alpha&&1!==this._alpha}get alpha(){return 0===this._target?1-this._alpha:this._alpha}get camera(){return 0===this._alpha?this.perspectiveCamera:1===this._alpha?this.orthographicCamera:this.transitionCamera}get mode(){return 0===this._target?"perspective":"orthographic"}set mode(t){if(t===this.mode)return;const e=this.camera;"perspective"===t?(this._target=0,this._alpha=0):(this._target=1,this._alpha=1),this.dispatchEvent({type:"camera-change",camera:this.camera,prevCamera:e})}constructor(t=new la,e=new Jh){super(),this.perspectiveCamera=t,this.orthographicCamera=e,this.transitionCamera=new la,this.orthographicPositionalZoom=!0,this.orthographicOffset=50,this.fixedPoint=new hi,this.duration=200,this.autoSync=!0,this.easeFunction=t=>t,this._target=0,this._alpha=0,this._clock=new vA}toggle(){this._target=1===this._target?0:1,this._clock.getDelta(),this.dispatchEvent({type:"toggle"})}update(t=Math.min(this._clock.getDelta(),.064)){this.autoSync&&this.syncCameras();const{perspectiveCamera:e,orthographicCamera:n,transitionCamera:i,camera:r}=this,s=1e3*t;if(this._alpha!==this._target){const t=Math.sign(this._target-this._alpha)*s/this.duration;this._alpha=oi.clamp(this._alpha+t,0,1),this.dispatchEvent({type:"change",alpha:this.alpha})}const a=r;let o=null;0===this._alpha?o=e:1===this._alpha?o=n:(o=i,this._updateTransitionCamera()),a!==o&&(o===i&&this.dispatchEvent({type:"transition-start"}),this.dispatchEvent({type:"camera-change",camera:o,prevCamera:a}),a===i&&this.dispatchEvent({type:"transition-end"}))}syncCameras(){const t=this._getFromCamera(),{perspectiveCamera:e,orthographicCamera:n,transitionCamera:i,fixedPoint:r}=this;if(KQ.set(0,0,-1).transformDirection(t.matrixWorld).normalize(),t.isPerspectiveCamera){if(this.orthographicPositionalZoom)n.position.copy(e.position).addScaledVector(KQ,-this.orthographicOffset),n.rotation.copy(e.rotation),n.updateMatrixWorld();else{const t=ZQ.subVectors(r,n.position).dot(KQ),i=ZQ.subVectors(r,e.position).dot(KQ);ZQ.copy(e.position).addScaledVector(KQ,i),n.rotation.copy(e.rotation),n.position.copy(ZQ).addScaledVector(KQ,-t),n.updateMatrixWorld()}const t=Math.abs(ZQ.subVectors(e.position,r).dot(KQ)),i=2*Math.tan(oi.DEG2RAD*e.fov*.5)*t,s=n.top-n.bottom;n.zoom=s/i,n.updateProjectionMatrix()}else{const t=Math.abs(ZQ.subVectors(n.position,r).dot(KQ)),i=(n.top-n.bottom)/n.zoom*.5/Math.tan(oi.DEG2RAD*e.fov*.5);e.rotation.copy(n.rotation),e.position.copy(n.position).addScaledVector(KQ,t).addScaledVector(KQ,-i),e.updateMatrixWorld(),this.orthographicPositionalZoom&&(n.position.copy(e.position).addScaledVector(KQ,-this.orthographicOffset),n.updateMatrixWorld())}i.position.copy(e.position),i.rotation.copy(e.rotation)}_getTransitionDirection(){return Math.sign(this._target-this._alpha)}_getToCamera(){const t=this._getTransitionDirection();return 0===t?0===this._target?this.perspectiveCamera:this.orthographicCamera:t>0?this.orthographicCamera:this.perspectiveCamera}_getFromCamera(){const t=this._getTransitionDirection();return 0===t?0===this._target?this.perspectiveCamera:this.orthographicCamera:t>0?this.perspectiveCamera:this.orthographicCamera}_updateTransitionCamera(){const{perspectiveCamera:t,orthographicCamera:e,transitionCamera:n,fixedPoint:i}=this,r=this.easeFunction(this._alpha);KQ.set(0,0,-1).transformDirection(e.matrixWorld).normalize(),$Q.copy(e),$Q.position.addScaledVector(KQ,e.near),e.far-=e.near,e.near=0,KQ.set(0,0,-1).transformDirection(t.matrixWorld).normalize();const s=Math.abs(ZQ.subVectors(t.position,i).dot(KQ)),a=2*Math.tan(oi.DEG2RAD*t.fov*.5)*s,o=rD.slerpQuaternions(t.quaternion,$Q.quaternion,r),l=oi.lerp(t.fov,1,r),c=.5*a/Math.tan(oi.DEG2RAD*l*.5),h=nD.copy($Q.position).sub(i).applyQuaternion(iD.copy($Q.quaternion).invert()),A=eD.copy(t.position).sub(i).applyQuaternion(iD.copy(t.quaternion).invert()),u=tD.lerpVectors(A,h,r);u.z-=Math.abs(u.z)-c;const d=-(A.z-u.z),p=-(h.z-u.z),g=oi.lerp(d+t.near,p+$Q.near,r),f=oi.lerp(d+t.far,p+$Q.far,r),m=Math.max(f,0)-Math.max(g,0);n.aspect=t.aspect,n.fov=l,n.near=Math.max(g,1e-5*m),n.far=f,n.position.copy(u).applyQuaternion(o).add(i),n.quaternion.copy(o),n.updateProjectionMatrix(),n.updateMatrixWorld()}}const aD=new li,oD=Symbol("TILE_X"),lD=Symbol("TILE_Y"),cD=Symbol("TILE_LEVEL");class hD{get tiling(){return this.imageSource.tiling}constructor(t={}){const{pixelSize:e=null,center:n=!1,useRecommendedSettings:i=!0,imageSource:r=null}=t;this.priority=-10,this.tiles=null,this.imageSource=r,this.pixelSize=e,this.center=n,this.useRecommendedSettings=i,null!==e&&console.warn('ImageFormatPlugin: "pixelSize" has been deprecated in favor of scaling the tiles root.')}init(t){this.useRecommendedSettings&&(t.errorTarget=1),this.tiles=t,this.imageSource.fetchOptions=t.fetchOptions,this.imageSource.fetchData=(e,n)=>(t.invokeAllPlugins(t=>e=t.preprocessURL?t.preprocessURL(e,null):e),t.invokeOnePlugin(t=>t!==this&&t.fetchData&&t.fetchData(e,n)))}async loadRootTileSet(){const{tiles:t,imageSource:e}=this;return e.url=e.url||t.rootURL,t.invokeAllPlugins(t=>e.url=t.preprocessURL?t.preprocessURL(e.url,null):e.url),await e.init(),t.rootURL=e.url,this.getTileset(e.url)}async parseToMesh(t,e,n,i,r){if(r.aborted)return null;const{imageSource:s}=this,a=e[oD],o=e[lD],l=e[cD],c=await s.processBufferToTexture(t);if(r.aborted)return c.dispose(),c.image.close(),null;s.setData(a,o,l,c);let h=1,A=1,u=0,d=0,p=0;const g=e.boundingVolume.box;g&&([u,d,p]=g,h=g[3],A=g[7]);const f=new Dc(2*h,2*A),m=new Xs(f,new us({map:c,transparent:!0}));m.position.set(u,d,p);const y=s.tiling.getTileContentUVBounds(a,o,l),{uv:v}=f.attributes;for(let t=0;t<v.count;t++)aD.fromBufferAttribute(v,t),aD.x=oi.mapLinear(aD.x,0,1,y[0],y[2]),aD.y=oi.mapLinear(aD.y,0,1,y[1],y[3]),v.setXY(t,aD.x,aD.y);return m}preprocessNode(t){const{tiling:e}=this,n=e.maxLevel;t[cD]<n&&null!==t.parent&&this.expandChildren(t)}disposeTile(t){const e=t[oD],n=t[lD],i=t[cD],{imageSource:r}=this;r.has(e,n,i)&&r.release(e,n,i)}getTileset(t){const{tiling:e,tiles:n}=this,i=e.minLevel,{tileCountX:r,tileCountY:s}=e.getLevel(i),a=[];for(let t=0;t<r;t++)for(let e=0;e<s;e++){const n=this.createChild(t,e,i);null!==n&&a.push(n)}const o={asset:{version:"1.1"},geometricError:1e5,root:{refine:"REPLACE",geometricError:1e5,boundingVolume:this.createBoundingVolume(0,0,-1),children:a,[cD]:-1,[oD]:0,[lD]:0}};return n.preprocessTileSet(o,t),o}getUrl(t,e,n){return this.imageSource.getUrl(t,e,n)}createBoundingVolume(t,e,n){const{center:i,pixelSize:r,tiling:s}=this,{pixelWidth:a,pixelHeight:o}=s.getLevel(s.maxLevel),[l,c,h,A]=-1===n?s.getContentBounds(!0):s.getTileBounds(t,e,n,!0);let u=(h-l)/2,d=(A-c)/2,p=l+u,g=c+d;return i&&(p-=.5,g-=.5),r?(p*=a*r,u*=a*r,g*=o*r,d*=o*r):(p*=s.aspectRatio,u*=s.aspectRatio),{box:[p,g,0,u,0,0,0,d,0,0,0,0]}}createChild(t,e,n){const{pixelSize:i,tiling:r}=this;if(!r.getTileExists(t,e,n))return null;const{pixelWidth:s,pixelHeight:a}=r.getLevel(r.maxLevel),{pixelWidth:o,pixelHeight:l}=r.getLevel(n);let c=Math.max(1/o,1/l);return i&&(c*=i*Math.max(s,a)),{refine:"REPLACE",geometricError:c,boundingVolume:this.createBoundingVolume(t,e,n),content:{uri:this.getUrl(t,e,n)},children:[],[oD]:t,[lD]:e,[cD]:n}}expandChildren(t){const e=t[cD],n=t[oD],i=t[lD];for(let r=0;r<2;r++)for(let s=0;s<2;s++){const a=this.createChild(2*n+r,2*i+s,e+1);a&&t.children.push(a)}}}function AD(...t){return t.join("_")}class uD{constructor(){this.cache={},this.count=0,this.cachedBytes=0,this.active=0}fetchItem(){}disposeItem(){}getMemoryUsage(t){return 0}setData(...t){const{cache:e}=this,n=t.pop(),i=AD(...t);if(i in e)throw new Error(`DataCache: "${i}" is already present.`);return this.cache[i]={abortController:new AbortController,result:n,count:1,bytes:this.getMemoryUsage(n)},this.count++,this.cachedBytes+=this.cache[i].bytes,n}lock(...t){const{cache:e}=this,n=AD(...t);if(n in e)e[n].count++;else{const e=new AbortController,i={abortController:e,result:null,count:1,bytes:0};this.active++,i.result=this.fetchItem(t,e.signal),i.result instanceof Promise?i.result.then(t=>(i.result=t,i.bytes=this.getMemoryUsage(t),this.cachedBytes+=i.bytes,t)).finally(()=>{this.active--}).catch(t=>{}):(this.active--,i.bytes=this.getMemoryUsage(i.result),this.cachedBytes+=i.bytes),this.cache[n]=i,this.count++}return e[n].result}release(...t){const e=AD(...t);this.releaseViaFullKey(e)}get(...t){const{cache:e}=this,n=AD(...t);return n in e&&e[n].count>0?e[n].result:null}has(...t){const{cache:e}=this;return AD(...t)in e}dispose(){const{cache:t}=this;for(const e in t){const{abortController:n}=t[e];n.abort(),this.releaseViaFullKey(e,!0)}this.cache={}}releaseViaFullKey(t,e=!1){const{cache:n}=this;if(t in n&&n[t].count>0){const i=n[t];if(i.count--,0===i.count||e){const r=()=>{if(n[t]!==i)return;const{result:e,abortController:r}=i;r.abort(),e instanceof Promise?e.then(t=>{this.disposeItem(t),this.count--,this.cachedBytes-=i.bytes}).catch(()=>{}):(this.disposeItem(e),this.count--,this.cachedBytes-=i.bytes),delete n[t]};e?r():queueMicrotask(()=>{0===i.count&&r()})}return!0}throw new Error("DataCache: Attempting to release key that does not exist")}}function dD(t,e){const[n,i,r,s]=t,[a,o,l,c]=e;return!(n>=l||r<=a||i>=c||s<=o)}class pD{get levelCount(){return this._levels.length}get maxLevel(){return this.levelCount-1}get minLevel(){const t=this._levels;for(let e=0;e<t.length;e++)if(null!==t[e])return e;return-1}get contentBounds(){var t;return this._contentBounds??(null==(t=this.projection)?void 0:t.getBounds())??[0,0,1,1]}get aspectRatio(){const{pixelWidth:t,pixelHeight:e}=this.getLevel(this.maxLevel);return t/e}constructor(){this.flipY=!1,this.pixelOverlap=0,this._contentBounds=null,this.projection=null,this._levels=[]}setLevel(t,e={}){const n=this._levels;for(;n.length<t;)n.push(null);const{tilePixelWidth:i=256,tilePixelHeight:r=256,tileCountX:s=2**t,tileCountY:a=2**t,tileBounds:o=null}=e,{pixelWidth:l=i*s,pixelHeight:c=r*a}=e;n[t]={tilePixelWidth:i,tilePixelHeight:r,pixelWidth:l,pixelHeight:c,tileCountX:s,tileCountY:a,tileBounds:o}}generateLevels(t,e,n,i={}){const{minLevel:r=0,tilePixelWidth:s=256,tilePixelHeight:a=256}=i,o=t-1,{pixelWidth:l=s*e*2**o,pixelHeight:c=a*n*2**o}=i;for(let e=r;e<t;e++){const n=t-e-1,i=Math.ceil(l*2**-n),r=Math.ceil(c*2**-n),o=Math.ceil(i/s),h=Math.ceil(r/a);this.setLevel(e,{tilePixelWidth:s,tilePixelHeight:a,pixelWidth:i,pixelHeight:r,tileCountX:o,tileCountY:h})}}getLevel(t){return this._levels[t]}setContentBounds(t,e,n,i){this._contentBounds=[t,e,n,i]}setProjection(t){this.projection=t}getTileAtPoint(t,e,n,i=!1){const{flipY:r}=this,{tileCountX:s,tileCountY:a,tileBounds:o}=this.getLevel(n),l=1/s,c=1/a;if(i||([t,e]=this.toNormalizedPoint(t,e)),o){const n=this.toNormalizedRange(o);t=oi.mapLinear(t,n[0],n[2],0,1),e=oi.mapLinear(e,n[1],n[3],0,1)}const h=Math.floor(t/l);let A=Math.floor(e/c);return r&&(A=a-1-A),[h,A]}getTilesInRange(t,e,n,i,r,s=!1){const a=[t,e,n,i],o=this.getContentBounds(s);let l=this.getLevel(r).tileBounds;if(!dD(a,o))return[0,0,-1,-1];if(l&&(s&&(l=this.toNormalizedRange(l)),!dD(a,o)))return[0,0,-1,-1];const[c,h,A,u]=this.clampToContentBounds(a,s),d=this.getTileAtPoint(c,h,r,s),p=this.getTileAtPoint(A,u,r,s);this.flipY&&([d[1],p[1]]=[p[1],d[1]]);const{tileCountX:g,tileCountY:f}=this.getLevel(r),[m,y]=d,[v,x]=p;return v<0||x<0||m>=g||y>=f?[0,0,-1,-1]:[oi.clamp(m,0,g-1),oi.clamp(y,0,f-1),oi.clamp(v,0,g-1),oi.clamp(x,0,f-1)]}getTileExists(t,e,n){const[i,r,s,a]=this.contentBounds,[o,l,c,h]=this.getTileBounds(t,e,n);return!(o>=c||l>=h)&&o<=s&&l<=a&&c>=i&&h>=r}getContentBounds(t=!1){const{projection:e}=this,n=[...this.contentBounds];return e&&t&&(n[0]=e.convertLongitudeToProjection(n[0]),n[1]=e.convertLatitudeToProjection(n[1]),n[2]=e.convertLongitudeToProjection(n[2]),n[3]=e.convertLatitudeToProjection(n[3])),n}getTileContentUVBounds(t,e,n){const[i,r,s,a]=this.getTileBounds(t,e,n,!0,!0),[o,l,c,h]=this.getTileBounds(t,e,n,!0,!1);return[oi.mapLinear(i,o,c,0,1),oi.mapLinear(r,l,h,0,1),oi.mapLinear(s,o,c,0,1),oi.mapLinear(a,l,h,0,1)]}getTileBounds(t,e,n,i=!1,r=!0){const{flipY:s,pixelOverlap:a,projection:o}=this,{tilePixelWidth:l,tilePixelHeight:c,pixelWidth:h,pixelHeight:A,tileBounds:u}=this.getLevel(n);let d=l*t-a,p=c*e-a,g=d+l+2*a,f=p+c+2*a;if(d=Math.max(d,0),p=Math.max(p,0),g=Math.min(g,h),f=Math.min(f,A),d/=h,g/=h,p/=A,f/=A,s){const t=(f-p)/2,e=1-(p+f)/2;p=e-t,f=e+t}let m=[d,p,g,f];if(u){const t=this.toNormalizedRange(u);m[0]=oi.mapLinear(m[0],0,1,t[0],t[2]),m[2]=oi.mapLinear(m[2],0,1,t[0],t[2]),m[1]=oi.mapLinear(m[1],0,1,t[1],t[3]),m[3]=oi.mapLinear(m[3],0,1,t[1],t[3])}return r&&(m=this.clampToProjectionBounds(m,!0)),o&&!i&&(m[0]=o.convertProjectionToLongitude(m[0]),m[1]=o.convertProjectionToLatitude(m[1]),m[2]=o.convertProjectionToLongitude(m[2]),m[3]=o.convertProjectionToLatitude(m[3])),m}toNormalizedPoint(t,e){const{projection:n}=this,i=[t,e];return this.projection&&(i[0]=n.convertLongitudeToProjection(i[0]),i[1]=n.convertLatitudeToProjection(i[1])),i}toNormalizedRange(t){return[...this.toNormalizedPoint(t[0],t[1]),...this.toNormalizedPoint(t[2],t[3])]}toCartographicPoint(t,e){const{projection:n}=this,i=[t,e];if(!this.projection)throw new Error("TilingScheme: Projection not available.");return i[0]=n.convertProjectionToLongitude(i[0]),i[1]=n.convertProjectionToLatitude(i[1]),i}toCartographicRange(t){return[...this.toCartographicPoint(t[0],t[1]),...this.toCartographicPoint(t[2],t[3])]}clampToContentBounds(t,e=!1){const n=[...t],[i,r,s,a]=this.getContentBounds(e);return n[0]=oi.clamp(n[0],i,s),n[1]=oi.clamp(n[1],r,a),n[2]=oi.clamp(n[2],i,s),n[3]=oi.clamp(n[3],r,a),n}clampToProjectionBounds(t,e=!1){const n=[...t],{projection:i}=this;let r;r=e||!i?[0,0,1,1]:i.getBounds();const[s,a,o,l]=r;return n[0]=oi.clamp(n[0],s,o),n[1]=oi.clamp(n[1],a,l),n[2]=oi.clamp(n[2],s,o),n[3]=oi.clamp(n[3],a,l),n}}class gD extends uD{constructor(){super(),this.tiling=new pD,this.fetchOptions={},this.fetchData=(...t)=>fetch(...t)}init(){}async processBufferToTexture(t){const e=new Blob([t]),n=await createImageBitmap(e,{premultiplyAlpha:"none",colorSpaceConversion:"none",imageOrientation:"flipY"}),i=new Pi(n);return i.generateMipmaps=!1,i.colorSpace=an,i.needsUpdate=!0,i}getMemoryUsage(t){const{TextureUtils:e}=i;if(!e)return 0;const{format:n,type:r,image:s,generateMipmaps:a}=t,{width:o,height:l}=s,c=e.getByteLength(o,l,n,r);return a?4*c/3:c}fetchItem(t,e){const n={...this.fetchOptions,signal:e},i=this.getUrl(...t);return this.fetchData(i,n).then(t=>t.arrayBuffer()).then(t=>this.processBufferToTexture(t))}disposeItem(t){t.dispose(),t.image instanceof ImageBitmap&&t.image.close()}getUrl(...t){}}Symbol("TILE_X"),Symbol("TILE_Y"),Symbol("TILE_LEVEL"),Symbol("TILE_AVAILABLE");const fD=new fr;new hi;const{clamp:mD}=oi;class yD{constructor(){this.duration=250,this.fadeCount=0,this._lastTick=-1,this._fadeState=new Map,this.onFadeComplete=null,this.onFadeStart=null,this.onFadeSetComplete=null,this.onFadeSetStart=null}deleteObject(t){t&&this.completeFade(t)}guaranteeState(t){const e=this._fadeState;return!e.has(t)&&(e.set(t,{fadeInTarget:0,fadeOutTarget:0,fadeIn:0,fadeOut:0}),!0)}completeFade(t){const e=this._fadeState;if(!e.has(t))return;const n=0===e.get(t).fadeOutTarget;e.delete(t),this.fadeCount--,this.onFadeComplete&&this.onFadeComplete(t,n),0===this.fadeCount&&this.onFadeSetComplete&&this.onFadeSetComplete()}completeAllFades(){this._fadeState.forEach((t,e)=>{this.completeFade(e)})}forEachObject(t){this._fadeState.forEach((e,n)=>{t(n,e)})}fadeIn(t){const e=this.guaranteeState(t),n=this._fadeState.get(t);n.fadeInTarget=1,n.fadeOutTarget=0,n.fadeOut=0,e&&(this.fadeCount++,1===this.fadeCount&&this.onFadeSetStart&&this.onFadeSetStart(),this.onFadeStart&&this.onFadeStart(t))}fadeOut(t){const e=this.guaranteeState(t),n=this._fadeState.get(t);n.fadeOutTarget=1,e&&(n.fadeInTarget=1,n.fadeIn=1,this.fadeCount++,1===this.fadeCount&&this.onFadeSetStart&&this.onFadeSetStart(),this.onFadeStart&&this.onFadeStart(t))}isFading(t){return this._fadeState.has(t)}isFadingOut(t){const e=this._fadeState.get(t);return e&&1===e.fadeOutTarget}update(){const t=window.performance.now();-1===this._lastTick&&(this._lastTick=t);const e=mD((t-this._lastTick)/this.duration,0,1);this._lastTick=t,this._fadeState.forEach((t,n)=>{const{fadeOutTarget:i,fadeInTarget:r}=t;let{fadeOut:s,fadeIn:a}=t;const o=Math.sign(r-a);a=mD(a+o*e,0,1);const l=Math.sign(i-s);s=mD(s+l*e,0,1),t.fadeIn=a,t.fadeOut=s,((1===s||0===s)&&(1===a||0===a)||s>=a)&&this.completeFade(n)})}}const vD=Symbol("FADE_PARAMS");function xD(t,e){if(t[vD])return t[vD];const n={fadeIn:{value:0},fadeOut:{value:0},fadeTexture:{value:null}};return t[vD]=n,t.defines={...t.defines||{},FEATURE_FADE:0},t.onBeforeCompile=t=>{e&&e(t),t.uniforms={...t.uniforms,...n},t.vertexShader=t.vertexShader.replace(/void\s+main\(\)\s+{/,t=>`\n\t\t\t\t\t#ifdef USE_BATCHING_FRAG\n\n\t\t\t\t\tvarying float vBatchId;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\t${t}\n\n\t\t\t\t\t\t#ifdef USE_BATCHING_FRAG\n\n\t\t\t\t\t\t// add 0.5 to the value to avoid floating error that may cause flickering\n\t\t\t\t\t\tvBatchId = getIndirectIndex( gl_DrawID ) + 0.5;\n\n\t\t\t\t\t\t#endif\n\t\t\t\t`),t.fragmentShader=t.fragmentShader.replace(/void main\(/,t=>`\n\t\t\t\t#if FEATURE_FADE\n\n\t\t\t\t// adapted from https://www.shadertoy.com/view/Mlt3z8\n\t\t\t\tfloat bayerDither2x2( vec2 v ) {\n\n\t\t\t\t\treturn mod( 3.0 * v.y + 2.0 * v.x, 4.0 );\n\n\t\t\t\t}\n\n\t\t\t\tfloat bayerDither4x4( vec2 v ) {\n\n\t\t\t\t\tvec2 P1 = mod( v, 2.0 );\n\t\t\t\t\tvec2 P2 = floor( 0.5 * mod( v, 4.0 ) );\n\t\t\t\t\treturn 4.0 * bayerDither2x2( P1 ) + bayerDither2x2( P2 );\n\n\t\t\t\t}\n\n\t\t\t\t// the USE_BATCHING define is not available in fragment shaders\n\t\t\t\t#ifdef USE_BATCHING_FRAG\n\n\t\t\t\t// functions for reading the fade state of a given batch id\n\t\t\t\tuniform sampler2D fadeTexture;\n\t\t\t\tvarying float vBatchId;\n\t\t\t\tvec2 getFadeValues( const in float i ) {\n\n\t\t\t\t\tint size = textureSize( fadeTexture, 0 ).x;\n\t\t\t\t\tint j = int( i );\n\t\t\t\t\tint x = j % size;\n\t\t\t\t\tint y = j / size;\n\t\t\t\t\treturn texelFetch( fadeTexture, ivec2( x, y ), 0 ).rg;\n\n\t\t\t\t}\n\n\t\t\t\t#else\n\n\t\t\t\tuniform float fadeIn;\n\t\t\t\tuniform float fadeOut;\n\n\t\t\t\t#endif\n\n\t\t\t\t#endif\n\n\t\t\t\t${t}\n\t\t\t`).replace(/#include <dithering_fragment>/,t=>`\n\n\t\t\t\t${t}\n\n\t\t\t\t#if FEATURE_FADE\n\n\t\t\t\t#ifdef USE_BATCHING_FRAG\n\n\t\t\t\tvec2 fadeValues = getFadeValues( vBatchId );\n\t\t\t\tfloat fadeIn = fadeValues.r;\n\t\t\t\tfloat fadeOut = fadeValues.g;\n\n\t\t\t\t#endif\n\n\t\t\t\tfloat bayerValue = bayerDither4x4( floor( mod( gl_FragCoord.xy, 4.0 ) ) );\n\t\t\t\tfloat bayerBins = 16.0;\n\t\t\t\tfloat dither = ( 0.5 + bayerValue ) / bayerBins;\n\t\t\t\tif ( dither >= fadeIn ) {\n\n\t\t\t\t\tdiscard;\n\n\t\t\t\t}\n\n\t\t\t\tif ( dither < fadeOut ) {\n\n\t\t\t\t\tdiscard;\n\n\t\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t`)},n}class CD{constructor(){this._fadeParams=new WeakMap,this.fading=0}setFade(t,e,n){if(!t)return;const i=this._fadeParams;t.traverse(t=>{const r=t.material;if(r&&i.has(r)){const t=i.get(r);t.fadeIn.value=e,t.fadeOut.value=n;const s=+(!(0===e||1===e)||!(0===n||1===n));r.defines.FEATURE_FADE!==s&&(this.fading+=1===s?1:-1,r.defines.FEATURE_FADE=s,r.needsUpdate=!0)}})}prepareScene(t){t.traverse(t=>{t.material&&this.prepareMaterial(t.material)})}deleteScene(t){if(!t)return;this.setFade(t,1,0);const e=this._fadeParams;t.traverse(t=>{const n=t.material;n&&e.delete(n)})}prepareMaterial(t){const e=this._fadeParams;e.has(t)||e.set(t,xD(t,t.onBeforeCompile))}}class ID{constructor(t,e=new us){this.other=t,this.material=e,this.visible=!0,this.parent=null,this._instanceInfo=[],this._visibilityChanged=!0;const n=new Proxy(this,{get(e,i){if(i in e)return e[i];{const r=t[i];return r instanceof Function?(...t)=>(e.syncInstances(),r.call(n,...t)):t[i]}},set:(e,n,i)=>(n in e?e[n]=i:t[n]=i,!0),deleteProperty:(e,n)=>n in e?delete e[n]:delete t[n]});return n}syncInstances(){const t=this._instanceInfo,e=this.other._instanceInfo;for(;e.length>t.length;){const n=t.length;t.push(new Proxy({visible:!1},{get:(t,i)=>i in t?t[i]:e[n][i],set:(t,i,r)=>(i in t?t[i]=r:e[n][i]=r,!0)}))}}}class ED extends ID{constructor(...t){super(...t);const e=this.material,n=xD(e,e.onBeforeCompile);e.defines.FEATURE_FADE=1,e.defines.USE_BATCHING_FRAG=1,e.needsUpdate=!0,this.fadeTexture=null,this._fadeParams=n}setFadeAt(t,e,n){this._initFadeTexture(),this.fadeTexture.setValueAt(t,255*e,255*n)}_initFadeTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=t*t*2,n=this.fadeTexture;if(!n||n.image.data.length!==e){const i=new Uint8Array(e),r=new wD(i,t,t,ne,Lt);if(n){n.dispose();const t=n.image.data,e=this.fadeTexture.image.data,i=Math.min(t.length,e.length);e.set(new t.constructor(t.buffer,0,i))}this.fadeTexture=r,this._fadeParams.fadeTexture.value=r,r.needsUpdate=!0}}dispose(){this.fadeTexture&&this.fadeTexture.dispose()}}class wD extends Za{setValueAt(t,...e){const{data:n,width:i,height:r}=this.image,s=Math.floor(n.length/(i*r));let a=!1;for(let i=0;i<s;i++){const r=t*s+i,o=n[r],l=e[i]||0;o!==l&&(n[r]=l,a=!0)}a&&(this.needsUpdate=!0)}}const _D=Symbol("HAS_POPPED_IN"),bD=new hi,BD=new hi,SD=new ci,MD=new ci,TD=new hi;function QD(){const t=this._fadeManager,e=this.tiles;this._fadingBefore=t.fadeCount,this._displayActiveTiles=e.displayActiveTiles,e.displayActiveTiles=!0}function DD(){const t=this._fadeManager,e=this._fadeMaterialManager,n=this._displayActiveTiles,i=this._fadingBefore,r=this._prevCameraTransforms,{tiles:s,maximumFadeOutTiles:a,batchedMesh:o}=this,{cameras:l}=s;s.displayActiveTiles=n,t.update();const c=t.fadeCount;if(0!==i&&0!==c&&(s.dispatchEvent({type:"fade-change"}),s.dispatchEvent({type:"needs-render"})),n||s.visibleTiles.forEach(t=>{const e=t.cached.scene;e&&(e.visible=t.__inFrustum),this.forEachBatchIds(t,(e,n,i)=>{n.setVisibleAt(e,t.__inFrustum),i.batchedMesh.setVisibleAt(e,t.__inFrustum)})}),a<this._fadingOutCount){let e=!0;l.forEach(t=>{if(!r.has(t))return;const n=t.matrixWorld,i=r.get(t);n.decompose(BD,MD,TD),i.decompose(bD,SD,TD);const s=MD.angleTo(SD),a=BD.distanceTo(bD);e=e&&(s>.25||a>.1)}),e&&t.completeAllFades()}if(l.forEach(t=>{r.get(t).copy(t.matrixWorld)}),t.forEachObject((n,{fadeIn:i,fadeOut:r})=>{const a=n.cached.scene,o=t.isFadingOut(n);s.markTileUsed(n),a&&(e.setFade(a,i,r),o&&(a.visible=!0)),this.forEachBatchIds(n,(t,e,n)=>{e.setFadeAt(t,i,r),e.setVisibleAt(t,!0),n.batchedMesh.setVisibleAt(t,!1)})}),o){const t=s.getPluginByName("BATCHED_TILES_PLUGIN").batchedMesh.material;o.material.map=t.map}}new fr,new hi,new hi,new Xs,new Pg(new us);new Za(new Uint8Array([255,255,255,255]),1,1).needsUpdate=!0,Symbol("OVERLAY_PARAMS"),Symbol("SPLIT_TILE_DATA"),Symbol("SPLIT_HASH"),new hi,Symbol("ORIGINAL_MATERIAL"),Symbol("HAS_RANDOM_COLOR"),Symbol("HAS_RANDOM_NODE_COLOR"),Symbol("LOAD_TIME"),Symbol("PARENT_BOUND_REF_COUNT"),Object.freeze({NONE:0,SCREEN_ERROR:1,GEOMETRIC_ERROR:2,DISTANCE:3,DEPTH:4,RELATIVE_DEPTH:5,IS_LEAF:6,RANDOM_COLOR:7,RANDOM_NODE_COLOR:8,CUSTOM_COLOR:9,LOAD_ORDER:10});class RD extends gD{constructor(t={}){const{url:e=null,...n}=t;super(n),this.url=e,this.format=null,this.stem=null}getUrl(t,e,n){return`${this.stem}_files/${n}/${t}_${e}.${this.format}`}init(){const{url:t}=this;return this.fetchData(t,this.fetchOptions).then(t=>t.text()).then(e=>{const n=(new DOMParser).parseFromString(e,"text/xml");if(n.querySelector("DisplayRects")||n.querySelector("Collection"))throw new Error("DeepZoomImagesPlugin: DisplayRect and Collection DZI files not supported.");const i=n.querySelector("Image"),r=i.querySelector("Size"),s=parseInt(r.getAttribute("Width")),a=parseInt(r.getAttribute("Height")),o=parseInt(i.getAttribute("TileSize")),l=parseInt(i.getAttribute("Overlap")),c=i.getAttribute("Format");this.format=c,this.stem=t.split(/\.[^.]+$/g)[0];const{tiling:h}=this,A=Math.ceil(Math.log2(Math.max(s,a)))+1;h.flipY=!0,h.pixelOverlap=l,h.generateLevels(A,1,1,{tilePixelWidth:o,tilePixelHeight:o,pixelWidth:s,pixelHeight:a})})}}function UD(t){return"OCTREE"===t.__implicitRoot.implicitTiling.subdivisionScheme}function PD(t){return UD(t)?8:4}Math.PI,Math.PI;class LD{constructor(t,e){this.parent=t,this.children=[],this.__level=t.__level+1,this.__implicitRoot=t.__implicitRoot,this.__subtreeIdx=e,[this.__x,this.__y,this.__z]=function(t,e){return e?[2*e.__x+t.__subtreeIdx%2,2*e.__y+Math.floor(t.__subtreeIdx/2)%2,UD(t)?2*e.__z+Math.floor(t.__subtreeIdx/4)%2:0]:[0,0,0]}(this,t)}static copy(t){const e={children:[]};return e.__level=t.__level,e.__implicitRoot=t.__implicitRoot,e.__subtreeIdx=t.__subtreeIdx,[e.__x,e.__y,e.__z]=[t.__x,t.__y,t.__z],e.boundingVolume=t.boundingVolume,e.geometricError=t.geometricError,e}}class FD extends NS{constructor(t){super(),this.tile=t,this.rootTile=t.__implicitRoot,this.workingPath=null}parseBuffer(t){const e=new DataView(t);let n=0;const i=RS(e);console.assert("subt"===i,'SUBTREELoader: The magic bytes equal "subt".'),n+=4;const r=e.getUint32(n,!0);console.assert(1===r,'SUBTREELoader: The version listed in the header is "1".'),n+=4;const s=e.getUint32(n,!0);n+=8;const a=e.getUint32(n,!0);n+=8;const o=JSON.parse(PS(new Uint8Array(t,n,s)));return n+=s,{version:r,subtreeJson:o,subtreeByte:t.slice(n,n+a)}}async parse(t){const e=this.parseBuffer(t),n=e.subtreeJson;n.contentAvailabilityHeaders=[].concat(n.contentAvailability);const i=this.preprocessBuffers(n.buffers),r=this.preprocessBufferViews(n.bufferViews,i);this.markActiveBufferViews(n,r);const s=await this.requestActiveBuffers(i,e.subtreeByte),a=this.parseActiveBufferViews(r,s);this.parseAvailability(e,n,a),this.expandSubtree(this.tile,e)}markActiveBufferViews(t,e){let n;const i=t.tileAvailability;isNaN(i.bitstream)?isNaN(i.bufferView)||(n=e[i.bufferView]):n=e[i.bitstream],n&&(n.isActive=!0,n.bufferHeader.isActive=!0);const r=t.contentAvailabilityHeaders;for(let t=0;t<r.length;t++)n=void 0,isNaN(r[t].bitstream)?isNaN(r[t].bufferView)||(n=e[r[t].bufferView]):n=e[r[t].bitstream],n&&(n.isActive=!0,n.bufferHeader.isActive=!0);n=void 0;const s=t.childSubtreeAvailability;isNaN(s.bitstream)?isNaN(s.bufferView)||(n=e[s.bufferView]):n=e[s.bitstream],n&&(n.isActive=!0,n.bufferHeader.isActive=!0)}async requestActiveBuffers(t,e){const n=[];for(let i=0;i<t.length;i++){const r=t[i];if(r.isActive)if(r.isExternal){const t=this.parseImplicitURIBuffer(this.tile,this.rootTile.implicitTiling.subtrees.uri,r.uri),e=fetch(t,this.fetchOptions).then(t=>{if(!t.ok)throw new Error(`SUBTREELoader: Failed to load external buffer from ${r.uri} with error code ${t.status}.`);return t.arrayBuffer()}).then(t=>new Uint8Array(t));n.push(e)}else n.push(Promise.resolve(new Uint8Array(e)));else n.push(Promise.resolve())}const i=await Promise.all(n),r={};for(let t=0;t<i.length;t++){const e=i[t];e&&(r[t]=e)}return r}parseActiveBufferViews(t,e){const n={};for(let i=0;i<t.length;i++){const r=t[i];if(!r.isActive)continue;const s=r.byteOffset,a=s+r.byteLength,o=e[r.buffer];n[i]=o.slice(s,a)}return n}preprocessBuffers(t=[]){for(let e=0;e<t.length;e++){const n=t[e];n.isActive=!1,n.isExternal=!!n.uri}return t}preprocessBufferViews(t=[],e){for(let n=0;n<t.length;n++){const i=t[n];i.bufferHeader=e[i.buffer],i.isActive=!1,i.isExternal=i.bufferHeader.isExternal}return t}parseAvailability(t,e,n){const i=PD(this.rootTile),r=this.rootTile.implicitTiling.subtreeLevels,s=(Math.pow(i,r)-1)/(i-1),a=Math.pow(i,r);t._tileAvailability=this.parseAvailabilityBitstream(e.tileAvailability,n,s),t._contentAvailabilityBitstreams=[];for(let i=0;i<e.contentAvailabilityHeaders.length;i++){const r=this.parseAvailabilityBitstream(e.contentAvailabilityHeaders[i],n,s);t._contentAvailabilityBitstreams.push(r)}t._childSubtreeAvailability=this.parseAvailabilityBitstream(e.childSubtreeAvailability,n,a)}parseAvailabilityBitstream(t,e,n){if(!isNaN(t.constant))return{constant:!!t.constant,lengthBits:n};let i;return isNaN(t.bitstream)?isNaN(t.bufferView)||(i=e[t.bufferView]):i=e[t.bitstream],{bitstream:i,lengthBits:n}}expandSubtree(t,e){const n=LD.copy(t);for(let i=0;e&&i<e._contentAvailabilityBitstreams.length;i++)if(e&&this.getBit(e._contentAvailabilityBitstreams[i],0)){n.content={uri:this.parseImplicitURI(t,this.rootTile.content.uri)};break}t.children.push(n);const i=this.transcodeSubtreeTiles(n,e),r=this.listChildSubtrees(e,i);for(let t=0;t<r.length;t++){const e=r[t],n=e.tile,i=this.deriveChildTile(null,n,null,e.childMortonIndex);i.content={uri:this.parseImplicitURI(i,this.rootTile.implicitTiling.subtrees.uri)},n.children.push(i)}}transcodeSubtreeTiles(t,e){let n=[t],i=[];for(let t=1;t<this.rootTile.implicitTiling.subtreeLevels;t++){const r=PD(this.rootTile),s=(Math.pow(r,t)-1)/(r-1),a=r*n.length;for(let t=0;t<a;t++){const a=s+t,o=n[t>>Math.log2(r)];if(!this.getBit(e._tileAvailability,a)){i.push(void 0);continue}const l=this.deriveChildTile(e,o,a,t);o.children.push(l),i.push(l)}n=i,i=[]}return n}deriveChildTile(t,e,n,i){const r=new LD(e,i);r.boundingVolume=this.getTileBoundingVolume(r),r.geometricError=this.getGeometricError(r);for(let e=0;t&&e<t._contentAvailabilityBitstreams.length;e++)if(t&&this.getBit(t._contentAvailabilityBitstreams[e],n)){r.content={uri:this.parseImplicitURI(r,this.rootTile.content.uri)};break}return r}getBit(t,e){if(e<0||e>=t.lengthBits)throw new Error("Bit index out of bounds.");if(void 0!==t.constant)return t.constant;const n=e>>3,i=e%8;return 1==(new Uint8Array(t.bitstream)[n]>>i&1)}getTileBoundingVolume(t){const e={};if(this.rootTile.boundingVolume.region){const n=[...this.rootTile.boundingVolume.region],i=n[0],r=n[2],s=n[1],a=n[3],o=(r-i)/Math.pow(2,t.__level),l=(a-s)/Math.pow(2,t.__level);n[0]=i+o*t.__x,n[2]=i+o*(t.__x+1),n[1]=s+l*t.__y,n[3]=s+l*(t.__y+1);for(let t=0;t<4;t++){const e=n[t];e<-Math.PI?n[t]+=2*Math.PI:e>Math.PI&&(n[t]-=2*Math.PI)}if(UD(t)){const e=n[4],i=(n[5]-e)/Math.pow(2,t.__level);n[4]=e+i*t.__z,n[5]=e+i*(t.__z+1)}e.region=n}if(this.rootTile.boundingVolume.box){const n=[...this.rootTile.boundingVolume.box],i=2**t.__level-1,r=Math.pow(2,-t.__level),s=UD(t)?3:2;for(let e=0;e<s;e++){n[3+3*e+0]*=r,n[3+3*e+1]*=r,n[3+3*e+2]*=r;const s=n[3+3*e+0],a=n[3+3*e+1],o=n[3+3*e+2],l=0===e?t.__x:1===e?t.__y:t.__z;n[0]+=2*s*(-.5*i+l),n[1]+=2*a*(-.5*i+l),n[2]+=2*o*(-.5*i+l)}e.box=n}return e}getGeometricError(t){return this.rootTile.geometricError/Math.pow(2,t.__level)}listChildSubtrees(t,e){const n=[],i=PD(this.rootTile);for(let r=0;r<e.length;r++){const s=e[r];if(void 0!==s)for(let e=0;e<i;e++){const a=r*i+e;this.getBit(t._childSubtreeAvailability,a)&&n.push({tile:s,childMortonIndex:a})}}return n}parseImplicitURI(t,e){return(e=(e=(e=e.replace("{level}",t.__level)).replace("{x}",t.__x)).replace("{y}",t.__y)).replace("{z}",t.__z)}parseImplicitURIBuffer(t,e,n){const i=this.parseImplicitURI(t,e),r=new URL(i,this.workingPath+"/");return r.pathname=r.pathname.substring(0,r.pathname.lastIndexOf("/")),new URL(r.pathname+"/"+n,this.workingPath+"/").toString()}}const ND=new Jh(-1,1,1,-1,0,1),kD=new class extends Ns{constructor(){super(),this.setAttribute("position",new Ts([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Ts([0,2,0,0,2,0],2))}};class OD{constructor(t){this._mesh=new Xs(kD,t)}dispose(){this._mesh.geometry.dispose()}render(t){t.render(this._mesh,ND)}get material(){return this._mesh.material}set material(t){this._mesh.material=t}}var zD=Uint8Array,GD=Uint16Array,HD=Int32Array,VD=new zD([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),qD=new zD([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),YD=new zD([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),WD=function(t,e){for(var n=new GD(31),i=0;i<31;++i)n[i]=e+=1<<t[i-1];var r=new HD(n[30]);for(i=1;i<30;++i)for(var s=n[i];s<n[i+1];++s)r[s]=s-n[i]<<5|i;return{b:n,r}},JD=WD(VD,2),jD=JD.b,XD=JD.r;jD[28]=258,XD[258]=28;for(var KD=WD(qD,0).b,ZD=new GD(32768),$D=0;$D<32768;++$D){var tR=(43690&$D)>>1|(21845&$D)<<1;tR=(61680&(tR=(52428&tR)>>2|(13107&tR)<<2))>>4|(3855&tR)<<4,ZD[$D]=((65280&tR)>>8|(255&tR)<<8)>>1}var eR=function(t,e,n){for(var i=t.length,r=0,s=new GD(e);r<i;++r)t[r]&&++s[t[r]-1];var a,o=new GD(e);for(r=1;r<e;++r)o[r]=o[r-1]+s[r-1]<<1;if(n){a=new GD(1<<e);var l=15-e;for(r=0;r<i;++r)if(t[r])for(var c=r<<4|t[r],h=e-t[r],A=o[t[r]-1]++<<h,u=A|(1<<h)-1;A<=u;++A)a[ZD[A]>>l]=c}else for(a=new GD(i),r=0;r<i;++r)t[r]&&(a[r]=ZD[o[t[r]-1]++]>>15-t[r]);return a},nR=new zD(288);for($D=0;$D<144;++$D)nR[$D]=8;for($D=144;$D<256;++$D)nR[$D]=9;for($D=256;$D<280;++$D)nR[$D]=7;for($D=280;$D<288;++$D)nR[$D]=8;var iR=new zD(32);for($D=0;$D<32;++$D)iR[$D]=5;var rR=eR(nR,9,1),sR=eR(iR,5,1),aR=function(t){for(var e=t[0],n=1;n<t.length;++n)t[n]>e&&(e=t[n]);return e},oR=function(t,e,n){var i=e/8|0;return(t[i]|t[i+1]<<8)>>(7&e)&n},lR=function(t,e){var n=e/8|0;return(t[n]|t[n+1]<<8|t[n+2]<<16)>>(7&e)},cR=function(t){return(t+7)/8|0},hR=function(t,e,n){return(null==e||e<0)&&(e=0),(null==n||n>t.length)&&(n=t.length),new zD(t.subarray(e,n))},AR=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],uR=function(t,e,n){var i=new Error(e||AR[t]);if(i.code=t,Error.captureStackTrace&&Error.captureStackTrace(i,uR),!n)throw i;return i},dR=function(t,e,n,i){var r=t.length,s=i?i.length:0;if(!r||e.f&&!e.l)return n||new zD(0);var a=!n,o=a||2!=e.i,l=e.i;a&&(n=new zD(3*r));var c=function(t){var e=n.length;if(t>e){var i=new zD(Math.max(2*e,t));i.set(n),n=i}},h=e.f||0,A=e.p||0,u=e.b||0,d=e.l,p=e.d,g=e.m,f=e.n,m=8*r;do{if(!d){h=oR(t,A,1);var y=oR(t,A+1,3);if(A+=3,!y){var v=t[(T=cR(A)+4)-4]|t[T-3]<<8,x=T+v;if(x>r){l&&uR(0);break}o&&c(u+v),n.set(t.subarray(T,x),u),e.b=u+=v,e.p=A=8*x,e.f=h;continue}if(1==y)d=rR,p=sR,g=9,f=5;else if(2==y){var C=oR(t,A,31)+257,I=oR(t,A+10,15)+4,E=C+oR(t,A+5,31)+1;A+=14;for(var w=new zD(E),_=new zD(19),b=0;b<I;++b)_[YD[b]]=oR(t,A+3*b,7);A+=3*I;var B=aR(_),S=(1<<B)-1,M=eR(_,B,1);for(b=0;b<E;){var T,Q=M[oR(t,A,S)];if(A+=15&Q,(T=Q>>4)<16)w[b++]=T;else{var D=0,R=0;for(16==T?(R=3+oR(t,A,3),A+=2,D=w[b-1]):17==T?(R=3+oR(t,A,7),A+=3):18==T&&(R=11+oR(t,A,127),A+=7);R--;)w[b++]=D}}var U=w.subarray(0,C),P=w.subarray(C);g=aR(U),f=aR(P),d=eR(U,g,1),p=eR(P,f,1)}else uR(1);if(A>m){l&&uR(0);break}}o&&c(u+131072);for(var L=(1<<g)-1,F=(1<<f)-1,N=A;;N=A){var k=(D=d[lR(t,A)&L])>>4;if((A+=15&D)>m){l&&uR(0);break}if(D||uR(2),k<256)n[u++]=k;else{if(256==k){N=A,d=null;break}var O=k-254;if(k>264){var z=VD[b=k-257];O=oR(t,A,(1<<z)-1)+jD[b],A+=z}var G=p[lR(t,A)&F],H=G>>4;if(G||uR(3),A+=15&G,P=KD[H],H>3&&(z=qD[H],P+=lR(t,A)&(1<<z)-1,A+=z),A>m){l&&uR(0);break}o&&c(u+131072);var V=u+O;if(u<P){var q=s-P,Y=Math.min(P,V);for(q+u<0&&uR(3);u<Y;++u)n[u]=i[q+u]}for(;u<V;++u)n[u]=n[u-P]}}e.l=d,e.p=N,e.b=u,e.f=h,d&&(h=1,e.m=g,e.d=p,e.n=f)}while(!h);return u!=n.length&&a?hR(n,0,u):n.subarray(0,u)},pR=new zD(0),gR=function(t,e){return t[e]|t[e+1]<<8},fR=function(t,e){return(t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0},mR=function(t,e){return fR(t,e)+4294967296*fR(t,e+4)},yR=function(){function t(t,e){"function"==typeof t&&(e=t,t={}),this.ondata=e;var n=t&&t.dictionary&&t.dictionary.subarray(-32768);this.s={i:0,b:n?n.length:0},this.o=new zD(32768),this.p=new zD(0),n&&this.o.set(n)}return t.prototype.e=function(t){if(this.ondata||uR(5),this.d&&uR(4),this.p.length){if(t.length){var e=new zD(this.p.length+t.length);e.set(this.p),e.set(t,this.p.length),this.p=e}}else this.p=t},t.prototype.c=function(t){this.s.i=+(this.d=t||!1);var e=this.s.b,n=dR(this.p,this.s,this.o);this.ondata(hR(n,e,this.s.b),this.d),this.o=hR(n,this.s.b-32768),this.s.b=this.o.length,this.p=hR(this.p,this.s.p/8|0),this.s.p&=7},t.prototype.push=function(t,e){this.e(t),this.c(e)},t}();function vR(t,e){return dR(t,{i:2},e&&e.out,e&&e.dictionary)}var xR=function(){function t(t,e){this.v=1,this.r=0,yR.call(this,t,e)}return t.prototype.push=function(t,e){if(yR.prototype.e.call(this,t),this.r+=t.length,this.v){var n=this.p.subarray(this.v-1),i=n.length>3?function(t){31==t[0]&&139==t[1]&&8==t[2]||uR(6,"invalid gzip data");var e=t[3],n=10;4&e&&(n+=2+(t[10]|t[11]<<8));for(var i=(e>>3&1)+(e>>4&1);i>0;i-=!t[n++]);return n+(2&e)}(n):4;if(i>n.length){if(!e)return}else this.v>1&&this.onmember&&this.onmember(this.r-n.length);this.p=n.subarray(i),this.v=0}yR.prototype.c.call(this,e),!this.s.f||this.s.l||e||(this.v=cR(this.s.p)+9,this.s={i:0},this.o=new zD(0),this.push(new zD(0),e))},t}(),CR="undefined"!=typeof TextDecoder&&new TextDecoder;try{CR.decode(pR,{stream:!0})}catch(t){}var IR=function(t,e){return e+30+gR(t,e+26)+gR(t,e+28)},ER=function(t,e,n){var i=gR(t,e+28),r=function(t,e){if(e){for(var n="",i=0;i<t.length;i+=16384)n+=String.fromCharCode.apply(null,t.subarray(i,i+16384));return n}if(CR)return CR.decode(t);var r=function(t){for(var e="",n=0;;){var i=t[n++],r=(i>127)+(i>223)+(i>239);if(n+r>t.length)return{s:e,r:hR(t,n-1)};r?3==r?(i=((15&i)<<18|(63&t[n++])<<12|(63&t[n++])<<6|63&t[n++])-65536,e+=String.fromCharCode(55296|i>>10,56320|1023&i)):e+=1&r?String.fromCharCode((31&i)<<6|63&t[n++]):String.fromCharCode((15&i)<<12|(63&t[n++])<<6|63&t[n++]):e+=String.fromCharCode(i)}}(t),s=r.s;return(n=r.r).length&&uR(8),s}(t.subarray(e+46,e+46+i),!(2048&gR(t,e+8))),s=e+46+i,a=fR(t,e+20),o=n&&4294967295==a?wR(t,s):[a,fR(t,e+24),fR(t,e+42)],l=o[0],c=o[1],h=o[2];return[gR(t,e+10),l,c,r,s+gR(t,e+30)+gR(t,e+32),h]},wR=function(t,e){for(;1!=gR(t,e);e+=4+gR(t,e+2));return[mR(t,e+12),mR(t,e+4),mR(t,e+20)]};let _R;const bR="undefined"!=typeof TextDecoder?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};"undefined"!=typeof TextDecoder&&bR.decode();let BR=null;async function SR(t){if(void 0!==_R)return _R;void 0!==t&&(Object.getPrototypeOf(t)===Object.prototype?({module_or_path:t}=t):console.warn("using deprecated parameters for the initialization function; pass a single object instead")),void 0===t&&(t=new URL(n(983),n.b));const e=function(){const t={wbg:{}};return t.wbg.__wbg_buffer_609cc3eee51ed158=function(t){return t.buffer},t.wbg.__wbg_length_3b4f022188ae8db6=function(t){return t.length},t.wbg.__wbg_length_6ca527665d89694d=function(t){return t.length},t.wbg.__wbg_length_8cfd2c6409af88ad=function(t){return t.length},t.wbg.__wbg_new_9fee97a409b32b68=function(t){return new Uint16Array(t)},t.wbg.__wbg_new_e3b321dcfef89fc7=function(t){return new Uint32Array(t)},t.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354=function(t,e,n){return new Float32Array(t,e>>>0,n>>>0)},t.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212=function(t,e,n){return new Uint32Array(t,e>>>0,n>>>0)},t.wbg.__wbg_newwithlength_5a5efe313cfd59f1=function(t){return new Float32Array(t>>>0)},t.wbg.__wbg_set_10bad9bee0e9c58b=function(t,e,n){t.set(e,n>>>0)},t.wbg.__wbg_set_d23661d19148b229=function(t,e,n){t.set(e,n>>>0)},t.wbg.__wbg_set_f4f1f0daa30696fc=function(t,e,n){t.set(e,n>>>0)},t.wbg.__wbg_subarray_3aaeec89bb2544f0=function(t,e,n){return t.subarray(e>>>0,n>>>0)},t.wbg.__wbg_subarray_769e1e0f81bb259b=function(t,e,n){return t.subarray(e>>>0,n>>>0)},t.wbg.__wbindgen_init_externref_table=function(){const t=_R.__wbindgen_export_0,e=t.grow(4);t.set(0,void 0),t.set(e+0,void 0),t.set(e+1,null),t.set(e+2,!0),t.set(e+3,!1)},t.wbg.__wbindgen_memory=function(){return _R.memory},t.wbg.__wbindgen_throw=function(t,e){throw new Error((n=t,i=e,n>>>=0,bR.decode((null!==BR&&0!==BR.byteLength||(BR=new Uint8Array(_R.memory.buffer)),BR).subarray(n,n+i))));var n,i},t}();("string"==typeof t||"function"==typeof Request&&t instanceof Request||"function"==typeof URL&&t instanceof URL)&&(t=fetch(t));const{instance:i,module:r}=await async function(t,e){if("function"==typeof Response&&t instanceof Response){if("function"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(t,e)}catch(e){if("application/wasm"==t.headers.get("Content-Type"))throw e;console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",e)}const n=await t.arrayBuffer();return await WebAssembly.instantiate(n,e)}{const n=await WebAssembly.instantiate(t,e);return n instanceof WebAssembly.Instance?{instance:n,module:t}:n}}(await t,e);return function(t,e){return _R=t.exports,SR.__wbindgen_wasm_module=e,BR=null,_R.__wbindgen_start(),_R}(i,r)}const MR=-12,TR=9,QR=Math.exp(MR),DR=Math.exp(TR),RR=Math.exp(-30),UR=2048,PR=2048,LR=1,FR=UR-1,NR=PR-1,kR=Object.freeze(Object.defineProperty({__proto__:null,LN_SCALE_MAX:TR,LN_SCALE_MIN:MR,LN_SCALE_ZERO:-30,SCALE_MAX:DR,SCALE_MIN:QR,SCALE_ZERO:RR,SPLAT_TEX_DEPTH:2048,SPLAT_TEX_DEPTH_BITS:11,SPLAT_TEX_DEPTH_MASK:2047,SPLAT_TEX_HEIGHT:PR,SPLAT_TEX_HEIGHT_BITS:11,SPLAT_TEX_HEIGHT_MASK:NR,SPLAT_TEX_LAYER_BITS:22,SPLAT_TEX_MIN_HEIGHT:LR,SPLAT_TEX_WIDTH:UR,SPLAT_TEX_WIDTH_BITS:11,SPLAT_TEX_WIDTH_MASK:FR,USE_COMPILED_PARSER_FUNCTION:!0,WASM_SPLAT_SORT:!0},Symbol.toStringTag,{value:"Module"}));function OR(t){return"bool"===t||"bvec2"===t||"bvec3"===t||"bvec4"===t}function zR(t){return"int"===t||"uint"===t||"float"===t}function GR(t){return"int"===t||"ivec2"===t||"ivec3"===t||"ivec4"===t}function HR(t){return"uint"===t||"uvec2"===t||"uvec3"===t||"uvec4"===t}function VR(t){return"float"===t||"vec2"===t||"vec3"===t||"vec4"===t}function qR(t){return"mat2"===t||"mat2x2"===t||"mat2x3"===t||"mat2x4"===t||"mat3"===t||"mat3x2"===t||"mat3x3"===t||"mat3x4"===t||"mat4"===t||"mat4x2"===t||"mat4x3"===t||"mat4x4"===t}function YR(t){return VR(t)||qR(t)}function WR(t){return"vec2"===t||"ivec2"===t||"uvec2"===t}function JR(t){return"vec3"===t||"ivec3"===t||"uvec3"===t}function jR(t){return"vec4"===t||"ivec4"===t||"uvec4"===t}function XR(t){return"mat2"===t||"mat2x2"===t}function KR(t){return"mat3"===t||"mat3x3"===t}function ZR(t){return"mat4"===t||"mat4x4"===t}function $R(t){switch(t){case"vec2":case"vec3":case"vec4":return"float";case"ivec2":case"ivec3":case"ivec4":return"int";case"uvec2":case"uvec3":case"uvec4":return"uint";default:throw new Error(`Invalid vector type: ${t}`)}}function tU(t){switch(t){case"vec2":case"ivec2":case"uvec2":return 2;case"vec3":case"ivec3":case"uvec3":return 3;case"vec4":case"ivec4":case"uvec4":return 4;default:throw new Error(`Invalid vector type: ${t}`)}}function eU(t){if(zR(t))return"uint";if(WR(t))return"uvec2";if(JR(t))return"uvec3";if(jR(t))return"uvec4";throw new Error(`Invalid vector type: ${t}`)}function nU(t){if("string"==typeof t)return t;if("object"==typeof t&&t.type)return t.type;throw new Error(`Invalid DynoType: ${String(t)}`)}function iU(t){return Math.trunc(t).toString()}function rU(t){return`${Math.max(0,Math.trunc(t)).toString()}u`}function sU(t){return t===Number.POSITIVE_INFINITY?"INFINITY":t===Number.NEGATIVE_INFINITY?"-INFINITY":Number.isInteger(t)?t.toFixed(1):t.toString()}function aU(t){return t instanceof oU?t.type:t.dynoOut().type}class oU{constructor(t){this.__isDynoValue=!0,this.type=t}}class lU extends oU{constructor(t,e){super(t.outTypes[e]),this.dyno=t,this.key=e}}class cU extends oU{constructor(t,e){super(t),this.literal=e}getLiteral(){return this.literal}}function hU(t,e){return new cU(t,e)}class AU extends cU{constructor(t,e){super(t,""),this.value=e}getLiteral(){const{type:t,value:e}=this;switch(t){case"bool":return e?"true":"false";case"uint":return rU(e);case"int":return iU(e);case"float":return sU(e);case"bvec2":{const t=e;return`bvec2(${t[0]}, ${t[1]})`}case"uvec2":{if(e instanceof li)return`uvec2(${rU(e.x)}, ${rU(e.y)})`;const t=e;return`uvec2(${rU(t[0])}, ${rU(t[1])})`}case"ivec2":{if(e instanceof li)return`ivec2(${iU(e.x)}, ${iU(e.y)})`;const t=e;return`ivec2(${iU(t[0])}, ${iU(t[1])})`}case"vec2":{if(e instanceof li)return`vec2(${sU(e.x)}, ${sU(e.y)})`;const t=e;return`vec2(${sU(t[0])}, ${sU(t[1])})`}case"bvec3":{const t=e;return`bvec3(${t[0]}, ${t[1]}, ${t[2]})`}case"uvec3":{if(e instanceof hi)return`uvec3(${rU(e.x)}, ${rU(e.y)}, ${rU(e.z)})`;const t=e;return`uvec3(${rU(t[0])}, ${rU(t[1])}, ${rU(t[2])})`}case"ivec3":{if(e instanceof hi)return`ivec3(${iU(e.x)}, ${iU(e.y)}, ${iU(e.z)})`;const t=e;return`ivec3(${iU(t[0])}, ${iU(t[1])}, ${iU(t[2])})`}case"vec3":{if(e instanceof hi)return`vec3(${sU(e.x)}, ${sU(e.y)}, ${sU(e.z)})`;const t=e;return`vec3(${sU(t[0])}, ${sU(t[1])}, ${sU(t[2])})`}case"bvec4":{const t=e;return`bvec4(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`}case"uvec4":{if(e instanceof Li)return`uvec4(${rU(e.x)}, ${rU(e.y)}, ${rU(e.z)}, ${rU(e.w)})`;const t=e;return`uvec4(${rU(t[0])}, ${rU(t[1])}, ${rU(t[2])}, ${rU(t[3])})`}case"ivec4":{if(e instanceof Li)return`ivec4(${iU(e.x)}, ${iU(e.y)}, ${iU(e.z)}, ${iU(e.w)})`;const t=e;return`ivec4(${iU(t[0])}, ${iU(t[1])}, ${iU(t[2])}, ${iU(t[3])})`}case"vec4":{if(e instanceof Li)return`vec4(${sU(e.x)}, ${sU(e.y)}, ${sU(e.z)}, ${sU(e.w)})`;if(e instanceof ci)return`vec4(${sU(e.x)}, ${sU(e.y)}, ${sU(e.z)}, ${sU(e.w)})`;const t=e;return`vec4(${sU(t[0])}, ${sU(t[1])}, ${sU(t[2])}, ${sU(t[3])})`}case"mat2":case"mat2x2":{const n=e instanceof su?e.elements:e,i=new Array(4).fill(0).map((t,e)=>sU(n[e]));return`${t}(${i.join(", ")})`}case"mat2x3":{const n=e,i=new Array(6).fill(0).map((t,e)=>sU(n[e]));return`${t}(${i.join(", ")})`}case"mat2x4":{const n=e,i=new Array(8).fill(0).map((t,e)=>sU(n[e]));return`${t}(${i.join(", ")})`}case"mat3":case"mat3x3":{const n=e instanceof di?e.elements:e,i=new Array(9).fill(0).map((t,e)=>sU(n[e]));return`${t}(${i.join(", ")})`}case"mat3x2":{const n=e,i=new Array(6).fill(0).map((t,e)=>sU(n[e]));return`${t}(${i.join(", ")})`}case"mat3x4":{const n=e,i=new Array(12).fill(0).map((t,e)=>sU(n[e]));return`${t}(${i.join(", ")})`}case"mat4":case"mat4x4":{const n=e instanceof fr?e.elements:e,i=new Array(16).fill(0).map((t,e)=>sU(n[e]));return`${t}(${i.join(", ")})`}case"mat4x2":{const n=e,i=new Array(8).fill(0).map((t,e)=>sU(n[e]));return`${t}(${i.join(", ")})`}case"mat4x3":{const n=e,i=new Array(12).fill(0).map((t,e)=>sU(n[e]));return`${t}(${i.join(", ")})`}default:throw new Error(`Type not implemented: ${String(t)}`)}}}function uU(t,e){return new AU(t,e)}function dU(t){const e=String(t);if(OR(t))return`${e}(false)`;if(YR(t))return`${e}(0.0)`;if(GR(t))return`${e}(0)`;if(HR(t))return`${e}(0u)`;throw new Error(`Type not implemented: ${e}`)}const pU="    ";class gU{constructor({indent:t}={}){this.globals=new Set,this.statements=[],this.uniforms={},this.declares=new Set,this.updaters=[],this.sequence=0,this.indent=pU,this.indent=t??pU}nextSequence(){return this.sequence++}}class fU{constructor({inTypes:t,outTypes:e,inputs:n,update:i,globals:r,statements:s,generate:a}){this.inTypes=t??{},this.outTypes=e??{},this.inputs=n??{},this.update=i,this.globals=r,this.statements=s,this.generate=a??(({inputs:t,outputs:e,compile:n})=>{var i,r;return{globals:null==(i=this.globals)?void 0:i.call(this,{inputs:t,outputs:e,compile:n}),statements:null==(r=this.statements)?void 0:r.call(this,{inputs:t,outputs:e,compile:n})}})}get outputs(){const t={};for(const e in this.outTypes)t[e]=new lU(this,e);return t}apply(t){return Object.assign(this.inputs,t),this.outputs}compile({inputs:t,outputs:e,compile:n}){const i=[`// ${this.constructor.name}(${Object.values(t).join(", ")}) => (${Object.values(e).join(", ")})`],r=[];for(const t in e){const i=e[t];i&&!n.declares.has(i)&&(n.declares.add(i),r.push(t))}const{globals:s,statements:a,uniforms:o}=this.generate({inputs:t,outputs:e,compile:n});for(const t of s??[])n.globals.add(t);for(const t in o)n.uniforms[t]=o[t];this.update&&n.updaters.push(this.update);for(const t of r){const r=e[t];r&&(n.uniforms[r]||i.push(`${xU(r,this.outTypes[t])};`))}return(null==a?void 0:a.length)&&(i.push("{"),i.push(...a.map(t=>n.indent+t)),i.push("}")),i}}class mU extends fU{constructor({inTypes:t,outTypes:e,inputs:n,update:i,globals:r,construct:s}){super({inTypes:t,outTypes:e,inputs:n,update:i,globals:r,generate:t=>this.generateBlock(t)}),this.construct=s}generateBlock({inputs:t,outputs:e,compile:n}){var i,r;const s={},a={};for(const e in t)null!=t[e]&&(s[e]=new cU(this.inTypes[e],t[e]));for(const t in e)null!=e[t]&&(a[t]=new oU(this.outTypes[t]));const o={roots:[]},l=this.construct(s,a,o);for(const r of(null==(i=this.globals)?void 0:i.call(this,{inputs:t,outputs:e,compile:n}))??[])n.globals.add(r);const c=[],h=new Map;function A(t,e,i){let r=h.get(t);if(!r){r={sequence:n.nextSequence(),outNames:new Map,newOuts:new Set},h.set(t,r);for(const e in t.inputs){let n=t.inputs[e];for(;n;){if(n instanceof oU){n instanceof lU&&A(n.dyno,n.key);break}n=n.dynoOut()}}c.push(t)}e&&(i||r.newOuts.add(e),r.outNames.set(e,i??`${e}_${r.sequence}`))}for(const t of o.roots)A(t);for(const t in a){let n=(null==l?void 0:l[t])??a[t];for(;n;){if(n instanceof oU){n instanceof lU&&A(n.dyno,n.key,e[t]);break}n=n.dynoOut()}a[t]=n}const u=[];for(const t of c){const e={},i={};for(const n in t.inputs){let i=t.inputs[n];for(;i;){if(i instanceof oU){if(i instanceof cU)e[n]=i.getLiteral();else if(i instanceof lU){const t=null==(r=h.get(i.dyno))?void 0:r.outNames.get(i.key);if(!t)throw new Error(`Source not found for ${i.dyno.constructor.name}.${i.key}`);e[n]=t}break}i=i.dynoOut()}}const s=h.get(t)??{outNames:new Map};for(const[t,e]of s.outNames.entries())i[t]=e;const a=t.compile({inputs:e,outputs:i,compile:n});u.push(a)}const d=[];for(const t in e)a[t]instanceof cU&&d.push(`${e[t]} = ${a[t].getLiteral()};`);return d.length>0&&u.push(d),{statements:u.flatMap((t,e)=>0===e?t:["",...t])}}}function yU(t,e,n,{update:i,globals:r}={}){return new mU({inTypes:t,outTypes:e,construct:n,update:i,globals:r})}function vU({inTypes:t,outTypes:e,inputs:n,update:i,globals:r,statements:s,generate:a}){return new fU({inTypes:t,outTypes:e,inputs:n,update:i,globals:r,statements:s,generate:a})}function xU(t,e,n){const i="string"==typeof e?e:e.type;if(!i)throw new Error(`Invalid DynoType: ${String(e)}`);return`${i} ${t}${null!=n?`[${n}]`:""}`}function CU(t){var e;let n=!1;const i=t.split("\n").map(t=>{const e=t.trimEnd();return n?e:e.length>0?(n=!0,e):null}).filter(t=>null!=t);for(;i.length>0&&0===i[i.length-1].length;)i.pop();if(0===i.length)return[];const r=null==(e=i[0].match(/^\s*/))?void 0:e[0];if(!r)return i;const s=new RegExp(`^${r}`);return i.map(t=>t.replace(s,""))}function IU(t){return CU(t).join("\n")}class EU extends fU{constructor({a:t,outKey:e,outTypeFunc:n}){const i={a:aU(t)},r=n(aU(t));super({inTypes:i,outTypes:{[e]:r},inputs:{a:t}}),this.outKey=e}dynoOut(){return new lU(this,this.outKey)}}class wU extends fU{constructor({a:t,b:e,outKey:n,outTypeFunc:i}){const r={a:aU(t),b:aU(e)},s=i(aU(t),aU(e));super({inTypes:r,outTypes:{[n]:s},inputs:{a:t,b:e}}),this.outKey=n}dynoOut(){return new lU(this,this.outKey)}}class _U extends fU{constructor({a:t,b:e,c:n,outKey:i,outTypeFunc:r}){const s={a:aU(t),b:aU(e),c:aU(n)},a=r(aU(t),aU(e),aU(n));super({inTypes:s,outTypes:{[i]:a},inputs:{a:t,b:e,c:n}}),this.outKey=i}dynoOut(){return new lU(this,this.outKey)}}const bU={type:"Gsplat"},BU={type:"PackedSplats"},SU=(t,e)=>new NU({packedSplats:t,index:e}),MU=(t,e,n,i)=>new kU({packedSplats:t,index:e,base:n,count:i}),TU=t=>new OU({gsplat:t}),QU=({gsplat:t,flags:e,index:n,center:i,scales:r,quaternion:s,rgba:a,rgb:o,opacity:l,x:c,y:h,z:A,r:u,g:d,b:p})=>new zU({gsplat:t,flags:e,index:n,center:i,scales:r,quaternion:s,rgba:a,rgb:o,opacity:l,x:c,y:h,z:A,r:u,g:d,b:p}),DU=t=>new HU({gsplat:t}),RU=(t,{scale:e,rotate:n,translate:i,recolor:r})=>new VU({gsplat:t,scale:e,rotate:n,translate:i,recolor:r}),UU=IU("\n  struct Gsplat {\n    vec3 center;\n    uint flags;\n    vec3 scales;\n    int index;\n    vec4 quaternion;\n    vec4 rgba;\n  };\n  const uint GSPLAT_FLAG_ACTIVE = 1u << 0u;\n\n  bool isGsplatActive(uint flags) {\n    return (flags & GSPLAT_FLAG_ACTIVE) != 0u;\n  }\n"),PU=IU("\n  struct PackedSplats {\n    usampler2DArray texture;\n    int numSplats;\n    vec4 rgbMinMaxLnScaleMinMax;\n  };\n");class LU extends EU{constructor({packedSplats:t}){super({a:t,outKey:"numSplats",outTypeFunc:()=>"int"}),this.statements=({inputs:t,outputs:e})=>[`${e.numSplats} = ${t.a}.numSplats;`]}}const FU=IU("\n  bool readPackedSplat(usampler2DArray texture, int numSplats, vec4 rgbMinMaxLnScaleMinMax, int index, out Gsplat gsplat) {\n    if ((index >= 0) && (index < numSplats)) {\n      uvec4 packed = texelFetch(texture, splatTexCoord(index), 0);\n      unpackSplatEncoding(packed, gsplat.center, gsplat.scales, gsplat.quaternion, gsplat.rgba, rgbMinMaxLnScaleMinMax);\n      return true;\n    } else {\n      return false;\n    }\n  }\n");class NU extends fU{constructor({packedSplats:t,index:e}){super({inTypes:{packedSplats:BU,index:"int"},outTypes:{gsplat:bU},inputs:{packedSplats:t,index:e},globals:()=>[UU,PU,FU],statements:({inputs:t,outputs:e})=>{const{gsplat:n}=e;if(!n)return[];const{packedSplats:i,index:r}=t;let s;return s=i&&r?CU(`\n            if (readPackedSplat(${i}.texture, ${i}.numSplats, ${i}.rgbMinMaxLnScaleMinMax, ${r}, ${n})) {\n              bool zeroSize = all(equal(${n}.scales, vec3(0.0, 0.0, 0.0)));\n              ${n}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;\n            } else {\n              ${n}.flags = 0u;\n            }\n          `):[`${n}.flags = 0u;`],s.push(`${n}.index = ${r??"0"};`),s}})}dynoOut(){return new lU(this,"gsplat")}}class kU extends fU{constructor({packedSplats:t,index:e,base:n,count:i}){super({inTypes:{packedSplats:BU,index:"int",base:"int",count:"int"},outTypes:{gsplat:bU},inputs:{packedSplats:t,index:e,base:n,count:i},globals:()=>[UU,PU,FU],statements:({inputs:t,outputs:e})=>{const{gsplat:n}=e;if(!n)return[];const{packedSplats:i,index:r,base:s,count:a}=t;let o;return o=i&&r&&s&&a?CU(`\n            ${n}.flags = 0u;\n            if ((${r} >= ${s}) && (${r} < (${s} + ${a}))) {\n              if (readPackedSplat(${i}.texture, ${i}.numSplats, ${i}.rgbMinMaxLnScaleMinMax, ${r}, ${n})) {\n                bool zeroSize = all(equal(${n}.scales, vec3(0.0, 0.0, 0.0)));\n                ${n}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;\n              }\n            }\n          `):[`${n}.flags = 0u;`],o.push(`${n}.index = ${r??"0"};`),o}})}dynoOut(){return new lU(this,"gsplat")}}class OU extends fU{constructor({gsplat:t}){super({inTypes:{gsplat:bU},outTypes:{flags:"uint",active:"bool",index:"int",center:"vec3",scales:"vec3",quaternion:"vec4",rgba:"vec4",rgb:"vec3",opacity:"float",x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"},inputs:{gsplat:t},globals:()=>[UU],statements:({inputs:t,outputs:e})=>{const{gsplat:n}=t,{flags:i,active:r,index:s,center:a,scales:o,quaternion:l,rgba:c,rgb:h,opacity:A,x:u,y:d,z:p,r:g,g:f,b:m}=e;return[i?`${i} = ${n?`${n}.flags`:"0u"};`:null,r?`${r} = isGsplatActive(${n?`${n}.flags`:"0u"});`:null,s?`${s} = ${n?`${n}.index`:"0"};`:null,a?`${a} = ${n?`${n}.center`:"vec3(0.0, 0.0, 0.0)"};`:null,o?`${o} = ${n?`${n}.scales`:"vec3(0.0, 0.0, 0.0)"};`:null,l?`${l} = ${n?`${n}.quaternion`:"vec4(0.0, 0.0, 0.0, 1.0)"};`:null,c?`${c} = ${n?`${n}.rgba`:"vec4(0.0, 0.0, 0.0, 0.0)"};`:null,h?`${h} = ${n?`${n}.rgba.rgb`:"vec3(0.0, 0.0, 0.0)"};`:null,A?`${A} = ${n?`${n}.rgba.a`:"0.0"};`:null,u?`${u} = ${n?`${n}.center.x`:"0.0"};`:null,d?`${d} = ${n?`${n}.center.y`:"0.0"};`:null,p?`${p} = ${n?`${n}.center.z`:"0.0"};`:null,g?`${g} = ${n?`${n}.rgba.r`:"0.0"};`:null,f?`${f} = ${n?`${n}.rgba.g`:"0.0"};`:null,m?`${m} = ${n?`${n}.rgba.b`:"0.0"};`:null].filter(Boolean)}})}}class zU extends fU{constructor({gsplat:t,flags:e,index:n,center:i,scales:r,quaternion:s,rgba:a,rgb:o,opacity:l,x:c,y:h,z:A,r:u,g:d,b:p}){super({inTypes:{gsplat:bU,flags:"uint",index:"int",center:"vec3",scales:"vec3",quaternion:"vec4",rgba:"vec4",rgb:"vec3",opacity:"float",x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"},outTypes:{gsplat:bU},inputs:{gsplat:t,flags:e,index:n,center:i,scales:r,quaternion:s,rgba:a,rgb:o,opacity:l,x:c,y:h,z:A,r:u,g:d,b:p},globals:()=>[UU],statements:({inputs:t,outputs:e})=>{const{gsplat:n}=e;if(!n)return[];const{gsplat:i,flags:r,index:s,center:a,scales:o,quaternion:l,rgba:c,rgb:h,opacity:A,x:u,y:d,z:p,r:g,g:f,b:m}=t;return[`${n}.flags = ${r??(i?`${i}.flags`:"0u")};`,`${n}.index = ${s??(i?`${i}.index`:"0")};`,`${n}.center = ${a??(i?`${i}.center`:"vec3(0.0, 0.0, 0.0)")};`,`${n}.scales = ${o??(i?`${i}.scales`:"vec3(0.0, 0.0, 0.0)")};`,`${n}.quaternion = ${l??(i?`${i}.quaternion`:"vec4(0.0, 0.0, 0.0, 1.0)")};`,`${n}.rgba = ${c??(i?`${i}.rgba`:"vec4(0.0, 0.0, 0.0, 0.0)")};`,h?`${n}.rgba.rgb = ${h};`:null,A?`${n}.rgba.a = ${A};`:null,u?`${n}.center.x = ${u};`:null,d?`${n}.center.y = ${d};`:null,p?`${n}.center.z = ${p};`:null,g?`${n}.rgba.r = ${g};`:null,f?`${n}.rgba.g = ${f};`:null,m?`${n}.rgba.b = ${m};`:null].filter(Boolean)}})}dynoOut(){return new lU(this,"gsplat")}}const GU=IU("\n  vec3 gsplatNormal(vec3 scales, vec4 quaternion) {\n    float minScale = min(scales.x, min(scales.y, scales.z));\n    vec3 normal;\n    if (scales.z == minScale) {\n      normal = vec3(0.0, 0.0, 1.0);\n    } else if (scales.y == minScale) {\n      normal = vec3(0.0, 1.0, 0.0);\n    } else {\n      normal = vec3(1.0, 0.0, 0.0);\n    }\n    return quatVec(quaternion, normal);\n  }\n");class HU extends EU{constructor({gsplat:t}){super({a:t,outKey:"normal",outTypeFunc:()=>"vec3"}),this.globals=()=>[UU,GU],this.statements=({inputs:t,outputs:e})=>[`${e.normal} = gsplatNormal(${t.a}.scales, ${t.a}.quaternion);`]}}class VU extends fU{constructor({gsplat:t,scale:e,rotate:n,translate:i,recolor:r}){super({inTypes:{gsplat:bU,scale:"float",rotate:"vec4",translate:"vec3",recolor:"vec4"},outTypes:{gsplat:bU},inputs:{gsplat:t,scale:e,rotate:n,translate:i,recolor:r},globals:()=>[UU],statements:({inputs:t,outputs:e,compile:n})=>{const{gsplat:i}=e;if(!i||!t.gsplat)return[];const{scale:r,rotate:s,translate:a,recolor:o}=t,l=n.indent;return[`${i} = ${t.gsplat};`,`if (isGsplatActive(${i}.flags)) {`,r?`${l}${i}.center *= ${r};`:null,s?`${l}${i}.center = quatVec(${s}, ${i}.center);`:null,a?`${l}${i}.center += ${a};`:null,r?`${l}${i}.scales *= ${r};`:null,s?`${l}${i}.quaternion = quatQuat(${s}, ${i}.quaternion);`:null,o?`${l}${i}.rgba *= ${o};`:null,"}"].filter(Boolean)}})}dynoOut(){return new lU(this,"gsplat")}}const qU=(t,e)=>new YU({gsplat:t,rgbMinMaxLnScaleMinMax:e});class YU extends fU{constructor({gsplat:t,rgbMinMaxLnScaleMinMax:e}){super({inTypes:{gsplat:bU,rgbMinMaxLnScaleMinMax:"vec4"},inputs:{gsplat:t,rgbMinMaxLnScaleMinMax:e},globals:()=>[UU],statements:({inputs:t,outputs:e})=>{const{output:n}=e;if(!n)return[];const{gsplat:i,rgbMinMaxLnScaleMinMax:r}=t;return i?CU(`\n            if (isGsplatActive(${i}.flags)) {\n              ${n} = packSplatEncoding(${i}.center, ${i}.scales, ${i}.quaternion, ${i}.rgba, ${r});\n            } else {\n              ${n} = uvec4(0u, 0u, 0u, 0u);\n            }\n          `):[`${n} = uvec4(0u, 0u, 0u, 0u);`]}})}dynoOut(){return new lU(this,"output")}}class WU extends fU{constructor({rgba8:t}){super({inTypes:{rgba8:"vec4"},inputs:{rgba8:t},statements:({inputs:t,outputs:e})=>[`target = ${t.rgba8??"vec4(0.0, 0.0, 0.0, 0.0)"};`]})}dynoOut(){return new lU(this,"rgba8")}}const JU=(t=0,e)=>new tP({key:e,value:t}),jU=(t,e)=>new lP({key:e,value:t});class XU extends fU{constructor({key:t,type:e,count:n,value:i,update:r,globals:s}){t=t??"value",super({outTypes:{[t]:e},update:()=>{if(r){const t=r(this.value);void 0!==t&&(this.value=t)}this.uniform.value=this.value},generate:({inputs:i,outputs:r})=>{const a=(null==s?void 0:s({inputs:i,outputs:r}))??[],o={},l=r[t];return l&&(a.push(`uniform ${xU(l,e,n)};`),o[l]=this.uniform),{globals:a,uniforms:o}}}),this.type=e,this.count=n,this.value=i,this.uniform={value:i},this.outKey=t}dynoOut(){return new lU(this,this.outKey)}}class KU extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"bool",value:e,update:n})}}class ZU extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"uint",value:e,update:n})}}class $U extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"int",value:e,update:n})}}class tP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"float",value:e,update:n})}}class eP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"bvec2",value:e,update:n})}}class nP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"uvec2",value:e,update:n})}}class iP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"ivec2",value:e,update:n})}}class rP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"vec2",value:e,update:n})}}class sP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"bvec3",value:e,update:n})}}class aP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"uvec3",value:e,update:n})}}class oP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"ivec3",value:e,update:n})}}class lP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"vec3",value:e,update:n})}}class cP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"bvec4",value:e,update:n})}}class hP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"uvec4",value:e,update:n})}}class AP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"ivec4",value:e,update:n})}}class uP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"vec4",value:e,update:n})}}class dP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat2",value:e,update:n})}}class pP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat2x2",value:e,update:n})}}class gP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat2x3",value:e,update:n})}}class fP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat2x4",value:e,update:n})}}class mP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat3",value:e,update:n})}}class yP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat3x2",value:e,update:n})}}class vP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat3x3",value:e,update:n})}}class xP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat3x4",value:e,update:n})}}class CP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat4",value:e,update:n})}}class IP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat4x2",value:e,update:n})}}class EP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat4x3",value:e,update:n})}}class wP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat4x4",value:e,update:n})}}class _P extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"usampler2D",value:e,update:n})}}class bP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"isampler2D",value:e,update:n})}}class BP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"sampler2D",value:e,update:n})}}class SP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"usampler2DArray",value:e,update:n})}}class MP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"isampler2DArray",value:e,update:n})}}class TP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"sampler2DArray",value:e,update:n})}}class QP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"usampler3D",value:e,update:n})}}class DP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"isampler3D",value:e,update:n})}}class RP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"sampler3D",value:e,update:n})}}class UP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"usamplerCube",value:e,update:n})}}class PP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"isamplerCube",value:e,update:n})}}class LP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"samplerCube",value:e,update:n})}}class FP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"sampler2DShadow",value:e,update:n})}}class NP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"sampler2DArrayShadow",value:e,update:n})}}class kP extends XU{constructor({key:t,value:e,update:n}){super({key:t,type:"samplerCubeShadow",value:e,update:n})}}const OP=new Float32Array(1),zP=new Uint32Array(OP.buffer),GP="Float16Array"in globalThis,HP=GP?new globalThis.Float16Array(1):null,VP=new Uint16Array(null==HP?void 0:HP.buffer);function qP(t){const e=Math.sqrt(t.reduce((t,e)=>t+e*e,0));return t.map(t=>t/e)}const YP=GP?function(t){return HP[0]=t,VP[0]}:function(t){OP[0]=t;const e=zP[0],n=e>>23&255,i=8388607&e,r=(e>>31&1)<<15;if(255===n)return 0!==i?32767|r:31744|r;const s=n-127+15;return s>=31?31744|r:s<=0?s<-10?r:r|(8388608|i)>>1-s+13:r|s<<10|i>>13},WP=GP?function(t){return VP[0]=t,HP[0]}:function(t){const e=t>>15&1,n=t>>10&31,i=1023&t;let r;if(0===n)if(0===i)r=e<<31;else{let t=i,n=-14;for(;!(1024&t);)t<<=1,n--;t&=1023,r=e<<31|n+127<<23|t<<13}else r=31===n?0===i?e<<31|2139095040:e<<31|2143289344:e<<31|n-15+127<<23|i<<13;return zP[0]=r,OP[0]};function JP(t){return Math.max(0,Math.min(255,Math.round(255*t)))}function jP(t){return Math.max(-127,Math.min(127,Math.round(127*t)))}function XP(t){return t/255}function KP(t){return t/127}function ZP(t){const e=[],n=new Set;return function t(i){i&&"object"==typeof i&&!n.has(i)&&(n.add(i),i instanceof ArrayBuffer?e.push(i):ArrayBuffer.isView(i)?e.push(i.buffer):Array.isArray(i)?i.forEach(t):Object.values(i).forEach(t))}(t),e}class $P{constructor({allocate:t,dispose:e,valid:n}){this.items=[],this.allocate=t,this.dispose=e,this.valid=n}alloc(t){for(;;){const e=this.items.pop();if(!e)break;if(this.valid(e,t))return e;this.dispose&&this.dispose(e)}return this.allocate(t)}free(t){this.items.push(t)}disposeAll(){let t;for(t=this.items.pop();t;)this.dispose&&this.dispose(t),t=this.items.pop()}}function tL(t,e,n,i,r,s,a,o,l,c,h,A,u,d,p,g,f){const m=(null==f?void 0:f.rgbMin)??0,y=((null==f?void 0:f.rgbMax)??1)-m,v=JP((d-m)/y),x=JP((p-m)/y),C=JP((g-m)/y),I=JP(u),E=vL(eL.set(l,c,h,A)),w=255&E,_=E>>>8&255,b=E>>>16&255,B=(null==f?void 0:f.lnScaleMin)??MR,S=254/(((null==f?void 0:f.lnScaleMax)??TR)-B),M=s<RR?0:Math.min(255,Math.max(1,Math.round((Math.log(s)-B)*S)+1)),T=a<RR?0:Math.min(255,Math.max(1,Math.round((Math.log(a)-B)*S)+1)),Q=o<RR?0:Math.min(255,Math.max(1,Math.round((Math.log(o)-B)*S)+1)),D=YP(n),R=YP(i),U=YP(r),P=4*e;t[P]=v|x<<8|C<<16|I<<24,t[P+1]=D|R<<16,t[P+2]=U|w<<16|_<<24,t[P+3]=M|T<<8|Q<<16|b<<24}const eL=new ci,nL={center:new hi,scales:new hi,quaternion:new ci,color:new ls,opacity:0};function iL(t,e,n){const i=nL,r=4*e,s=t[r],a=t[r+1],o=t[r+2],l=t[r+3],c=(null==n?void 0:n.rgbMin)??0,h=((null==n?void 0:n.rgbMax)??1)-c;i.color.set(c+(255&s)/255*h,c+(s>>>8&255)/255*h,c+(s>>>16&255)/255*h),i.opacity=(s>>>24&255)/255,i.center.set(WP(65535&a),WP(a>>>16&65535),WP(65535&o));const A=(null==n?void 0:n.lnScaleMin)??MR,u=(((null==n?void 0:n.lnScaleMax)??TR)-A)/254,d=255&l;i.scales.x=0===d?0:Math.exp(A+(d-1)*u);const p=l>>>8&255;i.scales.y=0===p?0:Math.exp(A+(p-1)*u);const g=l>>>16&255;return i.scales.z=0===g?0:Math.exp(A+(g-1)*u),xL(o>>>16&65535|l>>>8&16711680,i.quaternion),i}function rL(t){const e=UR,n=Math.max(LR,Math.min(PR,Math.ceil(t/e))),i=Math.ceil(t/(e*n));return{width:e,height:n,depth:i,maxSplats:e*n*i}}function sL(){return navigator.maxTouchPoints>0||/Mobi|Android|iPhone|iPad|iPod|Opera Mini|IEMobile/.test(navigator.userAgent)}function aL(){return/Android/.test(navigator.userAgent)}function oL(){return/Oculus/.test(navigator.userAgent)}function lL(t,e,n){const i=new Uint8Array(4*e);for(let r=0;r<n/2;r++){const s=r*e*4,a=(n-1-r)*e*4;i.set(t.subarray(s,s+4*e)),t.set(t.subarray(a,a+4*e),s),t.set(i,a)}return t}function cL(t,e,n){const i=document.createElement("canvas");i.width=e,i.height=n;const r=i.getContext("2d");if(!r)throw new Error("Can't get 2d context");const s=r.createImageData(e,n);return s.data.set(t),r.putImageData(s,0,0),i.toDataURL("image/png")}function hL(t){const e=new vA(t.autoStart);return e.startTime=t.startTime,e.oldTime=t.oldTime,e.elapsedTime=t.elapsedTime,e.running=t.running,e}const AL=IU("\n  precision highp float;\n\n  in vec3 position;\n\n  void main() {\n    gl_Position = vec4(position.xy, 0.0, 1.0);\n  }\n");function uL(t){const e=new hi;for(const n of t)e.add(n);return e.divideScalar(t.length)}function dL(t){if(0===t.length)return new ci;const e=t[0].clone();for(let n=1;n<t.length;n++)t[n].dot(t[0])<0?(e.x-=t[n].x,e.y-=t[n].y,e.z-=t[n].z,e.w-=t[n].w):(e.x+=t[n].x,e.y+=t[n].y,e.z+=t[n].z,e.w+=t[n].w);return e.normalize()}function pL(t,e){const n=new hi(0,0,0).applyMatrix4(t),i=new hi(0,0,0).applyMatrix4(e),r=new hi(0,0,-1).applyMatrix4(t).sub(n).normalize(),s=new hi(0,0,-1).applyMatrix4(e).sub(i).normalize();return{distance:n.distanceTo(i),coincidence:r.dot(s)}}function gL(t,e){const[n,i]=[new hi,new ci],[r,s]=[new hi,new ci];return t.decompose(n,i,new hi),e.decompose(r,s,new hi),{distance:n.distanceTo(r),coorient:Math.abs(i.dot(s))}}function fL({matrix1:t,matrix2:e,maxDistance:n,minCoorient:i}){const{distance:r,coorient:s}=gL(t,e);return r<=n&&(null==i||s>=i)}const mL=new ci,yL=new hi;function vL(t){const e=mL.copy(t).normalize();e.w<0&&e.set(-e.x,-e.y,-e.z,-e.w);const n=2*Math.acos(e.w),i=Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z),r=i<1e-6?yL.set(1,0,0):yL.set(e.x,e.y,e.z).divideScalar(i),s=Math.abs(r.x)+Math.abs(r.y)+Math.abs(r.z);let a=r.x/s,o=r.y/s;if(r.z<0){const t=a;a=(1-Math.abs(o))*(a>=0?1:-1),o=(1-Math.abs(t))*(o>=0?1:-1)}const l=.5*a+.5,c=.5*o+.5,h=Math.round(255*l),A=Math.round(255*c);return Math.round(n*(255/Math.PI))<<16|A<<8|h}function xL(t,e){const n=t>>>16&255;let i=2*((255&t)/255-.5),r=2*((t>>>8&255)/255-.5);const s=1-(Math.abs(i)+Math.abs(r)),a=Math.max(-s,0);i+=i>=0?-a:a,r+=r>=0?-a:a;const o=yL.set(i,r,s).normalize(),l=n/255*Math.PI*.5,c=Math.sin(l),h=Math.cos(l);return e.set(o.x*c,o.y*c,o.z*c,h),e}function CL(t,e,n,i){return 255&Math.max(-127,Math.min(127,127*t))|(255&Math.max(-127,Math.min(127,127*e)))<<8|(255&Math.max(-127,Math.min(127,127*n)))<<16|(255&Math.max(-127,Math.min(127,127*i)))<<24}function IL(t,e){const n=[];let i=0,r=null;const s=new xR((t,s)=>{if(n.push(t),i+=t.length,s||i>=e){const t=new Uint8Array(i);let s=0;for(const e of n)t.set(e,s),s+=e.length;r=t.slice(0,e)}});let a=0;for(;null==r&&a<t.length;){const e=t.slice(a,a+1024);s.push(e,!1),a+=1024}if(null==r&&(s.push(new Uint8Array,!0),null==r))throw new Error("Failed to decompress partial gzip");return r}class EL{constructor({fileBytes:t,chunkBytes:e=65536}){this.fileBytes=t,this.chunkBytes=e,this.chunks=[],this.totalBytes=0;const n=new DecompressionStream("gzip"),i=new Blob([t]).stream().pipeThrough(n);this.reader=i.getReader()}async read(t){for(;this.totalBytes<t;){const{value:t,done:e}=await this.reader.read();if(e)break;this.chunks.push(t),this.totalBytes+=t.length}if(this.totalBytes<t)throw new Error(`Unexpected EOF: needed ${t}, got ${this.totalBytes}`);const e=new Uint8Array(this.totalBytes);let n=0;for(const t of this.chunks)e.set(t,n),n+=t.length;const i=e.subarray(0,t);return this.chunks=[e.subarray(t)],this.totalBytes-=t,i}}const wL=Object.freeze(Object.defineProperty({__proto__:null,DataCache:class{constructor({asyncFetch:t,maxItems:e=5}){this.asyncFetch=t,this.maxItems=e,this.items=[]}async getFetch(t){const e=this.items.findIndex(e=>e.key===t);if(e>=0){const t=this.items.splice(e,1)[0];return this.items.push(t),t.data}const n=await this.asyncFetch(t);for(this.items.push({key:t,data:n});this.items.length>this.maxItems;)this.items.shift();return n}},FreeList:$P,GunzipReader:EL,IDENT_VERTEX_SHADER:AL,Sint8ToFloat:KP,Uint8ToFloat:XP,averagePositions:uL,averageQuaternions:dL,cloneClock:hL,coinciDist:pL,computeMaxSplats:function(t){const e=UR,n=Math.max(LR,Math.min(PR,Math.ceil(t/e)));return e*n*Math.ceil(t/(e*n))},coorientDist:gL,decodeQuatEulerXyz888:function(t,e){const n=(t>>>8&255)/255,i=(t>>>16&255)/255,r=(255&t)/255*(2*Math.PI)-Math.PI,s=n*(2*Math.PI)-Math.PI,a=i*(2*Math.PI)-Math.PI,o=Math.cos(.5*r),l=Math.sin(.5*r),c=Math.cos(.5*s),h=Math.sin(.5*s),A=Math.cos(.5*a),u=Math.sin(.5*a);return e.w=o*c*A+l*h*u,e.x=l*c*A-o*h*u,e.y=o*h*A+l*c*u,e.z=o*c*u-l*h*A,e.normalize(),e},decodeQuatOctXy88R8:xL,decodeQuatXyz888:function(t,e){const n=t<<24>>24,i=t<<16>>24,r=t<<8>>24;e.set(n/127,i/127,r/127,0);const s=e.x*e.x+e.y*e.y+e.z*e.z;return e.w=Math.sqrt(Math.max(0,1-s)),e},decompressPartialGzip:IL,encodeQuatEulerXyz888:function(t){const e=t.clone().normalize(),n=2*(e.w*e.x+e.y*e.z),i=1-2*(e.x*e.x+e.y*e.y),r=Math.atan2(n,i),s=2*(e.w*e.y-e.z*e.x),a=Math.abs(s)>=1?Math.sign(s)*(Math.PI/2):Math.asin(s),o=2*(e.w*e.z+e.x*e.y),l=1-2*(e.y*e.y+e.z*e.z),c=Math.atan2(o,l),h=(r+Math.PI)/(2*Math.PI),A=(a+Math.PI)/(2*Math.PI),u=(c+Math.PI)/(2*Math.PI),d=Math.round(255*h),p=Math.round(255*A);return Math.round(255*u)<<16|p<<8|d},encodeQuatOctXy88R8:vL,encodeQuatXyz888:function(t){const e=t.w<0;return 255&jP(e?-t.x:t.x)|(255&jP(e?-t.y:t.y))<<8|(255&jP(e?-t.z:t.z))<<16},encodeSh1Rgb:function(t,e,n,i){const r=(null==i?void 0:i.sh1Min)??-1,s=(null==i?void 0:i.sh1Max)??1,a=.5*(r+s),o=126/(s-r),l=2*e;for(let e=0;e<9;++e){const i=(n[e]-a)*o,r=127&Math.round(Math.max(-63,Math.min(63,i))),s=7*e,c=s+7,h=Math.floor(s/32),A=s-32*h,u=r<<A&4294967295;if(t[l+h]|=u,c>32*h+32){const e=r>>>32-A&4294967295;t[l+h+1]|=e}}},encodeSh2Rgb:function(t,e,n,i){const r=(null==i?void 0:i.sh2Min)??-1,s=(null==i?void 0:i.sh2Max)??1,a=.5*(r+s),o=2/(s-r);t[4*e+0]=CL((n[0]-a)*o,(n[1]-a)*o,(n[2]-a)*o,(n[3]-a)*o),t[4*e+1]=CL((n[4]-a)*o,(n[5]-a)*o,(n[6]-a)*o,(n[7]-a)*o),t[4*e+2]=CL((n[8]-a)*o,(n[9]-a)*o,(n[10]-a)*o,(n[11]-a)*o),t[4*e+3]=CL((n[12]-a)*o,(n[13]-a)*o,(n[14]-a)*o,0)},encodeSh3Rgb:function(t,e,n,i){const r=(null==i?void 0:i.sh3Min)??-1,s=(null==i?void 0:i.sh3Max)??1,a=.5*(r+s),o=62/(s-r),l=4*e;for(let e=0;e<21;++e){const i=(n[e]-a)*o,r=63&Math.round(Math.max(-31,Math.min(31,i))),s=6*e,c=s+6,h=Math.floor(s/32),A=s-32*h,u=r<<A&4294967295;if(t[l+h]|=u,c>32*h+32){const e=r>>>32-A&4294967295;t[l+h+1]|=e}}},epsilonSign:function(t,e=.001){return Math.abs(t)<e?0:Math.sign(t)},flipPixels:lL,floatBitsToUint:function(t){return OP[0]=t,zP[0]},floatToSint8:jP,floatToUint8:JP,fromHalf:WP,getArrayBuffers:ZP,getTextureSize:rL,isAndroid:aL,isMobile:sL,isOculus:oL,mapFilterObject:function(t,e){const n=Object.entries(t).map(([t,n])=>[t,e(n,t)]).filter(([t,e])=>void 0!==e);return Object.fromEntries(n)},mapObject:function(t,e){const n=Object.entries(t).map(([t,n])=>[t,e(n,t)]);return Object.fromEntries(n)},newArray:function(t,e){return new Array(t).fill(null).map((t,n)=>e(n))},normalize:qP,omitUndefined:function(t){return Object.fromEntries(Object.entries(t).filter(([t,e])=>void 0!==e))},pixelsToPngUrl:cL,setPackedSplat:tL,setPackedSplatCenter:function(t,e,n,i,r){const s=YP(n),a=YP(i),o=YP(r),l=4*e;t[l+1]=s|a<<16,t[l+2]=o|4294901760&t[l+2]},setPackedSplatOpacity:function(t,e,n){const i=JP(n),r=4*e;t[r]=16777215&t[r]|i<<24},setPackedSplatQuat:function(t,e,n,i,r,s){const a=vL(eL.set(n,i,r,s)),o=255&a,l=a>>>8&255,c=a>>>16&255,h=4*e;t[h+2]=65535&t[h+2]|o<<16|l<<24,t[h+3]=16777215&t[h+3]|c<<24},setPackedSplatRgb:function(t,e,n,i,r,s){const a=(null==s?void 0:s.rgbMin)??0,o=((null==s?void 0:s.rgbMax)??1)-a,l=JP((n-a)/o),c=JP((i-a)/o),h=JP((r-a)/o),A=4*e;t[A]=l|c<<8|h<<16|4278190080&t[A]},setPackedSplatRgba:function(t,e,n,i,r,s,a){const o=(null==a?void 0:a.rgbMin)??0,l=((null==a?void 0:a.rgbMax)??1)-o,c=JP((n-o)/l),h=JP((i-o)/l),A=JP((r-o)/l),u=JP(s);t[4*e]=c|h<<8|A<<16|u<<24},setPackedSplatScales:function(t,e,n,i,r,s){const a=(null==s?void 0:s.lnScaleMin)??MR,o=254/(((null==s?void 0:s.lnScaleMax)??TR)-a),l=n<RR?0:Math.min(255,Math.max(1,Math.round((Math.log(n)-a)*o)+1)),c=i<RR?0:Math.min(255,Math.max(1,Math.round((Math.log(i)-a)*o)+1)),h=r<RR?0:Math.min(255,Math.max(1,Math.round((Math.log(r)-a)*o)+1)),A=4*e;t[A+3]=l|c<<8|h<<16|4278190080&t[A+3]},toHalf:YP,uintBitsToFloat:function(t){return zP[0]=t,OP[0]},unpackSplat:iL,withinCoinciDist:function({matrix1:t,matrix2:e,maxDistance:n,minCoincidence:i}){const{distance:r,coincidence:s}=pL(t,e);return r<=n&&(null==i||s>=i)},withinCoorientDist:fL,withinDist:function({matrix1:t,matrix2:e,maxDistance:n}){const i=new hi(0,0,0).applyMatrix4(t),r=new hi(0,0,0).applyMatrix4(e);return i.distanceTo(r)<=n}},Symbol.toStringTag,{value:"Module"}));class _L{constructor({graph:t,inputs:e,outputs:n,template:i}){this.graph=t,this.template=i,this.inputs=e??{},this.outputs=n??{};const r=new gU({indent:this.template.indent});for(const t in this.outputs)this.outputs[t]&&r.declares.add(this.outputs[t]);const s=t.compile({inputs:this.inputs,outputs:this.outputs,compile:r});this.shader=i.generate({globals:r.globals,statements:s}),this.uniforms=r.uniforms,this.updaters=r.updaters}prepareMaterial(){return function(t){let e=BL.get(t);return e||(e=new Vc({glslVersion:Vn,vertexShader:AL,fragmentShader:t.shader,uniforms:t.uniforms}),BL.set(t,e),e)}(this)}update(){for(const t of this.updaters)t()}}class bL{constructor(t){const e=t.match(/^([ \t]*)\{\{\s*GLOBALS\s*\}\}/m),n=t.match(/^([ \t]*)\{\{\s*STATEMENTS\s*\}\}/m);if(!e||!n)throw new Error("Template must contain {{ GLOBALS }} and {{ STATEMENTS }}");this.before=t.substring(0,e.index),this.between=t.substring(e.index+e[0].length,n.index),this.after=t.substring(n.index+n[0].length),this.indent=n[1]}generate({globals:t,statements:e}){return this.before+Array.from(t).join("\n\n")+this.between+e.map(t=>this.indent+t).join("\n")+this.after}}const BL=new Map;function SL(t,e,n="add"){const i=()=>{throw new Error(`Invalid ${n} types: ${t}, ${e}`)};if(t===e)return t;if("int"===t){if(GR(e))return e;i()}if("int"===e){if(GR(t))return t;i()}if("uint"===t){if(HR(e))return e;i()}if("uint"===e){if(HR(t))return t;i()}if("float"===t){if(YR(e))return e;i()}if("float"===e){if(YR(t))return t;i()}throw new Error(`Invalid ${n} types: ${t}, ${e}`)}function ML(t,e){return SL(t,e,"sub")}function TL(t,e){const n=()=>{throw new Error(`Invalid mul types: ${t}, ${e}`)};if("int"===t){if(GR(e))return e;n()}if("int"===e){if(GR(t))return t;n()}if("uint"===t){if(HR(e))return e;n()}if("uint"===e){if(HR(t))return t;n()}if("float"===t){if(YR(e))return e;n()}if("float"===e){if(YR(t))return t;n()}if(GR(t)||HR(t)||GR(e)||HR(e)){if(t===e)return t;n()}if("vec2"===t){if("vec2"===e||XR(e))return"vec2";if("mat3x2"===e)return"vec3";if("mat4x2"===e)return"vec4";n()}if("vec3"===t){if("mat2x3"===e)return"vec2";if("vec3"===e||KR(e))return"vec3";if("mat4x3"===e)return"vec4";n()}if("vec4"===t){if("mat2x4"===e)return"vec2";if("mat3x4"===e)return"vec3";if("vec4"===e||ZR(e))return"vec4";n()}if("vec2"===e){if(XR(t))return"vec2";if("mat2x3"===t)return"vec3";if("mat2x4"===t)return"vec4";n()}if("vec3"===e){if("mat3x2"===t)return"vec2";if(KR(t))return"vec3";if("mat3x4"===t)return"vec4";n()}if("vec4"===e){if("mat4x2"===t)return"vec2";if("mat4x3"===t)return"vec3";if(ZR(t))return"vec4";n()}if(XR(t)){if(XR(e))return"mat2";if("mat3x2"===e)return"mat3x2";if("mat4x2"===e)return"mat4x2";n()}if("mat2x3"===t){if(XR(e))return"mat2x3";if("mat3x2"===e)return"mat3";if("mat4x2"===e)return"mat4x3";n()}if("mat2x4"===t){if(XR(e))return"mat2x4";if("mat3x2"===e)return"mat3x4";if("mat4x2"===e)return"mat4";n()}if("mat3x2"===t){if("mat2x3"===e)return"mat2";if(KR(e))return"mat3x2";if("mat4x3"===e)return"mat4x2";n()}if(KR(t)){if("mat2x3"===e)return"mat2x3";if(KR(e))return"mat3";if("mat4x3"===e)return"mat4x3";n()}if("mat3x4"===t){if("mat2x3"===e)return"mat2x4";if(KR(e))return"mat3x4";if("mat4x3"===e)return"mat4";n()}if("mat4x2"===t){if("mat2x4"===e)return"mat2";if("mat3x4"===e)return"mat3x2";if(ZR(e))return"mat4x2";n()}if("mat4x3"===t){if("mat2x4"===e)return"mat2x3";if("mat3x4"===e)return"mat3";if(ZR(e))return"mat4x3";n()}if(ZR(t)){if("mat2x4"===e)return"mat2x4";if("mat3x4"===e)return"mat3x4";if(ZR(e))return"mat4";n()}throw new Error(`Invalid mul types: ${t}, ${e}`)}function QL(t,e){return SL(t,e,"div")}function DL(t,e){if(t===e)return t;if("int"===t){if(GR(e))return e}else if("int"===e){if(GR(t))return t}else if("uint"===t){if(HR(e))return e}else if("uint"===e&&HR(t))return t;throw new Error(`Invalid imod types: ${t}, ${e}`)}function RL(t,e){if(t===e||"float"===e)return t;throw new Error(`Invalid mod types: ${t}, ${e}`)}function UL(t){return t}function PL(t){return t}function LL(t){return t}function FL(t){return t}function NL(t){return t}function kL(t){return t}function OL(t){return t}function zL(t){return t}function GL(t){return t}function HL(t){return t}function VL(t){return t}function qL(t){return t}function YL(t){return t}function WL(t){return t}function JL(t){return t}function jL(t){return t}function XL(t,e,n="min"){if(t===e)return t;if("float"===e){if(VR(t))return t}else if("int"===e){if(GR(t))return t}else if("uint"===e&&HR(t))return t;throw new Error(`Invalid ${n} types: ${t}, ${e}`)}function KL(t,e){return XL(t,e,"max")}function ZL(t,e,n){if("float"===e){if(VR(t))return t}else if("int"===e){if(GR(t))return t}else if("uint"===e&&HR(t))return t;throw new Error(`Invalid clamp types: ${t}, ${e}`)}function $L(t,e,n){if(n===t)return t;if("float"===n)return t;if("bool"===n&&"float"===t)return t;if("bvec2"===n&&"vec2"===t)return t;if("bvec3"===n&&"vec3"===t)return t;if("bvec4"===n&&"vec4"===t)return t;throw new Error(`Invalid mix types: ${t}, ${e}, ${n}`)}function tF(t,e){if(t===e||"float"===e)return e;throw new Error(`Invalid step types: ${t}, ${e}`)}function eF(t,e,n){if(t===e&&(t===n||"float"===t))return n;throw new Error(`Invalid smoothstep types: ${t}, ${e}, ${n}`)}function nF(t,e="isNan"){if("float"===t)return"bool";if("vec2"===t)return"bvec2";if("vec3"===t)return"bvec3";if("vec4"===t)return"bvec4";throw new Error(`Invalid ${e} types: ${t}`)}function iF(t){return nF(t,"isInf")}const rF=(t,e)=>new pF({a:t,b:e}),sF=(t,e)=>new gF({a:t,b:e}),aF=(t,e)=>new fF({a:t,b:e}),oF=(t,e)=>new mF({a:t,b:e}),lF=(t,e)=>new yF({a:t,b:e}),cF=(t,e)=>new vF({a:t,b:e}),hF=t=>new CF({a:t}),AF=t=>new SF({a:t}),uF=(t,e)=>new NF({a:t,b:e}),dF=(t,e,n)=>new OF({a:t,b:e,t:n});class pF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"sum",outTypeFunc:SL}),this.statements=({inputs:t,outputs:e})=>[`${e.sum} = ${t.a} + ${t.b};`]}}class gF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"difference",outTypeFunc:ML}),this.statements=({inputs:t,outputs:e})=>[`${e.difference} = ${t.a} - ${t.b};`]}}class fF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"product",outTypeFunc:TL}),this.statements=({inputs:t,outputs:e})=>[`${e.product} = ${t.a} * ${t.b};`]}}class mF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"quotient",outTypeFunc:QL}),this.statements=({inputs:t,outputs:e})=>[`${e.quotient} = ${t.a} / ${t.b};`]}}class yF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"remainder",outTypeFunc:DL}),this.statements=({inputs:t,outputs:e})=>[`${e.remainder} = ${t.a} % ${t.b};`]}}class vF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"remainder",outTypeFunc:RL}),this.statements=({inputs:t,outputs:e})=>[`${e.remainder} = mod(${t.a}, ${t.b});`]}}class xF extends fU{constructor({a:t}){const e={a:aU(t)},n=e.a;super({inTypes:e,outTypes:{fract:n,integer:n},inputs:{a:t}}),this.statements=({inputs:t,outputs:e})=>[`${e.fract} = modf(${t.a}, ${e.integer});`]}}class CF extends EU{constructor({a:t}){super({a:t,outKey:"neg",outTypeFunc:UL}),this.statements=({inputs:t,outputs:e})=>[`${e.neg} = -${t.a};`]}}class IF extends EU{constructor({a:t}){super({a:t,outKey:"abs",outTypeFunc:PL}),this.statements=({inputs:t,outputs:e})=>[`${e.abs} = abs(${t.a});`]}}class EF extends EU{constructor({a:t}){super({a:t,outKey:"sign",outTypeFunc:LL}),this.statements=({inputs:t,outputs:e})=>[`${e.sign} = sign(${t.a});`]}}class wF extends EU{constructor({a:t}){super({a:t,outKey:"floor",outTypeFunc:FL}),this.statements=({inputs:t,outputs:e})=>[`${e.floor} = floor(${t.a});`]}}class _F extends EU{constructor({a:t}){super({a:t,outKey:"ceil",outTypeFunc:NL}),this.statements=({inputs:t,outputs:e})=>[`${e.ceil} = ceil(${t.a});`]}}class bF extends EU{constructor({a:t}){super({a:t,outKey:"trunc",outTypeFunc:kL}),this.statements=({inputs:t,outputs:e})=>[`${e.trunc} = trunc(${t.a});`]}}class BF extends EU{constructor({a:t}){super({a:t,outKey:"round",outTypeFunc:OL}),this.statements=({inputs:t,outputs:e})=>[`${e.round} = round(${t.a});`]}}class SF extends EU{constructor({a:t}){super({a:t,outKey:"fract",outTypeFunc:zL}),this.statements=({inputs:t,outputs:e})=>[`${e.fract} = fract(${t.a});`]}}class MF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"power",outTypeFunc:GL}),this.statements=({inputs:t,outputs:e})=>[`${e.power} = pow(${t.a}, ${t.b});`]}}class TF extends EU{constructor({a:t}){super({a:t,outKey:"exp",outTypeFunc:HL}),this.statements=({inputs:t,outputs:e})=>[`${e.exp} = exp(${t.a});`]}}class QF extends EU{constructor({a:t}){super({a:t,outKey:"exp2",outTypeFunc:VL}),this.statements=({inputs:t,outputs:e})=>[`${e.exp2} = exp2(${t.a});`]}}class DF extends EU{constructor({a:t}){super({a:t,outKey:"log",outTypeFunc:qL}),this.statements=({inputs:t,outputs:e})=>[`${e.log} = log(${t.a});`]}}class RF extends EU{constructor({a:t}){super({a:t,outKey:"log2",outTypeFunc:YL}),this.statements=({inputs:t,outputs:e})=>[`${e.log2} = log2(${t.a});`]}}class UF extends EU{constructor({a:t}){super({a:t,outKey:"sqr",outTypeFunc:WL}),this.statements=({inputs:t,outputs:e})=>[`${e.sqr} = ${t.a} * ${t.a};`]}}class PF extends EU{constructor({a:t}){super({a:t,outKey:"sqrt",outTypeFunc:JL}),this.statements=({inputs:t,outputs:e})=>[`${e.sqrt} = sqrt(${t.a});`]}}class LF extends EU{constructor({a:t}){super({a:t,outKey:"inversesqrt",outTypeFunc:jL}),this.statements=({inputs:t,outputs:e})=>[`${e.inversesqrt} = inversesqrt(${t.a});`]}}class FF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"min",outTypeFunc:XL}),this.statements=({inputs:t,outputs:e})=>[`${e.min} = min(${t.a}, ${t.b});`]}}class NF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"max",outTypeFunc:KL}),this.statements=({inputs:t,outputs:e})=>[`${e.max} = max(${t.a}, ${t.b});`]}}class kF extends _U{constructor({a:t,min:e,max:n}){super({a:t,b:e,c:n,outKey:"clamp",outTypeFunc:ZL}),this.statements=({inputs:t,outputs:e})=>{const{a:n,b:i,c:r}=t;return[`${e.clamp} = clamp(${n}, ${i}, ${r});`]}}}class OF extends _U{constructor({a:t,b:e,t:n}){super({a:t,b:e,c:n,outKey:"mix",outTypeFunc:$L}),this.statements=({inputs:t,outputs:e})=>{const{a:n,b:i,c:r}=t;return[`${e.mix} = mix(${n}, ${i}, ${r});`]}}}class zF extends wU{constructor({edge:t,x:e}){super({a:t,b:e,outKey:"step",outTypeFunc:tF}),this.statements=({inputs:t,outputs:e})=>{const{a:n,b:i}=t;return[`${e.step} = step(${n}, ${i});`]}}}class GF extends _U{constructor({edge0:t,edge1:e,x:n}){super({a:t,b:e,c:n,outKey:"smoothstep",outTypeFunc:eF}),this.statements=({inputs:t,outputs:e})=>{const{a:n,b:i,c:r}=t;return[`${e.smoothstep} = smoothstep(${n}, ${i}, ${r});`]}}}class HF extends EU{constructor({a:t}){super({a:t,outKey:"isNan",outTypeFunc:nF}),this.statements=({inputs:t,outputs:e})=>[`${e.isNan} = isNan(${t.a});`]}}class VF extends EU{constructor({a:t}){super({a:t,outKey:"isInf",outTypeFunc:iF}),this.statements=({inputs:t,outputs:e})=>[`${e.isInf} = isInf(${t.a});`]}}const qF=(t,e)=>new tN({a:t,b:e}),YF=(t,e,n)=>new sN({cond:t,t:e,f:n});class WF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>t,outKey:"and"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.and?[`${e.and} = ${t.a} && ${t.b};`]:[`${e.and} = ${t.a} & ${t.b};`]}}class JF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>t,outKey:"or"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.or?[`${e.or} = ${t.a} || ${t.b};`]:[`${e.or} = ${t.a} | ${t.b};`]}}class jF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>t,outKey:"xor"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.xor?[`${e.xor} = ${t.a} ^^ ${t.b};`]:[`${e.xor} = ${t.a} ^ ${t.b};`]}}class XF extends EU{constructor({a:t}){super({a:t,outTypeFunc:t=>t,outKey:"not"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.not?[`${e.not} = !${t.a};`]:[`${e.not} = not(${t.a});`]}}class KF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>aN(t,"lessThan"),outKey:"lessThan"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.lessThan?[`${e.lessThan} = ${t.a} < ${t.b};`]:[`${e.lessThan} = lessThan(${t.a}, ${t.b});`]}}class ZF extends wU{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>aN(t,"lessThanEqual"),outKey:"lessThanEqual"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.lessThanEqual?[`${e.lessThanEqual} = ${t.a} <= ${t.b};`]:[`${e.lessThanEqual} = lessThanEqual(${t.a}, ${t.b});`]}}class $F extends wU{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>aN(t,"greaterThan"),outKey:"greaterThan"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.greaterThan?[`${e.greaterThan} = ${t.a} > ${t.b};`]:[`${e.greaterThan} = greaterThan(${t.a}, ${t.b});`]}}class tN extends wU{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>aN(t,"greaterThanEqual"),outKey:"greaterThanEqual"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.greaterThanEqual?[`${e.greaterThanEqual} = ${t.a} >= ${t.b};`]:[`${e.greaterThanEqual} = greaterThanEqual(${t.a}, ${t.b});`]}}class eN extends wU{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:oN,outKey:"equal"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.equal?[`${e.equal} = ${t.a} == ${t.b};`]:[`${e.equal} = equal(${t.a}, ${t.b});`]}}class nN extends wU{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:lN,outKey:"notEqual"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.notEqual?[`${e.notEqual} = ${t.a} != ${t.b};`]:[`${e.notEqual} = notEqual(${t.a}, ${t.b});`]}}class iN extends EU{constructor({a:t}){super({a:t,outTypeFunc:t=>"bool",outKey:"any"}),this.statements=({inputs:t,outputs:e})=>[`${e.any} = any(${t.a});`]}}class rN extends EU{constructor({a:t}){super({a:t,outTypeFunc:t=>"bool",outKey:"all"}),this.statements=({inputs:t,outputs:e})=>[`${e.all} = all(${t.a});`]}}class sN extends _U{constructor({cond:t,t:e,f:n}){super({a:t,b:e,c:n,outKey:"select",outTypeFunc:(t,e,n)=>e}),this.statements=({inputs:t,outputs:e})=>{const{a:n,b:i,c:r}=t;return[`${e.select} = (${n}) ? (${i}) : (${r});`]}}}function aN(t,e){if(zR(t))return"bool";if("ivec2"===t||"uvec2"===t||"vec2"===t)return"bvec2";if("ivec3"===t||"uvec3"===t||"vec3"===t)return"bvec3";if("ivec4"===t||"uvec4"===t||"vec4"===t)return"bvec4";throw new Error(`Invalid ${e} type: ${t}`)}function oN(t,e="equal"){if(zR(t))return"bool";if(OR(t))return t;if("ivec2"===t||"uvec2"===t||"vec2"===t)return"bvec2";if("ivec3"===t||"uvec3"===t||"vec3"===t)return"bvec3";if("ivec4"===t||"uvec4"===t||"vec4"===t)return"bvec4";throw new Error(`Invalid ${e} type: ${t}`)}function lN(t){return oN(t,"notEqual")}class cN extends EU{constructor({a:t}){const e=function(t){if(OR(t))return"bool";if(GR(t))return"int";if(HR(t))return"uint";throw new Error(`Invalid compXor type: ${t}`)}(aU(t));super({a:t,outTypeFunc:t=>e,outKey:"compXor"}),this.statements=({inputs:t,outputs:n})=>{if(zR(this.outTypes.compXor))return[`${n.compXor} = ${t.a};`];const i=(WR(e)?["x","y"]:JR(e)?["x","y","z"]:["x","y","z","w"]).map(e=>`${t.a}.${e}`),r=OR(e)?"^^":"^";return[`${n.compXor} = ${i.join(` ${r} `)};`]}}}const hN=t=>new IN({value:t}),AN=t=>new DN({value:t}),uN=t=>new RN({value:t}),dN=t=>new UN({value:t}),pN=t=>new NN({value:t}),gN=t=>new kN({value:t}),fN=t=>new YN({value:t}),mN=t=>new JN({value:t});class yN extends EU{constructor({value:t,outType:e,outKey:n}){super({a:t,outTypeFunc:()=>e,outKey:n}),this.statements=({inputs:t,outputs:i})=>[`${i[n]} = ${nU(e)}(${t.a});`]}}class vN extends yN{constructor({value:t}){super({value:t,outType:"bool",outKey:"bool"})}}class xN extends yN{constructor({value:t}){super({value:t,outType:"int",outKey:"int"})}}class CN extends yN{constructor({value:t}){super({value:t,outType:"uint",outKey:"uint"})}}class IN extends yN{constructor({value:t}){super({value:t,outType:"float",outKey:"float"})}}class EN extends yN{constructor({value:t}){super({value:t,outType:"bvec2",outKey:"bvec2"})}}class wN extends yN{constructor({value:t}){super({value:t,outType:"bvec3",outKey:"bvec3"})}}class _N extends yN{constructor({value:t}){super({value:t,outType:"bvec4",outKey:"bvec4"})}}class bN extends yN{constructor({value:t}){super({value:t,outType:"ivec2",outKey:"ivec2"})}}class BN extends yN{constructor({value:t}){super({value:t,outType:"ivec3",outKey:"ivec3"})}}class SN extends yN{constructor({value:t}){super({value:t,outType:"ivec4",outKey:"ivec4"})}}class MN extends yN{constructor({value:t}){super({value:t,outType:"uvec2",outKey:"uvec2"})}}class TN extends yN{constructor({value:t}){super({value:t,outType:"uvec3",outKey:"uvec3"})}}class QN extends yN{constructor({value:t}){super({value:t,outType:"uvec4",outKey:"uvec4"})}}class DN extends yN{constructor({value:t}){super({value:t,outType:"vec2",outKey:"vec2"})}}class RN extends yN{constructor({value:t}){super({value:t,outType:"vec3",outKey:"vec3"})}}class UN extends yN{constructor({value:t}){super({value:t,outType:"vec4",outKey:"vec4"})}}class PN extends yN{constructor({value:t}){super({value:t,outType:"mat2",outKey:"mat2"})}}class LN extends yN{constructor({value:t}){super({value:t,outType:"mat3",outKey:"mat3"})}}class FN extends yN{constructor({value:t}){super({value:t,outType:"mat4",outKey:"mat4"})}}class NN extends EU{constructor({value:t}){super({a:t,outKey:"int",outTypeFunc:()=>"int"}),this.statements=({inputs:t,outputs:e})=>[`${e.int} = floatBitsToInt(${t.a});`]}}class kN extends EU{constructor({value:t}){super({a:t,outKey:"uint",outTypeFunc:()=>"uint"}),this.statements=({inputs:t,outputs:e})=>[`${e.uint} = floatBitsToUint(${t.a});`]}}class ON extends EU{constructor({value:t}){super({a:t,outKey:"float",outTypeFunc:()=>"float"}),this.statements=({inputs:t,outputs:e})=>[`${e.float} = intBitsToFloat(${t.a});`]}}class zN extends EU{constructor({value:t}){super({a:t,outKey:"float",outTypeFunc:()=>"float"}),this.statements=({inputs:t,outputs:e})=>[`${e.float} = uintBitsToFloat(${t.a});`]}}class GN extends EU{constructor({value:t}){super({a:t,outKey:"uint",outTypeFunc:()=>"uint"}),this.statements=({inputs:t,outputs:e})=>[`${e.uint} = packSnorm2x16(${t.a});`]}}class HN extends EU{constructor({value:t}){super({a:t,outKey:"vec2",outTypeFunc:()=>"vec2"}),this.statements=({inputs:t,outputs:e})=>[`${e.vec2} = unpackSnorm2x16(${t.a});`]}}class VN extends EU{constructor({value:t}){super({a:t,outKey:"uint",outTypeFunc:()=>"uint"}),this.statements=({inputs:t,outputs:e})=>[`${e.uint} = packUnorm2x16(${t.a});`]}}class qN extends EU{constructor({value:t}){super({a:t,outKey:"vec2",outTypeFunc:()=>"vec2"}),this.statements=({inputs:t,outputs:e})=>[`${e.vec2} = unpackUnorm2x16(${t.a});`]}}class YN extends EU{constructor({value:t}){super({a:t,outKey:"uint",outTypeFunc:()=>"uint"}),this.statements=({inputs:t,outputs:e})=>[`${e.uint} = packHalf2x16(${t.a});`]}}class WN extends EU{constructor({value:t}){super({a:t,outKey:"vec2",outTypeFunc:()=>"vec2"}),this.statements=({inputs:t,outputs:e})=>[`${e.vec2} = unpackHalf2x16(${t.a});`]}}class JN extends EU{constructor({value:t}){super({a:t,outKey:"rgba8",outTypeFunc:()=>"vec4"}),this.statements=({inputs:t,outputs:e})=>[`uvec4 uRgba = uvec4(${t.a} & 0xffu, (${t.a} >> 8u) & 0xffu, (${t.a} >> 16u) & 0xffu, (${t.a} >> 24u) & 0xffu);`,`${e.rgba8} = vec4(uRgba) / 255.0;`]}}const jN=(t,e)=>new nk({a:t,b:e}),XN=t=>new rk({a:t}),KN=t=>new mk({vector:t}),ZN=({vector:t,vectorType:e,x:n,y:i,z:r,w:s,r:a,g:o,b:l,a:c})=>new yk({vector:t,vectorType:e,x:n,y:i,z:r,w:s,r:a,g:o,b:l,a:c}),$N=(t,e)=>new ak({a:t,b:e});class tk extends EU{constructor({a:t}){super({a:t,outTypeFunc:t=>"float",outKey:"length"}),this.statements=({inputs:t,outputs:e})=>[`${e.length} = length(${t.a});`]}}class ek extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"distance",outTypeFunc:(t,e)=>"float"}),this.statements=({inputs:t,outputs:e})=>[`${e.distance} = distance(${t.a}, ${t.b});`]}}class nk extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"dot",outTypeFunc:(t,e)=>"float"}),this.statements=({inputs:t,outputs:e})=>[`${e.dot} = dot(${t.a}, ${t.b});`]}}class ik extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"cross",outTypeFunc:(t,e)=>"vec3"}),this.statements=({inputs:t,outputs:e})=>[`${e.cross} = cross(${t.a}, ${t.b});`]}}class rk extends EU{constructor({a:t}){super({a:t,outTypeFunc:t=>t,outKey:"normalize"}),this.statements=({inputs:t,outputs:e})=>[`${e.normalize} = normalize(${t.a});`]}}class sk extends EU{constructor({a:t}){super({a:t,outTypeFunc:t=>function(t){if("vec3"===t)return"vec2";if("vec4"===t)return"vec3";throw new Error("Invalid type")}(t),outKey:"projected"}),this.statements=({inputs:t,outputs:e})=>{if("vec3"===this.inTypes.a)return[`${e.projected} = ${t.a}.xy / ${t.a}.z;`];if("vec4"===this.inTypes.a)return[`${e.projected} = ${t.a}.xyz / ${t.a}.w;`];throw new Error("Invalid type")}}}class ak extends wU{constructor({a:t,b:e}){const n=function(t){if("float"===t)return"vec2";if("vec2"===t)return"vec3";if("vec3"===t)return"vec4";throw new Error("Invalid type")}(aU(t));super({a:t,b:e,outKey:"extend",outTypeFunc:()=>n}),this.statements=({inputs:t,outputs:e})=>[`${e.extend} = ${n}(${t.a}, ${t.b});`]}}class ok extends _U{constructor({a:t,b:e,c:n}){super({a:t,b:e,c:n,outKey:"forward",outTypeFunc:(t,e,n)=>t}),this.statements=({inputs:t,outputs:e})=>[`${e.forward} = faceforward(${t.a}, ${t.b}, ${t.c});`]}}class lk extends wU{constructor({incident:t,normal:e}){super({a:t,b:e,outKey:"reflection",outTypeFunc:(t,e)=>t}),this.statements=({inputs:t,outputs:e})=>[`${e.reflection} = reflect(${t.a}, ${t.b});`]}}class ck extends _U{constructor({incident:t,normal:e,eta:n}){super({a:t,b:e,c:n,outKey:"refraction",outTypeFunc:(t,e,n)=>t}),this.statements=({inputs:t,outputs:e})=>[`${e.refraction} = refract(${t.a}, ${t.b}, ${t.c});`]}}class hk extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"product",outTypeFunc:(t,e)=>t}),this.statements=({inputs:n,outputs:i})=>[`${i.product} = matrixCompMult(${t}, ${e});`]}}function Ak(t,e){if("vec2"===t){if("vec2"===e)return"mat2";if("vec3"===e)return"mat3x2";if("vec4"===e)return"mat4x2"}if("vec3"===t){if("vec2"===e)return"mat2x3";if("vec3"===e)return"mat3";if("vec4"===e)return"mat4x3"}if("vec4"===t){if("vec2"===e)return"mat2x4";if("vec3"===e)return"mat3x4";if("vec4"===e)return"mat4"}throw new Error(`Invalid outer type: ${t}, ${e}`)}class uk extends wU{constructor({a:t,b:e}){super({a:t,b:e,outKey:"outer",outTypeFunc:Ak}),this.statements=({inputs:t,outputs:e})=>[`${e.outer} = outerProduct(${t.a}, ${t.b});`]}}function dk(t){if("mat2"===t)return"mat2";if("mat3"===t)return"mat3";if("mat4"===t)return"mat4";if("mat2x2"===t)return"mat2x2";if("mat2x3"===t)return"mat3x2";if("mat2x4"===t)return"mat4x2";if("mat3x2"===t)return"mat2x3";if("mat3x3"===t)return"mat3x3";if("mat3x4"===t)return"mat4x3";if("mat4x2"===t)return"mat2x4";if("mat4x3"===t)return"mat3x4";if("mat4x4"===t)return"mat4x4";throw new Error(`Invalid transpose type: ${t}`)}class pk extends EU{constructor({a:t}){super({a:t,outKey:"transpose",outTypeFunc:dk}),this.statements=({inputs:t,outputs:e})=>[`${e.transpose} = transpose(${t.a});`]}}class gk extends EU{constructor({a:t}){super({a:t,outKey:"det",outTypeFunc:t=>"float"}),this.statements=({inputs:t,outputs:e})=>[`${e.det} = determinant(${t.a});`]}}class fk extends EU{constructor({a:t}){super({a:t,outKey:"inverse",outTypeFunc:t=>t}),this.statements=({inputs:e,outputs:n})=>[`${n.inverse} = inverse(${t});`]}}class mk extends fU{constructor({vector:t}){const e={vector:aU(t)};super({inTypes:e,outTypes:function(t){switch(t){case"vec2":return{x:"float",y:"float",r:"float",g:"float"};case"vec3":return{x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"};case"vec4":return{x:"float",y:"float",z:"float",w:"float",r:"float",g:"float",b:"float",a:"float"};case"ivec2":return{x:"int",y:"int",r:"int",g:"int"};case"ivec3":return{x:"int",y:"int",z:"int",r:"int",g:"int",b:"int"};case"ivec4":return{x:"int",y:"int",z:"int",w:"int",r:"int",g:"int",b:"int",a:"int"};case"uvec2":return{x:"uint",y:"uint",r:"uint",g:"uint"};case"uvec3":return{x:"uint",y:"uint",z:"uint",r:"uint",g:"uint",b:"uint"};case"uvec4":return{x:"uint",y:"uint",z:"uint",w:"uint",r:"uint",g:"uint",b:"uint",a:"uint"};default:throw new Error(`Invalid vector type: ${t}`)}}(e.vector),inputs:{vector:t}}),this.statements=({inputs:t,outputs:e})=>{const{x:n,y:i,z:r,w:s,r:a,g:o,b:l,a:c}=e,{vector:h}=t;return[n?`${n} = ${h}.x;`:null,i?`${i} = ${h}.y;`:null,r?`${r} = ${h}.z;`:null,s?`${s} = ${h}.w;`:null,a?`${a} = ${h}.r;`:null,o?`${o} = ${h}.g;`:null,l?`${l} = ${h}.b;`:null,c?`${c} = ${h}.a;`:null].filter(Boolean)}}}class yk extends fU{constructor({vector:t,vectorType:e,x:n,y:i,z:r,w:s,r:a,g:o,b:l,a:c}){if(!t&&!e)throw new Error("Either vector or vectorType must be provided");const h=e??aU(t),A=$R(h),u=tU(h),d={vector:h,x:A,y:A,r:A,g:A},p={vector:t,x:n,y:i,r:a,g:o};u>=3&&(Object.assign(d,{z:A,b:A}),Object.assign(p,{z:r,b:l})),u>=4&&(Object.assign(d,{w:A,a:A}),Object.assign(p,{w:s,a:c})),super({inTypes:d,outTypes:{vector:h},inputs:p}),this.statements=({inputs:t,outputs:e})=>{const{vector:n}=e,{vector:i,x:r,y:s,z:a,w:o,r:l,g:c,b:h,a:d}=t,p=[`${n}.x = ${r??l??(i?`${i}.x`:dU(A))};`,`${n}.y = ${s??c??(i?`${i}.y`:dU(A))};`];return u>=3&&p.push(`${n}.z = ${a??h??(i?`${i}.z`:dU(A))};`),u>=4&&p.push(`${n}.w = ${o??d??(i?`${i}.w`:dU(A))};`),p}}dynoOut(){return new lU(this,"vector")}}class vk extends EU{constructor({vector:t,select:e}){super({a:t,outKey:"swizzle",outTypeFunc:t=>function(t,e){let n=null;if(VR(t)?n=1===e.length?"float":2===e.length?"vec2":3===e.length?"vec3":4===e.length?"vec4":null:GR(t)?n=1===e.length?"int":2===e.length?"ivec2":3===e.length?"ivec3":4===e.length?"ivec4":null:HR(t)&&(n=1===e.length?"uint":2===e.length?"uvec2":3===e.length?"uvec3":4===e.length?"uvec4":null),null==n)throw new Error(`Invalid swizzle: ${e}`);return n}(t,e)}),this.statements=({inputs:t,outputs:n})=>[`${n.swizzle} = ${t.a}.${e};`]}}const xk=t=>new Qk({value:t}),Ck=t=>new Dk({value:t}),Ik=t=>new Rk({value:t}),Ek=t=>new Uk({value:t}),wk=t=>new Fk({value:t}),_k=t=>new Nk({value:t}),bk=(t,e,n)=>new kk({z:t,zNear:e,zFar:n}).outputs.depth;class Bk extends fU{constructor({from:t,to:e,index:n}){super({inTypes:{from:"int",to:"int",index:"int"},outTypes:{index:"int"},inputs:{from:t,to:e,index:n},statements:({inputs:t,outputs:e})=>[`${e.index} = ${t.index} - ${t.from} + ${t.to};`]})}dynoOut(){return new lU(this,"index")}}class Sk extends fU{constructor({state:t}){const e=aU(t);super({inTypes:{state:e},outTypes:{state:"uint"},inputs:{state:t},globals:()=>[IU("\n          uint pcg_next(uint state) {\n            return state * 747796405u + 2891336453u;\n          }\n        ")],statements:({inputs:t,outputs:n})=>{const i="uint"===e?`${t.state}`:"int"===e?`uint(${t.state})`:`floatBitsToUint(${t.state})`;return[`${n.state} = pcg_next(${i});`]}})}dynoOut(){return new lU(this,"state")}}class Mk extends fU{constructor({state:t}){super({inTypes:{state:"uint"},outTypes:{hash:"uint"},inputs:{state:t},globals:()=>[IU("\n          uint pcg_hash(uint state) {\n            uint hash = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;\n            return (hash >> 22u) ^ hash;\n          }\n        ")],statements:({inputs:t,outputs:e})=>[`${e.hash} = pcg_hash(${t.state});`]})}dynoOut(){return new lU(this,"hash")}}class Tk extends fU{constructor({value:t}){const e=aU(t),n=eU(e);super({inTypes:{value:e},outTypes:{state:"uint"},inputs:{value:t},globals:()=>[IU("\n          uint pcg_mix(uint value) {\n            return value;\n          }\n          uint pcg_mix(uvec2 value) {\n            return value.x + 0x9e3779b9u * value.y;\n          }\n          uint pcg_mix(uvec3 value) {\n            return value.x + 0x9e3779b9u * value.y + 0x85ebca6bu * value.z;\n          }\n          uint pcg_mix(uvec4 value) {\n            return value.x + 0x9e3779b9u * value.y + 0x85ebca6bu * value.z + 0xc2b2ae35u * value.w;\n          }\n        ")],statements:({inputs:t,outputs:i})=>{const r=HR(e)?`${t.value}`:GR(e)?`${n}(${t.value})`:`floatBitsToUint(${t.value})`;return[`${n} bits = ${r};`,`${i.state} = pcg_mix(bits);`]}})}dynoOut(){return new lU(this,"state")}}class Qk extends mU{constructor({value:t}){super({inTypes:{value:aU(t)},outTypes:{hash:"uint"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");let e=new Tk({value:t}).outputs.state;return e=new Sk({state:e}).outputs.state,new Mk({state:e}).outputs}})}dynoOut(){return new lU(this,"hash")}}class Dk extends mU{constructor({value:t}){super({inTypes:{value:aU(t)},outTypes:{hash:"uvec2"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");let e=new Tk({value:t}).outputs.state;e=new Sk({state:e}).outputs.state;const n=new Mk({state:e}).outputs.hash;e=new Sk({state:e}).outputs.state;const i=new Mk({state:e}).outputs.hash;return{hash:ZN({vectorType:"uvec2",x:n,y:i})}}})}dynoOut(){return new lU(this,"hash")}}class Rk extends mU{constructor({value:t}){super({inTypes:{value:aU(t)},outTypes:{hash:"uvec3"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");let e=new Tk({value:t}).outputs.state;e=new Sk({state:e}).outputs.state;const n=new Mk({state:e}).outputs.hash;e=new Sk({state:e}).outputs.state;const i=new Mk({state:e}).outputs.hash;e=new Sk({state:e}).outputs.state;const r=new Mk({state:e}).outputs.hash;return{hash:ZN({vectorType:"uvec3",x:n,y:i,z:r})}}})}dynoOut(){return new lU(this,"hash")}}class Uk extends mU{constructor({value:t}){super({inTypes:{value:aU(t)},outTypes:{hash:"uvec4"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");let e=new Tk({value:t}).outputs.state;e=new Sk({state:e}).outputs.state;const n=new Mk({state:e}).outputs.hash;e=new Sk({state:e}).outputs.state;const i=new Mk({state:e}).outputs.hash;e=new Sk({state:e}).outputs.state;const r=new Mk({state:e}).outputs.hash;e=new Sk({state:e}).outputs.state;const s=new Mk({state:e}).outputs.hash;return{hash:ZN({vectorType:"uvec4",x:n,y:i,z:r,w:s})}}})}dynoOut(){return new lU(this,"hash")}}class Pk extends mU{constructor({value:t}){super({inTypes:{value:aU(t)},outTypes:{hash:"float"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");const e=xk(t);return{hash:aF(hN(e),uU("float",1/2**32))}}})}dynoOut(){return new lU(this,"hash")}}class Lk extends mU{constructor({value:t}){super({inTypes:{value:aU(t)},outTypes:{hash:"vec2"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");const e=Ck(t);return{hash:aF(AN(e),uU("float",1/2**32))}}})}dynoOut(){return new lU(this,"hash")}}class Fk extends mU{constructor({value:t}){super({inTypes:{value:aU(t)},outTypes:{hash:"vec3"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");const e=Ik(t);return{hash:aF(uN(e),uU("float",1/2**32))}}})}dynoOut(){return new lU(this,"hash")}}class Nk extends mU{constructor({value:t}){super({inTypes:{value:aU(t)},outTypes:{hash:"vec4"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");const e=Ek(t);return{hash:aF(dN(e),uU("float",1/2**32))}}})}dynoOut(){return new lU(this,"hash")}}class kk extends fU{constructor({z:t,zNear:e,zFar:n}){super({inTypes:{z:"float",zNear:"float",zFar:"float"},outTypes:{depth:"float"},inputs:{z:t,zNear:e,zFar:n},statements:({inputs:t,outputs:e})=>[`float clamped = clamp(${t.z}, ${t.zNear}, ${t.zFar});`,`${e.depth} = (log2(clamped + 1.0) - log2(${t.zNear} + 1.0)) / (log2(${t.zFar} + 1.0) - log2(${t.zNear} + 1.0));`]})}dynoOut(){return new lU(this,"depth")}}const Ok=(t,{scale:e,scales:n,rotate:i,translate:r})=>new Gk({position:t,scale:e,scales:n,rotate:i,translate:r}).outputs.position,zk=(t,{scale:e,scales:n,rotate:i})=>new Hk({dir:t,scale:e,scales:n,rotate:i}).outputs.dir;class Gk extends fU{constructor({position:t,scale:e,scales:n,rotate:i,translate:r}){super({inTypes:{position:"vec3",scale:"float",scales:"vec3",rotate:"vec4",translate:"vec3"},outTypes:{position:"vec3"},inputs:{position:t,scale:e,scales:n,rotate:i,translate:r},statements:({inputs:t,outputs:e})=>{const{position:n}=e;if(!n)return[];const{scale:i,scales:r,rotate:s,translate:a}=t;return[`${n} = ${t.position??"vec3(0.0, 0.0, 0.0)"};`,i?`${n} *= ${i};`:null,r?`${n} *= ${r};`:null,s?`${n} = quatVec(${s}, ${n});`:null,a?`${n} += ${a};`:null].filter(Boolean)}})}}class Hk extends fU{constructor({dir:t,scale:e,scales:n,rotate:i}){super({inTypes:{dir:"vec3",scale:"float",scales:"vec3",rotate:"vec4"},outTypes:{dir:"vec3"},inputs:{dir:t,scale:e,scales:n,rotate:i},statements:({inputs:t,outputs:e})=>{const{dir:n}=e;if(!n)return[];const{scale:i,scales:r,rotate:s}=t;return[`${n} = ${t.dir??"vec3(0.0, 0.0, 0.0)"};`,i?`${n} *= ${i};`:null,r?`${n} *= ${r};`:null,s?`${n} = quatVec(${s}, ${n});`:null].filter(Boolean)}})}}class Vk extends fU{constructor({quaternion:t,rotate:e}){super({inTypes:{quaternion:"vec4",rotate:"vec4"},outTypes:{quaternion:"vec4"},inputs:{quaternion:t,rotate:e},statements:({inputs:t,outputs:n})=>{const{quaternion:i}=n;return i?[`${i} = ${t.quaternion??"vec4(0.0, 0.0, 0.0, 1.0)"};`,e?`${i} = quatQuat(${t.rotate}, ${i});`:null].filter(Boolean):[]}})}}class qk extends fU{constructor({texture:t,lod:e}){const n=aU(t);super({inTypes:{texture:n,lod:"int"},outTypes:{size:Jk(n)},inputs:{texture:t,lod:e},statements:({inputs:t,outputs:e})=>[`${e.size} = textureSize(${t.texture}, ${t.lod??"0"});`]})}dynoOut(){return new lU(this,"size")}}class Yk extends fU{constructor({texture:t,coord:e,bias:n}){const i=aU(t);super({inTypes:{texture:i,coord:jk(i),bias:"float"},outTypes:{sample:Xk(i)},inputs:{texture:t,coord:e,bias:n},statements:({inputs:t,outputs:e})=>[`${e.sample} = texture(${t.texture}, ${t.coord}${t.bias?`, ${t.bias}`:""});`]})}dynoOut(){return new lU(this,"sample")}}class Wk extends fU{constructor({texture:t,coord:e,lod:n}){const i=aU(t);super({inTypes:{texture:i,coord:Jk(i),lod:"int"},outTypes:{texel:Xk(i)},inputs:{texture:t,coord:e,lod:n},statements:({inputs:t,outputs:e})=>[`${e.texel} = texelFetch(${t.texture}, ${t.coord}, ${t.lod??"0"});`]})}dynoOut(){return new lU(this,"texel")}}function Jk(t){switch(t){case"sampler2D":case"usampler2D":case"isampler2D":case"samplerCube":case"usamplerCube":case"isamplerCube":case"sampler2DShadow":case"samplerCubeShadow":return"ivec2";case"sampler3D":case"usampler3D":case"isampler3D":case"sampler2DArray":case"usampler2DArray":case"isampler2DArray":case"sampler2DArrayShadow":return"ivec3";default:throw new Error(`Invalid texture type: ${t}`)}}function jk(t){switch(t){case"sampler2D":case"usampler2D":case"isampler2D":return"vec2";case"sampler3D":case"usampler3D":case"isampler3D":case"samplerCube":case"usamplerCube":case"isamplerCube":case"sampler2DArray":case"usampler2DArray":case"isampler2DArray":case"sampler2DShadow":return"vec3";case"samplerCubeShadow":case"sampler2DArrayShadow":return"vec4";default:throw new Error(`Invalid texture type: ${t}`)}}function Xk(t){switch(t){case"sampler2D":case"sampler2DArray":case"sampler3D":case"samplerCube":case"sampler2DShadow":return"vec4";case"usampler2D":case"usampler2DArray":case"usampler3D":case"usamplerCube":return"uvec4";case"isampler2D":case"isampler2DArray":case"isampler3D":case"isamplerCube":return"ivec4";case"samplerCubeShadow":case"sampler2DArrayShadow":return"float";default:throw new Error(`Invalid texture type: ${t}`)}}const Kk=t=>new tO({radians:t});class Zk extends EU{constructor({degrees:t}){super({a:t,outTypeFunc:t=>t,outKey:"radians"}),this.statements=({inputs:t,outputs:e})=>[`${e.radians} = radians(${t.a});`]}}class $k extends EU{constructor({radians:t}){super({a:t,outTypeFunc:t=>t,outKey:"degrees"}),this.statements=({inputs:t,outputs:e})=>[`${e.degrees} = degrees(${t.a});`]}}class tO extends EU{constructor({radians:t}){super({a:t,outTypeFunc:t=>t,outKey:"sin"}),this.statements=({inputs:t,outputs:e})=>[`${e.sin} = sin(${t.a});`]}}class eO extends EU{constructor({radians:t}){super({a:t,outTypeFunc:t=>t,outKey:"cos"}),this.statements=({inputs:t,outputs:e})=>[`${e.cos} = cos(${t.a});`]}}class nO extends EU{constructor({radians:t}){super({a:t,outTypeFunc:t=>t,outKey:"tan"}),this.statements=({inputs:t,outputs:e})=>[`${e.tan} = tan(${t.a});`]}}class iO extends EU{constructor({sin:t}){super({a:t,outTypeFunc:t=>t,outKey:"asin"}),this.statements=({inputs:t,outputs:e})=>[`${e.asin} = asin(${t.a});`]}}class rO extends EU{constructor({cos:t}){super({a:t,outTypeFunc:t=>t,outKey:"acos"}),this.statements=({inputs:t,outputs:e})=>[`${e.acos} = acos(${t.a});`]}}class sO extends EU{constructor({tan:t}){super({a:t,outTypeFunc:t=>t,outKey:"atan"}),this.statements=({inputs:t,outputs:e})=>[`${e.atan} = atan(${t.a});`]}}class aO extends wU{constructor({y:t,x:e}){super({a:t,b:e,outTypeFunc:(t,e)=>t,outKey:"atan2"}),this.statements=({inputs:t,outputs:e})=>[`${e.atan2} = atan2(${t.a}, ${t.b});`]}}class oO extends EU{constructor({x:t}){super({a:t,outTypeFunc:t=>t,outKey:"sinh"}),this.statements=({inputs:t,outputs:e})=>[`${e.sinh} = sinh(${t.a});`]}}class lO extends EU{constructor({x:t}){super({a:t,outTypeFunc:t=>t,outKey:"cosh"}),this.statements=({inputs:t,outputs:e})=>[`${e.cosh} = cosh(${t.a});`]}}class cO extends EU{constructor({x:t}){super({a:t,outTypeFunc:t=>t,outKey:"tanh"}),this.statements=({inputs:t,outputs:e})=>[`${e.tanh} = tanh(${t.a});`]}}class hO extends EU{constructor({x:t}){super({a:t,outTypeFunc:t=>t,outKey:"asinh"}),this.statements=({inputs:t,outputs:e})=>[`${e.asinh} = asinh(${t.a});`]}}class AO extends EU{constructor({x:t}){super({a:t,outTypeFunc:t=>t,outKey:"acosh"}),this.statements=({inputs:t,outputs:e})=>[`${e.acosh} = acosh(${t.a});`]}}class uO extends EU{constructor({x:t}){super({a:t,outTypeFunc:t=>t,outKey:"atanh"}),this.statements=({inputs:t,outputs:e})=>[`${e.atanh} = atanh(${t.a});`]}}const dO=Object.freeze(Object.defineProperty({__proto__:null,Abs:IF,Acos:rO,Acosh:AO,Add:pF,All:rN,And:WF,Any:iN,Asin:iO,Asinh:hO,Atan:sO,Atan2:aO,Atanh:uO,BVec2:EN,BVec3:wN,BVec4:_N,BinaryOp:wU,Bool:vN,Ceil:_F,Clamp:kF,Combine:yk,CombineGsplat:zU,CompMult:hk,CompXor:cN,Compilation:gU,Cos:eO,Cosh:lO,Cross:ik,Degrees:$k,Determinant:gk,Distance:ek,Div:mF,Dot:nk,Dyno:fU,DynoBlock:mU,DynoBool:KU,DynoBvec2:eP,DynoBvec3:sP,DynoBvec4:cP,DynoConst:AU,DynoFloat:tP,DynoInt:$U,DynoIsampler2D:bP,DynoIsampler2DArray:MP,DynoIsampler3D:DP,DynoIsamplerCube:PP,DynoIvec2:iP,DynoIvec3:oP,DynoIvec4:AP,DynoLiteral:cU,DynoMat2:dP,DynoMat2x2:pP,DynoMat2x3:gP,DynoMat2x4:fP,DynoMat3:mP,DynoMat3x2:yP,DynoMat3x3:vP,DynoMat3x4:xP,DynoMat4:CP,DynoMat4x2:IP,DynoMat4x3:EP,DynoMat4x4:wP,DynoOutput:lU,DynoProgram:_L,DynoProgramTemplate:bL,DynoRemapIndex:Bk,DynoSampler2D:BP,DynoSampler2DArray:TP,DynoSampler2DArrayShadow:NP,DynoSampler2DShadow:FP,DynoSampler3D:RP,DynoSamplerCube:LP,DynoSamplerCubeShadow:kP,DynoUint:ZU,DynoUniform:XU,DynoUsampler2D:_P,DynoUsampler2DArray:SP,DynoUsampler3D:QP,DynoUsamplerCube:UP,DynoUvec2:nP,DynoUvec3:aP,DynoUvec4:hP,DynoValue:oU,DynoVec2:rP,DynoVec3:lP,DynoVec4:uP,Equal:eN,Exp:TF,Exp2:QF,ExtendVec:ak,FaceForward:ok,Float:IN,FloatBitsToInt:NN,FloatBitsToUint:kN,Floor:wF,Fract:SF,GreaterThan:$F,GreaterThanEqual:tN,Gsplat:bU,GsplatNormal:HU,Hash:Qk,Hash2:Dk,Hash3:Rk,Hash4:Uk,HashFloat:Pk,HashVec2:Lk,HashVec3:Fk,HashVec4:Nk,IMod:yF,IVec2:bN,IVec3:BN,IVec4:SN,Int:xN,IntBitsToFloat:ON,Inverse:fk,InverseSqrt:LF,IsInf:VF,IsNan:HF,Length:tk,LessThan:KF,LessThanEqual:ZF,Log:DF,Log2:RF,Mat2:PN,Mat3:LN,Mat4:FN,Max:NF,Min:FF,Mix:OF,Mod:vF,Modf:xF,Mul:fF,Neg:CF,Normalize:rk,NormalizedDepth:kk,Not:XF,NotEqual:nN,NumPackedSplats:LU,Or:JF,Outer:uk,OutputPackedSplat:YU,OutputRgba8:WU,PackHalf2x16:YN,PackSnorm2x16:GN,PackUnorm2x16:VN,PcgHash:Mk,PcgMix:Tk,PcgNext:Sk,Pow:MF,ProjectH:sk,Radians:Zk,ReadPackedSplat:NU,ReadPackedSplatRange:kU,ReflectVec:lk,RefractVec:ck,Round:BF,Select:sN,Sign:EF,SimpleCast:yN,Sin:tO,Sinh:oO,Smoothstep:GF,Split:mk,SplitGsplat:OU,Sqr:UF,Sqrt:PF,Step:zF,Sub:gF,Swizzle:vk,TPackedSplats:BU,Tan:nO,Tanh:cO,TexelFetch:Wk,Texture:Yk,TextureSize:qk,TransformDir:Hk,TransformGsplat:VU,TransformPosition:Gk,TransformQuaternion:Vk,Transpose:pk,TrinaryOp:_U,Trunc:bF,UVec2:MN,UVec3:TN,UVec4:QN,Uint:CN,UintBitsToFloat:zN,UintToRgba8:JN,UnaryOp:EU,UnpackHalf2x16:WN,UnpackSnorm2x16:HN,UnpackUnorm2x16:qN,Vec2:DN,Vec3:RN,Vec4:UN,Xor:jF,abs:t=>new IF({a:t}),acos:t=>new rO({cos:t}),acosh:t=>new AO({x:t}),add:rF,all:t=>new rN({a:t}),and:(t,e)=>new WF({a:t,b:e}),any:t=>new iN({a:t}),arrayIndex:()=>{throw new Error("Not implemented")},arrayLength:()=>{throw new Error("Not implemented")},asin:t=>new iO({sin:t}),asinh:t=>new hO({x:t}),atan:t=>new sO({tan:t}),atan2:(t,e)=>new aO({y:t,x:e}),atanh:t=>new uO({x:t}),bool:t=>new vN({value:t}),bvec2:t=>new EN({value:t}),bvec3:t=>new wN({value:t}),bvec4:t=>new _N({value:t}),ceil:t=>new _F({a:t}),clamp:(t,e,n)=>new kF({a:t,min:e,max:n}),combine:ZN,combineGsplat:QU,comment:()=>{throw new Error("Not implemented")},compMult:(t,e)=>new hk({a:t,b:e}),compXor:t=>new cN({a:t}),cos:t=>new eO({radians:t}),cosh:t=>new lO({x:t}),cross:(t,e)=>new ik({a:t,b:e}),defineGsplat:UU,defineGsplatNormal:GU,definePackedSplats:PU,degrees:t=>new $k({radians:t}),determinant:t=>new gk({a:t}),distance:(t,e)=>new ek({a:t,b:e}),div:oF,dot:jN,dyno:vU,dynoBlock:yU,dynoBool:(t=!1,e)=>new KU({key:e,value:t}),dynoBvec2:(t,e)=>new eP({key:e,value:t}),dynoBvec3:(t,e)=>new sP({key:e,value:t}),dynoBvec4:(t,e)=>new cP({key:e,value:t}),dynoConst:uU,dynoDeclare:xU,dynoFloat:JU,dynoFor:()=>{throw new Error("Not implemented")},dynoIf:()=>{throw new Error("Not implemented")},dynoInt:(t=0,e)=>new $U({key:e,value:t}),dynoIsampler2D:(t,e)=>new bP({key:e,value:t}),dynoIsampler2DArray:(t,e)=>new MP({key:t,value:e}),dynoIsampler3D:(t,e)=>new DP({key:e,value:t}),dynoIsamplerCube:(t,e)=>new PP({key:e,value:t}),dynoIvec2:(t,e)=>new iP({key:e,value:t}),dynoIvec3:(t,e)=>new oP({key:e,value:t}),dynoIvec4:(t,e)=>new AP({key:e,value:t}),dynoLiteral:hU,dynoMat2:(t,e)=>new dP({key:e,value:t}),dynoMat2x2:(t,e)=>new pP({key:e,value:t}),dynoMat2x3:(t,e)=>new gP({key:e,value:t}),dynoMat2x4:(t,e)=>new fP({key:e,value:t}),dynoMat3:(t,e)=>new mP({key:e,value:t}),dynoMat3x2:(t,e)=>new yP({key:e,value:t}),dynoMat3x3:(t,e)=>new vP({key:e,value:t}),dynoMat3x4:(t,e)=>new xP({key:e,value:t}),dynoMat4:(t,e)=>new CP({key:e,value:t}),dynoMat4x2:(t,e)=>new IP({key:e,value:t}),dynoMat4x3:(t,e)=>new EP({key:e,value:t}),dynoMat4x4:(t,e)=>new wP({key:e,value:t}),dynoSampler2D:(t,e)=>new BP({key:e,value:t}),dynoSampler2DArray:(t,e)=>new TP({key:e,value:t}),dynoSampler2DArrayShadow:(t,e)=>new NP({key:e,value:t}),dynoSampler2DShadow:(t,e)=>new FP({key:e,value:t}),dynoSampler3D:(t,e)=>new RP({key:e,value:t}),dynoSamplerCube:(t,e)=>new LP({key:e,value:t}),dynoSamplerCubeShadow:(t,e)=>new kP({key:e,value:t}),dynoSwitch:()=>{throw new Error("Not implemented")},dynoUint:(t=0,e)=>new ZU({key:e,value:t}),dynoUsampler2D:(t,e)=>new _P({key:e,value:t}),dynoUsampler2DArray:(t,e)=>new SP({key:e,value:t}),dynoUsampler3D:(t,e)=>new QP({key:e,value:t}),dynoUsamplerCube:(t,e)=>new UP({key:e,value:t}),dynoUvec2:(t,e)=>new nP({key:e,value:t}),dynoUvec3:(t,e)=>new aP({key:e,value:t}),dynoUvec4:(t,e)=>new hP({key:e,value:t}),dynoVec2:(t,e)=>new rP({key:e,value:t}),dynoVec3:jU,dynoVec4:(t,e)=>new uP({key:e,value:t}),equal:(t,e)=>new eN({a:t,b:e}),exp:t=>new TF({a:t}),exp2:t=>new QF({a:t}),extendVec:$N,faceforward:(t,e,n)=>new ok({a:t,b:e,c:n}),float:hN,floatBitsToInt:pN,floatBitsToUint:gN,floor:t=>new wF({a:t}),fract:AF,greaterThan:(t,e)=>new $F({a:t,b:e}),greaterThanEqual:qF,gsplatNormal:DU,hash:xk,hash2:Ck,hash3:Ik,hash4:Ek,hashFloat:t=>new Pk({value:t}),hashVec2:t=>new Lk({value:t}),hashVec3:wk,hashVec4:_k,imod:lF,int:t=>new xN({value:t}),intBitsToFloat:t=>new ON({value:t}),inverse:t=>new fk({a:t}),inversesqrt:t=>new LF({a:t}),isAllFloatType:YR,isBoolType:OR,isFloatType:VR,isInf:t=>new VF({a:t}),isIntType:GR,isMat2:XR,isMat3:KR,isMat4:ZR,isMatFloatType:qR,isNan:t=>new HF({a:t}),isScalarType:zR,isUintType:HR,isVector2Type:WR,isVector3Type:JR,isVector4Type:jR,isVectorType:function(t){return WR(t)||JR(t)||jR(t)},ivec2:t=>new bN({value:t}),ivec3:t=>new BN({value:t}),ivec4:t=>new SN({value:t}),length:t=>new tk({a:t}),lessThan:(t,e)=>new KF({a:t,b:e}),lessThanEqual:(t,e)=>new ZF({a:t,b:e}),literalNegOne:function(t){const e=String(t);if(OR(t))return`${e}(true)`;if(YR(t))return`${e}(-1.0)`;if(GR(t))return`${e}(-1)`;if(HR(t))return`${e}(0xFFFFFFFFu)`;throw new Error(`Type not implemented: ${e}`)},literalOne:function(t){const e=String(t);if(OR(t))return`${e}(true)`;if(YR(t))return`${e}(1.0)`;if(GR(t))return`${e}(1)`;if(HR(t))return`${e}(1u)`;throw new Error(`Type not implemented: ${e}`)},literalZero:dU,log:t=>new DF({a:t}),log2:t=>new RF({a:t}),mat2:t=>new PN({value:t}),mat3:t=>new LN({value:t}),mat4:t=>new FN({value:t}),max:uF,min:(t,e)=>new FF({a:t,b:e}),mix:dF,mod:cF,modf:t=>new xF({a:t}).outputs,mul:aF,neg:hF,normalize:XN,normalizedDepth:bk,not:t=>new XF({a:t}),notEqual:(t,e)=>new nN({a:t,b:e}),numPackedSplats:t=>new LU({packedSplats:t}),numberAsFloat:sU,numberAsInt:iU,numberAsUint:rU,or:(t,e)=>new JF({a:t,b:e}),outer:(t,e)=>new uk({a:t,b:e}),outputPackedSplat:qU,outputRgba8:t=>new WU({rgba8:t}),packHalf2x16:fN,packSnorm2x16:t=>new GN({value:t}),packUnorm2x16:t=>new VN({value:t}),pcgHash:t=>new Mk({state:t}),pcgMix:t=>new Tk({value:t}),pcgNext:t=>new Sk({state:t}),pow:(t,e)=>new MF({a:t,b:e}),projectH:t=>new sk({a:t}),radians:t=>new Zk({degrees:t}),readPackedSplat:SU,readPackedSplatRange:MU,reflectVec:(t,e)=>new lk({incident:t,normal:e}),refractVec:(t,e,n)=>new ck({incident:t,normal:e,eta:n}),remapIndex:(t,e,n)=>new Bk({index:t,from:e,to:n}),round:t=>new BF({a:t}),sameSizeIvec:function(t){if(zR(t))return"int";if(WR(t))return"ivec2";if(JR(t))return"ivec3";if(jR(t))return"ivec4";throw new Error(`Invalid vector type: ${t}`)},sameSizeUvec:eU,sameSizeVec:function(t){if(zR(t))return"float";if(WR(t))return"vec2";if(JR(t))return"vec3";if(jR(t))return"vec4";throw new Error(`Invalid vector type: ${t}`)},select:YF,sign:t=>new EF({a:t}),sin:Kk,sinh:t=>new oO({x:t}),smoothstep:(t,e,n)=>new GF({edge0:t,edge1:e,x:n}),split:KN,splitGsplat:TU,sqr:t=>new UF({a:t}),sqrt:t=>new PF({a:t}),step:(t,e)=>new zF({edge:t,x:e}),sub:sF,swizzle:(t,e)=>new vk({vector:t,select:e}),tan:t=>new nO({radians:t}),tanh:t=>new cO({x:t}),texelFetch:(t,e,n)=>new Wk({texture:t,coord:e,lod:n}),texture:(t,e,n)=>new Yk({texture:t,coord:e,bias:n}),textureSize:(t,e)=>new qk({texture:t,lod:e}),transformDir:zk,transformGsplat:RU,transformPos:Ok,transformQuat:(t,{rotate:e})=>new Vk({quaternion:t,rotate:e}).outputs.quaternion,transpose:t=>new pk({a:t}),trunc:t=>new bF({a:t}),typeLiteral:nU,uint:t=>new CN({value:t}),uintBitsToFloat:t=>new zN({value:t}),uintToRgba8:mN,uniform:(t,e,n)=>new XU({key:t,type:e,value:n}),unindent:IU,unindentLines:CU,unpackHalf2x16:t=>new WN({value:t}),unpackSnorm2x16:t=>new HN({value:t}),unpackUnorm2x16:t=>new qN({value:t}),uvec2:t=>new MN({value:t}),uvec3:t=>new TN({value:t}),uvec4:t=>new QN({value:t}),valType:aU,vec2:AN,vec3:uN,vec4:dN,vectorDim:tU,vectorElementType:$R,xor:(t,e)=>new jF({a:t,b:e})},Symbol.toStringTag,{value:"Module"})),pO=class t{constructor({renderer:t}={}){this.renderer=t,this.capacity=0,this.count=0}dispose(){this.target&&(this.target.dispose(),this.target=void 0)}ensureBuffer(t,e){const n=Math.ceil(Math.max(1,t)/UR)*UR*4;if(e.byteLength>=n)return e;const i=new ArrayBuffer(n);return e instanceof ArrayBuffer?i:new(0,e.constructor)(i)}ensureCapacity(t){const{width:e,height:n,depth:i,maxSplats:r}=rL(t);(!this.target||r>this.capacity)&&(this.dispose(),this.capacity=r,this.target=new Oi(e,n,i,{depthBuffer:!1,stencilBuffer:!1,generateMipmaps:!1,magFilter:bt,minFilter:bt}),this.target.texture.format=Kt,this.target.texture.type=Lt,this.target.texture.internalFormat="RGBA8",this.target.scissorTest=!0)}prepareProgramMaterial(e){let n=t.readbackProgram.get(e);if(!n){const i=yU({index:"int"},{rgba8:"vec4"},({index:t})=>(e.inputs.index=t,{rgba8:new WU({rgba8:e.outputs.rgba8})}));t.programTemplate||(t.programTemplate=new bL("precision highp float;\r\nprecision highp int;\r\nprecision highp sampler2D;\r\nprecision highp usampler2D;\r\nprecision highp isampler2D;\r\nprecision highp sampler2DArray;\r\nprecision highp usampler2DArray;\r\nprecision highp isampler2DArray;\r\nprecision highp sampler3D;\r\nprecision highp usampler3D;\r\nprecision highp isampler3D;\n\n#include <splatDefines>\n\nuniform uint targetLayer;\r\nuniform int targetBase;\r\nuniform int targetCount;\n\nout vec4 target;\n\n{{ GLOBALS }}\n\nvoid computeReadback(int index) {\r\n    {{ STATEMENTS }}\r\n}\n\nvoid main() {\r\n    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);\r\n    int index = targetIndex - targetBase;\n\n    if ((index >= 0) && (index < targetCount)) {\r\n        computeReadback(index);\r\n    } else {\r\n        target = vec4(0.0, 0.0, 0.0, 0.0);\r\n    }\r\n}")),n=new _L({graph:i,inputs:{index:"index"},outputs:{rgba8:"target"},template:t.programTemplate}),Object.assign(n.uniforms,{targetLayer:{value:0},targetBase:{value:0},targetCount:{value:0}}),t.readbackProgram.set(e,n)}const i=n.prepareMaterial();return t.fullScreenQuad.material=i,{program:n,material:i}}saveRenderState(t){return{xrEnabled:t.xr.enabled,autoClear:t.autoClear}}resetRenderState(t,e){t.setRenderTarget(null),t.xr.enabled=e.xrEnabled,t.autoClear=e.autoClear}process({count:e,material:n}){const i=this.renderer;if(!i)throw new Error("No renderer");if(!this.target)throw new Error("No target");const r=UR*PR;n.uniforms.targetBase.value=0,n.uniforms.targetCount.value=e;let s=0;for(;s<e;){const a=Math.floor(s/r),o=a*r,l=Math.min(PR,Math.ceil((e-o)/UR));n.uniforms.targetLayer.value=a,this.target.scissor.set(0,0,UR,l),i.setRenderTarget(this.target,a),i.xr.enabled=!1,i.autoClear=!1,t.fullScreenQuad.render(i),s+=UR*l}this.count=e}async read({readback:t}){const e=this.renderer;if(!e)throw new Error("No renderer");if(!this.target)throw new Error("No target");const n=Math.ceil(this.count/UR)*UR;if(t.byteLength<4*n)throw new Error(`Readback buffer too small: ${t.byteLength} < ${4*n}`);const i=new Uint8Array(t instanceof ArrayBuffer?t:t.buffer),r=UR*PR;let s=0;const a=[];for(;s<this.count;){const t=Math.floor(s/r),n=t*r,o=Math.min(PR,Math.ceil((this.count-n)/UR));e.setRenderTarget(this.target,t);const l=UR*o*4,c=i.subarray(4*n,4*n+l),h=null==e?void 0:e.readRenderTargetPixelsAsync(this.target,0,0,UR,o,c);a.push(h),s+=UR*o}return Promise.all(a).then(()=>t)}render({reader:t,count:e,renderer:n}){if(this.renderer=n||this.renderer,!this.renderer)throw new Error("No renderer");this.ensureCapacity(e);const{program:i,material:r}=this.prepareProgramMaterial(t);i.update();const s=this.saveRenderState(this.renderer);this.process({count:e,material:r}),this.resetRenderState(this.renderer,s)}async readback({readback:t}){if(!this.renderer)throw new Error("No renderer");const e=this.saveRenderState(this.renderer),n=this.read({readback:t});return this.resetRenderState(this.renderer,e),n}async renderReadback({reader:t,count:e,renderer:n,readback:i}){if(this.renderer=n||this.renderer,!this.renderer)throw new Error("No renderer");this.ensureCapacity(e);const{program:r,material:s}=this.prepareProgramMaterial(t);r.update();const a=this.saveRenderState(this.renderer);this.process({count:e,material:s});const o=this.read({readback:i});return this.resetRenderState(this.renderer,a),o}getTexture(){var t;return null==(t=this.target)?void 0:t.texture}};pO.programTemplate=null,pO.readbackProgram=new Map,pO.fullScreenQuad=new OD(new Vc({visible:!1}));let gO=pO;const fO=class t{constructor(e={}){this.capacity=0,this.count=0,this.array=null,this.readback=null,this.source=null,this.needsUpdate=!0,this.dyno=new XU({key:"rgbaArray",type:yO,globals:()=>[vO],value:{texture:t.getEmpty(),count:0},update:e=>{var n;return e.texture=(null==(n=this.readback)?void 0:n.getTexture())??this.source??t.getEmpty(),e.count=this.count,e}}),e.array?(this.array=e.array,this.capacity=Math.floor(this.array.length/4),this.capacity=Math.floor(this.capacity/UR)*UR,this.count=Math.min(this.capacity,e.count??Number.POSITIVE_INFINITY)):(this.capacity=e.capacity??0,this.count=0)}dispose(){this.readback&&(this.readback.dispose(),this.readback=null),this.source&&(this.source.dispose(),this.source=null)}ensureCapacity(t){var e;if(!this.array||t>((null==(e=this.array)?void 0:e.length)??0)/4){this.capacity=rL(t).maxSplats;const e=new Uint8Array(4*this.capacity);this.array&&e.set(this.array),this.array=e}return this.array}getTexture(){var e;let n=null==(e=this.readback)?void 0:e.getTexture();return(this.source||this.array)&&(n=this.maybeUpdateSource()),n??t.getEmpty()}maybeUpdateSource(){if(!this.array)throw new Error("No array");if(this.needsUpdate||!this.source){if(this.needsUpdate=!1,this.source){const{width:t,height:e,depth:n}=this.source.image;this.capacity!==t*e*n&&(this.source.dispose(),this.source=null)}if(this.source)this.array.buffer!==this.source.image.data.buffer&&(this.source.image.data=new Uint8Array(this.array.buffer));else{const{width:t,height:e,depth:n}=rL(this.capacity);this.source=new ki(this.array,t,e,n),this.source.format=Kt,this.source.type=Lt,this.source.internalFormat="RGBA8",this.source.needsUpdate=!0}this.source.needsUpdate=!0}return this.source}render({reader:t,count:e,renderer:n}){this.readback||(this.readback=new gO({renderer:n})),this.readback.render({reader:t,count:e,renderer:n}),this.capacity=this.readback.capacity,this.count=this.readback.count}fromPackedSplats({packedSplats:e,base:n,count:i,renderer:r}){const{dynoSplats:s,dynoBase:a,dynoCount:o,reader:l}=t.makeDynos();return s.packedSplats=e,a.value=n,o.value=i,this.render({reader:l,count:i,renderer:r}),this}async read(){if(!this.readback)throw new Error("No readback");return(!this.array||this.array.length<4*this.count)&&(this.array=new Uint8Array(4*this.capacity)),(await this.readback.readback({readback:this.array})).subarray(0,4*this.count)}static getEmpty(){if(!t.emptySource){const e=new Uint8Array(4);t.emptySource=new ki(e,1,1,1),t.emptySource.format=Kt,t.emptySource.type=Lt,t.emptySource.internalFormat="RGBA8",t.emptySource.needsUpdate=!0}return t.emptySource}static makeDynos(){if(!t.dynos){const e=new _z,n=new $U({value:0}),i=new $U({value:0}),r=yU({index:"int"},{rgba8:"vec4"},({index:t})=>{if(!t)throw new Error("index is undefined");t=rF(t,n);const r=MU(e,t,n,i);return{rgba8:TU(r).outputs.rgba}});t.dynos={dynoSplats:e,dynoBase:n,dynoCount:i,reader:r}}return t.dynos}};fO.emptySource=null,fO.dynos=null;let mO=fO;const yO={type:"RgbaArray"},vO=IU("\n  struct RgbaArray {\n    sampler2DArray texture;\n    int count;\n  };\n");var xO=(t=>(t.ALL="all",t.PLANE="plane",t.SPHERE="sphere",t.BOX="box",t.ELLIPSOID="ellipsoid",t.CYLINDER="cylinder",t.CAPSULE="capsule",t.INFINITE_CONE="infinite_cone",t))(xO||{});function CO(t){switch(t){case"all":return 0;case"plane":return 1;case"sphere":return 2;case"box":return 3;case"ellipsoid":return 4;case"cylinder":return 5;case"capsule":return 6;case"infinite_cone":return 7;default:throw new Error(`Unknown SDF type: ${t}`)}}var IO=(t=>(t.MULTIPLY="multiply",t.SET_RGB="set_rgb",t.ADD_RGBA="add_rgba",t))(IO||{});function EO(t){switch(t){case"multiply":return 0;case"set_rgb":return 1;case"add_rgba":return 2;default:throw new Error(`Unknown blend mode: ${t}`)}}class wO extends Hr{constructor(t={}){super();const{type:e,invert:n,opacity:i,color:r,displace:s,radius:a}=t;this.type=e??"sphere",this.invert=n??!1,this.opacity=i??1,this.color=r??new ls(1,1,1),this.displace=s??new hi(0,0,0),this.radius=a??0}}const _O=class t extends Hr{constructor(e={}){const{name:n,rgbaBlendMode:i="multiply",sdfSmooth:r=0,softEdge:s=0,invert:a=!1,sdfs:o=null}=e;super(),this.rgbaBlendMode=i,this.sdfSmooth=r,this.softEdge=s,this.invert=a,this.sdfs=o,this.ordering=t.nextOrdering++,this.name=n??`Edit ${this.ordering}`}addSdf(t){null==this.sdfs&&(this.sdfs=[]),this.sdfs.includes(t)||this.sdfs.push(t)}removeSdf(t){null!=this.sdfs&&(this.sdfs=this.sdfs.filter(e=>e!==t))}};_O.nextOrdering=1;let bO=_O;class BO{constructor({maxSdfs:t,maxEdits:e}){this.maxSdfs=Math.max(16,t??0),this.numSdfs=0,this.sdfData=new Uint32Array(8*this.maxSdfs*4),this.sdfFloatData=new Float32Array(this.sdfData.buffer),this.sdfTexture=this.newSdfTexture(this.sdfData,this.maxSdfs),this.dynoSdfArray=new XU({key:"sdfArray",type:SO,globals:()=>[MO],value:{numSdfs:0,sdfTexture:this.sdfTexture},update:t=>(t.numSdfs=this.numSdfs,t.sdfTexture=this.sdfTexture,t)}),this.maxEdits=Math.max(16,e??0),this.numEdits=0,this.editData=new Uint32Array(4*this.maxEdits),this.editFloatData=new Float32Array(this.editData.buffer),this.dynoNumEdits=new $U({value:0}),this.dynoEdits=this.newEdits(this.editData,this.maxEdits)}newSdfTexture(t,e){const n=new Za(t,8,e,se,zt);return n.internalFormat="RGBA32UI",n.needsUpdate=!0,n}newEdits(t,e){return new XU({key:"edits",type:"uvec4",count:e,globals:()=>[TO],value:t})}ensureCapacity({maxSdfs:t,maxEdits:e}){let n=!1;return t>this.sdfTexture.image.height&&(this.sdfTexture.dispose(),this.maxSdfs=Math.max(2*this.maxSdfs,t),this.sdfData=new Uint32Array(8*this.maxSdfs*4),this.sdfFloatData=new Float32Array(this.sdfData.buffer),this.sdfTexture=this.newSdfTexture(this.sdfData,this.maxSdfs)),e>(this.dynoEdits.count??0)&&(this.maxEdits=Math.max(2*this.maxEdits,e),this.editData=new Uint32Array(4*this.maxEdits),this.editFloatData=new Float32Array(this.editData.buffer),this.dynoEdits=this.newEdits(this.editData,this.maxEdits),n=!0),n}updateEditData(t,e){const n=this.editData[t]!==e;return this.editData[t]=e,n}updateEditFloatData(t,e){QO[0]=e;const n=this.editFloatData[t]!==QO[0];return n&&(this.editFloatData[t]=QO[0]),n}encodeEdit(t,{sdfFirst:e,sdfCount:n,invert:i,rgbaBlendMode:r,softEdge:s,sdfSmooth:a}){const o=4*t;let l=!1;return l=this.updateEditData(o+0,r|(i?256:0))||l,l=this.updateEditData(o+1,e|n<<16)||l,l=this.updateEditFloatData(o+2,s)||l,l=this.updateEditFloatData(o+3,a)||l,l}updateSdfData(t,e){const n=this.sdfData[t]!==e;return this.sdfData[t]=e,n}updateSdfFloatData(t,e){QO[0]=e;const n=this.sdfFloatData[t]!==QO[0];return n&&(this.sdfFloatData[t]=QO[0]),n}encodeSdf(t,{sdfType:e,invert:n,center:i,quaternion:r,scale:s,sizes:a},o){const l=32*t,c=e|(n?256:0);let h=!1;h=this.updateSdfFloatData(l+0,(null==i?void 0:i.x)??0)||h,h=this.updateSdfFloatData(l+1,(null==i?void 0:i.y)??0)||h,h=this.updateSdfFloatData(l+2,(null==i?void 0:i.z)??0)||h,h=this.updateSdfData(l+3,c)||h,h=this.updateSdfFloatData(l+4,(null==r?void 0:r.x)??0)||h,h=this.updateSdfFloatData(l+5,(null==r?void 0:r.y)??0)||h,h=this.updateSdfFloatData(l+6,(null==r?void 0:r.z)??0)||h,h=this.updateSdfFloatData(l+7,(null==r?void 0:r.w)??0)||h,h=this.updateSdfFloatData(l+8,(null==s?void 0:s.x)??0)||h,h=this.updateSdfFloatData(l+9,(null==s?void 0:s.y)??0)||h,h=this.updateSdfFloatData(l+10,(null==s?void 0:s.z)??0)||h,h=this.updateSdfData(l+11,0)||h,h=this.updateSdfFloatData(l+12,(null==a?void 0:a.x)??0)||h,h=this.updateSdfFloatData(l+13,(null==a?void 0:a.y)??0)||h,h=this.updateSdfFloatData(l+14,(null==a?void 0:a.z)??0)||h,h=this.updateSdfFloatData(l+15,(null==a?void 0:a.w)??0)||h;const A=Math.min(4,o.length);for(let t=0;t<A;++t){const e=l+16+4*t;h=this.updateSdfFloatData(e+0,o[t].x)||h,h=this.updateSdfFloatData(e+1,o[t].y)||h,h=this.updateSdfFloatData(e+2,o[t].z)||h,h=this.updateSdfFloatData(e+3,o[t].w)||h}return h}update(t){const e=t.reduce((t,{sdfs:e})=>t+e.length,0),n=this.ensureCapacity({maxEdits:t.length,maxSdfs:e}),i=[new Li,new Li],r=new hi,s=new ci,a=new hi,o=new Li;let l=0,c=n;t.length!==this.dynoNumEdits.value&&(this.dynoNumEdits.value=t.length,this.numEdits=t.length,c=!0);for(const[e,{edit:n,sdfs:h}]of t.entries()){c=this.encodeEdit(e,{sdfFirst:l,sdfCount:h.length,invert:n.invert,rgbaBlendMode:EO(n.rgbaBlendMode),softEdge:n.softEdge,sdfSmooth:n.sdfSmooth})||c;let t=!1;for(const e of h)o.set(e.scale.x,e.scale.y,e.scale.z,e.radius),e.scale.setScalar(1),e.updateMatrixWorld(),e.matrixWorld.clone().invert().decompose(r,s,a),e.scale.set(o.x,o.y,o.z),e.updateMatrixWorld(),i[0].set(e.color.r,e.color.g,e.color.b,e.opacity),i[1].set(e.displace.x,e.displace.y,e.displace.z,1),t=this.encodeSdf(l,{sdfType:CO(e.type),invert:e.invert,center:r,quaternion:s,scale:a,sizes:o},i)||t,l+=1;this.numSdfs=l,t&&(this.sdfTexture.needsUpdate=!0),c||(c=t)}return{updated:c,dynoUpdated:n}}modify(t){return function(t,e,n,i){return new fU({inTypes:{gsplat:bU,sdfArray:SO,numEdits:"int",rgbaDisplaceEdits:"uvec4"},outTypes:{gsplat:bU},globals:()=>[MO,TO],inputs:{gsplat:t,sdfArray:e,numEdits:n,rgbaDisplaceEdits:i},statements:({inputs:t,outputs:e})=>{const{sdfArray:n,numEdits:i,rgbaDisplaceEdits:r}=t,{gsplat:s}=e;return CU(`\n        ${s} = ${t.gsplat};\n        if (isGsplatActive(${s}.flags)) {\n          for (int editIndex = 0; editIndex < ${i}; ++editIndex) {\n            applyPackedRgbaDisplaceEdit(\n              ${r}[editIndex], ${n}.sdfTexture, ${n}.numSdfs,\n              ${s}.center, ${s}.rgba\n            );\n          }\n        }\n      `)}}).outputs.gsplat}(t,this.dynoSdfArray,this.dynoNumEdits,this.dynoEdits)}}const SO={type:"SdfArray"},MO=IU("\n  struct SdfArray {\n    int numSdfs;\n    usampler2D sdfTexture;\n  };\n\n  void unpackSdfArray(\n    usampler2D sdfTexture, int sdfIndex, out uint flags,\n    out vec3 center, out vec4 quaternion, out vec3 scale, out vec4 sizes,\n    int numValues, out vec4 values[4]\n  ) {\n    uvec4 temp = texelFetch(sdfTexture, ivec2(0, sdfIndex), 0);\n    flags = temp.w;\n    center = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));\n\n    temp = texelFetch(sdfTexture, ivec2(1, sdfIndex), 0);\n    quaternion = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));\n\n    temp = texelFetch(sdfTexture, ivec2(2, sdfIndex), 0);\n    scale = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));\n\n    temp = texelFetch(sdfTexture, ivec2(3, sdfIndex), 0);\n    sizes = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));\n\n    for (int i = 0; i < numValues; ++i) {\n      temp = texelFetch(sdfTexture, ivec2(4 + i, sdfIndex), 0);\n      values[i] = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));\n    }\n  }\n\n  const uint SDF_FLAG_TYPE = 0xFFu;\n  const uint SDF_FLAG_INVERT = 1u << 8u;\n\n  const uint SDF_TYPE_ALL = 0u;\n  const uint SDF_TYPE_PLANE = 1u;\n  const uint SDF_TYPE_SPHERE = 2u;\n  const uint SDF_TYPE_BOX = 3u;\n  const uint SDF_TYPE_ELLIPSOID = 4u;\n  const uint SDF_TYPE_CYLINDER = 5u;\n  const uint SDF_TYPE_CAPSULE = 6u;\n  const uint SDF_TYPE_INFINITE_CONE = 7u;\n\n  float evaluateSdfArray(\n    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,\n    float smoothK, int numValues, out vec4 outValues[4]\n  ) {\n    float distanceAccum = (smoothK == 0.0) ? 1.0 / 0.0 : 0.0;\n    float maxExp = -1.0 / 0.0;\n    for (int i = 0; i < numValues; ++i) {\n        outValues[i] = vec4(0.0);\n    }\n\n    uint flags;\n    vec3 center, scale;\n    vec4 quaternion, sizes;\n    vec4 values[4];\n\n    int sdfLast = min(sdfFirst + sdfCount, numSdfs);\n    for (int index = sdfFirst; index < sdfLast; ++index) {\n      unpackSdfArray(sdfTexture, index, flags, center, quaternion, scale, sizes, numValues, values);\n      uint sdfType = flags & SDF_FLAG_TYPE;\n      vec3 sdfPos = quatVec(quaternion, pos * scale) + center;\n\n      float distance;\n      switch (sdfType) {\n        case SDF_TYPE_ALL:\n          distance = -1.0 / 0.0;\n          break;\n        case SDF_TYPE_PLANE: {\n          distance = sdfPos.z;\n          break;\n        }\n        case SDF_TYPE_SPHERE: {\n          distance = length(sdfPos) - sizes.w;\n          break;\n        }\n        case SDF_TYPE_BOX: {\n          vec3 q = abs(sdfPos) - sizes.xyz + sizes.w;\n          distance = length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - sizes.w;\n          break;\n        }\n        case SDF_TYPE_ELLIPSOID: {\n          vec3 sizes = sizes.xyz;\n          float k0 = length(sdfPos / sizes);\n          float k1 = length(sdfPos / dot(sizes, sizes));\n          distance = k0 * (k0 - 1.0) / k1;\n          break;\n        }\n        case SDF_TYPE_CYLINDER: {\n          vec2 d = abs(vec2(length(sdfPos.xz), sdfPos.y)) - sizes.wy;\n          distance = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n          break;\n        }\n        case SDF_TYPE_CAPSULE: {\n          sdfPos.y -= clamp(sdfPos.y, -0.5 * sizes.y, 0.5 * sizes.y);\n          distance = length(sdfPos) - sizes.w;\n          break;\n        }\n        case SDF_TYPE_INFINITE_CONE: {\n          float angle = 0.25 * PI * sizes.w;\n          vec2 c = vec2(sin(angle), cos(angle));\n          vec2 q = vec2(length(sdfPos.xy), -sdfPos.z);\n          float d = length(q - c * max(dot(q, c), 0.0));\n          distance = d * (((q.x * c.y - q.y * c.x) < 0.0) ? -1.0 : 1.0);\n          break;\n        }\n      }\n\n      if ((flags & SDF_FLAG_INVERT) != 0u) {\n        distance = -distance;\n      }\n\n      if (smoothK == 0.0) {\n        if (distance < distanceAccum) {\n          distanceAccum = distance;\n          for (int i = 0; i < numValues; ++i) {\n            outValues[i] = values[i];\n          }\n        }\n      } else {\n        float scaledDistance = -distance / smoothK;\n        if (scaledDistance > maxExp) {\n          float scale = exp(maxExp - scaledDistance);\n          distanceAccum *= scale;\n          for (int i = 0; i < numValues; ++i) {\n            outValues[i] *= scale;\n          }\n          maxExp = scaledDistance;\n        }\n\n        float weight = exp(scaledDistance - maxExp);\n        distanceAccum += weight;\n        for (int i = 0; i < numValues; ++i) {\n          outValues[i] += weight * values[i];\n        }\n      }\n    }\n\n    if (smoothK == 0.0) {\n      return distanceAccum;\n    } else {\n      // Very distant SDFs may result in 0 accumulation\n      if (distanceAccum == 0.0) {\n        return 1.0 / 0.0;\n      }\n      for (int i = 0; i < numValues; ++i) {\n        outValues[i] /= distanceAccum;\n      }\n      return (-log(distanceAccum) - maxExp) * smoothK;\n    }\n  }\n\n  float modulateSdfArray(\n    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,\n    float smoothK, int numValues, out vec4 values[4],\n    float softEdge, bool invert\n  ) {\n    float distance = evaluateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, numValues, values);\n    if (invert) {\n      distance = -distance;\n    }\n\n    return (softEdge == 0.0) ? ((distance < 0.0) ? 1.0 : 0.0)\n      : clamp(-distance / softEdge + 0.5, 0.0, 1.0);\n  }\n"),TO=IU("\n  const uint EDIT_FLAG_BLEND = 0xFFu;\n  const uint EDIT_BLEND_MULTIPLY = 0u;\n  const uint EDIT_BLEND_SET_RGB = 1u;\n  const uint EDIT_BLEND_ADD_RGBA = 2u;\n  const uint EDIT_FLAG_INVERT = 0x100u;\n\n  void decodeEdit(\n    uvec4 packedEdit, out int sdfFirst, out int sdfCount,\n    out bool invert, out uint rgbaBlendMode, out float softEdge, out float sdfSmooth\n  ) {\n    rgbaBlendMode = packedEdit.x & EDIT_FLAG_BLEND;\n    invert = (packedEdit.x & EDIT_FLAG_INVERT) != 0u;\n\n    sdfFirst = int(packedEdit.y & 0xFFFFu);\n    sdfCount = int(packedEdit.y >> 16u);\n\n    softEdge = uintBitsToFloat(packedEdit.z);\n    sdfSmooth = uintBitsToFloat(packedEdit.w);\n  }\n\n  void applyRgbaDisplaceEdit(\n    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, inout vec3 pos,\n    float smoothK, float softEdge, bool invert, uint rgbaBlendMode, inout vec4 rgba\n  ) {\n    vec4 values[4];\n    float modulate = modulateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, 2, values, softEdge, invert);\n    // On Android, moving values[0] is necessary to work around a compiler bug.\n    vec4 sdfRgba = values[0];\n    vec4 sdfDisplaceScale = values[1];\n\n    vec4 target;\n    switch (rgbaBlendMode) {\n      case EDIT_BLEND_MULTIPLY:\n        target = rgba * sdfRgba;\n        break;\n      case EDIT_BLEND_SET_RGB:\n        target = vec4(sdfRgba.rgb, rgba.a * sdfRgba.a);\n        break;\n      case EDIT_BLEND_ADD_RGBA:\n        target = rgba + sdfRgba;\n        break;\n      default:\n        // Debug output if blend mode not set\n        target = vec4(fract(pos), 1.0);\n    }\n    rgba = mix(rgba, target, modulate);\n    pos += sdfDisplaceScale.xyz * modulate;\n  }\n\n  void applyPackedRgbaDisplaceEdit(uvec4 packedEdit, usampler2D sdfTexture, int numSdfs, inout vec3 pos, inout vec4 rgba) {\n    int sdfFirst, sdfCount;\n    bool invert;\n    uint rgbaBlendMode;\n    float softEdge, sdfSmooth;\n    decodeEdit(packedEdit, sdfFirst, sdfCount, invert, rgbaBlendMode, softEdge, sdfSmooth);\n    applyRgbaDisplaceEdit(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, sdfSmooth, softEdge, invert, rgbaBlendMode, rgba);\n  }\n"),QO=new Float32Array(1);class DO{constructor(t){this.modifier=t,this.cache=new Map}apply(t){let e=this.cache.get(t);return e||(e=yU({index:"int"},{gsplat:bU},({index:e})=>{const{gsplat:n}=t.apply({index:e});return this.modifier.apply({gsplat:n})}),this.cache.set(t,e)),e}}class RO{constructor(){this.scale=new tP({value:Number.NEGATIVE_INFINITY}),this.rotate=new uP({value:new ci(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)}),this.translate=new lP({value:new hi(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)})}apply(t){return Ok(t,{scale:this.scale,rotate:this.rotate,translate:this.translate})}applyDir(t){return zk(t,{rotate:this.rotate})}applyGsplat(t){return RU(t,{scale:this.scale,rotate:this.rotate,translate:this.translate})}updateFromMatrix(t){const e=new hi,n=new ci,i=new hi;t.decompose(i,n,e);const r=(e.x+e.y+e.z)/3;let s=!1;return r!==this.scale.value&&(this.scale.value=r,s=!0),i.equals(this.translate.value)||(this.translate.value.copy(i),s=!0),n.equals(this.rotate.value)||(this.rotate.value.copy(n),s=!0),s}update(t){return t.updateMatrixWorld(),this.updateFromMatrix(t.matrixWorld)}}class UO extends Hr{constructor({numSplats:t,generator:e,construct:n,update:i}){if(super(),this.numSplats=t??0,this.generator=e,this.frameUpdate=i,this.version=0,n){const t=n(this);Object.assign(this,t)}}updateVersion(){this.version+=1}set needsUpdate(t){t&&this.updateVersion()}}const PO=class t extends UO{constructor(t={}){const e={transform:new RO,viewToWorld:new RO,worldToView:new RO,viewToObject:new RO,recolor:new uP({value:new Li(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY)}),time:new tP({value:0}),deltaTime:new tP({value:0})};if(super({update:({time:t,deltaTime:e,viewToWorld:n,globalEdits:i})=>this.update({time:t,deltaTime:e,viewToWorld:n,globalEdits:i})}),this.isInitialized=!1,this.recolor=new ls(1,1,1),this.opacity=1,this.enableViewToObject=!1,this.enableViewToWorld=!1,this.enableWorldToView=!1,this.skinning=null,this.edits=null,this.rgbaDisplaceEdits=null,this.splatRgba=null,this.maxSh=3,this.packedSplats=t.packedSplats??new wz,this.packedSplats.splatEncoding=t.splatEncoding??{...Iz},this.numSplats=this.packedSplats.numSplats,this.editable=t.editable??!0,this.onFrame=t.onFrame,this.context=e,this.objectModifier=t.objectModifier,this.worldModifier=t.worldModifier,this.updateGenerator(),t.url||t.fileBytes||t.constructSplats||t.packedSplats&&!t.packedSplats.isInitialized)this.initialized=this.asyncInitialize(t).then(async()=>{if(this.updateGenerator(),this.isInitialized=!0,t.onLoad){const e=t.onLoad(this);e instanceof Promise&&await e}return this});else if(this.isInitialized=!0,this.initialized=Promise.resolve(this),t.onLoad){const e=t.onLoad(this);e instanceof Promise&&(this.initialized=e.then(()=>this))}this.add(function(){const t=new Xs(OO,zO);return t.frustumCulled=!1,t.onBeforeRender=function(t,e){if(!e.isScene)return void this.removeFromParent();let n=!1;e.traverse(t=>{t instanceof Lz&&(n=!0)}),n||e.add(new Lz({renderer:t})),this.removeFromParent()},t}())}async asyncInitialize(t){const{url:e,fileBytes:n,fileType:i,fileName:r,maxSplats:s,constructSplats:a,splatEncoding:o}=t;if(e||n||a){const t={url:e,fileBytes:n,fileType:i,fileName:r,maxSplats:s,construct:a,splatEncoding:o};this.packedSplats.reinitialize(t)}this.packedSplats&&(await this.packedSplats.initialized,this.numSplats=this.packedSplats.numSplats,this.updateGenerator())}static async staticInitialize(){await SR(),t.isStaticInitialized=!0}pushSplat(t,e,n,i,r){this.packedSplats.pushSplat(t,e,n,i,r)}forEachSplat(t){this.packedSplats.forEachSplat(t)}dispose(){this.packedSplats.dispose()}getBoundingBox(t=!0){if(!this.initialized)throw new Error("Cannot get bounding box before SplatMesh is initialized");const e=new hi(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY),n=new hi(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY),i=new hi,r=[-1,1];return this.packedSplats.forEachSplat((s,a,o,l,c,h)=>{if(t)e.min(a),n.max(a);else for(const t of r)for(const s of r)for(const c of r)i.set(t*o.x,s*o.y,c*o.z),i.applyQuaternion(l),i.add(a),e.min(i),n.max(i)}),new Hi(e,n)}constructGenerator(t){const{transform:e,viewToObject:n,recolor:i}=t,r=yU({index:"int"},{gsplat:bU},({index:t})=>{if(!t)throw new Error("index is undefined");let r=SU(this.packedSplats.dyno,t);if(this.maxSh>=1){const{sh1Texture:t,sh2Texture:e,sh3Texture:i}=this.ensureShTextures();if(t){let s=function(t,e){const{x:n,y:i}=KN(e).outputs,r=aF(rF(n,i),uU("float",.5)),s=aF(sF(i,n),uU("float",.5));return rF(r,aF(t,s))};const a=n.translate,{center:o}=TU(r).outputs,l=XN(sF(o,a)),c=function(t,e,n){return vU({inTypes:{gsplat:bU,sh1:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:t,sh1:e,viewDir:n},globals:()=>[UU,FO],statements:({inputs:t,outputs:e})=>CU(`\n        if (isGsplatActive(${t.gsplat}.flags)) {\n          ${e.rgb} = evaluateSH1(${t.gsplat}, ${t.sh1}, ${t.viewDir});\n        } else {\n          ${e.rgb} = vec3(0.0);\n        }\n      `)}).outputs.rgb}(r,t,l);let h=s(c,this.packedSplats.dynoSh1MinMax);if(this.maxSh>=2&&e){const t=function(t,e,n){return vU({inTypes:{gsplat:bU,sh2:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:t,sh2:e,viewDir:n},globals:()=>[UU,NO],statements:({inputs:t,outputs:e})=>CU(`\n        if (isGsplatActive(${t.gsplat}.flags)) {\n          ${e.rgb} = evaluateSH2(${t.gsplat}, ${t.sh2}, ${t.viewDir});\n        } else {\n          ${e.rgb} = vec3(0.0);\n        }\n      `)}).outputs.rgb}(r,e,l);h=rF(h,s(t,this.packedSplats.dynoSh2MinMax))}if(this.maxSh>=3&&i){const t=function(t,e,n){return vU({inTypes:{gsplat:bU,sh3:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:t,sh3:e,viewDir:n},globals:()=>[UU,kO],statements:({inputs:t,outputs:e})=>CU(`\n        if (isGsplatActive(${t.gsplat}.flags)) {\n          ${e.rgb} = evaluateSH3(${t.gsplat}, ${t.sh3}, ${t.viewDir});\n        } else {\n          ${e.rgb} = vec3(0.0);\n        }\n      `)}).outputs.rgb}(r,i,l);h=rF(h,s(t,this.packedSplats.dynoSh3MinMax))}let{rgba:A}=TU(r).outputs;A=rF(A,$N(h,uU("float",0))),r=QU({gsplat:r,rgba:A})}}if(this.splatRgba){const e=function(t,e){return new fU({inTypes:{rgba:yO,index:"int"},outTypes:{rgba:"vec4"},inputs:{rgba:t,index:e},globals:()=>[vO],statements:({inputs:t,outputs:e})=>CU(`\n        if ((index >= 0) && (index < ${t.rgba}.count)) {\n          ${e.rgba} = texelFetch(${t.rgba}.texture, splatTexCoord(index), 0);\n        } else {\n          ${e.rgba} = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n      `)}).outputs.rgba}(this.splatRgba.dyno,t);r=QU({gsplat:r,rgba:e})}this.skinning&&(r=this.skinning.modify(r)),this.objectModifier&&(r=this.objectModifier.apply({gsplat:r}).gsplat),r=e.applyGsplat(r);const s=aF(i,TU(r).outputs.rgba);return r=QU({gsplat:r,rgba:s}),this.rgbaDisplaceEdits&&(r=this.rgbaDisplaceEdits.modify(r)),this.worldModifier&&(r=this.worldModifier.apply({gsplat:r}).gsplat),{gsplat:r}});this.generator=r}updateGenerator(){this.constructGenerator(this.context)}update({time:e,viewToWorld:n,deltaTime:i,globalEdits:r}){var s;this.numSplats=this.packedSplats.numSplats,this.context.time.value=e,this.context.deltaTime.value=i,t.dynoTime.value=e;const{transform:a,viewToObject:o,recolor:l}=this.context;let c=a.update(this);this.context.viewToWorld.updateFromMatrix(n)&&this.enableViewToWorld&&(c=!0);const h=n.clone().invert();this.context.worldToView.updateFromMatrix(h)&&this.enableWorldToView&&(c=!0);const A=(new fr).compose(a.translate.value,a.rotate.value,(new hi).setScalar(a.scale.value)).invert().multiply(n);o.updateFromMatrix(A)&&(this.enableViewToObject||this.packedSplats.extra.sh1)&&(c=!0);const u=new Li(this.recolor.r,this.recolor.g,this.recolor.b,this.opacity);u.equals(l.value)||(l.value.copy(u),c=!0);const d=this.editable?(this.edits??[]).concat(r):[];this.editable&&!this.edits&&this.traverseVisible(t=>{t instanceof bO&&d.push(t)}),d.sort((t,e)=>t.ordering-e.ordering);const p=d.map(t=>{if(null!=t.sdfs)return{edit:t,sdfs:t.sdfs};const e=[];return t.traverseVisible(t=>{t instanceof wO&&e.push(t)}),{edit:t,sdfs:e}});if(p.length>0&&!this.rgbaDisplaceEdits){const t=p.length,e=p.reduce((t,e)=>t+e.sdfs.length,0);this.rgbaDisplaceEdits=new BO({maxEdits:t,maxSdfs:e}),this.updateGenerator()}if(this.rgbaDisplaceEdits){const t=this.rgbaDisplaceEdits.update(p);c||(c=t.updated),t.dynoUpdated&&this.updateGenerator()}c&&this.updateVersion(),null==(s=this.onFrame)||s.call(this,{mesh:this,time:e,deltaTime:i})}raycast(t,e){var n,i;if(!this.packedSplats.packedArray||!this.packedSplats.numSplats)return;const{near:r,far:s,ray:a}=t,o=this.matrixWorld.clone().invert(),l=(new di).setFromMatrix4(o),c=a.origin.clone().applyMatrix4(o),h=a.direction.clone().applyMatrix3(l),A=new hi;o.decompose(new hi,new ci,A),A.x,A.y,A.z;const u=function(t,e,n,i,r,s,a,o,l,c,h,A,u){return _R.raycast_splats(t,e,n,i,r,s,a,o,l,c,!0,A,u)}(c.x,c.y,c.z,h.x,h.y,h.z,r,s,this.packedSplats.numSplats,this.packedSplats.packedArray,0,(null==(n=this.packedSplats.splatEncoding)?void 0:n.lnScaleMin)??MR,(null==(i=this.packedSplats.splatEncoding)?void 0:i.lnScaleMax)??TR);for(const t of u){const n=a.direction.clone().multiplyScalar(t).add(a.origin);e.push({distance:t,point:n,object:this})}}ensureShTextures(){if(!this.packedSplats.extra.sh1)return{};let t=this.packedSplats.extra.sh1Texture;if(!t){let e=this.packedSplats.extra.sh1;const{width:n,height:i,depth:r,maxSplats:s}=rL(e.length/2);if(e.length<2*s){const t=new Uint32Array(2*s);t.set(e),this.packedSplats.extra.sh1=t,e=t}const a=new ki(e,n,i,r);a.format=ie,a.type=zt,a.internalFormat="RG32UI",a.needsUpdate=!0,t=new SP({value:a,key:"sh1"}),this.packedSplats.extra.sh1Texture=t}if(!this.packedSplats.extra.sh2)return{sh1Texture:t};let e=this.packedSplats.extra.sh2Texture;if(!e){let t=this.packedSplats.extra.sh2;const{width:n,height:i,depth:r,maxSplats:s}=rL(t.length/4);if(t.length<4*s){const e=new Uint32Array(4*s);e.set(t),this.packedSplats.extra.sh2=e,t=e}const a=new ki(t,n,i,r);a.format=se,a.type=zt,a.internalFormat="RGBA32UI",a.needsUpdate=!0,e=new SP({value:a,key:"sh2"}),this.packedSplats.extra.sh2Texture=e}if(!this.packedSplats.extra.sh3)return{sh1Texture:t,sh2Texture:e};let n=this.packedSplats.extra.sh3Texture;if(!n){let t=this.packedSplats.extra.sh3;const{width:e,height:i,depth:r,maxSplats:s}=rL(t.length/4);if(t.length<4*s){const e=new Uint32Array(4*s);e.set(t),this.packedSplats.extra.sh3=e,t=e}const a=new ki(t,e,i,r);a.format=se,a.type=zt,a.internalFormat="RGBA32UI",a.needsUpdate=!0,n=new SP({value:a,key:"sh3"}),this.packedSplats.extra.sh3Texture=n}return{sh1Texture:t,sh2Texture:e,sh3Texture:n}}};PO.staticInitialized=PO.staticInitialize(),PO.isStaticInitialized=!1,PO.dynoTime=new tP({value:0});let LO=PO;const FO=IU("\n  vec3 evaluateSH1(Gsplat gsplat, usampler2DArray sh1, vec3 viewDir) {\n    // Extract sint7 values packed into 2 x uint32\n    uvec2 packed = texelFetch(sh1, splatTexCoord(gsplat.index), 0).rg;\n    vec3 sh1_0 = vec3(ivec3(\n      int(packed.x << 25u) >> 25,\n      int(packed.x << 18u) >> 25,\n      int(packed.x << 11u) >> 25\n    )) / 63.0;\n    vec3 sh1_1 = vec3(ivec3(\n      int(packed.x << 4u) >> 25,\n      int((packed.x >> 3u) | (packed.y << 29u)) >> 25,\n      int(packed.y << 22u) >> 25\n    )) / 63.0;\n    vec3 sh1_2 = vec3(ivec3(\n      int(packed.y << 15u) >> 25,\n      int(packed.y << 8u) >> 25,\n      int(packed.y << 1u) >> 25\n    )) / 63.0;\n\n    return sh1_0 * (-0.4886025 * viewDir.y)\n      + sh1_1 * (0.4886025 * viewDir.z)\n      + sh1_2 * (-0.4886025 * viewDir.x);\n  }\n"),NO=IU("\n  vec3 evaluateSH2(Gsplat gsplat, usampler2DArray sh2, vec3 viewDir) {\n    // Extract sint8 values packed into 4 x uint32\n    uvec4 packed = texelFetch(sh2, splatTexCoord(gsplat.index), 0);\n    vec3 sh2_0 = vec3(ivec3(\n      int(packed.x << 24u) >> 24,\n      int(packed.x << 16u) >> 24,\n      int(packed.x << 8u) >> 24\n    )) / 127.0;\n    vec3 sh2_1 = vec3(ivec3(\n      int(packed.x) >> 24,\n      int(packed.y << 24u) >> 24,\n      int(packed.y << 16u) >> 24\n    )) / 127.0;\n    vec3 sh2_2 = vec3(ivec3(\n      int(packed.y << 8u) >> 24,\n      int(packed.y) >> 24,\n      int(packed.z << 24u) >> 24\n    )) / 127.0;\n    vec3 sh2_3 = vec3(ivec3(\n      int(packed.z << 16u) >> 24,\n      int(packed.z << 8u) >> 24,\n      int(packed.z) >> 24\n    )) / 127.0;\n    vec3 sh2_4 = vec3(ivec3(\n      int(packed.w << 24u) >> 24,\n      int(packed.w << 16u) >> 24,\n      int(packed.w << 8u) >> 24\n    )) / 127.0;\n\n    return sh2_0 * (1.0925484 * viewDir.x * viewDir.y)\n      + sh2_1 * (-1.0925484 * viewDir.y * viewDir.z)\n      + sh2_2 * (0.3153915 * (2.0 * viewDir.z * viewDir.z - viewDir.x * viewDir.x - viewDir.y * viewDir.y))\n      + sh2_3 * (-1.0925484 * viewDir.x * viewDir.z)\n      + sh2_4 * (0.5462742 * (viewDir.x * viewDir.x - viewDir.y * viewDir.y));\n  }\n"),kO=IU("\n  vec3 evaluateSH3(Gsplat gsplat, usampler2DArray sh3, vec3 viewDir) {\n    // Extract sint6 values packed into 4 x uint32\n    uvec4 packed = texelFetch(sh3, splatTexCoord(gsplat.index), 0);\n    vec3 sh3_0 = vec3(ivec3(\n      int(packed.x << 26u) >> 26,\n      int(packed.x << 20u) >> 26,\n      int(packed.x << 14u) >> 26\n    )) / 31.0;\n    vec3 sh3_1 = vec3(ivec3(\n      int(packed.x << 8u) >> 26,\n      int(packed.x << 2u) >> 26,\n      int((packed.x >> 4u) | (packed.y << 28u)) >> 26\n    )) / 31.0;\n    vec3 sh3_2 = vec3(ivec3(\n      int(packed.y << 22u) >> 26,\n      int(packed.y << 16u) >> 26,\n      int(packed.y << 10u) >> 26\n    )) / 31.0;\n    vec3 sh3_3 = vec3(ivec3(\n      int(packed.y << 4u) >> 26,\n      int((packed.y >> 2u) | (packed.z << 30u)) >> 26,\n      int(packed.z << 24u) >> 26\n    )) / 31.0;\n    vec3 sh3_4 = vec3(ivec3(\n      int(packed.z << 18u) >> 26,\n      int(packed.z << 12u) >> 26,\n      int(packed.z << 6u) >> 26\n    )) / 31.0;\n    vec3 sh3_5 = vec3(ivec3(\n      int(packed.z) >> 26,\n      int(packed.w << 26u) >> 26,\n      int(packed.w << 20u) >> 26\n    )) / 31.0;\n    vec3 sh3_6 = vec3(ivec3(\n      int(packed.w << 14u) >> 26,\n      int(packed.w << 8u) >> 26,\n      int(packed.w << 2u) >> 26\n    )) / 31.0;\n\n    float xx = viewDir.x * viewDir.x;\n    float yy = viewDir.y * viewDir.y;\n    float zz = viewDir.z * viewDir.z;\n    float xy = viewDir.x * viewDir.y;\n    float yz = viewDir.y * viewDir.z;\n    float zx = viewDir.z * viewDir.x;\n\n    return sh3_0 * (-0.5900436 * viewDir.y * (3.0 * xx - yy))\n      + sh3_1 * (2.8906114 * xy * viewDir.z) +\n      + sh3_2 * (-0.4570458 * viewDir.y * (4.0 * zz - xx - yy))\n      + sh3_3 * (0.3731763 * viewDir.z * (2.0 * zz - 3.0 * xx - 3.0 * yy))\n      + sh3_4 * (-0.4570458 * viewDir.x * (4.0 * zz - xx - yy))\n      + sh3_5 * (1.4453057 * viewDir.z * (xx - yy))\n      + sh3_6 * (-0.5900436 * viewDir.x * (xx - 3.0 * yy));\n  }\n"),OO=new Ns,zO=new ia,GO=["char","uchar","short","ushort","int","uint","float","double"],HO=class t{constructor({fileBytes:t}){this.header="",this.littleEndian=!0,this.elements={},this.comments=[],this.data=null,this.numSplats=0,this.fileBytes=t instanceof ArrayBuffer?new Uint8Array(t):t}async parseHeader(){const t=new ReadableStream({start:t=>{t.enqueue(this.fileBytes.slice(0,65536)),t.close()}}).pipeThrough(new TextDecoderStream).getReader();this.header="";for(;;){const{value:e,done:n}=await t.read();if(n)throw new Error("Failed to read header");this.header+=e;const i=this.header.indexOf("end_header\n");if(i>=0){this.header=this.header.slice(0,i+11);break}}const e=(new TextEncoder).encode(this.header).length;this.data=new DataView(this.fileBytes.buffer,e),this.elements={};let n=null;this.comments=[],this.header.trim().split("\n").forEach((t,e)=>{const i=t.trim();if(0===e){if("ply"!==i)throw new Error("Invalid PLY header");return}if(0===i.length)return;const r=i.split(" ");switch(r[0]){case"format":if("binary_little_endian"===r[1])this.littleEndian=!0;else{if("binary_big_endian"!==r[1])throw new Error(`Unsupported PLY format: ${r[1]}`);this.littleEndian=!1}if("1.0"!==r[2])throw new Error(`Unsupported PLY version: ${r[2]}`);break;case"end_header":break;case"comment":this.comments.push(i.slice(8));break;case"element":{const t=r[1];n={name:t,count:Number.parseInt(r[2]),properties:{}},this.elements[t]=n;break}case"property":if(null==n)throw new Error("Property must be inside an element");"list"===r[1]?n.properties[r[4]]={isList:!0,type:r[3],countType:r[2]}:n.properties[r[2]]={isList:!1,type:r[1]}}}),this.elements.vertex&&(this.numSplats=this.elements.vertex.count)}parseData(t){let e=0;const n=this.data;if(null==n)throw new Error("No data to parse");for(const i in this.elements){const r=this.elements[i],{count:s,properties:a}=r,o=$O(a),l=tz(a,this.littleEndian),c=t(r)??(()=>{});for(let t=0;t<s;t++)e=l(n,e,o),c(t,o)}}parseSplats(e,n){if(null==this.elements.vertex)throw new Error("No vertex element found");let i=!1;const r=[];let s,a,o,l=0,c=[],h=[],A=[];function u(){const t=KO[l];c=new Array(3).fill(null).flatMap((e,n)=>[0,1,2].map((e,i)=>n+i*t/3)),h=new Array(5).fill(null).flatMap((e,n)=>[0,1,2].map((e,i)=>3+n+i*t/3)),A=new Array(7).fill(null).flatMap((e,n)=>[0,1,2].map((e,i)=>8+n+i*t/3)),s=l>=1?new Float32Array(9):void 0,a=l>=2?new Float32Array(15):void 0,o=l>=3?new Float32Array(21):void 0}function d(t,e){if(!s)throw new Error("Missing sh1");const i=e.f_rest;for(let t=0;t<c.length;t++)s[t]=8*i[c[t]]/255-4;if(a)for(let t=0;t<h.length;t++)a[t]=8*i[h[t]]/255-4;if(o)for(let t=0;t<A.length;t++)o[t]=8*i[A[t]]/255-4;null==n||n(t,s,a,o)}this.parseData(p=>{if("chunk"===p.name)return function(t){const{min_x:e,min_y:n,min_z:s,max_x:a,max_y:o,max_z:l,min_scale_x:c,min_scale_y:h,min_scale_z:A,max_scale_x:u,max_scale_y:d,max_scale_z:p}=t.properties;if(!(e&&n&&s&&a&&o&&l&&c&&h&&A&&u&&d&&p))throw new Error("Missing PLY chunk properties");return i=!0,(t,e)=>{const{min_x:n,min_y:i,min_z:s,max_x:a,max_y:o,max_z:l,min_scale_x:c,min_scale_y:h,min_scale_z:A,max_scale_x:u,max_scale_y:d,max_scale_z:p,min_r:g,min_g:f,min_b:m,max_r:y,max_g:v,max_b:x}=e;r.push({min_x:n,min_y:i,min_z:s,max_x:a,max_y:o,max_z:l,min_scale_x:c,min_scale_y:h,min_scale_z:A,max_scale_x:u,max_scale_y:d,max_scale_z:p,min_r:g,min_g:f,min_b:m,max_r:y,max_g:v,max_b:x})}}(p);if(i)return function(t){if(n&&"sh"===t.name)return l=iz(t.properties),u(),d;if("vertex"!==t.name)return null;const{packed_position:i,packed_rotation:s,packed_scale:a,packed_color:o}=t.properties;if(!(i&&s&&a&&o))throw new Error("Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color");const c=Math.sqrt(2);return(t,n)=>{const i=r[t>>>8];if(null==i)throw new Error("Missing PLY chunk");const{min_x:s,min_y:a,min_z:o,max_x:l,max_y:h,max_z:A,min_scale_x:u,min_scale_y:d,min_scale_z:p,max_scale_x:g,max_scale_y:f,max_scale_z:m,min_r:y,min_g:v,min_b:x,max_r:C,max_g:I,max_b:E}=i,{packed_position:w,packed_rotation:_,packed_scale:b,packed_color:B}=n,S=(w>>>21&2047)/2047*(l-s)+s,M=(w>>>11&1023)/1023*(h-a)+a,T=(2047&w)/2047*(A-o)+o,Q=((_>>>20&1023)/1023-.5)*c,D=((_>>>10&1023)/1023-.5)*c,R=((1023&_)/1023-.5)*c,U=Math.sqrt(Math.max(0,1-Q*Q-D*D-R*R)),P=_>>>30,L=0===P?Q:1===P?U:D,F=P<=1?D:2===P?U:R,N=P<=2?R:U,k=0===P?U:Q,O=Math.exp((b>>>21&2047)/2047*(g-u)+u),z=Math.exp((b>>>11&1023)/1023*(f-d)+d),G=Math.exp((2047&b)/2047*(m-p)+p);e(t,S,M,T,O,z,G,L,F,N,k,(255&B)/255,(B>>>24&255)/255*((C??1)-(y??0))+(y??0),(B>>>16&255)/255*((I??1)-(v??0))+(v??0),(B>>>8&255)/255*((E??1)-(x??0))+(x??0))}}(p);if("vertex"!==p.name)return null;const{x:g,y:f,z:m,scale_0:y,scale_1:v,scale_2:x,rot_0:C,rot_1:I,rot_2:E,rot_3:w,opacity:_,f_dc_0:b,f_dc_1:B,f_dc_2:S,red:M,green:T,blue:Q,alpha:D}=p.properties;if(!g||!f||!m)throw new Error("Missing PLY properties: x, y, z");const R=y&&v&&x,U=C&&I&&E&&w,P=null!=D?jO[D.type]:1,L=null!=M?jO[M.type]:1,F=null!=T?jO[T.type]:1,N=null!=Q?jO[Q.type]:1;return l=iz(p.properties),u(),(i,r)=>{const l=R?Math.exp(r.scale_0):t.defaultPointScale,u=R?Math.exp(r.scale_1):t.defaultPointScale,d=R?Math.exp(r.scale_2):t.defaultPointScale,p=U?r.rot_1:0,g=U?r.rot_2:0,f=U?r.rot_3:0,m=U?r.rot_0:1,y=null!=_?1/(1+Math.exp(-r.opacity)):null!=D?r.alpha/P:1,v=null!=b?r.f_dc_0*qO+.5:null!=M?r.red/L:1,x=null!=B?r.f_dc_1*qO+.5:null!=T?r.green/F:1,C=null!=S?r.f_dc_2*qO+.5:null!=Q?r.blue/N:1;if(e(i,r.x,r.y,r.z,l,u,d,p,g,f,m,y,v,x,C),n&&s){const t=r.f_rest;if(s)for(let e=0;e<c.length;e++)s[e]=t[c[e]];if(a)for(let e=0;e<h.length;e++)a[e]=t[h[e]];if(o)for(let e=0;e<A.length;e++)o[e]=t[A[e]];n(i,s,a,o)}}})}injectRgba(t){let e=0;const n=this.data;if(null==n)throw new Error("No parsed data");if(t.length!==4*this.numSplats)throw new Error("Invalid RGBA array length");for(const i in this.elements){const r=this.elements[i],{count:s,properties:a}=r,o=[];let l=0;const c="vertex"===i;if(c)for(const t of["opacity","f_dc_0","f_dc_1","f_dc_2"])if(!a[t]||"float"!==a[t].type)throw new Error(`Can't injectRgba due to property: ${t}`);for(const[i,r]of Object.entries(a))if(r.isList)o.push(()=>{const t=YO[r.countType](n,e,this.littleEndian);e+=JO[r.countType],e+=t*JO[r.type]});else{if(c)if("f_dc_0"===i||"f_dc_1"===i||"f_dc_2"===i){const s=Number.parseInt(i.slice(5));o.push(()=>{const i=(t[l+s]/255-.5)/qO;WO[r.type](n,e,this.littleEndian,i)})}else"opacity"===i&&o.push(()=>{const i=Math.max(-100,Math.min(100,-Math.log(1/(t[l+3]/255)-1)));WO[r.type](n,e,this.littleEndian,i)});o.push(()=>{e+=JO[r.type]})}for(let t=0;t<s;t++){for(const t of o)t();c&&(l+=4)}}}};HO.defaultPointScale=.001;let VO=HO;const qO=.28209479177387814,YO={char:(t,e,n)=>t.getInt8(e),uchar:(t,e,n)=>t.getUint8(e),short:(t,e,n)=>t.getInt16(e,n),ushort:(t,e,n)=>t.getUint16(e,n),int:(t,e,n)=>t.getInt32(e,n),uint:(t,e,n)=>t.getUint32(e,n),float:(t,e,n)=>t.getFloat32(e,n),double:(t,e,n)=>t.getFloat64(e,n)},WO={char:(t,e,n,i)=>{t.setInt8(e,i)},uchar:(t,e,n,i)=>{t.setUint8(e,i)},short:(t,e,n,i)=>{t.setInt16(e,i,n)},ushort:(t,e,n,i)=>{t.setUint16(e,i,n)},int:(t,e,n,i)=>{t.setInt32(e,i,n)},uint:(t,e,n,i)=>{t.setUint32(e,i,n)},float:(t,e,n,i)=>{t.setFloat32(e,i,n)},double:(t,e,n,i)=>{t.setFloat64(e,i,n)}},JO={char:1,uchar:1,short:2,ushort:2,int:4,uint:4,float:4,double:8},jO={char:127,uchar:255,short:32767,ushort:65535,int:2147483647,uint:4294967295,float:1,double:1},XO={0:0,9:1,24:2,45:3},KO={0:0,1:9,2:24,3:45},ZO=/^f_rest_([0-9]{1,2})$/;function $O(t){const e={};for(const[n,i]of Object.entries(t))ZO.test(n)?e.f_rest=new Array(iz(t)):e[n]=i.isList?[]:0;return e}function tz(t,e){return function(t){if(!ez)return!1;for(const[e,n]of Object.entries(t)){if(!nz.test(e))return!1;if(n.isList&&!GO.includes(n.countType))return!1;if(!GO.includes(n.type))return!1}return!0}(t)?function(t,e){const n=["let list;"];for(const[i,r]of Object.entries(t)){const t=i.match(ZO);if(t){const i=+t[1];n.push(`\n        item.f_rest[${i}] = PARSE_FIELD['${r.type}'](data, offset, ${e});\n        offset += ${JO[r.type]};\n      `)}else r.isList?n.push(`\n        list = item['${i}'];\n        list.length = PARSE_FIELD['${r.countType}'](data, offset, ${e});\n        offset += ${JO[r.countType]};\n        for (let i = 0; i < list.length; i++) {\n          list[i] = PARSE_FIELD['${r.type}'](data, offset, ${e});\n          offset += ${JO[r.type]};\n        }\n      `):n.push(`\n        item['${i}'] = PARSE_FIELD['${r.type}'](data, offset, ${e});\n        offset += ${JO[r.type]};\n      `)}n.push("return offset;");const i=new Function("data","offset","item","PARSE_FIELD",n.join("\n"));return(t,e,n)=>i(t,e,n,YO)}(t,e):function(t,e){const n=[];for(const[i,r]of Object.entries(t)){const t=i.match(ZO);if(t){const i=+t[1];n.push((t,n,s)=>(s.f_rest[i]=YO[r.type](t,n,e),n+JO[r.type]))}else r.isList?n.push((t,n,s)=>{const a=s[i];a.length=YO[r.countType](t,n,e);let o=n+JO[r.countType];for(let n=0;n<a.length;n++)a[n]=YO[r.type](t,o,e),o+=JO[r.type];return o}):n.push((t,n,s)=>(s[i]=YO[r.type](t,n,e),n+JO[r.type]))}return(t,e,i)=>{let r=e;for(let e=0;e<n.length;e++)r=n[e](t,r,i);return r}}(t,e)}const ez=(()=>{try{new Function("return 42;")}catch(t){return!1}return!0})(),nz=/^[a-zA-Z0-9_]+$/;function iz(t){let e=0;for(;t[`f_rest_${e}`];)e+=1;const n=XO[e];if(null==n)throw new Error(`Unsupported number of SH coefficients: ${e}`);return n}const rz='(function() {\n  "use strict";\n  let wasm;\n  const cachedTextDecoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-8", { ignoreBOM: true, fatal: true }) : { decode: () => {\n    throw Error("TextDecoder not available");\n  } };\n  if (typeof TextDecoder !== "undefined") {\n    cachedTextDecoder.decode();\n  }\n  let cachedUint8ArrayMemory0 = null;\n  function getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n      cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n  }\n  function getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n  }\n  function sort_splats(num_splats, readback, ordering) {\n    const ret = wasm.sort_splats(num_splats, readback, ordering);\n    return ret >>> 0;\n  }\n  function sort32_splats(num_splats, readback, ordering) {\n    const ret = wasm.sort32_splats(num_splats, readback, ordering);\n    return ret >>> 0;\n  }\n  async function __wbg_load(module, imports) {\n    if (typeof Response === "function" && module instanceof Response) {\n      if (typeof WebAssembly.instantiateStreaming === "function") {\n        try {\n          return await WebAssembly.instantiateStreaming(module, imports);\n        } catch (e) {\n          if (module.headers.get("Content-Type") != "application/wasm") {\n            console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n", e);\n          } else {\n            throw e;\n          }\n        }\n      }\n      const bytes = await module.arrayBuffer();\n      return await WebAssembly.instantiate(bytes, imports);\n    } else {\n      const instance = await WebAssembly.instantiate(module, imports);\n      if (instance instanceof WebAssembly.Instance) {\n        return { instance, module };\n      } else {\n        return instance;\n      }\n    }\n  }\n  function __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_buffer_609cc3eee51ed158 = function(arg0) {\n      const ret = arg0.buffer;\n      return ret;\n    };\n    imports.wbg.__wbg_length_3b4f022188ae8db6 = function(arg0) {\n      const ret = arg0.length;\n      return ret;\n    };\n    imports.wbg.__wbg_length_6ca527665d89694d = function(arg0) {\n      const ret = arg0.length;\n      return ret;\n    };\n    imports.wbg.__wbg_length_8cfd2c6409af88ad = function(arg0) {\n      const ret = arg0.length;\n      return ret;\n    };\n    imports.wbg.__wbg_new_9fee97a409b32b68 = function(arg0) {\n      const ret = new Uint16Array(arg0);\n      return ret;\n    };\n    imports.wbg.__wbg_new_e3b321dcfef89fc7 = function(arg0) {\n      const ret = new Uint32Array(arg0);\n      return ret;\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354 = function(arg0, arg1, arg2) {\n      const ret = new Float32Array(arg0, arg1 >>> 0, arg2 >>> 0);\n      return ret;\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212 = function(arg0, arg1, arg2) {\n      const ret = new Uint32Array(arg0, arg1 >>> 0, arg2 >>> 0);\n      return ret;\n    };\n    imports.wbg.__wbg_newwithlength_5a5efe313cfd59f1 = function(arg0) {\n      const ret = new Float32Array(arg0 >>> 0);\n      return ret;\n    };\n    imports.wbg.__wbg_set_10bad9bee0e9c58b = function(arg0, arg1, arg2) {\n      arg0.set(arg1, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_set_d23661d19148b229 = function(arg0, arg1, arg2) {\n      arg0.set(arg1, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_set_f4f1f0daa30696fc = function(arg0, arg1, arg2) {\n      arg0.set(arg1, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_subarray_3aaeec89bb2544f0 = function(arg0, arg1, arg2) {\n      const ret = arg0.subarray(arg1 >>> 0, arg2 >>> 0);\n      return ret;\n    };\n    imports.wbg.__wbg_subarray_769e1e0f81bb259b = function(arg0, arg1, arg2) {\n      const ret = arg0.subarray(arg1 >>> 0, arg2 >>> 0);\n      return ret;\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n      const table = wasm.__wbindgen_export_0;\n      const offset = table.grow(4);\n      table.set(0, void 0);\n      table.set(offset + 0, void 0);\n      table.set(offset + 1, null);\n      table.set(offset + 2, true);\n      table.set(offset + 3, false);\n    };\n    imports.wbg.__wbindgen_memory = function() {\n      const ret = wasm.memory;\n      return ret;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n      throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    return imports;\n  }\n  function __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedUint8ArrayMemory0 = null;\n    wasm.__wbindgen_start();\n    return wasm;\n  }\n  async function __wbg_init(module_or_path) {\n    if (wasm !== void 0) return wasm;\n    if (typeof module_or_path !== "undefined") {\n      if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n        ({ module_or_path } = module_or_path);\n      } else {\n        console.warn("using deprecated parameters for the initialization function; pass a single object instead");\n      }\n    }\n    if (typeof module_or_path === "undefined") {\n      module_or_path = new URL("data:application/wasm;base64,", self.location.href);\n    }\n    const imports = __wbg_get_imports();\n    if (typeof module_or_path === "string" || typeof Request === "function" && module_or_path instanceof Request || typeof URL === "function" && module_or_path instanceof URL) {\n      module_or_path = fetch(module_or_path);\n    }\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n    return __wbg_finalize_init(instance, module);\n  }\n  var ch2 = {};\n  var wk = function(c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n      c + \';addEventListener("error",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})\'\n    ], { type: "text/javascript" }))));\n    w.onmessage = function(e) {\n      var d = e.data, ed = d.$e$;\n      if (ed) {\n        var err2 = new Error(ed[0]);\n        err2["code"] = ed[1];\n        err2.stack = ed[2];\n        cb(err2, null);\n      } else\n        cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n  };\n  var u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n  var fleb = new u8([\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    2,\n    2,\n    2,\n    2,\n    3,\n    3,\n    3,\n    3,\n    4,\n    4,\n    4,\n    4,\n    5,\n    5,\n    5,\n    5,\n    0,\n    /* unused */\n    0,\n    0,\n    /* impossible */\n    0\n  ]);\n  var fdeb = new u8([\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    2,\n    2,\n    3,\n    3,\n    4,\n    4,\n    5,\n    5,\n    6,\n    6,\n    7,\n    7,\n    8,\n    8,\n    9,\n    9,\n    10,\n    10,\n    11,\n    11,\n    12,\n    12,\n    13,\n    13,\n    /* unused */\n    0,\n    0\n  ]);\n  var clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var freb = function(eb, start) {\n    var b = new u16(31);\n    for (var i2 = 0; i2 < 31; ++i2) {\n      b[i2] = start += 1 << eb[i2 - 1];\n    }\n    var r = new i32(b[30]);\n    for (var i2 = 1; i2 < 30; ++i2) {\n      for (var j = b[i2]; j < b[i2 + 1]; ++j) {\n        r[j] = j - b[i2] << 5 | i2;\n      }\n    }\n    return { b, r };\n  };\n  var _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n  fl[28] = 258, revfl[258] = 28;\n  var _b = freb(fdeb, 0), fd = _b.b;\n  var rev = new u16(32768);\n  for (var i = 0; i < 32768; ++i) {\n    var x = (i & 43690) >> 1 | (i & 21845) << 1;\n    x = (x & 52428) >> 2 | (x & 13107) << 2;\n    x = (x & 61680) >> 4 | (x & 3855) << 4;\n    rev[i] = ((x & 65280) >> 8 | (x & 255) << 8) >> 1;\n  }\n  var hMap = function(cd, mb, r) {\n    var s = cd.length;\n    var i2 = 0;\n    var l = new u16(mb);\n    for (; i2 < s; ++i2) {\n      if (cd[i2])\n        ++l[cd[i2] - 1];\n    }\n    var le = new u16(mb);\n    for (i2 = 1; i2 < mb; ++i2) {\n      le[i2] = le[i2 - 1] + l[i2 - 1] << 1;\n    }\n    var co;\n    if (r) {\n      co = new u16(1 << mb);\n      var rvb = 15 - mb;\n      for (i2 = 0; i2 < s; ++i2) {\n        if (cd[i2]) {\n          var sv = i2 << 4 | cd[i2];\n          var r_1 = mb - cd[i2];\n          var v = le[cd[i2] - 1]++ << r_1;\n          for (var m = v | (1 << r_1) - 1; v <= m; ++v) {\n            co[rev[v] >> rvb] = sv;\n          }\n        }\n      }\n    } else {\n      co = new u16(s);\n      for (i2 = 0; i2 < s; ++i2) {\n        if (cd[i2]) {\n          co[i2] = rev[le[cd[i2] - 1]++] >> 15 - cd[i2];\n        }\n      }\n    }\n    return co;\n  };\n  var flt = new u8(288);\n  for (var i = 0; i < 144; ++i)\n    flt[i] = 8;\n  for (var i = 144; i < 256; ++i)\n    flt[i] = 9;\n  for (var i = 256; i < 280; ++i)\n    flt[i] = 7;\n  for (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n  var fdt = new u8(32);\n  for (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n  var flrm = /* @__PURE__ */ hMap(flt, 9, 1);\n  var fdrm = /* @__PURE__ */ hMap(fdt, 5, 1);\n  var max = function(a) {\n    var m = a[0];\n    for (var i2 = 1; i2 < a.length; ++i2) {\n      if (a[i2] > m)\n        m = a[i2];\n    }\n    return m;\n  };\n  var bits = function(d, p, m) {\n    var o = p / 8 | 0;\n    return (d[o] | d[o + 1] << 8) >> (p & 7) & m;\n  };\n  var bits16 = function(d, p) {\n    var o = p / 8 | 0;\n    return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (p & 7);\n  };\n  var shft = function(p) {\n    return (p + 7) / 8 | 0;\n  };\n  var slc = function(v, s, e) {\n    if (s == null || s < 0)\n      s = 0;\n    if (e == null || e > v.length)\n      e = v.length;\n    return new u8(v.subarray(s, e));\n  };\n  var ec = [\n    "unexpected EOF",\n    "invalid block type",\n    "invalid length/literal",\n    "invalid distance",\n    "stream finished",\n    "no stream handler",\n    ,\n    "no callback",\n    "invalid UTF-8 data",\n    "extra field too long",\n    "date not in range 1980-2099",\n    "filename too long",\n    "stream finishing",\n    "invalid zip data"\n    // determined by unknown compression method\n  ];\n  var err = function(ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(e, err);\n    if (!nt)\n      throw e;\n    return e;\n  };\n  var inflt = function(dat, st, buf, dict) {\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n      return buf || new u8(0);\n    var noBuf = !buf;\n    var resize = noBuf || st.i != 2;\n    var noSt = st.i;\n    if (noBuf)\n      buf = new u8(sl * 3);\n    var cbuf = function(l2) {\n      var bl = buf.length;\n      if (l2 > bl) {\n        var nbuf = new u8(Math.max(bl * 2, l2));\n        nbuf.set(buf);\n        buf = nbuf;\n      }\n    };\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    var tbts = sl * 8;\n    do {\n      if (!lm) {\n        final = bits(dat, pos, 1);\n        var type = bits(dat, pos + 1, 3);\n        pos += 3;\n        if (!type) {\n          var s = shft(pos) + 4, l = dat[s - 4] | dat[s - 3] << 8, t = s + l;\n          if (t > sl) {\n            if (noSt)\n              err(0);\n            break;\n          }\n          if (resize)\n            cbuf(bt + l);\n          buf.set(dat.subarray(s, t), bt);\n          st.b = bt += l, st.p = pos = t * 8, st.f = final;\n          continue;\n        } else if (type == 1)\n          lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n        else if (type == 2) {\n          var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n          var tl = hLit + bits(dat, pos + 5, 31) + 1;\n          pos += 14;\n          var ldt = new u8(tl);\n          var clt = new u8(19);\n          for (var i2 = 0; i2 < hcLen; ++i2) {\n            clt[clim[i2]] = bits(dat, pos + i2 * 3, 7);\n          }\n          pos += hcLen * 3;\n          var clb = max(clt), clbmsk = (1 << clb) - 1;\n          var clm = hMap(clt, clb, 1);\n          for (var i2 = 0; i2 < tl; ) {\n            var r = clm[bits(dat, pos, clbmsk)];\n            pos += r & 15;\n            var s = r >> 4;\n            if (s < 16) {\n              ldt[i2++] = s;\n            } else {\n              var c = 0, n = 0;\n              if (s == 16)\n                n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i2 - 1];\n              else if (s == 17)\n                n = 3 + bits(dat, pos, 7), pos += 3;\n              else if (s == 18)\n                n = 11 + bits(dat, pos, 127), pos += 7;\n              while (n--)\n                ldt[i2++] = c;\n            }\n          }\n          var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n          lbt = max(lt);\n          dbt = max(dt);\n          lm = hMap(lt, lbt, 1);\n          dm = hMap(dt, dbt, 1);\n        } else\n          err(1);\n        if (pos > tbts) {\n          if (noSt)\n            err(0);\n          break;\n        }\n      }\n      if (resize)\n        cbuf(bt + 131072);\n      var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n      var lpos = pos;\n      for (; ; lpos = pos) {\n        var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n        pos += c & 15;\n        if (pos > tbts) {\n          if (noSt)\n            err(0);\n          break;\n        }\n        if (!c)\n          err(2);\n        if (sym < 256)\n          buf[bt++] = sym;\n        else if (sym == 256) {\n          lpos = pos, lm = null;\n          break;\n        } else {\n          var add = sym - 254;\n          if (sym > 264) {\n            var i2 = sym - 257, b = fleb[i2];\n            add = bits(dat, pos, (1 << b) - 1) + fl[i2];\n            pos += b;\n          }\n          var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n          if (!d)\n            err(3);\n          pos += d & 15;\n          var dt = fd[dsym];\n          if (dsym > 3) {\n            var b = fdeb[dsym];\n            dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n          }\n          if (pos > tbts) {\n            if (noSt)\n              err(0);\n            break;\n          }\n          if (resize)\n            cbuf(bt + 131072);\n          var end = bt + add;\n          if (bt < dt) {\n            var shift = dl - dt, dend = Math.min(dt, end);\n            if (shift + bt < 0)\n              err(3);\n            for (; bt < dend; ++bt)\n              buf[bt] = dict[shift + bt];\n          }\n          for (; bt < end; ++bt)\n            buf[bt] = buf[bt - dt];\n        }\n      }\n      st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n      if (lm)\n        final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n  };\n  var et = /* @__PURE__ */ new u8(0);\n  var mrg = function(a, b) {\n    var o = {};\n    for (var k in a)\n      o[k] = a[k];\n    for (var k in b)\n      o[k] = b[k];\n    return o;\n  };\n  var wcln = function(fn, fnStr, td2) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf("[") + 1, st.lastIndexOf("]")).replace(/\\s+/g, "").split(",");\n    for (var i2 = 0; i2 < dt.length; ++i2) {\n      var v = dt[i2], k = ks[i2];\n      if (typeof v == "function") {\n        fnStr += ";" + k + "=";\n        var st_1 = v.toString();\n        if (v.prototype) {\n          if (st_1.indexOf("[native code]") != -1) {\n            var spInd = st_1.indexOf(" ", 8) + 1;\n            fnStr += st_1.slice(spInd, st_1.indexOf("(", spInd));\n          } else {\n            fnStr += st_1;\n            for (var t in v.prototype)\n              fnStr += ";" + k + ".prototype." + t + "=" + v.prototype[t].toString();\n          }\n        } else\n          fnStr += st_1;\n      } else\n        td2[k] = v;\n    }\n    return fnStr;\n  };\n  var ch = [];\n  var cbfs = function(v) {\n    var tl = [];\n    for (var k in v) {\n      if (v[k].buffer) {\n        tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n      }\n    }\n    return tl;\n  };\n  var wrkr = function(fns, init, id, cb) {\n    if (!ch[id]) {\n      var fnStr = "", td_1 = {}, m = fns.length - 1;\n      for (var i2 = 0; i2 < m; ++i2)\n        fnStr = wcln(fns[i2], fnStr, td_1);\n      ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td2 = mrg({}, ch[id].e);\n    return wk(ch[id].c + ";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=" + init.toString() + "}", id, td2, cbfs(td2), cb);\n  };\n  var bInflt = function() {\n    return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt];\n  };\n  var pbf = function(msg) {\n    return postMessage(msg, [msg.buffer]);\n  };\n  var gopt = function(o) {\n    return o && {\n      out: o.size && new u8(o.size),\n      dictionary: o.dictionary\n    };\n  };\n  var cbify = function(dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function(err2, dat2) {\n      w.terminate();\n      cb(err2, dat2);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function() {\n      w.terminate();\n    };\n  };\n  var b2 = function(d, b) {\n    return d[b] | d[b + 1] << 8;\n  };\n  var b4 = function(d, b) {\n    return (d[b] | d[b + 1] << 8 | d[b + 2] << 16 | d[b + 3] << 24) >>> 0;\n  };\n  var b8 = function(d, b) {\n    return b4(d, b) + b4(d, b + 4) * 4294967296;\n  };\n  var gzs = function(d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n      err(6, "invalid gzip data");\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n      st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n      ;\n    return st + (flg & 2);\n  };\n  var Inflate = /* @__PURE__ */ function() {\n    function Inflate2(opts, cb) {\n      if (typeof opts == "function")\n        cb = opts, opts = {};\n      this.ondata = cb;\n      var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n      this.s = { i: 0, b: dict ? dict.length : 0 };\n      this.o = new u8(32768);\n      this.p = new u8(0);\n      if (dict)\n        this.o.set(dict);\n    }\n    Inflate2.prototype.e = function(c) {\n      if (!this.ondata)\n        err(5);\n      if (this.d)\n        err(4);\n      if (!this.p.length)\n        this.p = c;\n      else if (c.length) {\n        var n = new u8(this.p.length + c.length);\n        n.set(this.p), n.set(c, this.p.length), this.p = n;\n      }\n    };\n    Inflate2.prototype.c = function(final) {\n      this.s.i = +(this.d = final || false);\n      var bts = this.s.b;\n      var dt = inflt(this.p, this.s, this.o);\n      this.ondata(slc(dt, bts, this.s.b), this.d);\n      this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n      this.p = slc(this.p, this.s.p / 8 | 0), this.s.p &= 7;\n    };\n    Inflate2.prototype.push = function(chunk, final) {\n      this.e(chunk), this.c(final);\n    };\n    return Inflate2;\n  }();\n  function inflate(data, opts, cb) {\n    if (!cb)\n      cb = opts, opts = {};\n    if (typeof cb != "function")\n      err(7);\n    return cbify(data, opts, [\n      bInflt\n    ], function(ev) {\n      return pbf(inflateSync(ev.data[0], gopt(ev.data[1])));\n    }, 1, cb);\n  }\n  function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n  }\n  var Gunzip = /* @__PURE__ */ function() {\n    function Gunzip2(opts, cb) {\n      this.v = 1;\n      this.r = 0;\n      Inflate.call(this, opts, cb);\n    }\n    Gunzip2.prototype.push = function(chunk, final) {\n      Inflate.prototype.e.call(this, chunk);\n      this.r += chunk.length;\n      if (this.v) {\n        var p = this.p.subarray(this.v - 1);\n        var s = p.length > 3 ? gzs(p) : 4;\n        if (s > p.length) {\n          if (!final)\n            return;\n        } else if (this.v > 1 && this.onmember) {\n          this.onmember(this.r - p.length);\n        }\n        this.p = p.subarray(s), this.v = 0;\n      }\n      Inflate.prototype.c.call(this, final);\n      if (this.s.f && !this.s.l && !final) {\n        this.v = shft(this.s.p) + 9;\n        this.s = { i: 0 };\n        this.o = new u8(0);\n        this.push(new u8(0), final);\n      }\n    };\n    return Gunzip2;\n  }();\n  var td = typeof TextDecoder != "undefined" && /* @__PURE__ */ new TextDecoder();\n  try {\n    td.decode(et, { stream: true });\n  } catch (e) {\n  }\n  var dutf8 = function(d) {\n    for (var r = "", i2 = 0; ; ) {\n      var c = d[i2++];\n      var eb = (c > 127) + (c > 223) + (c > 239);\n      if (i2 + eb > d.length)\n        return { s: r, r: slc(d, i2 - 1) };\n      if (!eb)\n        r += String.fromCharCode(c);\n      else if (eb == 3) {\n        c = ((c & 15) << 18 | (d[i2++] & 63) << 12 | (d[i2++] & 63) << 6 | d[i2++] & 63) - 65536, r += String.fromCharCode(55296 | c >> 10, 56320 | c & 1023);\n      } else if (eb & 1)\n        r += String.fromCharCode((c & 31) << 6 | d[i2++] & 63);\n      else\n        r += String.fromCharCode((c & 15) << 12 | (d[i2++] & 63) << 6 | d[i2++] & 63);\n    }\n  };\n  function strFromU8(dat, latin1) {\n    if (latin1) {\n      var r = "";\n      for (var i2 = 0; i2 < dat.length; i2 += 16384)\n        r += String.fromCharCode.apply(null, dat.subarray(i2, i2 + 16384));\n      return r;\n    } else if (td) {\n      return td.decode(dat);\n    } else {\n      var _a2 = dutf8(dat), s = _a2.s, r = _a2.r;\n      if (r.length)\n        err(8);\n      return s;\n    }\n  }\n  var slzh = function(d, b) {\n    return b + 30 + b2(d, b + 26) + b2(d, b + 28);\n  };\n  var zh = function(d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a2 = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a2[0], su = _a2[1], off = _a2[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n  };\n  var z64e = function(d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n      ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n  };\n  var mt = typeof queueMicrotask == "function" ? queueMicrotask : typeof setTimeout == "function" ? setTimeout : function(fn) {\n    fn();\n  };\n  function unzip(data, opts, cb) {\n    if (!cb)\n      cb = opts, opts = {};\n    if (typeof cb != "function")\n      err(7);\n    var term = [];\n    var tAll = function() {\n      for (var i3 = 0; i3 < term.length; ++i3)\n        term[i3]();\n    };\n    var files = {};\n    var cbd = function(a, b) {\n      mt(function() {\n        cb(a, b);\n      });\n    };\n    mt(function() {\n      cbd = cb;\n    });\n    var e = data.length - 22;\n    for (; b4(data, e) != 101010256; --e) {\n      if (!e || data.length - e > 65558) {\n        cbd(err(13, 0, 1), null);\n        return tAll;\n      }\n    }\n    var lft = b2(data, e + 8);\n    if (lft) {\n      var c = lft;\n      var o = b4(data, e + 16);\n      var z = o == 4294967295 || c == 65535;\n      if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 101075792;\n        if (z) {\n          c = lft = b4(data, ze + 32);\n          o = b4(data, ze + 48);\n        }\n      }\n      var fltr = opts && opts.filter;\n      var _loop_3 = function(i3) {\n        var _a2 = zh(data, o, z), c_1 = _a2[0], sc = _a2[1], su = _a2[2], fn = _a2[3], no = _a2[4], off = _a2[5], b = slzh(data, off);\n        o = no;\n        var cbl = function(e2, d) {\n          if (e2) {\n            tAll();\n            cbd(e2, null);\n          } else {\n            if (d)\n              files[fn] = d;\n            if (!--lft)\n              cbd(null, files);\n          }\n        };\n        if (!fltr || fltr({\n          name: fn,\n          size: sc,\n          originalSize: su,\n          compression: c_1\n        })) {\n          if (!c_1)\n            cbl(null, slc(data, b, b + sc));\n          else if (c_1 == 8) {\n            var infl = data.subarray(b, b + sc);\n            if (su < 524288 || sc > 0.8 * su) {\n              try {\n                cbl(null, inflateSync(infl, { out: new u8(su) }));\n              } catch (e2) {\n                cbl(e2, null);\n              }\n            } else\n              term.push(inflate(infl, { size: su }, cbl));\n          } else\n            cbl(err(14, "unknown compression type " + c_1, 1), null);\n        } else\n          cbl(null, null);\n      };\n      for (var i2 = 0; i2 < c; ++i2) {\n        _loop_3(i2);\n      }\n    } else\n      cbd(null, {});\n    return tAll;\n  }\n  function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 101010256; --e) {\n      if (!e || data.length - e > 65558)\n        err(13);\n    }\n    var c = b2(data, e + 8);\n    if (!c)\n      return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n      var ze = b4(data, e - 12);\n      z = b4(data, ze) == 101075792;\n      if (z) {\n        c = b4(data, ze + 32);\n        o = b4(data, ze + 48);\n      }\n    }\n    var fltr = opts && opts.filter;\n    for (var i2 = 0; i2 < c; ++i2) {\n      var _a2 = zh(data, o, z), c_2 = _a2[0], sc = _a2[1], su = _a2[2], fn = _a2[3], no = _a2[4], off = _a2[5], b = slzh(data, off);\n      o = no;\n      if (!fltr || fltr({\n        name: fn,\n        size: sc,\n        originalSize: su,\n        compression: c_2\n      })) {\n        if (!c_2)\n          files[fn] = slc(data, b, b + sc);\n        else if (c_2 == 8)\n          files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n        else\n          err(14, "unknown compression type " + c_2);\n      }\n    }\n    return files;\n  }\n  /**\n   * @license\n   * Copyright 2010-2025 Three.js Authors\n   * SPDX-License-Identifier: MIT\n   */\n  const REVISION = "178";\n  const NoColorSpace = "";\n  const SRGBColorSpace = "srgb";\n  const LinearSRGBColorSpace = "srgb-linear";\n  const LinearTransfer = "linear";\n  const SRGBTransfer = "srgb";\n  function clamp(value, min, max2) {\n    return Math.max(min, Math.min(max2, value));\n  }\n  function euclideanModulo(n, m) {\n    return (n % m + m) % m;\n  }\n  function lerp(x2, y, t) {\n    return (1 - t) * x2 + t * y;\n  }\n  class Quaternion {\n    /**\n     * Constructs a new quaternion.\n     *\n     * @param {number} [x=0] - The x value of this quaternion.\n     * @param {number} [y=0] - The y value of this quaternion.\n     * @param {number} [z=0] - The z value of this quaternion.\n     * @param {number} [w=1] - The w value of this quaternion.\n     */\n    constructor(x2 = 0, y = 0, z = 0, w = 1) {\n      this.isQuaternion = true;\n      this._x = x2;\n      this._y = y;\n      this._z = z;\n      this._w = w;\n    }\n    /**\n     * Interpolates between two quaternions via SLERP. This implementation assumes the\n     * quaternion data are managed  in flat arrays.\n     *\n     * @param {Array<number>} dst - The destination array.\n     * @param {number} dstOffset - An offset into the destination array.\n     * @param {Array<number>} src0 - The source array of the first quaternion.\n     * @param {number} srcOffset0 - An offset into the first source array.\n     * @param {Array<number>} src1 -  The source array of the second quaternion.\n     * @param {number} srcOffset1 - An offset into the second source array.\n     * @param {number} t - The interpolation factor in the range `[0,1]`.\n     * @see {@link Quaternion#slerp}\n     */\n    static slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n      let x0 = src0[srcOffset0 + 0], y0 = src0[srcOffset0 + 1], z0 = src0[srcOffset0 + 2], w0 = src0[srcOffset0 + 3];\n      const x1 = src1[srcOffset1 + 0], y1 = src1[srcOffset1 + 1], z1 = src1[srcOffset1 + 2], w1 = src1[srcOffset1 + 3];\n      if (t === 0) {\n        dst[dstOffset + 0] = x0;\n        dst[dstOffset + 1] = y0;\n        dst[dstOffset + 2] = z0;\n        dst[dstOffset + 3] = w0;\n        return;\n      }\n      if (t === 1) {\n        dst[dstOffset + 0] = x1;\n        dst[dstOffset + 1] = y1;\n        dst[dstOffset + 2] = z1;\n        dst[dstOffset + 3] = w1;\n        return;\n      }\n      if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n        let s = 1 - t;\n        const cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1, dir = cos >= 0 ? 1 : -1, sqrSin = 1 - cos * cos;\n        if (sqrSin > Number.EPSILON) {\n          const sin = Math.sqrt(sqrSin), len = Math.atan2(sin, cos * dir);\n          s = Math.sin(s * len) / sin;\n          t = Math.sin(t * len) / sin;\n        }\n        const tDir = t * dir;\n        x0 = x0 * s + x1 * tDir;\n        y0 = y0 * s + y1 * tDir;\n        z0 = z0 * s + z1 * tDir;\n        w0 = w0 * s + w1 * tDir;\n        if (s === 1 - t) {\n          const f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n          x0 *= f;\n          y0 *= f;\n          z0 *= f;\n          w0 *= f;\n        }\n      }\n      dst[dstOffset] = x0;\n      dst[dstOffset + 1] = y0;\n      dst[dstOffset + 2] = z0;\n      dst[dstOffset + 3] = w0;\n    }\n    /**\n     * Multiplies two quaternions. This implementation assumes the quaternion data are managed\n     * in flat arrays.\n     *\n     * @param {Array<number>} dst - The destination array.\n     * @param {number} dstOffset - An offset into the destination array.\n     * @param {Array<number>} src0 - The source array of the first quaternion.\n     * @param {number} srcOffset0 - An offset into the first source array.\n     * @param {Array<number>} src1 -  The source array of the second quaternion.\n     * @param {number} srcOffset1 - An offset into the second source array.\n     * @return {Array<number>} The destination array.\n     * @see {@link Quaternion#multiplyQuaternions}.\n     */\n    static multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n      const x0 = src0[srcOffset0];\n      const y0 = src0[srcOffset0 + 1];\n      const z0 = src0[srcOffset0 + 2];\n      const w0 = src0[srcOffset0 + 3];\n      const x1 = src1[srcOffset1];\n      const y1 = src1[srcOffset1 + 1];\n      const z1 = src1[srcOffset1 + 2];\n      const w1 = src1[srcOffset1 + 3];\n      dst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n      dst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n      dst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n      dst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n      return dst;\n    }\n    /**\n     * The x value of this quaternion.\n     *\n     * @type {number}\n     * @default 0\n     */\n    get x() {\n      return this._x;\n    }\n    set x(value) {\n      this._x = value;\n      this._onChangeCallback();\n    }\n    /**\n     * The y value of this quaternion.\n     *\n     * @type {number}\n     * @default 0\n     */\n    get y() {\n      return this._y;\n    }\n    set y(value) {\n      this._y = value;\n      this._onChangeCallback();\n    }\n    /**\n     * The z value of this quaternion.\n     *\n     * @type {number}\n     * @default 0\n     */\n    get z() {\n      return this._z;\n    }\n    set z(value) {\n      this._z = value;\n      this._onChangeCallback();\n    }\n    /**\n     * The w value of this quaternion.\n     *\n     * @type {number}\n     * @default 1\n     */\n    get w() {\n      return this._w;\n    }\n    set w(value) {\n      this._w = value;\n      this._onChangeCallback();\n    }\n    /**\n     * Sets the quaternion components.\n     *\n     * @param {number} x - The x value of this quaternion.\n     * @param {number} y - The y value of this quaternion.\n     * @param {number} z - The z value of this quaternion.\n     * @param {number} w - The w value of this quaternion.\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    set(x2, y, z, w) {\n      this._x = x2;\n      this._y = y;\n      this._z = z;\n      this._w = w;\n      this._onChangeCallback();\n      return this;\n    }\n    /**\n     * Returns a new quaternion with copied values from this instance.\n     *\n     * @return {Quaternion} A clone of this instance.\n     */\n    clone() {\n      return new this.constructor(this._x, this._y, this._z, this._w);\n    }\n    /**\n     * Copies the values of the given quaternion to this instance.\n     *\n     * @param {Quaternion} quaternion - The quaternion to copy.\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    copy(quaternion) {\n      this._x = quaternion.x;\n      this._y = quaternion.y;\n      this._z = quaternion.z;\n      this._w = quaternion.w;\n      this._onChangeCallback();\n      return this;\n    }\n    /**\n     * Sets this quaternion from the rotation specified by the given\n     * Euler angles.\n     *\n     * @param {Euler} euler - The Euler angles.\n     * @param {boolean} [update=true] - Whether the internal `onChange` callback should be executed or not.\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    setFromEuler(euler, update = true) {\n      const x2 = euler._x, y = euler._y, z = euler._z, order = euler._order;\n      const cos = Math.cos;\n      const sin = Math.sin;\n      const c1 = cos(x2 / 2);\n      const c2 = cos(y / 2);\n      const c3 = cos(z / 2);\n      const s1 = sin(x2 / 2);\n      const s2 = sin(y / 2);\n      const s3 = sin(z / 2);\n      switch (order) {\n        case "XYZ":\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\n          break;\n        case "YXZ":\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\n          break;\n        case "ZXY":\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\n          break;\n        case "ZYX":\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\n          break;\n        case "YZX":\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\n          break;\n        case "XZY":\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\n          break;\n        default:\n          console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + order);\n      }\n      if (update === true) this._onChangeCallback();\n      return this;\n    }\n    /**\n     * Sets this quaternion from the given axis and angle.\n     *\n     * @param {Vector3} axis - The normalized axis.\n     * @param {number} angle - The angle in radians.\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    setFromAxisAngle(axis, angle) {\n      const halfAngle = angle / 2, s = Math.sin(halfAngle);\n      this._x = axis.x * s;\n      this._y = axis.y * s;\n      this._z = axis.z * s;\n      this._w = Math.cos(halfAngle);\n      this._onChangeCallback();\n      return this;\n    }\n    /**\n     * Sets this quaternion from the given rotation matrix.\n     *\n     * @param {Matrix4} m - A 4x4 matrix of which the upper 3x3 of matrix is a pure rotation matrix (i.e. unscaled).\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    setFromRotationMatrix(m) {\n      const te = m.elements, m11 = te[0], m12 = te[4], m13 = te[8], m21 = te[1], m22 = te[5], m23 = te[9], m31 = te[2], m32 = te[6], m33 = te[10], trace = m11 + m22 + m33;\n      if (trace > 0) {\n        const s = 0.5 / Math.sqrt(trace + 1);\n        this._w = 0.25 / s;\n        this._x = (m32 - m23) * s;\n        this._y = (m13 - m31) * s;\n        this._z = (m21 - m12) * s;\n      } else if (m11 > m22 && m11 > m33) {\n        const s = 2 * Math.sqrt(1 + m11 - m22 - m33);\n        this._w = (m32 - m23) / s;\n        this._x = 0.25 * s;\n        this._y = (m12 + m21) / s;\n        this._z = (m13 + m31) / s;\n      } else if (m22 > m33) {\n        const s = 2 * Math.sqrt(1 + m22 - m11 - m33);\n        this._w = (m13 - m31) / s;\n        this._x = (m12 + m21) / s;\n        this._y = 0.25 * s;\n        this._z = (m23 + m32) / s;\n      } else {\n        const s = 2 * Math.sqrt(1 + m33 - m11 - m22);\n        this._w = (m21 - m12) / s;\n        this._x = (m13 + m31) / s;\n        this._y = (m23 + m32) / s;\n        this._z = 0.25 * s;\n      }\n      this._onChangeCallback();\n      return this;\n    }\n    /**\n     * Sets this quaternion to the rotation required to rotate the direction vector\n     * `vFrom` to the direction vector `vTo`.\n     *\n     * @param {Vector3} vFrom - The first (normalized) direction vector.\n     * @param {Vector3} vTo - The second (normalized) direction vector.\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    setFromUnitVectors(vFrom, vTo) {\n      let r = vFrom.dot(vTo) + 1;\n      if (r < 1e-8) {\n        r = 0;\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          this._x = -vFrom.y;\n          this._y = vFrom.x;\n          this._z = 0;\n          this._w = r;\n        } else {\n          this._x = 0;\n          this._y = -vFrom.z;\n          this._z = vFrom.y;\n          this._w = r;\n        }\n      } else {\n        this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n        this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n        this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n        this._w = r;\n      }\n      return this.normalize();\n    }\n    /**\n     * Returns the angle between this quaternion and the given one in radians.\n     *\n     * @param {Quaternion} q - The quaternion to compute the angle with.\n     * @return {number} The angle in radians.\n     */\n    angleTo(q) {\n      return 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\n    }\n    /**\n     * Rotates this quaternion by a given angular step to the given quaternion.\n     * The method ensures that the final quaternion will not overshoot `q`.\n     *\n     * @param {Quaternion} q - The target quaternion.\n     * @param {number} step - The angular step in radians.\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    rotateTowards(q, step) {\n      const angle = this.angleTo(q);\n      if (angle === 0) return this;\n      const t = Math.min(1, step / angle);\n      this.slerp(q, t);\n      return this;\n    }\n    /**\n     * Sets this quaternion to the identity quaternion; that is, to the\n     * quaternion that represents "no rotation".\n     *\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    identity() {\n      return this.set(0, 0, 0, 1);\n    }\n    /**\n     * Inverts this quaternion via {@link Quaternion#conjugate}. The\n     * quaternion is assumed to have unit length.\n     *\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    invert() {\n      return this.conjugate();\n    }\n    /**\n     * Returns the rotational conjugate of this quaternion. The conjugate of a\n     * quaternion represents the same rotation in the opposite direction about\n     * the rotational axis.\n     *\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    conjugate() {\n      this._x *= -1;\n      this._y *= -1;\n      this._z *= -1;\n      this._onChangeCallback();\n      return this;\n    }\n    /**\n     * Calculates the dot product of this quaternion and the given one.\n     *\n     * @param {Quaternion} v - The quaternion to compute the dot product with.\n     * @return {number} The result of the dot product.\n     */\n    dot(v) {\n      return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n    }\n    /**\n     * Computes the squared Euclidean length (straight-line length) of this quaternion,\n     * considered as a 4 dimensional vector. This can be useful if you are comparing the\n     * lengths of two quaternions, as this is a slightly more efficient calculation than\n     * {@link Quaternion#length}.\n     *\n     * @return {number} The squared Euclidean length.\n     */\n    lengthSq() {\n      return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n    }\n    /**\n     * Computes the Euclidean length (straight-line length) of this quaternion,\n     * considered as a 4 dimensional vector.\n     *\n     * @return {number} The Euclidean length.\n     */\n    length() {\n      return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n    }\n    /**\n     * Normalizes this quaternion - that is, calculated the quaternion that performs\n     * the same rotation as this one, but has a length equal to `1`.\n     *\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    normalize() {\n      let l = this.length();\n      if (l === 0) {\n        this._x = 0;\n        this._y = 0;\n        this._z = 0;\n        this._w = 1;\n      } else {\n        l = 1 / l;\n        this._x = this._x * l;\n        this._y = this._y * l;\n        this._z = this._z * l;\n        this._w = this._w * l;\n      }\n      this._onChangeCallback();\n      return this;\n    }\n    /**\n     * Multiplies this quaternion by the given one.\n     *\n     * @param {Quaternion} q - The quaternion.\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    multiply(q) {\n      return this.multiplyQuaternions(this, q);\n    }\n    /**\n     * Pre-multiplies this quaternion by the given one.\n     *\n     * @param {Quaternion} q - The quaternion.\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    premultiply(q) {\n      return this.multiplyQuaternions(q, this);\n    }\n    /**\n     * Multiplies the given quaternions and stores the result in this instance.\n     *\n     * @param {Quaternion} a - The first quaternion.\n     * @param {Quaternion} b - The second quaternion.\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    multiplyQuaternions(a, b) {\n      const qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n      const qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n      this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n      this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n      this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n      this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n      this._onChangeCallback();\n      return this;\n    }\n    /**\n     * Performs a spherical linear interpolation between quaternions.\n     *\n     * @param {Quaternion} qb - The target quaternion.\n     * @param {number} t - The interpolation factor in the closed interval `[0, 1]`.\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    slerp(qb, t) {\n      if (t === 0) return this;\n      if (t === 1) return this.copy(qb);\n      const x2 = this._x, y = this._y, z = this._z, w = this._w;\n      let cosHalfTheta = w * qb._w + x2 * qb._x + y * qb._y + z * qb._z;\n      if (cosHalfTheta < 0) {\n        this._w = -qb._w;\n        this._x = -qb._x;\n        this._y = -qb._y;\n        this._z = -qb._z;\n        cosHalfTheta = -cosHalfTheta;\n      } else {\n        this.copy(qb);\n      }\n      if (cosHalfTheta >= 1) {\n        this._w = w;\n        this._x = x2;\n        this._y = y;\n        this._z = z;\n        return this;\n      }\n      const sqrSinHalfTheta = 1 - cosHalfTheta * cosHalfTheta;\n      if (sqrSinHalfTheta <= Number.EPSILON) {\n        const s = 1 - t;\n        this._w = s * w + t * this._w;\n        this._x = s * x2 + t * this._x;\n        this._y = s * y + t * this._y;\n        this._z = s * z + t * this._z;\n        this.normalize();\n        return this;\n      }\n      const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n      const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n      const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta, ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n      this._w = w * ratioA + this._w * ratioB;\n      this._x = x2 * ratioA + this._x * ratioB;\n      this._y = y * ratioA + this._y * ratioB;\n      this._z = z * ratioA + this._z * ratioB;\n      this._onChangeCallback();\n      return this;\n    }\n    /**\n     * Performs a spherical linear interpolation between the given quaternions\n     * and stores the result in this quaternion.\n     *\n     * @param {Quaternion} qa - The source quaternion.\n     * @param {Quaternion} qb - The target quaternion.\n     * @param {number} t - The interpolation factor in the closed interval `[0, 1]`.\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    slerpQuaternions(qa, qb, t) {\n      return this.copy(qa).slerp(qb, t);\n    }\n    /**\n     * Sets this quaternion to a uniformly random, normalized quaternion.\n     *\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    random() {\n      const theta1 = 2 * Math.PI * Math.random();\n      const theta2 = 2 * Math.PI * Math.random();\n      const x0 = Math.random();\n      const r1 = Math.sqrt(1 - x0);\n      const r2 = Math.sqrt(x0);\n      return this.set(\n        r1 * Math.sin(theta1),\n        r1 * Math.cos(theta1),\n        r2 * Math.sin(theta2),\n        r2 * Math.cos(theta2)\n      );\n    }\n    /**\n     * Returns `true` if this quaternion is equal with the given one.\n     *\n     * @param {Quaternion} quaternion - The quaternion to test for equality.\n     * @return {boolean} Whether this quaternion is equal with the given one.\n     */\n    equals(quaternion) {\n      return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n    }\n    /**\n     * Sets this quaternion\'s components from the given array.\n     *\n     * @param {Array<number>} array - An array holding the quaternion component values.\n     * @param {number} [offset=0] - The offset into the array.\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    fromArray(array, offset = 0) {\n      this._x = array[offset];\n      this._y = array[offset + 1];\n      this._z = array[offset + 2];\n      this._w = array[offset + 3];\n      this._onChangeCallback();\n      return this;\n    }\n    /**\n     * Writes the components of this quaternion to the given array. If no array is provided,\n     * the method returns a new instance.\n     *\n     * @param {Array<number>} [array=[]] - The target array holding the quaternion components.\n     * @param {number} [offset=0] - Index of the first element in the array.\n     * @return {Array<number>} The quaternion components.\n     */\n    toArray(array = [], offset = 0) {\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._w;\n      return array;\n    }\n    /**\n     * Sets the components of this quaternion from the given buffer attribute.\n     *\n     * @param {BufferAttribute} attribute - The buffer attribute holding quaternion data.\n     * @param {number} index - The index into the attribute.\n     * @return {Quaternion} A reference to this quaternion.\n     */\n    fromBufferAttribute(attribute, index) {\n      this._x = attribute.getX(index);\n      this._y = attribute.getY(index);\n      this._z = attribute.getZ(index);\n      this._w = attribute.getW(index);\n      this._onChangeCallback();\n      return this;\n    }\n    /**\n     * This methods defines the serialization result of this class. Returns the\n     * numerical elements of this quaternion in an array of format `[x, y, z, w]`.\n     *\n     * @return {Array<number>} The serialized quaternion.\n     */\n    toJSON() {\n      return this.toArray();\n    }\n    _onChange(callback) {\n      this._onChangeCallback = callback;\n      return this;\n    }\n    _onChangeCallback() {\n    }\n    *[Symbol.iterator]() {\n      yield this._x;\n      yield this._y;\n      yield this._z;\n      yield this._w;\n    }\n  }\n  class Vector3 {\n    /**\n     * Constructs a new 3D vector.\n     *\n     * @param {number} [x=0] - The x value of this vector.\n     * @param {number} [y=0] - The y value of this vector.\n     * @param {number} [z=0] - The z value of this vector.\n     */\n    constructor(x2 = 0, y = 0, z = 0) {\n      Vector3.prototype.isVector3 = true;\n      this.x = x2;\n      this.y = y;\n      this.z = z;\n    }\n    /**\n     * Sets the vector components.\n     *\n     * @param {number} x - The value of the x component.\n     * @param {number} y - The value of the y component.\n     * @param {number} z - The value of the z component.\n     * @return {Vector3} A reference to this vector.\n     */\n    set(x2, y, z) {\n      if (z === void 0) z = this.z;\n      this.x = x2;\n      this.y = y;\n      this.z = z;\n      return this;\n    }\n    /**\n     * Sets the vector components to the same value.\n     *\n     * @param {number} scalar - The value to set for all vector components.\n     * @return {Vector3} A reference to this vector.\n     */\n    setScalar(scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      return this;\n    }\n    /**\n     * Sets the vector\'s x component to the given value\n     *\n     * @param {number} x - The value to set.\n     * @return {Vector3} A reference to this vector.\n     */\n    setX(x2) {\n      this.x = x2;\n      return this;\n    }\n    /**\n     * Sets the vector\'s y component to the given value\n     *\n     * @param {number} y - The value to set.\n     * @return {Vector3} A reference to this vector.\n     */\n    setY(y) {\n      this.y = y;\n      return this;\n    }\n    /**\n     * Sets the vector\'s z component to the given value\n     *\n     * @param {number} z - The value to set.\n     * @return {Vector3} A reference to this vector.\n     */\n    setZ(z) {\n      this.z = z;\n      return this;\n    }\n    /**\n     * Allows to set a vector component with an index.\n     *\n     * @param {number} index - The component index. `0` equals to x, `1` equals to y, `2` equals to z.\n     * @param {number} value - The value to set.\n     * @return {Vector3} A reference to this vector.\n     */\n    setComponent(index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n        case 1:\n          this.y = value;\n          break;\n        case 2:\n          this.z = value;\n          break;\n        default:\n          throw new Error("index is out of range: " + index);\n      }\n      return this;\n    }\n    /**\n     * Returns the value of the vector component which matches the given index.\n     *\n     * @param {number} index - The component index. `0` equals to x, `1` equals to y, `2` equals to z.\n     * @return {number} A vector component value.\n     */\n    getComponent(index) {\n      switch (index) {\n        case 0:\n          return this.x;\n        case 1:\n          return this.y;\n        case 2:\n          return this.z;\n        default:\n          throw new Error("index is out of range: " + index);\n      }\n    }\n    /**\n     * Returns a new vector with copied values from this instance.\n     *\n     * @return {Vector3} A clone of this instance.\n     */\n    clone() {\n      return new this.constructor(this.x, this.y, this.z);\n    }\n    /**\n     * Copies the values of the given vector to this instance.\n     *\n     * @param {Vector3} v - The vector to copy.\n     * @return {Vector3} A reference to this vector.\n     */\n    copy(v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      return this;\n    }\n    /**\n     * Adds the given vector to this instance.\n     *\n     * @param {Vector3} v - The vector to add.\n     * @return {Vector3} A reference to this vector.\n     */\n    add(v) {\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      return this;\n    }\n    /**\n     * Adds the given scalar value to all components of this instance.\n     *\n     * @param {number} s - The scalar to add.\n     * @return {Vector3} A reference to this vector.\n     */\n    addScalar(s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      return this;\n    }\n    /**\n     * Adds the given vectors and stores the result in this instance.\n     *\n     * @param {Vector3} a - The first vector.\n     * @param {Vector3} b - The second vector.\n     * @return {Vector3} A reference to this vector.\n     */\n    addVectors(a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      return this;\n    }\n    /**\n     * Adds the given vector scaled by the given factor to this instance.\n     *\n     * @param {Vector3|Vector4} v - The vector.\n     * @param {number} s - The factor that scales `v`.\n     * @return {Vector3} A reference to this vector.\n     */\n    addScaledVector(v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      return this;\n    }\n    /**\n     * Subtracts the given vector from this instance.\n     *\n     * @param {Vector3} v - The vector to subtract.\n     * @return {Vector3} A reference to this vector.\n     */\n    sub(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      return this;\n    }\n    /**\n     * Subtracts the given scalar value from all components of this instance.\n     *\n     * @param {number} s - The scalar to subtract.\n     * @return {Vector3} A reference to this vector.\n     */\n    subScalar(s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      return this;\n    }\n    /**\n     * Subtracts the given vectors and stores the result in this instance.\n     *\n     * @param {Vector3} a - The first vector.\n     * @param {Vector3} b - The second vector.\n     * @return {Vector3} A reference to this vector.\n     */\n    subVectors(a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      return this;\n    }\n    /**\n     * Multiplies the given vector with this instance.\n     *\n     * @param {Vector3} v - The vector to multiply.\n     * @return {Vector3} A reference to this vector.\n     */\n    multiply(v) {\n      this.x *= v.x;\n      this.y *= v.y;\n      this.z *= v.z;\n      return this;\n    }\n    /**\n     * Multiplies the given scalar value with all components of this instance.\n     *\n     * @param {number} scalar - The scalar to multiply.\n     * @return {Vector3} A reference to this vector.\n     */\n    multiplyScalar(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      return this;\n    }\n    /**\n     * Multiplies the given vectors and stores the result in this instance.\n     *\n     * @param {Vector3} a - The first vector.\n     * @param {Vector3} b - The second vector.\n     * @return {Vector3} A reference to this vector.\n     */\n    multiplyVectors(a, b) {\n      this.x = a.x * b.x;\n      this.y = a.y * b.y;\n      this.z = a.z * b.z;\n      return this;\n    }\n    /**\n     * Applies the given Euler rotation to this vector.\n     *\n     * @param {Euler} euler - The Euler angles.\n     * @return {Vector3} A reference to this vector.\n     */\n    applyEuler(euler) {\n      return this.applyQuaternion(_quaternion$4.setFromEuler(euler));\n    }\n    /**\n     * Applies a rotation specified by an axis and an angle to this vector.\n     *\n     * @param {Vector3} axis - A normalized vector representing the rotation axis.\n     * @param {number} angle - The angle in radians.\n     * @return {Vector3} A reference to this vector.\n     */\n    applyAxisAngle(axis, angle) {\n      return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\n    }\n    /**\n     * Multiplies this vector with the given 3x3 matrix.\n     *\n     * @param {Matrix3} m - The 3x3 matrix.\n     * @return {Vector3} A reference to this vector.\n     */\n    applyMatrix3(m) {\n      const x2 = this.x, y = this.y, z = this.z;\n      const e = m.elements;\n      this.x = e[0] * x2 + e[3] * y + e[6] * z;\n      this.y = e[1] * x2 + e[4] * y + e[7] * z;\n      this.z = e[2] * x2 + e[5] * y + e[8] * z;\n      return this;\n    }\n    /**\n     * Multiplies this vector by the given normal matrix and normalizes\n     * the result.\n     *\n     * @param {Matrix3} m - The normal matrix.\n     * @return {Vector3} A reference to this vector.\n     */\n    applyNormalMatrix(m) {\n      return this.applyMatrix3(m).normalize();\n    }\n    /**\n     * Multiplies this vector (with an implicit 1 in the 4th dimension) by m, and\n     * divides by perspective.\n     *\n     * @param {Matrix4} m - The matrix to apply.\n     * @return {Vector3} A reference to this vector.\n     */\n    applyMatrix4(m) {\n      const x2 = this.x, y = this.y, z = this.z;\n      const e = m.elements;\n      const w = 1 / (e[3] * x2 + e[7] * y + e[11] * z + e[15]);\n      this.x = (e[0] * x2 + e[4] * y + e[8] * z + e[12]) * w;\n      this.y = (e[1] * x2 + e[5] * y + e[9] * z + e[13]) * w;\n      this.z = (e[2] * x2 + e[6] * y + e[10] * z + e[14]) * w;\n      return this;\n    }\n    /**\n     * Applies the given Quaternion to this vector.\n     *\n     * @param {Quaternion} q - The Quaternion.\n     * @return {Vector3} A reference to this vector.\n     */\n    applyQuaternion(q) {\n      const vx = this.x, vy = this.y, vz = this.z;\n      const qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n      const tx = 2 * (qy * vz - qz * vy);\n      const ty = 2 * (qz * vx - qx * vz);\n      const tz = 2 * (qx * vy - qy * vx);\n      this.x = vx + qw * tx + qy * tz - qz * ty;\n      this.y = vy + qw * ty + qz * tx - qx * tz;\n      this.z = vz + qw * tz + qx * ty - qy * tx;\n      return this;\n    }\n    /**\n     * Projects this vector from world space into the camera\'s normalized\n     * device coordinate (NDC) space.\n     *\n     * @param {Camera} camera - The camera.\n     * @return {Vector3} A reference to this vector.\n     */\n    project(camera) {\n      return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n    }\n    /**\n     * Unprojects this vector from the camera\'s normalized device coordinate (NDC)\n     * space into world space.\n     *\n     * @param {Camera} camera - The camera.\n     * @return {Vector3} A reference to this vector.\n     */\n    unproject(camera) {\n      return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n    }\n    /**\n     * Transforms the direction of this vector by a matrix (the upper left 3 x 3\n     * subset of the given 4x4 matrix and then normalizes the result.\n     *\n     * @param {Matrix4} m - The matrix.\n     * @return {Vector3} A reference to this vector.\n     */\n    transformDirection(m) {\n      const x2 = this.x, y = this.y, z = this.z;\n      const e = m.elements;\n      this.x = e[0] * x2 + e[4] * y + e[8] * z;\n      this.y = e[1] * x2 + e[5] * y + e[9] * z;\n      this.z = e[2] * x2 + e[6] * y + e[10] * z;\n      return this.normalize();\n    }\n    /**\n     * Divides this instance by the given vector.\n     *\n     * @param {Vector3} v - The vector to divide.\n     * @return {Vector3} A reference to this vector.\n     */\n    divide(v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      this.z /= v.z;\n      return this;\n    }\n    /**\n     * Divides this vector by the given scalar.\n     *\n     * @param {number} scalar - The scalar to divide.\n     * @return {Vector3} A reference to this vector.\n     */\n    divideScalar(scalar) {\n      return this.multiplyScalar(1 / scalar);\n    }\n    /**\n     * If this vector\'s x, y or z value is greater than the given vector\'s x, y or z\n     * value, replace that value with the corresponding min value.\n     *\n     * @param {Vector3} v - The vector.\n     * @return {Vector3} A reference to this vector.\n     */\n    min(v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      return this;\n    }\n    /**\n     * If this vector\'s x, y or z value is less than the given vector\'s x, y or z\n     * value, replace that value with the corresponding max value.\n     *\n     * @param {Vector3} v - The vector.\n     * @return {Vector3} A reference to this vector.\n     */\n    max(v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      return this;\n    }\n    /**\n     * If this vector\'s x, y or z value is greater than the max vector\'s x, y or z\n     * value, it is replaced by the corresponding value.\n     * If this vector\'s x, y or z value is less than the min vector\'s x, y or z value,\n     * it is replaced by the corresponding value.\n     *\n     * @param {Vector3} min - The minimum x, y and z values.\n     * @param {Vector3} max - The maximum x, y and z values in the desired range.\n     * @return {Vector3} A reference to this vector.\n     */\n    clamp(min, max2) {\n      this.x = clamp(this.x, min.x, max2.x);\n      this.y = clamp(this.y, min.y, max2.y);\n      this.z = clamp(this.z, min.z, max2.z);\n      return this;\n    }\n    /**\n     * If this vector\'s x, y or z values are greater than the max value, they are\n     * replaced by the max value.\n     * If this vector\'s x, y or z values are less than the min value, they are\n     * replaced by the min value.\n     *\n     * @param {number} minVal - The minimum value the components will be clamped to.\n     * @param {number} maxVal - The maximum value the components will be clamped to.\n     * @return {Vector3} A reference to this vector.\n     */\n    clampScalar(minVal, maxVal) {\n      this.x = clamp(this.x, minVal, maxVal);\n      this.y = clamp(this.y, minVal, maxVal);\n      this.z = clamp(this.z, minVal, maxVal);\n      return this;\n    }\n    /**\n     * If this vector\'s length is greater than the max value, it is replaced by\n     * the max value.\n     * If this vector\'s length is less than the min value, it is replaced by the\n     * min value.\n     *\n     * @param {number} min - The minimum value the vector length will be clamped to.\n     * @param {number} max - The maximum value the vector length will be clamped to.\n     * @return {Vector3} A reference to this vector.\n     */\n    clampLength(min, max2) {\n      const length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(clamp(length, min, max2));\n    }\n    /**\n     * The components of this vector are rounded down to the nearest integer value.\n     *\n     * @return {Vector3} A reference to this vector.\n     */\n    floor() {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      return this;\n    }\n    /**\n     * The components of this vector are rounded up to the nearest integer value.\n     *\n     * @return {Vector3} A reference to this vector.\n     */\n    ceil() {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      return this;\n    }\n    /**\n     * The components of this vector are rounded to the nearest integer value\n     *\n     * @return {Vector3} A reference to this vector.\n     */\n    round() {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      return this;\n    }\n    /**\n     * The components of this vector are rounded towards zero (up if negative,\n     * down if positive) to an integer value.\n     *\n     * @return {Vector3} A reference to this vector.\n     */\n    roundToZero() {\n      this.x = Math.trunc(this.x);\n      this.y = Math.trunc(this.y);\n      this.z = Math.trunc(this.z);\n      return this;\n    }\n    /**\n     * Inverts this vector - i.e. sets x = -x, y = -y and z = -z.\n     *\n     * @return {Vector3} A reference to this vector.\n     */\n    negate() {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      return this;\n    }\n    /**\n     * Calculates the dot product of the given vector with this instance.\n     *\n     * @param {Vector3} v - The vector to compute the dot product with.\n     * @return {number} The result of the dot product.\n     */\n    dot(v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n    // TODO lengthSquared?\n    /**\n     * Computes the square of the Euclidean length (straight-line length) from\n     * (0, 0, 0) to (x, y, z). If you are comparing the lengths of vectors, you should\n     * compare the length squared instead as it is slightly more efficient to calculate.\n     *\n     * @return {number} The square length of this vector.\n     */\n    lengthSq() {\n      return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n    /**\n     * Computes the  Euclidean length (straight-line length) from (0, 0, 0) to (x, y, z).\n     *\n     * @return {number} The length of this vector.\n     */\n    length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n    /**\n     * Computes the Manhattan length of this vector.\n     *\n     * @return {number} The length of this vector.\n     */\n    manhattanLength() {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n    }\n    /**\n     * Converts this vector to a unit vector - that is, sets it equal to a vector\n     * with the same direction as this one, but with a vector length of `1`.\n     *\n     * @return {Vector3} A reference to this vector.\n     */\n    normalize() {\n      return this.divideScalar(this.length() || 1);\n    }\n    /**\n     * Sets this vector to a vector with the same direction as this one, but\n     * with the specified length.\n     *\n     * @param {number} length - The new length of this vector.\n     * @return {Vector3} A reference to this vector.\n     */\n    setLength(length) {\n      return this.normalize().multiplyScalar(length);\n    }\n    /**\n     * Linearly interpolates between the given vector and this instance, where\n     * alpha is the percent distance along the line - alpha = 0 will be this\n     * vector, and alpha = 1 will be the given one.\n     *\n     * @param {Vector3} v - The vector to interpolate towards.\n     * @param {number} alpha - The interpolation factor, typically in the closed interval `[0, 1]`.\n     * @return {Vector3} A reference to this vector.\n     */\n    lerp(v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      return this;\n    }\n    /**\n     * Linearly interpolates between the given vectors, where alpha is the percent\n     * distance along the line - alpha = 0 will be first vector, and alpha = 1 will\n     * be the second one. The result is stored in this instance.\n     *\n     * @param {Vector3} v1 - The first vector.\n     * @param {Vector3} v2 - The second vector.\n     * @param {number} alpha - The interpolation factor, typically in the closed interval `[0, 1]`.\n     * @return {Vector3} A reference to this vector.\n     */\n    lerpVectors(v1, v2, alpha) {\n      this.x = v1.x + (v2.x - v1.x) * alpha;\n      this.y = v1.y + (v2.y - v1.y) * alpha;\n      this.z = v1.z + (v2.z - v1.z) * alpha;\n      return this;\n    }\n    /**\n     * Calculates the cross product of the given vector with this instance.\n     *\n     * @param {Vector3} v - The vector to compute the cross product with.\n     * @return {Vector3} The result of the cross product.\n     */\n    cross(v) {\n      return this.crossVectors(this, v);\n    }\n    /**\n     * Calculates the cross product of the given vectors and stores the result\n     * in this instance.\n     *\n     * @param {Vector3} a - The first vector.\n     * @param {Vector3} b - The second vector.\n     * @return {Vector3} A reference to this vector.\n     */\n    crossVectors(a, b) {\n      const ax = a.x, ay = a.y, az = a.z;\n      const bx = b.x, by = b.y, bz = b.z;\n      this.x = ay * bz - az * by;\n      this.y = az * bx - ax * bz;\n      this.z = ax * by - ay * bx;\n      return this;\n    }\n    /**\n     * Projects this vector onto the given one.\n     *\n     * @param {Vector3} v - The vector to project to.\n     * @return {Vector3} A reference to this vector.\n     */\n    projectOnVector(v) {\n      const denominator = v.lengthSq();\n      if (denominator === 0) return this.set(0, 0, 0);\n      const scalar = v.dot(this) / denominator;\n      return this.copy(v).multiplyScalar(scalar);\n    }\n    /**\n     * Projects this vector onto a plane by subtracting this\n     * vector projected onto the plane\'s normal from this vector.\n     *\n     * @param {Vector3} planeNormal - The plane normal.\n     * @return {Vector3} A reference to this vector.\n     */\n    projectOnPlane(planeNormal) {\n      _vector$c.copy(this).projectOnVector(planeNormal);\n      return this.sub(_vector$c);\n    }\n    /**\n     * Reflects this vector off a plane orthogonal to the given normal vector.\n     *\n     * @param {Vector3} normal - The (normalized) normal vector.\n     * @return {Vector3} A reference to this vector.\n     */\n    reflect(normal) {\n      return this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    }\n    /**\n     * Returns the angle between the given vector and this instance in radians.\n     *\n     * @param {Vector3} v - The vector to compute the angle with.\n     * @return {number} The angle in radians.\n     */\n    angleTo(v) {\n      const denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n      if (denominator === 0) return Math.PI / 2;\n      const theta = this.dot(v) / denominator;\n      return Math.acos(clamp(theta, -1, 1));\n    }\n    /**\n     * Computes the distance from the given vector to this instance.\n     *\n     * @param {Vector3} v - The vector to compute the distance to.\n     * @return {number} The distance.\n     */\n    distanceTo(v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    }\n    /**\n     * Computes the squared distance from the given vector to this instance.\n     * If you are just comparing the distance with another distance, you should compare\n     * the distance squared instead as it is slightly more efficient to calculate.\n     *\n     * @param {Vector3} v - The vector to compute the squared distance to.\n     * @return {number} The squared distance.\n     */\n    distanceToSquared(v) {\n      const dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n      return dx * dx + dy * dy + dz * dz;\n    }\n    /**\n     * Computes the Manhattan distance from the given vector to this instance.\n     *\n     * @param {Vector3} v - The vector to compute the Manhattan distance to.\n     * @return {number} The Manhattan distance.\n     */\n    manhattanDistanceTo(v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n    }\n    /**\n     * Sets the vector components from the given spherical coordinates.\n     *\n     * @param {Spherical} s - The spherical coordinates.\n     * @return {Vector3} A reference to this vector.\n     */\n    setFromSpherical(s) {\n      return this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n    }\n    /**\n     * Sets the vector components from the given spherical coordinates.\n     *\n     * @param {number} radius - The radius.\n     * @param {number} phi - The phi angle in radians.\n     * @param {number} theta - The theta angle in radians.\n     * @return {Vector3} A reference to this vector.\n     */\n    setFromSphericalCoords(radius, phi, theta) {\n      const sinPhiRadius = Math.sin(phi) * radius;\n      this.x = sinPhiRadius * Math.sin(theta);\n      this.y = Math.cos(phi) * radius;\n      this.z = sinPhiRadius * Math.cos(theta);\n      return this;\n    }\n    /**\n     * Sets the vector components from the given cylindrical coordinates.\n     *\n     * @param {Cylindrical} c - The cylindrical coordinates.\n     * @return {Vector3} A reference to this vector.\n     */\n    setFromCylindrical(c) {\n      return this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n    }\n    /**\n     * Sets the vector components from the given cylindrical coordinates.\n     *\n     * @param {number} radius - The radius.\n     * @param {number} theta - The theta angle in radians.\n     * @param {number} y - The y value.\n     * @return {Vector3} A reference to this vector.\n     */\n    setFromCylindricalCoords(radius, theta, y) {\n      this.x = radius * Math.sin(theta);\n      this.y = y;\n      this.z = radius * Math.cos(theta);\n      return this;\n    }\n    /**\n     * Sets the vector components to the position elements of the\n     * given transformation matrix.\n     *\n     * @param {Matrix4} m - The 4x4 matrix.\n     * @return {Vector3} A reference to this vector.\n     */\n    setFromMatrixPosition(m) {\n      const e = m.elements;\n      this.x = e[12];\n      this.y = e[13];\n      this.z = e[14];\n      return this;\n    }\n    /**\n     * Sets the vector components to the scale elements of the\n     * given transformation matrix.\n     *\n     * @param {Matrix4} m - The 4x4 matrix.\n     * @return {Vector3} A reference to this vector.\n     */\n    setFromMatrixScale(m) {\n      const sx = this.setFromMatrixColumn(m, 0).length();\n      const sy = this.setFromMatrixColumn(m, 1).length();\n      const sz = this.setFromMatrixColumn(m, 2).length();\n      this.x = sx;\n      this.y = sy;\n      this.z = sz;\n      return this;\n    }\n    /**\n     * Sets the vector components from the specified matrix column.\n     *\n     * @param {Matrix4} m - The 4x4 matrix.\n     * @param {number} index - The column index.\n     * @return {Vector3} A reference to this vector.\n     */\n    setFromMatrixColumn(m, index) {\n      return this.fromArray(m.elements, index * 4);\n    }\n    /**\n     * Sets the vector components from the specified matrix column.\n     *\n     * @param {Matrix3} m - The 3x3 matrix.\n     * @param {number} index - The column index.\n     * @return {Vector3} A reference to this vector.\n     */\n    setFromMatrix3Column(m, index) {\n      return this.fromArray(m.elements, index * 3);\n    }\n    /**\n     * Sets the vector components from the given Euler angles.\n     *\n     * @param {Euler} e - The Euler angles to set.\n     * @return {Vector3} A reference to this vector.\n     */\n    setFromEuler(e) {\n      this.x = e._x;\n      this.y = e._y;\n      this.z = e._z;\n      return this;\n    }\n    /**\n     * Sets the vector components from the RGB components of the\n     * given color.\n     *\n     * @param {Color} c - The color to set.\n     * @return {Vector3} A reference to this vector.\n     */\n    setFromColor(c) {\n      this.x = c.r;\n      this.y = c.g;\n      this.z = c.b;\n      return this;\n    }\n    /**\n     * Returns `true` if this vector is equal with the given one.\n     *\n     * @param {Vector3} v - The vector to test for equality.\n     * @return {boolean} Whether this vector is equal with the given one.\n     */\n    equals(v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z;\n    }\n    /**\n     * Sets this vector\'s x value to be `array[ offset ]`, y value to be `array[ offset + 1 ]`\n     * and z value to be `array[ offset + 2 ]`.\n     *\n     * @param {Array<number>} array - An array holding the vector component values.\n     * @param {number} [offset=0] - The offset into the array.\n     * @return {Vector3} A reference to this vector.\n     */\n    fromArray(array, offset = 0) {\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      return this;\n    }\n    /**\n     * Writes the components of this vector to the given array. If no array is provided,\n     * the method returns a new instance.\n     *\n     * @param {Array<number>} [array=[]] - The target array holding the vector components.\n     * @param {number} [offset=0] - Index of the first element in the array.\n     * @return {Array<number>} The vector components.\n     */\n    toArray(array = [], offset = 0) {\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      return array;\n    }\n    /**\n     * Sets the components of this vector from the given buffer attribute.\n     *\n     * @param {BufferAttribute} attribute - The buffer attribute holding vector data.\n     * @param {number} index - The index into the attribute.\n     * @return {Vector3} A reference to this vector.\n     */\n    fromBufferAttribute(attribute, index) {\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      return this;\n    }\n    /**\n     * Sets each component of this vector to a pseudo-random value between `0` and\n     * `1`, excluding `1`.\n     *\n     * @return {Vector3} A reference to this vector.\n     */\n    random() {\n      this.x = Math.random();\n      this.y = Math.random();\n      this.z = Math.random();\n      return this;\n    }\n    /**\n     * Sets this vector to a uniformly random point on a unit sphere.\n     *\n     * @return {Vector3} A reference to this vector.\n     */\n    randomDirection() {\n      const theta = Math.random() * Math.PI * 2;\n      const u = Math.random() * 2 - 1;\n      const c = Math.sqrt(1 - u * u);\n      this.x = c * Math.cos(theta);\n      this.y = u;\n      this.z = c * Math.sin(theta);\n      return this;\n    }\n    *[Symbol.iterator]() {\n      yield this.x;\n      yield this.y;\n      yield this.z;\n    }\n  }\n  const _vector$c = /* @__PURE__ */ new Vector3();\n  const _quaternion$4 = /* @__PURE__ */ new Quaternion();\n  class Matrix3 {\n    /**\n     * Constructs a new 3x3 matrix. The arguments are supposed to be\n     * in row-major order. If no arguments are provided, the constructor\n     * initializes the matrix as an identity matrix.\n     *\n     * @param {number} [n11] - 1-1 matrix element.\n     * @param {number} [n12] - 1-2 matrix element.\n     * @param {number} [n13] - 1-3 matrix element.\n     * @param {number} [n21] - 2-1 matrix element.\n     * @param {number} [n22] - 2-2 matrix element.\n     * @param {number} [n23] - 2-3 matrix element.\n     * @param {number} [n31] - 3-1 matrix element.\n     * @param {number} [n32] - 3-2 matrix element.\n     * @param {number} [n33] - 3-3 matrix element.\n     */\n    constructor(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n      Matrix3.prototype.isMatrix3 = true;\n      this.elements = [\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1\n      ];\n      if (n11 !== void 0) {\n        this.set(n11, n12, n13, n21, n22, n23, n31, n32, n33);\n      }\n    }\n    /**\n     * Sets the elements of the matrix.The arguments are supposed to be\n     * in row-major order.\n     *\n     * @param {number} [n11] - 1-1 matrix element.\n     * @param {number} [n12] - 1-2 matrix element.\n     * @param {number} [n13] - 1-3 matrix element.\n     * @param {number} [n21] - 2-1 matrix element.\n     * @param {number} [n22] - 2-2 matrix element.\n     * @param {number} [n23] - 2-3 matrix element.\n     * @param {number} [n31] - 3-1 matrix element.\n     * @param {number} [n32] - 3-2 matrix element.\n     * @param {number} [n33] - 3-3 matrix element.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n      const te = this.elements;\n      te[0] = n11;\n      te[1] = n21;\n      te[2] = n31;\n      te[3] = n12;\n      te[4] = n22;\n      te[5] = n32;\n      te[6] = n13;\n      te[7] = n23;\n      te[8] = n33;\n      return this;\n    }\n    /**\n     * Sets this matrix to the 3x3 identity matrix.\n     *\n     * @return {Matrix3} A reference to this matrix.\n     */\n    identity() {\n      this.set(\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1\n      );\n      return this;\n    }\n    /**\n     * Copies the values of the given matrix to this instance.\n     *\n     * @param {Matrix3} m - The matrix to copy.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    copy(m) {\n      const te = this.elements;\n      const me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      return this;\n    }\n    /**\n     * Extracts the basis of this matrix into the three axis vectors provided.\n     *\n     * @param {Vector3} xAxis - The basis\'s x axis.\n     * @param {Vector3} yAxis - The basis\'s y axis.\n     * @param {Vector3} zAxis - The basis\'s z axis.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    extractBasis(xAxis, yAxis, zAxis) {\n      xAxis.setFromMatrix3Column(this, 0);\n      yAxis.setFromMatrix3Column(this, 1);\n      zAxis.setFromMatrix3Column(this, 2);\n      return this;\n    }\n    /**\n     * Set this matrix to the upper 3x3 matrix of the given 4x4 matrix.\n     *\n     * @param {Matrix4} m - The 4x4 matrix.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    setFromMatrix4(m) {\n      const me = m.elements;\n      this.set(\n        me[0],\n        me[4],\n        me[8],\n        me[1],\n        me[5],\n        me[9],\n        me[2],\n        me[6],\n        me[10]\n      );\n      return this;\n    }\n    /**\n     * Post-multiplies this matrix by the given 3x3 matrix.\n     *\n     * @param {Matrix3} m - The matrix to multiply with.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    multiply(m) {\n      return this.multiplyMatrices(this, m);\n    }\n    /**\n     * Pre-multiplies this matrix by the given 3x3 matrix.\n     *\n     * @param {Matrix3} m - The matrix to multiply with.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    premultiply(m) {\n      return this.multiplyMatrices(m, this);\n    }\n    /**\n     * Multiples the given 3x3 matrices and stores the result\n     * in this matrix.\n     *\n     * @param {Matrix3} a - The first matrix.\n     * @param {Matrix3} b - The second matrix.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    multiplyMatrices(a, b) {\n      const ae = a.elements;\n      const be = b.elements;\n      const te = this.elements;\n      const a11 = ae[0], a12 = ae[3], a13 = ae[6];\n      const a21 = ae[1], a22 = ae[4], a23 = ae[7];\n      const a31 = ae[2], a32 = ae[5], a33 = ae[8];\n      const b11 = be[0], b12 = be[3], b13 = be[6];\n      const b21 = be[1], b22 = be[4], b23 = be[7];\n      const b31 = be[2], b32 = be[5], b33 = be[8];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n      te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n      te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n      te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n      te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n      te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n      te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n      return this;\n    }\n    /**\n     * Multiplies every component of the matrix by the given scalar.\n     *\n     * @param {number} s - The scalar.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    multiplyScalar(s) {\n      const te = this.elements;\n      te[0] *= s;\n      te[3] *= s;\n      te[6] *= s;\n      te[1] *= s;\n      te[4] *= s;\n      te[7] *= s;\n      te[2] *= s;\n      te[5] *= s;\n      te[8] *= s;\n      return this;\n    }\n    /**\n     * Computes and returns the determinant of this matrix.\n     *\n     * @return {number} The determinant.\n     */\n    determinant() {\n      const te = this.elements;\n      const a = te[0], b = te[1], c = te[2], d = te[3], e = te[4], f = te[5], g = te[6], h = te[7], i2 = te[8];\n      return a * e * i2 - a * f * h - b * d * i2 + b * f * g + c * d * h - c * e * g;\n    }\n    /**\n     * Inverts this matrix, using the [analytic method]{@link https://en.wikipedia.org/wiki/Invertible_matrix#Analytic_solution}.\n     * You can not invert with a determinant of zero. If you attempt this, the method produces\n     * a zero matrix instead.\n     *\n     * @return {Matrix3} A reference to this matrix.\n     */\n    invert() {\n      const te = this.elements, n11 = te[0], n21 = te[1], n31 = te[2], n12 = te[3], n22 = te[4], n32 = te[5], n13 = te[6], n23 = te[7], n33 = te[8], t11 = n33 * n22 - n32 * n23, t12 = n32 * n13 - n33 * n12, t13 = n23 * n12 - n22 * n13, det = n11 * t11 + n21 * t12 + n31 * t13;\n      if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      const detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n31 * n23 - n33 * n21) * detInv;\n      te[2] = (n32 * n21 - n31 * n22) * detInv;\n      te[3] = t12 * detInv;\n      te[4] = (n33 * n11 - n31 * n13) * detInv;\n      te[5] = (n31 * n12 - n32 * n11) * detInv;\n      te[6] = t13 * detInv;\n      te[7] = (n21 * n13 - n23 * n11) * detInv;\n      te[8] = (n22 * n11 - n21 * n12) * detInv;\n      return this;\n    }\n    /**\n     * Transposes this matrix in place.\n     *\n     * @return {Matrix3} A reference to this matrix.\n     */\n    transpose() {\n      let tmp;\n      const m = this.elements;\n      tmp = m[1];\n      m[1] = m[3];\n      m[3] = tmp;\n      tmp = m[2];\n      m[2] = m[6];\n      m[6] = tmp;\n      tmp = m[5];\n      m[5] = m[7];\n      m[7] = tmp;\n      return this;\n    }\n    /**\n     * Computes the normal matrix which is the inverse transpose of the upper\n     * left 3x3 portion of the given 4x4 matrix.\n     *\n     * @param {Matrix4} matrix4 - The 4x4 matrix.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    getNormalMatrix(matrix4) {\n      return this.setFromMatrix4(matrix4).invert().transpose();\n    }\n    /**\n     * Transposes this matrix into the supplied array, and returns itself unchanged.\n     *\n     * @param {Array<number>} r - An array to store the transposed matrix elements.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    transposeIntoArray(r) {\n      const m = this.elements;\n      r[0] = m[0];\n      r[1] = m[3];\n      r[2] = m[6];\n      r[3] = m[1];\n      r[4] = m[4];\n      r[5] = m[7];\n      r[6] = m[2];\n      r[7] = m[5];\n      r[8] = m[8];\n      return this;\n    }\n    /**\n     * Sets the UV transform matrix from offset, repeat, rotation, and center.\n     *\n     * @param {number} tx - Offset x.\n     * @param {number} ty - Offset y.\n     * @param {number} sx - Repeat x.\n     * @param {number} sy - Repeat y.\n     * @param {number} rotation - Rotation, in radians. Positive values rotate counterclockwise.\n     * @param {number} cx - Center x of rotation.\n     * @param {number} cy - Center y of rotation\n     * @return {Matrix3} A reference to this matrix.\n     */\n    setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n      const c = Math.cos(rotation);\n      const s = Math.sin(rotation);\n      this.set(\n        sx * c,\n        sx * s,\n        -sx * (c * cx + s * cy) + cx + tx,\n        -sy * s,\n        sy * c,\n        -sy * (-s * cx + c * cy) + cy + ty,\n        0,\n        0,\n        1\n      );\n      return this;\n    }\n    /**\n     * Scales this matrix with the given scalar values.\n     *\n     * @param {number} sx - The amount to scale in the X axis.\n     * @param {number} sy - The amount to scale in the Y axis.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    scale(sx, sy) {\n      this.premultiply(_m3.makeScale(sx, sy));\n      return this;\n    }\n    /**\n     * Rotates this matrix by the given angle.\n     *\n     * @param {number} theta - The rotation in radians.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    rotate(theta) {\n      this.premultiply(_m3.makeRotation(-theta));\n      return this;\n    }\n    /**\n     * Translates this matrix by the given scalar values.\n     *\n     * @param {number} tx - The amount to translate in the X axis.\n     * @param {number} ty - The amount to translate in the Y axis.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    translate(tx, ty) {\n      this.premultiply(_m3.makeTranslation(tx, ty));\n      return this;\n    }\n    // for 2D Transforms\n    /**\n     * Sets this matrix as a 2D translation transform.\n     *\n     * @param {number|Vector2} x - The amount to translate in the X axis or alternatively a translation vector.\n     * @param {number} y - The amount to translate in the Y axis.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    makeTranslation(x2, y) {\n      if (x2.isVector2) {\n        this.set(\n          1,\n          0,\n          x2.x,\n          0,\n          1,\n          x2.y,\n          0,\n          0,\n          1\n        );\n      } else {\n        this.set(\n          1,\n          0,\n          x2,\n          0,\n          1,\n          y,\n          0,\n          0,\n          1\n        );\n      }\n      return this;\n    }\n    /**\n     * Sets this matrix as a 2D rotational transformation.\n     *\n     * @param {number} theta - The rotation in radians.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    makeRotation(theta) {\n      const c = Math.cos(theta);\n      const s = Math.sin(theta);\n      this.set(\n        c,\n        -s,\n        0,\n        s,\n        c,\n        0,\n        0,\n        0,\n        1\n      );\n      return this;\n    }\n    /**\n     * Sets this matrix as a 2D scale transform.\n     *\n     * @param {number} x - The amount to scale in the X axis.\n     * @param {number} y - The amount to scale in the Y axis.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    makeScale(x2, y) {\n      this.set(\n        x2,\n        0,\n        0,\n        0,\n        y,\n        0,\n        0,\n        0,\n        1\n      );\n      return this;\n    }\n    /**\n     * Returns `true` if this matrix is equal with the given one.\n     *\n     * @param {Matrix3} matrix - The matrix to test for equality.\n     * @return {boolean} Whether this matrix is equal with the given one.\n     */\n    equals(matrix) {\n      const te = this.elements;\n      const me = matrix.elements;\n      for (let i2 = 0; i2 < 9; i2++) {\n        if (te[i2] !== me[i2]) return false;\n      }\n      return true;\n    }\n    /**\n     * Sets the elements of the matrix from the given array.\n     *\n     * @param {Array<number>} array - The matrix elements in column-major order.\n     * @param {number} [offset=0] - Index of the first element in the array.\n     * @return {Matrix3} A reference to this matrix.\n     */\n    fromArray(array, offset = 0) {\n      for (let i2 = 0; i2 < 9; i2++) {\n        this.elements[i2] = array[i2 + offset];\n      }\n      return this;\n    }\n    /**\n     * Writes the elements of this matrix to the given array. If no array is provided,\n     * the method returns a new instance.\n     *\n     * @param {Array<number>} [array=[]] - The target array holding the matrix elements in column-major order.\n     * @param {number} [offset=0] - Index of the first element in the array.\n     * @return {Array<number>} The matrix elements in column-major order.\n     */\n    toArray(array = [], offset = 0) {\n      const te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      return array;\n    }\n    /**\n     * Returns a matrix with copied values from this instance.\n     *\n     * @return {Matrix3} A clone of this instance.\n     */\n    clone() {\n      return new this.constructor().fromArray(this.elements);\n    }\n  }\n  const _m3 = /* @__PURE__ */ new Matrix3();\n  const _cache = {};\n  function warnOnce(message) {\n    if (message in _cache) return;\n    _cache[message] = true;\n    console.warn(message);\n  }\n  const LINEAR_REC709_TO_XYZ = /* @__PURE__ */ new Matrix3().set(\n    0.4123908,\n    0.3575843,\n    0.1804808,\n    0.212639,\n    0.7151687,\n    0.0721923,\n    0.0193308,\n    0.1191948,\n    0.9505322\n  );\n  const XYZ_TO_LINEAR_REC709 = /* @__PURE__ */ new Matrix3().set(\n    3.2409699,\n    -1.5373832,\n    -0.4986108,\n    -0.9692436,\n    1.8759675,\n    0.0415551,\n    0.0556301,\n    -0.203977,\n    1.0569715\n  );\n  function createColorManagement() {\n    const ColorManagement2 = {\n      enabled: true,\n      workingColorSpace: LinearSRGBColorSpace,\n      /**\n       * Implementations of supported color spaces.\n       *\n       * Required:\n       *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\n       *\t- whitePoint: reference white [ x y ]\n       *\t- transfer: transfer function (pre-defined)\n       *\t- toXYZ: Matrix3 RGB to XYZ transform\n       *\t- fromXYZ: Matrix3 XYZ to RGB transform\n       *\t- luminanceCoefficients: RGB luminance coefficients\n       *\n       * Optional:\n       *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\n       *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\n       *\n       * Reference:\n       * - https://www.russellcottrell.com/photo/matrixCalculator.htm\n       */\n      spaces: {},\n      convert: function(color, sourceColorSpace, targetColorSpace) {\n        if (this.enabled === false || sourceColorSpace === targetColorSpace || !sourceColorSpace || !targetColorSpace) {\n          return color;\n        }\n        if (this.spaces[sourceColorSpace].transfer === SRGBTransfer) {\n          color.r = SRGBToLinear(color.r);\n          color.g = SRGBToLinear(color.g);\n          color.b = SRGBToLinear(color.b);\n        }\n        if (this.spaces[sourceColorSpace].primaries !== this.spaces[targetColorSpace].primaries) {\n          color.applyMatrix3(this.spaces[sourceColorSpace].toXYZ);\n          color.applyMatrix3(this.spaces[targetColorSpace].fromXYZ);\n        }\n        if (this.spaces[targetColorSpace].transfer === SRGBTransfer) {\n          color.r = LinearToSRGB(color.r);\n          color.g = LinearToSRGB(color.g);\n          color.b = LinearToSRGB(color.b);\n        }\n        return color;\n      },\n      workingToColorSpace: function(color, targetColorSpace) {\n        return this.convert(color, this.workingColorSpace, targetColorSpace);\n      },\n      colorSpaceToWorking: function(color, sourceColorSpace) {\n        return this.convert(color, sourceColorSpace, this.workingColorSpace);\n      },\n      getPrimaries: function(colorSpace) {\n        return this.spaces[colorSpace].primaries;\n      },\n      getTransfer: function(colorSpace) {\n        if (colorSpace === NoColorSpace) return LinearTransfer;\n        return this.spaces[colorSpace].transfer;\n      },\n      getLuminanceCoefficients: function(target, colorSpace = this.workingColorSpace) {\n        return target.fromArray(this.spaces[colorSpace].luminanceCoefficients);\n      },\n      define: function(colorSpaces) {\n        Object.assign(this.spaces, colorSpaces);\n      },\n      // Internal APIs\n      _getMatrix: function(targetMatrix, sourceColorSpace, targetColorSpace) {\n        return targetMatrix.copy(this.spaces[sourceColorSpace].toXYZ).multiply(this.spaces[targetColorSpace].fromXYZ);\n      },\n      _getDrawingBufferColorSpace: function(colorSpace) {\n        return this.spaces[colorSpace].outputColorSpaceConfig.drawingBufferColorSpace;\n      },\n      _getUnpackColorSpace: function(colorSpace = this.workingColorSpace) {\n        return this.spaces[colorSpace].workingColorSpaceConfig.unpackColorSpace;\n      },\n      // Deprecated\n      fromWorkingColorSpace: function(color, targetColorSpace) {\n        warnOnce("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace().");\n        return ColorManagement2.workingToColorSpace(color, targetColorSpace);\n      },\n      toWorkingColorSpace: function(color, sourceColorSpace) {\n        warnOnce("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking().");\n        return ColorManagement2.colorSpaceToWorking(color, sourceColorSpace);\n      }\n    };\n    const REC709_PRIMARIES = [0.64, 0.33, 0.3, 0.6, 0.15, 0.06];\n    const REC709_LUMINANCE_COEFFICIENTS = [0.2126, 0.7152, 0.0722];\n    const D65 = [0.3127, 0.329];\n    ColorManagement2.define({\n      [LinearSRGBColorSpace]: {\n        primaries: REC709_PRIMARIES,\n        whitePoint: D65,\n        transfer: LinearTransfer,\n        toXYZ: LINEAR_REC709_TO_XYZ,\n        fromXYZ: XYZ_TO_LINEAR_REC709,\n        luminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n        workingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\n        outputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n      },\n      [SRGBColorSpace]: {\n        primaries: REC709_PRIMARIES,\n        whitePoint: D65,\n        transfer: SRGBTransfer,\n        toXYZ: LINEAR_REC709_TO_XYZ,\n        fromXYZ: XYZ_TO_LINEAR_REC709,\n        luminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n        outputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n      }\n    });\n    return ColorManagement2;\n  }\n  const ColorManagement = /* @__PURE__ */ createColorManagement();\n  function SRGBToLinear(c) {\n    return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n  }\n  function LinearToSRGB(c) {\n    return c < 31308e-7 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n  }\n  class Box3 {\n    /**\n     * Constructs a new bounding box.\n     *\n     * @param {Vector3} [min=(Infinity,Infinity,Infinity)] - A vector representing the lower boundary of the box.\n     * @param {Vector3} [max=(-Infinity,-Infinity,-Infinity)] - A vector representing the upper boundary of the box.\n     */\n    constructor(min = new Vector3(Infinity, Infinity, Infinity), max2 = new Vector3(-Infinity, -Infinity, -Infinity)) {\n      this.isBox3 = true;\n      this.min = min;\n      this.max = max2;\n    }\n    /**\n     * Sets the lower and upper boundaries of this box.\n     * Please note that this method only copies the values from the given objects.\n     *\n     * @param {Vector3} min - The lower boundary of the box.\n     * @param {Vector3} max - The upper boundary of the box.\n     * @return {Box3} A reference to this bounding box.\n     */\n    set(min, max2) {\n      this.min.copy(min);\n      this.max.copy(max2);\n      return this;\n    }\n    /**\n     * Sets the upper and lower bounds of this box so it encloses the position data\n     * in the given array.\n     *\n     * @param {Array<number>} array - An array holding 3D position data.\n     * @return {Box3} A reference to this bounding box.\n     */\n    setFromArray(array) {\n      this.makeEmpty();\n      for (let i2 = 0, il = array.length; i2 < il; i2 += 3) {\n        this.expandByPoint(_vector$b.fromArray(array, i2));\n      }\n      return this;\n    }\n    /**\n     * Sets the upper and lower bounds of this box so it encloses the position data\n     * in the given buffer attribute.\n     *\n     * @param {BufferAttribute} attribute - A buffer attribute holding 3D position data.\n     * @return {Box3} A reference to this bounding box.\n     */\n    setFromBufferAttribute(attribute) {\n      this.makeEmpty();\n      for (let i2 = 0, il = attribute.count; i2 < il; i2++) {\n        this.expandByPoint(_vector$b.fromBufferAttribute(attribute, i2));\n      }\n      return this;\n    }\n    /**\n     * Sets the upper and lower bounds of this box so it encloses the position data\n     * in the given array.\n     *\n     * @param {Array<Vector3>} points - An array holding 3D position data as instances of {@link Vector3}.\n     * @return {Box3} A reference to this bounding box.\n     */\n    setFromPoints(points) {\n      this.makeEmpty();\n      for (let i2 = 0, il = points.length; i2 < il; i2++) {\n        this.expandByPoint(points[i2]);\n      }\n      return this;\n    }\n    /**\n     * Centers this box on the given center vector and sets this box\'s width, height and\n     * depth to the given size values.\n     *\n     * @param {Vector3} center - The center of the box.\n     * @param {Vector3} size - The x, y and z dimensions of the box.\n     * @return {Box3} A reference to this bounding box.\n     */\n    setFromCenterAndSize(center, size) {\n      const halfSize = _vector$b.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    }\n    /**\n     * Computes the world-axis-aligned bounding box for the given 3D object\n     * (including its children), accounting for the object\'s, and children\'s,\n     * world transforms. The function may result in a larger box than strictly necessary.\n     *\n     * @param {Object3D} object - The 3D object to compute the bounding box for.\n     * @param {boolean} [precise=false] - If set to `true`, the method computes the smallest\n     * world-axis-aligned bounding box at the expense of more computation.\n     * @return {Box3} A reference to this bounding box.\n     */\n    setFromObject(object, precise = false) {\n      this.makeEmpty();\n      return this.expandByObject(object, precise);\n    }\n    /**\n     * Returns a new box with copied values from this instance.\n     *\n     * @return {Box3} A clone of this instance.\n     */\n    clone() {\n      return new this.constructor().copy(this);\n    }\n    /**\n     * Copies the values of the given box to this instance.\n     *\n     * @param {Box3} box - The box to copy.\n     * @return {Box3} A reference to this bounding box.\n     */\n    copy(box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    }\n    /**\n     * Makes this box empty which means in encloses a zero space in 3D.\n     *\n     * @return {Box3} A reference to this bounding box.\n     */\n    makeEmpty() {\n      this.min.x = this.min.y = this.min.z = Infinity;\n      this.max.x = this.max.y = this.max.z = -Infinity;\n      return this;\n    }\n    /**\n     * Returns true if this box includes zero points within its bounds.\n     * Note that a box with equal lower and upper bounds still includes one\n     * point, the one both bounds share.\n     *\n     * @return {boolean} Whether this box is empty or not.\n     */\n    isEmpty() {\n      return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n    }\n    /**\n     * Returns the center point of this box.\n     *\n     * @param {Vector3} target - The target vector that is used to store the method\'s result.\n     * @return {Vector3} The center point.\n     */\n    getCenter(target) {\n      return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n    }\n    /**\n     * Returns the dimensions of this box.\n     *\n     * @param {Vector3} target - The target vector that is used to store the method\'s result.\n     * @return {Vector3} The size.\n     */\n    getSize(target) {\n      return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n    }\n    /**\n     * Expands the boundaries of this box to include the given point.\n     *\n     * @param {Vector3} point - The point that should be included by the bounding box.\n     * @return {Box3} A reference to this bounding box.\n     */\n    expandByPoint(point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    }\n    /**\n     * Expands this box equilaterally by the given vector. The width of this\n     * box will be expanded by the x component of the vector in both\n     * directions. The height of this box will be expanded by the y component of\n     * the vector in both directions. The depth of this box will be\n     * expanded by the z component of the vector in both directions.\n     *\n     * @param {Vector3} vector - The vector that should expand the bounding box.\n     * @return {Box3} A reference to this bounding box.\n     */\n    expandByVector(vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    }\n    /**\n     * Expands each dimension of the box by the given scalar. If negative, the\n     * dimensions of the box will be contracted.\n     *\n     * @param {number} scalar - The scalar value that should expand the bounding box.\n     * @return {Box3} A reference to this bounding box.\n     */\n    expandByScalar(scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    }\n    /**\n     * Expands the boundaries of this box to include the given 3D object and\n     * its children, accounting for the object\'s, and children\'s, world\n     * transforms. The function may result in a larger box than strictly\n     * necessary (unless the precise parameter is set to true).\n     *\n     * @param {Object3D} object - The 3D object that should expand the bounding box.\n     * @param {boolean} precise - If set to `true`, the method expands the bounding box\n     * as little as necessary at the expense of more computation.\n     * @return {Box3} A reference to this bounding box.\n     */\n    expandByObject(object, precise = false) {\n      object.updateWorldMatrix(false, false);\n      const geometry = object.geometry;\n      if (geometry !== void 0) {\n        const positionAttribute = geometry.getAttribute("position");\n        if (precise === true && positionAttribute !== void 0 && object.isInstancedMesh !== true) {\n          for (let i2 = 0, l = positionAttribute.count; i2 < l; i2++) {\n            if (object.isMesh === true) {\n              object.getVertexPosition(i2, _vector$b);\n            } else {\n              _vector$b.fromBufferAttribute(positionAttribute, i2);\n            }\n            _vector$b.applyMatrix4(object.matrixWorld);\n            this.expandByPoint(_vector$b);\n          }\n        } else {\n          if (object.boundingBox !== void 0) {\n            if (object.boundingBox === null) {\n              object.computeBoundingBox();\n            }\n            _box$4.copy(object.boundingBox);\n          } else {\n            if (geometry.boundingBox === null) {\n              geometry.computeBoundingBox();\n            }\n            _box$4.copy(geometry.boundingBox);\n          }\n          _box$4.applyMatrix4(object.matrixWorld);\n          this.union(_box$4);\n        }\n      }\n      const children = object.children;\n      for (let i2 = 0, l = children.length; i2 < l; i2++) {\n        this.expandByObject(children[i2], precise);\n      }\n      return this;\n    }\n    /**\n     * Returns `true` if the given point lies within or on the boundaries of this box.\n     *\n     * @param {Vector3} point - The point to test.\n     * @return {boolean} Whether the bounding box contains the given point or not.\n     */\n    containsPoint(point) {\n      return point.x >= this.min.x && point.x <= this.max.x && point.y >= this.min.y && point.y <= this.max.y && point.z >= this.min.z && point.z <= this.max.z;\n    }\n    /**\n     * Returns `true` if this bounding box includes the entirety of the given bounding box.\n     * If this box and the given one are identical, this function also returns `true`.\n     *\n     * @param {Box3} box - The bounding box to test.\n     * @return {boolean} Whether the bounding box contains the given bounding box or not.\n     */\n    containsBox(box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n    }\n    /**\n     * Returns a point as a proportion of this box\'s width, height and depth.\n     *\n     * @param {Vector3} point - A point in 3D space.\n     * @param {Vector3} target - The target vector that is used to store the method\'s result.\n     * @return {Vector3} A point as a proportion of this box\'s width, height and depth.\n     */\n    getParameter(point, target) {\n      return target.set(\n        (point.x - this.min.x) / (this.max.x - this.min.x),\n        (point.y - this.min.y) / (this.max.y - this.min.y),\n        (point.z - this.min.z) / (this.max.z - this.min.z)\n      );\n    }\n    /**\n     * Returns `true` if the given bounding box intersects with this bounding box.\n     *\n     * @param {Box3} box - The bounding box to test.\n     * @return {boolean} Whether the given bounding box intersects with this bounding box.\n     */\n    intersectsBox(box) {\n      return box.max.x >= this.min.x && box.min.x <= this.max.x && box.max.y >= this.min.y && box.min.y <= this.max.y && box.max.z >= this.min.z && box.min.z <= this.max.z;\n    }\n    /**\n     * Returns `true` if the given bounding sphere intersects with this bounding box.\n     *\n     * @param {Sphere} sphere - The bounding sphere to test.\n     * @return {boolean} Whether the given bounding sphere intersects with this bounding box.\n     */\n    intersectsSphere(sphere) {\n      this.clampPoint(sphere.center, _vector$b);\n      return _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n    }\n    /**\n     * Returns `true` if the given plane intersects with this bounding box.\n     *\n     * @param {Plane} plane - The plane to test.\n     * @return {boolean} Whether the given plane intersects with this bounding box.\n     */\n    intersectsPlane(plane) {\n      let min, max2;\n      if (plane.normal.x > 0) {\n        min = plane.normal.x * this.min.x;\n        max2 = plane.normal.x * this.max.x;\n      } else {\n        min = plane.normal.x * this.max.x;\n        max2 = plane.normal.x * this.min.x;\n      }\n      if (plane.normal.y > 0) {\n        min += plane.normal.y * this.min.y;\n        max2 += plane.normal.y * this.max.y;\n      } else {\n        min += plane.normal.y * this.max.y;\n        max2 += plane.normal.y * this.min.y;\n      }\n      if (plane.normal.z > 0) {\n        min += plane.normal.z * this.min.z;\n        max2 += plane.normal.z * this.max.z;\n      } else {\n        min += plane.normal.z * this.max.z;\n        max2 += plane.normal.z * this.min.z;\n      }\n      return min <= -plane.constant && max2 >= -plane.constant;\n    }\n    /**\n     * Returns `true` if the given triangle intersects with this bounding box.\n     *\n     * @param {Triangle} triangle - The triangle to test.\n     * @return {boolean} Whether the given triangle intersects with this bounding box.\n     */\n    intersectsTriangle(triangle) {\n      if (this.isEmpty()) {\n        return false;\n      }\n      this.getCenter(_center);\n      _extents.subVectors(this.max, _center);\n      _v0$2.subVectors(triangle.a, _center);\n      _v1$7.subVectors(triangle.b, _center);\n      _v2$4.subVectors(triangle.c, _center);\n      _f0.subVectors(_v1$7, _v0$2);\n      _f1.subVectors(_v2$4, _v1$7);\n      _f2.subVectors(_v0$2, _v2$4);\n      let axes = [\n        0,\n        -_f0.z,\n        _f0.y,\n        0,\n        -_f1.z,\n        _f1.y,\n        0,\n        -_f2.z,\n        _f2.y,\n        _f0.z,\n        0,\n        -_f0.x,\n        _f1.z,\n        0,\n        -_f1.x,\n        _f2.z,\n        0,\n        -_f2.x,\n        -_f0.y,\n        _f0.x,\n        0,\n        -_f1.y,\n        _f1.x,\n        0,\n        -_f2.y,\n        _f2.x,\n        0\n      ];\n      if (!satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents)) {\n        return false;\n      }\n      axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      if (!satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents)) {\n        return false;\n      }\n      _triangleNormal.crossVectors(_f0, _f1);\n      axes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n      return satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents);\n    }\n    /**\n     * Clamps the given point within the bounds of this box.\n     *\n     * @param {Vector3} point - The point to clamp.\n     * @param {Vector3} target - The target vector that is used to store the method\'s result.\n     * @return {Vector3} The clamped point.\n     */\n    clampPoint(point, target) {\n      return target.copy(point).clamp(this.min, this.max);\n    }\n    /**\n     * Returns the euclidean distance from any edge of this box to the specified point. If\n     * the given point lies inside of this box, the distance will be `0`.\n     *\n     * @param {Vector3} point - The point to compute the distance to.\n     * @return {number} The euclidean distance.\n     */\n    distanceToPoint(point) {\n      return this.clampPoint(point, _vector$b).distanceTo(point);\n    }\n    /**\n     * Returns a bounding sphere that encloses this bounding box.\n     *\n     * @param {Sphere} target - The target sphere that is used to store the method\'s result.\n     * @return {Sphere} The bounding sphere that encloses this bounding box.\n     */\n    getBoundingSphere(target) {\n      if (this.isEmpty()) {\n        target.makeEmpty();\n      } else {\n        this.getCenter(target.center);\n        target.radius = this.getSize(_vector$b).length() * 0.5;\n      }\n      return target;\n    }\n    /**\n     * Computes the intersection of this bounding box and the given one, setting the upper\n     * bound of this box to the lesser of the two boxes\' upper bounds and the\n     * lower bound of this box to the greater of the two boxes\' lower bounds. If\n     * there\'s no overlap, makes this box empty.\n     *\n     * @param {Box3} box - The bounding box to intersect with.\n     * @return {Box3} A reference to this bounding box.\n     */\n    intersect(box) {\n      this.min.max(box.min);\n      this.max.min(box.max);\n      if (this.isEmpty()) this.makeEmpty();\n      return this;\n    }\n    /**\n     * Computes the union of this box and another and the given one, setting the upper\n     * bound of this box to the greater of the two boxes\' upper bounds and the\n     * lower bound of this box to the lesser of the two boxes\' lower bounds.\n     *\n     * @param {Box3} box - The bounding box that will be unioned with this instance.\n     * @return {Box3} A reference to this bounding box.\n     */\n    union(box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    }\n    /**\n     * Transforms this bounding box by the given 4x4 transformation matrix.\n     *\n     * @param {Matrix4} matrix - The transformation matrix.\n     * @return {Box3} A reference to this bounding box.\n     */\n    applyMatrix4(matrix) {\n      if (this.isEmpty()) return this;\n      _points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix);\n      _points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix);\n      _points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix);\n      _points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix);\n      _points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix);\n      _points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix);\n      _points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix);\n      _points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix);\n      this.setFromPoints(_points);\n      return this;\n    }\n    /**\n     * Adds the given offset to both the upper and lower bounds of this bounding box,\n     * effectively moving it in 3D space.\n     *\n     * @param {Vector3} offset - The offset that should be used to translate the bounding box.\n     * @return {Box3} A reference to this bounding box.\n     */\n    translate(offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    }\n    /**\n     * Returns `true` if this bounding box is equal with the given one.\n     *\n     * @param {Box3} box - The box to test for equality.\n     * @return {boolean} Whether this bounding box is equal with the given one.\n     */\n    equals(box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n    /**\n     * Returns a serialized structure of the bounding box.\n     *\n     * @return {Object} Serialized structure with fields representing the object state.\n     */\n    toJSON() {\n      return {\n        min: this.min.toArray(),\n        max: this.max.toArray()\n      };\n    }\n    /**\n     * Returns a serialized structure of the bounding box.\n     *\n     * @param {Object} json - The serialized json to set the box from.\n     * @return {Box3} A reference to this bounding box.\n     */\n    fromJSON(json) {\n      this.min.fromArray(json.min);\n      this.max.fromArray(json.max);\n      return this;\n    }\n  }\n  const _points = [\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3()\n  ];\n  const _vector$b = /* @__PURE__ */ new Vector3();\n  const _box$4 = /* @__PURE__ */ new Box3();\n  const _v0$2 = /* @__PURE__ */ new Vector3();\n  const _v1$7 = /* @__PURE__ */ new Vector3();\n  const _v2$4 = /* @__PURE__ */ new Vector3();\n  const _f0 = /* @__PURE__ */ new Vector3();\n  const _f1 = /* @__PURE__ */ new Vector3();\n  const _f2 = /* @__PURE__ */ new Vector3();\n  const _center = /* @__PURE__ */ new Vector3();\n  const _extents = /* @__PURE__ */ new Vector3();\n  const _triangleNormal = /* @__PURE__ */ new Vector3();\n  const _testAxis = /* @__PURE__ */ new Vector3();\n  function satForAxes(axes, v0, v1, v2, extents) {\n    for (let i2 = 0, j = axes.length - 3; i2 <= j; i2 += 3) {\n      _testAxis.fromArray(axes, i2);\n      const r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z);\n      const p0 = v0.dot(_testAxis);\n      const p1 = v1.dot(_testAxis);\n      const p2 = v2.dot(_testAxis);\n      if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const _colorKeywords = {\n    "aliceblue": 15792383,\n    "antiquewhite": 16444375,\n    "aqua": 65535,\n    "aquamarine": 8388564,\n    "azure": 15794175,\n    "beige": 16119260,\n    "bisque": 16770244,\n    "black": 0,\n    "blanchedalmond": 16772045,\n    "blue": 255,\n    "blueviolet": 9055202,\n    "brown": 10824234,\n    "burlywood": 14596231,\n    "cadetblue": 6266528,\n    "chartreuse": 8388352,\n    "chocolate": 13789470,\n    "coral": 16744272,\n    "cornflowerblue": 6591981,\n    "cornsilk": 16775388,\n    "crimson": 14423100,\n    "cyan": 65535,\n    "darkblue": 139,\n    "darkcyan": 35723,\n    "darkgoldenrod": 12092939,\n    "darkgray": 11119017,\n    "darkgreen": 25600,\n    "darkgrey": 11119017,\n    "darkkhaki": 12433259,\n    "darkmagenta": 9109643,\n    "darkolivegreen": 5597999,\n    "darkorange": 16747520,\n    "darkorchid": 10040012,\n    "darkred": 9109504,\n    "darksalmon": 15308410,\n    "darkseagreen": 9419919,\n    "darkslateblue": 4734347,\n    "darkslategray": 3100495,\n    "darkslategrey": 3100495,\n    "darkturquoise": 52945,\n    "darkviolet": 9699539,\n    "deeppink": 16716947,\n    "deepskyblue": 49151,\n    "dimgray": 6908265,\n    "dimgrey": 6908265,\n    "dodgerblue": 2003199,\n    "firebrick": 11674146,\n    "floralwhite": 16775920,\n    "forestgreen": 2263842,\n    "fuchsia": 16711935,\n    "gainsboro": 14474460,\n    "ghostwhite": 16316671,\n    "gold": 16766720,\n    "goldenrod": 14329120,\n    "gray": 8421504,\n    "green": 32768,\n    "greenyellow": 11403055,\n    "grey": 8421504,\n    "honeydew": 15794160,\n    "hotpink": 16738740,\n    "indianred": 13458524,\n    "indigo": 4915330,\n    "ivory": 16777200,\n    "khaki": 15787660,\n    "lavender": 15132410,\n    "lavenderblush": 16773365,\n    "lawngreen": 8190976,\n    "lemonchiffon": 16775885,\n    "lightblue": 11393254,\n    "lightcoral": 15761536,\n    "lightcyan": 14745599,\n    "lightgoldenrodyellow": 16448210,\n    "lightgray": 13882323,\n    "lightgreen": 9498256,\n    "lightgrey": 13882323,\n    "lightpink": 16758465,\n    "lightsalmon": 16752762,\n    "lightseagreen": 2142890,\n    "lightskyblue": 8900346,\n    "lightslategray": 7833753,\n    "lightslategrey": 7833753,\n    "lightsteelblue": 11584734,\n    "lightyellow": 16777184,\n    "lime": 65280,\n    "limegreen": 3329330,\n    "linen": 16445670,\n    "magenta": 16711935,\n    "maroon": 8388608,\n    "mediumaquamarine": 6737322,\n    "mediumblue": 205,\n    "mediumorchid": 12211667,\n    "mediumpurple": 9662683,\n    "mediumseagreen": 3978097,\n    "mediumslateblue": 8087790,\n    "mediumspringgreen": 64154,\n    "mediumturquoise": 4772300,\n    "mediumvioletred": 13047173,\n    "midnightblue": 1644912,\n    "mintcream": 16121850,\n    "mistyrose": 16770273,\n    "moccasin": 16770229,\n    "navajowhite": 16768685,\n    "navy": 128,\n    "oldlace": 16643558,\n    "olive": 8421376,\n    "olivedrab": 7048739,\n    "orange": 16753920,\n    "orangered": 16729344,\n    "orchid": 14315734,\n    "palegoldenrod": 15657130,\n    "palegreen": 10025880,\n    "paleturquoise": 11529966,\n    "palevioletred": 14381203,\n    "papayawhip": 16773077,\n    "peachpuff": 16767673,\n    "peru": 13468991,\n    "pink": 16761035,\n    "plum": 14524637,\n    "powderblue": 11591910,\n    "purple": 8388736,\n    "rebeccapurple": 6697881,\n    "red": 16711680,\n    "rosybrown": 12357519,\n    "royalblue": 4286945,\n    "saddlebrown": 9127187,\n    "salmon": 16416882,\n    "sandybrown": 16032864,\n    "seagreen": 3050327,\n    "seashell": 16774638,\n    "sienna": 10506797,\n    "silver": 12632256,\n    "skyblue": 8900331,\n    "slateblue": 6970061,\n    "slategray": 7372944,\n    "slategrey": 7372944,\n    "snow": 16775930,\n    "springgreen": 65407,\n    "steelblue": 4620980,\n    "tan": 13808780,\n    "teal": 32896,\n    "thistle": 14204888,\n    "tomato": 16737095,\n    "turquoise": 4251856,\n    "violet": 15631086,\n    "wheat": 16113331,\n    "white": 16777215,\n    "whitesmoke": 16119285,\n    "yellow": 16776960,\n    "yellowgreen": 10145074\n  };\n  const _hslA = { h: 0, s: 0, l: 0 };\n  const _hslB = { h: 0, s: 0, l: 0 };\n  function hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n    return p;\n  }\n  class Color {\n    /**\n     * Constructs a new color.\n     *\n     * Note that standard method of specifying color in three.js is with a hexadecimal triplet,\n     * and that method is used throughout the rest of the documentation.\n     *\n     * @param {(number|string|Color)} [r] - The red component of the color. If `g` and `b` are\n     * not provided, it can be hexadecimal triplet, a CSS-style string or another `Color` instance.\n     * @param {number} [g] - The green component.\n     * @param {number} [b] - The blue component.\n     */\n    constructor(r, g, b) {\n      this.isColor = true;\n      this.r = 1;\n      this.g = 1;\n      this.b = 1;\n      return this.set(r, g, b);\n    }\n    /**\n     * Sets the colors\'s components from the given values.\n     *\n     * @param {(number|string|Color)} [r] - The red component of the color. If `g` and `b` are\n     * not provided, it can be hexadecimal triplet, a CSS-style string or another `Color` instance.\n     * @param {number} [g] - The green component.\n     * @param {number} [b] - The blue component.\n     * @return {Color} A reference to this color.\n     */\n    set(r, g, b) {\n      if (g === void 0 && b === void 0) {\n        const value = r;\n        if (value && value.isColor) {\n          this.copy(value);\n        } else if (typeof value === "number") {\n          this.setHex(value);\n        } else if (typeof value === "string") {\n          this.setStyle(value);\n        }\n      } else {\n        this.setRGB(r, g, b);\n      }\n      return this;\n    }\n    /**\n     * Sets the colors\'s components to the given scalar value.\n     *\n     * @param {number} scalar - The scalar value.\n     * @return {Color} A reference to this color.\n     */\n    setScalar(scalar) {\n      this.r = scalar;\n      this.g = scalar;\n      this.b = scalar;\n      return this;\n    }\n    /**\n     * Sets this color from a hexadecimal value.\n     *\n     * @param {number} hex - The hexadecimal value.\n     * @param {string} [colorSpace=SRGBColorSpace] - The color space.\n     * @return {Color} A reference to this color.\n     */\n    setHex(hex, colorSpace = SRGBColorSpace) {\n      hex = Math.floor(hex);\n      this.r = (hex >> 16 & 255) / 255;\n      this.g = (hex >> 8 & 255) / 255;\n      this.b = (hex & 255) / 255;\n      ColorManagement.colorSpaceToWorking(this, colorSpace);\n      return this;\n    }\n    /**\n     * Sets this color from RGB values.\n     *\n     * @param {number} r - Red channel value between `0.0` and `1.0`.\n     * @param {number} g - Green channel value between `0.0` and `1.0`.\n     * @param {number} b - Blue channel value between `0.0` and `1.0`.\n     * @param {string} [colorSpace=ColorManagement.workingColorSpace] - The color space.\n     * @return {Color} A reference to this color.\n     */\n    setRGB(r, g, b, colorSpace = ColorManagement.workingColorSpace) {\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      ColorManagement.colorSpaceToWorking(this, colorSpace);\n      return this;\n    }\n    /**\n     * Sets this color from RGB values.\n     *\n     * @param {number} h - Hue value between `0.0` and `1.0`.\n     * @param {number} s - Saturation value between `0.0` and `1.0`.\n     * @param {number} l - Lightness value between `0.0` and `1.0`.\n     * @param {string} [colorSpace=ColorManagement.workingColorSpace] - The color space.\n     * @return {Color} A reference to this color.\n     */\n    setHSL(h, s, l, colorSpace = ColorManagement.workingColorSpace) {\n      h = euclideanModulo(h, 1);\n      s = clamp(s, 0, 1);\n      l = clamp(l, 0, 1);\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        const p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        const q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n      ColorManagement.colorSpaceToWorking(this, colorSpace);\n      return this;\n    }\n    /**\n     * Sets this color from a CSS-style string. For example, `rgb(250, 0,0)`,\n     * `rgb(100%, 0%, 0%)`, `hsl(0, 100%, 50%)`, `#ff0000`, `#f00`, or `red` ( or\n     * any [X11 color name]{@link https://en.wikipedia.org/wiki/X11_color_names#Color_name_chart} -\n     * all 140 color names are supported).\n     *\n     * @param {string} style - Color as a CSS-style string.\n     * @param {string} [colorSpace=SRGBColorSpace] - The color space.\n     * @return {Color} A reference to this color.\n     */\n    setStyle(style, colorSpace = SRGBColorSpace) {\n      function handleAlpha(string) {\n        if (string === void 0) return;\n        if (parseFloat(string) < 1) {\n          console.warn("THREE.Color: Alpha component of " + style + " will be ignored.");\n        }\n      }\n      let m;\n      if (m = /^(\\w+)\\(([^\\)]*)\\)/.exec(style)) {\n        let color;\n        const name = m[1];\n        const components = m[2];\n        switch (name) {\n          case "rgb":\n          case "rgba":\n            if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              handleAlpha(color[4]);\n              return this.setRGB(\n                Math.min(255, parseInt(color[1], 10)) / 255,\n                Math.min(255, parseInt(color[2], 10)) / 255,\n                Math.min(255, parseInt(color[3], 10)) / 255,\n                colorSpace\n              );\n            }\n            if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              handleAlpha(color[4]);\n              return this.setRGB(\n                Math.min(100, parseInt(color[1], 10)) / 100,\n                Math.min(100, parseInt(color[2], 10)) / 100,\n                Math.min(100, parseInt(color[3], 10)) / 100,\n                colorSpace\n              );\n            }\n            break;\n          case "hsl":\n          case "hsla":\n            if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              handleAlpha(color[4]);\n              return this.setHSL(\n                parseFloat(color[1]) / 360,\n                parseFloat(color[2]) / 100,\n                parseFloat(color[3]) / 100,\n                colorSpace\n              );\n            }\n            break;\n          default:\n            console.warn("THREE.Color: Unknown color model " + style);\n        }\n      } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n        const hex = m[1];\n        const size = hex.length;\n        if (size === 3) {\n          return this.setRGB(\n            parseInt(hex.charAt(0), 16) / 15,\n            parseInt(hex.charAt(1), 16) / 15,\n            parseInt(hex.charAt(2), 16) / 15,\n            colorSpace\n          );\n        } else if (size === 6) {\n          return this.setHex(parseInt(hex, 16), colorSpace);\n        } else {\n          console.warn("THREE.Color: Invalid hex color " + style);\n        }\n      } else if (style && style.length > 0) {\n        return this.setColorName(style, colorSpace);\n      }\n      return this;\n    }\n    /**\n     * Sets this color from a color name. Faster than {@link Color#setStyle} if\n     * you don\'t need the other CSS-style formats.\n     *\n     * For convenience, the list of names is exposed in `Color.NAMES` as a hash.\n     * ```js\n     * Color.NAMES.aliceblue // returns 0xF0F8FF\n     * ```\n     *\n     * @param {string} style - The color name.\n     * @param {string} [colorSpace=SRGBColorSpace] - The color space.\n     * @return {Color} A reference to this color.\n     */\n    setColorName(style, colorSpace = SRGBColorSpace) {\n      const hex = _colorKeywords[style.toLowerCase()];\n      if (hex !== void 0) {\n        this.setHex(hex, colorSpace);\n      } else {\n        console.warn("THREE.Color: Unknown color " + style);\n      }\n      return this;\n    }\n    /**\n     * Returns a new color with copied values from this instance.\n     *\n     * @return {Color} A clone of this instance.\n     */\n    clone() {\n      return new this.constructor(this.r, this.g, this.b);\n    }\n    /**\n     * Copies the values of the given color to this instance.\n     *\n     * @param {Color} color - The color to copy.\n     * @return {Color} A reference to this color.\n     */\n    copy(color) {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n      return this;\n    }\n    /**\n     * Copies the given color into this color, and then converts this color from\n     * `SRGBColorSpace` to `LinearSRGBColorSpace`.\n     *\n     * @param {Color} color - The color to copy/convert.\n     * @return {Color} A reference to this color.\n     */\n    copySRGBToLinear(color) {\n      this.r = SRGBToLinear(color.r);\n      this.g = SRGBToLinear(color.g);\n      this.b = SRGBToLinear(color.b);\n      return this;\n    }\n    /**\n     * Copies the given color into this color, and then converts this color from\n     * `LinearSRGBColorSpace` to `SRGBColorSpace`.\n     *\n     * @param {Color} color - The color to copy/convert.\n     * @return {Color} A reference to this color.\n     */\n    copyLinearToSRGB(color) {\n      this.r = LinearToSRGB(color.r);\n      this.g = LinearToSRGB(color.g);\n      this.b = LinearToSRGB(color.b);\n      return this;\n    }\n    /**\n     * Converts this color from `SRGBColorSpace` to `LinearSRGBColorSpace`.\n     *\n     * @return {Color} A reference to this color.\n     */\n    convertSRGBToLinear() {\n      this.copySRGBToLinear(this);\n      return this;\n    }\n    /**\n     * Converts this color from `LinearSRGBColorSpace` to `SRGBColorSpace`.\n     *\n     * @return {Color} A reference to this color.\n     */\n    convertLinearToSRGB() {\n      this.copyLinearToSRGB(this);\n      return this;\n    }\n    /**\n     * Returns the hexadecimal value of this color.\n     *\n     * @param {string} [colorSpace=SRGBColorSpace] - The color space.\n     * @return {number} The hexadecimal value.\n     */\n    getHex(colorSpace = SRGBColorSpace) {\n      ColorManagement.workingToColorSpace(_color.copy(this), colorSpace);\n      return Math.round(clamp(_color.r * 255, 0, 255)) * 65536 + Math.round(clamp(_color.g * 255, 0, 255)) * 256 + Math.round(clamp(_color.b * 255, 0, 255));\n    }\n    /**\n     * Returns the hexadecimal value of this color as a string (for example, \'FFFFFF\').\n     *\n     * @param {string} [colorSpace=SRGBColorSpace] - The color space.\n     * @return {string} The hexadecimal value as a string.\n     */\n    getHexString(colorSpace = SRGBColorSpace) {\n      return ("000000" + this.getHex(colorSpace).toString(16)).slice(-6);\n    }\n    /**\n     * Converts the colors RGB values into the HSL format and stores them into the\n     * given target object.\n     *\n     * @param {{h:number,s:number,l:number}} target - The target object that is used to store the method\'s result.\n     * @param {string} [colorSpace=ColorManagement.workingColorSpace] - The color space.\n     * @return {{h:number,s:number,l:number}} The HSL representation of this color.\n     */\n    getHSL(target, colorSpace = ColorManagement.workingColorSpace) {\n      ColorManagement.workingToColorSpace(_color.copy(this), colorSpace);\n      const r = _color.r, g = _color.g, b = _color.b;\n      const max2 = Math.max(r, g, b);\n      const min = Math.min(r, g, b);\n      let hue, saturation;\n      const lightness = (min + max2) / 2;\n      if (min === max2) {\n        hue = 0;\n        saturation = 0;\n      } else {\n        const delta = max2 - min;\n        saturation = lightness <= 0.5 ? delta / (max2 + min) : delta / (2 - max2 - min);\n        switch (max2) {\n          case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n          case g:\n            hue = (b - r) / delta + 2;\n            break;\n          case b:\n            hue = (r - g) / delta + 4;\n            break;\n        }\n        hue /= 6;\n      }\n      target.h = hue;\n      target.s = saturation;\n      target.l = lightness;\n      return target;\n    }\n    /**\n     * Returns the RGB values of this color and stores them into the given target object.\n     *\n     * @param {Color} target - The target color that is used to store the method\'s result.\n     * @param {string} [colorSpace=ColorManagement.workingColorSpace] - The color space.\n     * @return {Color} The RGB representation of this color.\n     */\n    getRGB(target, colorSpace = ColorManagement.workingColorSpace) {\n      ColorManagement.workingToColorSpace(_color.copy(this), colorSpace);\n      target.r = _color.r;\n      target.g = _color.g;\n      target.b = _color.b;\n      return target;\n    }\n    /**\n     * Returns the value of this color as a CSS style string. Example: `rgb(255,0,0)`.\n     *\n     * @param {string} [colorSpace=SRGBColorSpace] - The color space.\n     * @return {string} The CSS representation of this color.\n     */\n    getStyle(colorSpace = SRGBColorSpace) {\n      ColorManagement.workingToColorSpace(_color.copy(this), colorSpace);\n      const r = _color.r, g = _color.g, b = _color.b;\n      if (colorSpace !== SRGBColorSpace) {\n        return `color(${colorSpace} ${r.toFixed(3)} ${g.toFixed(3)} ${b.toFixed(3)})`;\n      }\n      return `rgb(${Math.round(r * 255)},${Math.round(g * 255)},${Math.round(b * 255)})`;\n    }\n    /**\n     * Adds the given HSL values to this color\'s values.\n     * Internally, this converts the color\'s RGB values to HSL, adds HSL\n     * and then converts the color back to RGB.\n     *\n     * @param {number} h - Hue value between `0.0` and `1.0`.\n     * @param {number} s - Saturation value between `0.0` and `1.0`.\n     * @param {number} l - Lightness value between `0.0` and `1.0`.\n     * @return {Color} A reference to this color.\n     */\n    offsetHSL(h, s, l) {\n      this.getHSL(_hslA);\n      return this.setHSL(_hslA.h + h, _hslA.s + s, _hslA.l + l);\n    }\n    /**\n     * Adds the RGB values of the given color to the RGB values of this color.\n     *\n     * @param {Color} color - The color to add.\n     * @return {Color} A reference to this color.\n     */\n    add(color) {\n      this.r += color.r;\n      this.g += color.g;\n      this.b += color.b;\n      return this;\n    }\n    /**\n     * Adds the RGB values of the given colors and stores the result in this instance.\n     *\n     * @param {Color} color1 - The first color.\n     * @param {Color} color2 - The second color.\n     * @return {Color} A reference to this color.\n     */\n    addColors(color1, color2) {\n      this.r = color1.r + color2.r;\n      this.g = color1.g + color2.g;\n      this.b = color1.b + color2.b;\n      return this;\n    }\n    /**\n     * Adds the given scalar value to the RGB values of this color.\n     *\n     * @param {number} s - The scalar to add.\n     * @return {Color} A reference to this color.\n     */\n    addScalar(s) {\n      this.r += s;\n      this.g += s;\n      this.b += s;\n      return this;\n    }\n    /**\n     * Subtracts the RGB values of the given color from the RGB values of this color.\n     *\n     * @param {Color} color - The color to subtract.\n     * @return {Color} A reference to this color.\n     */\n    sub(color) {\n      this.r = Math.max(0, this.r - color.r);\n      this.g = Math.max(0, this.g - color.g);\n      this.b = Math.max(0, this.b - color.b);\n      return this;\n    }\n    /**\n     * Multiplies the RGB values of the given color with the RGB values of this color.\n     *\n     * @param {Color} color - The color to multiply.\n     * @return {Color} A reference to this color.\n     */\n    multiply(color) {\n      this.r *= color.r;\n      this.g *= color.g;\n      this.b *= color.b;\n      return this;\n    }\n    /**\n     * Multiplies the given scalar value with the RGB values of this color.\n     *\n     * @param {number} s - The scalar to multiply.\n     * @return {Color} A reference to this color.\n     */\n    multiplyScalar(s) {\n      this.r *= s;\n      this.g *= s;\n      this.b *= s;\n      return this;\n    }\n    /**\n     * Linearly interpolates this color\'s RGB values toward the RGB values of the\n     * given color. The alpha argument can be thought of as the ratio between\n     * the two colors, where `0.0` is this color and `1.0` is the first argument.\n     *\n     * @param {Color} color - The color to converge on.\n     * @param {number} alpha - The interpolation factor in the closed interval `[0,1]`.\n     * @return {Color} A reference to this color.\n     */\n    lerp(color, alpha) {\n      this.r += (color.r - this.r) * alpha;\n      this.g += (color.g - this.g) * alpha;\n      this.b += (color.b - this.b) * alpha;\n      return this;\n    }\n    /**\n     * Linearly interpolates between the given colors and stores the result in this instance.\n     * The alpha argument can be thought of as the ratio between the two colors, where `0.0`\n     * is the first and `1.0` is the second color.\n     *\n     * @param {Color} color1 - The first color.\n     * @param {Color} color2 - The second color.\n     * @param {number} alpha - The interpolation factor in the closed interval `[0,1]`.\n     * @return {Color} A reference to this color.\n     */\n    lerpColors(color1, color2, alpha) {\n      this.r = color1.r + (color2.r - color1.r) * alpha;\n      this.g = color1.g + (color2.g - color1.g) * alpha;\n      this.b = color1.b + (color2.b - color1.b) * alpha;\n      return this;\n    }\n    /**\n     * Linearly interpolates this color\'s HSL values toward the HSL values of the\n     * given color. It differs from {@link Color#lerp} by not interpolating straight\n     * from one color to the other, but instead going through all the hues in between\n     * those two colors. The alpha argument can be thought of as the ratio between\n     * the two colors, where 0.0 is this color and 1.0 is the first argument.\n     *\n     * @param {Color} color - The color to converge on.\n     * @param {number} alpha - The interpolation factor in the closed interval `[0,1]`.\n     * @return {Color} A reference to this color.\n     */\n    lerpHSL(color, alpha) {\n      this.getHSL(_hslA);\n      color.getHSL(_hslB);\n      const h = lerp(_hslA.h, _hslB.h, alpha);\n      const s = lerp(_hslA.s, _hslB.s, alpha);\n      const l = lerp(_hslA.l, _hslB.l, alpha);\n      this.setHSL(h, s, l);\n      return this;\n    }\n    /**\n     * Sets the color\'s RGB components from the given 3D vector.\n     *\n     * @param {Vector3} v - The vector to set.\n     * @return {Color} A reference to this color.\n     */\n    setFromVector3(v) {\n      this.r = v.x;\n      this.g = v.y;\n      this.b = v.z;\n      return this;\n    }\n    /**\n     * Transforms this color with the given 3x3 matrix.\n     *\n     * @param {Matrix3} m - The matrix.\n     * @return {Color} A reference to this color.\n     */\n    applyMatrix3(m) {\n      const r = this.r, g = this.g, b = this.b;\n      const e = m.elements;\n      this.r = e[0] * r + e[3] * g + e[6] * b;\n      this.g = e[1] * r + e[4] * g + e[7] * b;\n      this.b = e[2] * r + e[5] * g + e[8] * b;\n      return this;\n    }\n    /**\n     * Returns `true` if this color is equal with the given one.\n     *\n     * @param {Color} c - The color to test for equality.\n     * @return {boolean} Whether this bounding color is equal with the given one.\n     */\n    equals(c) {\n      return c.r === this.r && c.g === this.g && c.b === this.b;\n    }\n    /**\n     * Sets this color\'s RGB components from the given array.\n     *\n     * @param {Array<number>} array - An array holding the RGB values.\n     * @param {number} [offset=0] - The offset into the array.\n     * @return {Color} A reference to this color.\n     */\n    fromArray(array, offset = 0) {\n      this.r = array[offset];\n      this.g = array[offset + 1];\n      this.b = array[offset + 2];\n      return this;\n    }\n    /**\n     * Writes the RGB components of this color to the given array. If no array is provided,\n     * the method returns a new instance.\n     *\n     * @param {Array<number>} [array=[]] - The target array holding the color components.\n     * @param {number} [offset=0] - Index of the first element in the array.\n     * @return {Array<number>} The color components.\n     */\n    toArray(array = [], offset = 0) {\n      array[offset] = this.r;\n      array[offset + 1] = this.g;\n      array[offset + 2] = this.b;\n      return array;\n    }\n    /**\n     * Sets the components of this color from the given buffer attribute.\n     *\n     * @param {BufferAttribute} attribute - The buffer attribute holding color data.\n     * @param {number} index - The index into the attribute.\n     * @return {Color} A reference to this color.\n     */\n    fromBufferAttribute(attribute, index) {\n      this.r = attribute.getX(index);\n      this.g = attribute.getY(index);\n      this.b = attribute.getZ(index);\n      return this;\n    }\n    /**\n     * This methods defines the serialization result of this class. Returns the color\n     * as a hexadecimal value.\n     *\n     * @return {number} The hexadecimal value.\n     */\n    toJSON() {\n      return this.getHex();\n    }\n    *[Symbol.iterator]() {\n      yield this.r;\n      yield this.g;\n      yield this.b;\n    }\n  }\n  const _color = /* @__PURE__ */ new Color();\n  Color.NAMES = _colorKeywords;\n  if (typeof __THREE_DEVTOOLS__ !== "undefined") {\n    __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", { detail: {\n      revision: REVISION\n    } }));\n  }\n  if (typeof window !== "undefined") {\n    if (window.__THREE__) {\n      console.warn("WARNING: Multiple instances of Three.js being imported.");\n    } else {\n      window.__THREE__ = REVISION;\n    }\n  }\n  const LN_SCALE_MIN = -12;\n  const LN_SCALE_MAX = 9;\n  const LN_SCALE_ZERO = -30;\n  const SCALE_ZERO = Math.exp(LN_SCALE_ZERO);\n  const SPLAT_TEX_WIDTH_BITS = 11;\n  const SPLAT_TEX_HEIGHT_BITS = 11;\n  const SPLAT_TEX_WIDTH = 1 << SPLAT_TEX_WIDTH_BITS;\n  const SPLAT_TEX_HEIGHT = 1 << SPLAT_TEX_HEIGHT_BITS;\n  const SPLAT_TEX_MIN_HEIGHT = 1;\n  function unindentLines(s) {\n    var _a2;\n    let seenNonEmpty = false;\n    const lines = s.split("\\n").map((line) => {\n      const trimmedLine = line.trimEnd();\n      if (seenNonEmpty) {\n        return trimmedLine;\n      }\n      if (trimmedLine.length > 0) {\n        seenNonEmpty = true;\n        return trimmedLine;\n      }\n      return null;\n    }).filter((line) => line != null);\n    while (lines.length > 0 && lines[lines.length - 1].length === 0) {\n      lines.pop();\n    }\n    if (lines.length === 0) {\n      return [];\n    }\n    const indent = (_a2 = lines[0].match(/^\\s*/)) == null ? void 0 : _a2[0];\n    if (!indent) {\n      return lines;\n    }\n    const regex = new RegExp(`^${indent}`);\n    return lines.map((line) => line.replace(regex, ""));\n  }\n  function unindent(s) {\n    return unindentLines(s).join("\\n");\n  }\n  const f32buffer = new Float32Array(1);\n  const u32buffer = new Uint32Array(f32buffer.buffer);\n  const supportsFloat16Array = "Float16Array" in globalThis;\n  const f16buffer = supportsFloat16Array ? new globalThis["Float16Array"](1) : null;\n  const u16buffer = new Uint16Array(f16buffer == null ? void 0 : f16buffer.buffer);\n  function normalize(vec) {\n    const norm = Math.sqrt(vec.reduce((acc, v) => acc + v * v, 0));\n    return vec.map((v) => v / norm);\n  }\n  const toHalf = supportsFloat16Array ? toHalfNative : toHalfJS;\n  const fromHalf = supportsFloat16Array ? fromHalfNative : fromHalfJS;\n  function toHalfNative(f) {\n    f16buffer[0] = f;\n    return u16buffer[0];\n  }\n  function toHalfJS(f) {\n    f32buffer[0] = f;\n    const bits2 = u32buffer[0];\n    const sign = bits2 >> 31 & 1;\n    const exp = bits2 >> 23 & 255;\n    const frac = bits2 & 8388607;\n    const halfSign = sign << 15;\n    if (exp === 255) {\n      if (frac !== 0) {\n        return halfSign | 32767;\n      }\n      return halfSign | 31744;\n    }\n    const newExp = exp - 127 + 15;\n    if (newExp >= 31) {\n      return halfSign | 31744;\n    }\n    if (newExp <= 0) {\n      if (newExp < -10) {\n        return halfSign;\n      }\n      const subFrac = (frac | 8388608) >> 1 - newExp + 13;\n      return halfSign | subFrac;\n    }\n    const halfFrac = frac >> 13;\n    return halfSign | newExp << 10 | halfFrac;\n  }\n  function fromHalfNative(u) {\n    u16buffer[0] = u;\n    return f16buffer[0];\n  }\n  function fromHalfJS(h) {\n    const sign = h >> 15 & 1;\n    const exp = h >> 10 & 31;\n    const frac = h & 1023;\n    let f32bits;\n    if (exp === 0) {\n      if (frac === 0) {\n        f32bits = sign << 31;\n      } else {\n        let mant = frac;\n        let e = -14;\n        while ((mant & 1024) === 0) {\n          mant <<= 1;\n          e--;\n        }\n        mant &= 1023;\n        const newExp = e + 127;\n        const newFrac = mant << 13;\n        f32bits = sign << 31 | newExp << 23 | newFrac;\n      }\n    } else if (exp === 31) {\n      if (frac === 0) {\n        f32bits = sign << 31 | 2139095040;\n      } else {\n        f32bits = sign << 31 | 2143289344;\n      }\n    } else {\n      const newExp = exp - 15 + 127;\n      const newFrac = frac << 13;\n      f32bits = sign << 31 | newExp << 23 | newFrac;\n    }\n    u32buffer[0] = f32bits;\n    return f32buffer[0];\n  }\n  function floatToUint8(v) {\n    return Math.max(0, Math.min(255, Math.round(v * 255)));\n  }\n  function getArrayBuffers(ctx) {\n    const buffers = [];\n    const seen = /* @__PURE__ */ new Set();\n    function traverse(obj) {\n      if (obj && typeof obj === "object" && !seen.has(obj)) {\n        seen.add(obj);\n        if (obj instanceof ArrayBuffer) {\n          buffers.push(obj);\n        } else if (ArrayBuffer.isView(obj)) {\n          buffers.push(obj.buffer);\n        } else if (Array.isArray(obj)) {\n          obj.forEach(traverse);\n        } else {\n          Object.values(obj).forEach(traverse);\n        }\n      }\n    }\n    traverse(ctx);\n    return buffers;\n  }\n  function setPackedSplat(packedSplats, index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b, encoding) {\n    const rgbMin = (encoding == null ? void 0 : encoding.rgbMin) ?? 0;\n    const rgbMax = (encoding == null ? void 0 : encoding.rgbMax) ?? 1;\n    const rgbRange = rgbMax - rgbMin;\n    const uR = floatToUint8((r - rgbMin) / rgbRange);\n    const uG = floatToUint8((g - rgbMin) / rgbRange);\n    const uB = floatToUint8((b - rgbMin) / rgbRange);\n    const uA = floatToUint8(opacity);\n    const uQuat = encodeQuatOctXy88R8(\n      tempQuaternion.set(quatX, quatY, quatZ, quatW)\n    );\n    const uQuatX = uQuat & 255;\n    const uQuatY = uQuat >>> 8 & 255;\n    const uQuatZ = uQuat >>> 16 & 255;\n    const lnScaleMin = (encoding == null ? void 0 : encoding.lnScaleMin) ?? LN_SCALE_MIN;\n    const lnScaleMax = (encoding == null ? void 0 : encoding.lnScaleMax) ?? LN_SCALE_MAX;\n    const lnScaleScale = 254 / (lnScaleMax - lnScaleMin);\n    const uScaleX = scaleX < SCALE_ZERO ? 0 : Math.min(\n      255,\n      Math.max(\n        1,\n        Math.round((Math.log(scaleX) - lnScaleMin) * lnScaleScale) + 1\n      )\n    );\n    const uScaleY = scaleY < SCALE_ZERO ? 0 : Math.min(\n      255,\n      Math.max(\n        1,\n        Math.round((Math.log(scaleY) - lnScaleMin) * lnScaleScale) + 1\n      )\n    );\n    const uScaleZ = scaleZ < SCALE_ZERO ? 0 : Math.min(\n      255,\n      Math.max(\n        1,\n        Math.round((Math.log(scaleZ) - lnScaleMin) * lnScaleScale) + 1\n      )\n    );\n    const uCenterX = toHalf(x2);\n    const uCenterY = toHalf(y);\n    const uCenterZ = toHalf(z);\n    const i4 = index * 4;\n    packedSplats[i4] = uR | uG << 8 | uB << 16 | uA << 24;\n    packedSplats[i4 + 1] = uCenterX | uCenterY << 16;\n    packedSplats[i4 + 2] = uCenterZ | uQuatX << 16 | uQuatY << 24;\n    packedSplats[i4 + 3] = uScaleX | uScaleY << 8 | uScaleZ << 16 | uQuatZ << 24;\n  }\n  function setPackedSplatCenter(packedSplats, index, x2, y, z) {\n    const uCenterX = toHalf(x2);\n    const uCenterY = toHalf(y);\n    const uCenterZ = toHalf(z);\n    const i4 = index * 4;\n    packedSplats[i4 + 1] = uCenterX | uCenterY << 16;\n    packedSplats[i4 + 2] = uCenterZ | packedSplats[i4 + 2] & 4294901760;\n  }\n  function setPackedSplatScales(packedSplats, index, scaleX, scaleY, scaleZ, encoding) {\n    const lnScaleMin = (encoding == null ? void 0 : encoding.lnScaleMin) ?? LN_SCALE_MIN;\n    const lnScaleMax = (encoding == null ? void 0 : encoding.lnScaleMax) ?? LN_SCALE_MAX;\n    const lnScaleScale = 254 / (lnScaleMax - lnScaleMin);\n    const uScaleX = scaleX < SCALE_ZERO ? 0 : Math.min(\n      255,\n      Math.max(\n        1,\n        Math.round((Math.log(scaleX) - lnScaleMin) * lnScaleScale) + 1\n      )\n    );\n    const uScaleY = scaleY < SCALE_ZERO ? 0 : Math.min(\n      255,\n      Math.max(\n        1,\n        Math.round((Math.log(scaleY) - lnScaleMin) * lnScaleScale) + 1\n      )\n    );\n    const uScaleZ = scaleZ < SCALE_ZERO ? 0 : Math.min(\n      255,\n      Math.max(\n        1,\n        Math.round((Math.log(scaleZ) - lnScaleMin) * lnScaleScale) + 1\n      )\n    );\n    const i4 = index * 4;\n    packedSplats[i4 + 3] = uScaleX | uScaleY << 8 | uScaleZ << 16 | packedSplats[i4 + 3] & 4278190080;\n  }\n  const tempQuaternion = new Quaternion();\n  function setPackedSplatQuat(packedSplats, index, quatX, quatY, quatZ, quatW) {\n    const uQuat = encodeQuatOctXy88R8(\n      tempQuaternion.set(quatX, quatY, quatZ, quatW)\n    );\n    const uQuatX = uQuat & 255;\n    const uQuatY = uQuat >>> 8 & 255;\n    const uQuatZ = uQuat >>> 16 & 255;\n    const i4 = index * 4;\n    packedSplats[i4 + 2] = packedSplats[i4 + 2] & 65535 | uQuatX << 16 | uQuatY << 24;\n    packedSplats[i4 + 3] = packedSplats[i4 + 3] & 16777215 | uQuatZ << 24;\n  }\n  function setPackedSplatRgba(packedSplats, index, r, g, b, a, encoding) {\n    const rgbMin = (encoding == null ? void 0 : encoding.rgbMin) ?? 0;\n    const rgbMax = (encoding == null ? void 0 : encoding.rgbMax) ?? 1;\n    const rgbRange = rgbMax - rgbMin;\n    const uR = floatToUint8((r - rgbMin) / rgbRange);\n    const uG = floatToUint8((g - rgbMin) / rgbRange);\n    const uB = floatToUint8((b - rgbMin) / rgbRange);\n    const uA = floatToUint8(a);\n    const i4 = index * 4;\n    packedSplats[i4] = uR | uG << 8 | uB << 16 | uA << 24;\n  }\n  function setPackedSplatRgb(packedSplats, index, r, g, b, encoding) {\n    const rgbMin = (encoding == null ? void 0 : encoding.rgbMin) ?? 0;\n    const rgbMax = (encoding == null ? void 0 : encoding.rgbMax) ?? 1;\n    const rgbRange = rgbMax - rgbMin;\n    const uR = floatToUint8((r - rgbMin) / rgbRange);\n    const uG = floatToUint8((g - rgbMin) / rgbRange);\n    const uB = floatToUint8((b - rgbMin) / rgbRange);\n    const i4 = index * 4;\n    packedSplats[i4] = uR | uG << 8 | uB << 16 | packedSplats[i4] & 4278190080;\n  }\n  function setPackedSplatOpacity(packedSplats, index, opacity) {\n    const uA = floatToUint8(opacity);\n    const i4 = index * 4;\n    packedSplats[i4] = packedSplats[i4] & 16777215 | uA << 24;\n  }\n  new Vector3();\n  new Vector3();\n  new Color();\n  function getTextureSize(numSplats) {\n    const width = SPLAT_TEX_WIDTH;\n    const height = Math.max(\n      SPLAT_TEX_MIN_HEIGHT,\n      Math.min(SPLAT_TEX_HEIGHT, Math.ceil(numSplats / width))\n    );\n    const depth = Math.ceil(numSplats / (width * height));\n    const maxSplats = width * height * depth;\n    return { width, height, depth, maxSplats };\n  }\n  function computeMaxSplats(numSplats) {\n    const width = SPLAT_TEX_WIDTH;\n    const height = Math.max(\n      SPLAT_TEX_MIN_HEIGHT,\n      Math.min(SPLAT_TEX_HEIGHT, Math.ceil(numSplats / width))\n    );\n    const depth = Math.ceil(numSplats / (width * height));\n    return width * height * depth;\n  }\n  unindent(`\n  precision highp float;\n\n  in vec3 position;\n\n  void main() {\n    gl_Position = vec4(position.xy, 0.0, 1.0);\n  }\n`);\n  const tempNormalizedQuaternion = new Quaternion();\n  const tempAxis = new Vector3();\n  function encodeQuatOctXy88R8(q) {\n    const qnorm = tempNormalizedQuaternion.copy(q).normalize();\n    if (qnorm.w < 0) {\n      qnorm.set(-qnorm.x, -qnorm.y, -qnorm.z, -qnorm.w);\n    }\n    const theta = 2 * Math.acos(qnorm.w);\n    const xyz_norm = Math.sqrt(\n      qnorm.x * qnorm.x + qnorm.y * qnorm.y + qnorm.z * qnorm.z\n    );\n    const axis = xyz_norm < 1e-6 ? tempAxis.set(1, 0, 0) : tempAxis.set(qnorm.x, qnorm.y, qnorm.z).divideScalar(xyz_norm);\n    const sum = Math.abs(axis.x) + Math.abs(axis.y) + Math.abs(axis.z);\n    let p_x = axis.x / sum;\n    let p_y = axis.y / sum;\n    if (axis.z < 0) {\n      const tmp = p_x;\n      p_x = (1 - Math.abs(p_y)) * (p_x >= 0 ? 1 : -1);\n      p_y = (1 - Math.abs(tmp)) * (p_y >= 0 ? 1 : -1);\n    }\n    const u_f = p_x * 0.5 + 0.5;\n    const v_f = p_y * 0.5 + 0.5;\n    const quantU = Math.round(u_f * 255);\n    const quantV = Math.round(v_f * 255);\n    const angleInt = Math.round(theta * (255 / Math.PI));\n    return angleInt << 16 | quantV << 8 | quantU;\n  }\n  function packSint8Bytes(b0, b1, b22, b3) {\n    const clampedB0 = Math.max(-127, Math.min(127, b0 * 127));\n    const clampedB1 = Math.max(-127, Math.min(127, b1 * 127));\n    const clampedB2 = Math.max(-127, Math.min(127, b22 * 127));\n    const clampedB3 = Math.max(-127, Math.min(127, b3 * 127));\n    return clampedB0 & 255 | (clampedB1 & 255) << 8 | (clampedB2 & 255) << 16 | (clampedB3 & 255) << 24;\n  }\n  function encodeSh1Rgb(sh1Array, index, sh1Rgb, encoding) {\n    const sh1Min = (encoding == null ? void 0 : encoding.sh1Min) ?? -1;\n    const sh1Max = (encoding == null ? void 0 : encoding.sh1Max) ?? 1;\n    const sh1Mid = 0.5 * (sh1Min + sh1Max);\n    const sh1Scale = 126 / (sh1Max - sh1Min);\n    const base = index * 2;\n    for (let i2 = 0; i2 < 9; ++i2) {\n      const s = (sh1Rgb[i2] - sh1Mid) * sh1Scale;\n      const value = Math.round(Math.max(-63, Math.min(63, s))) & 127;\n      const bitStart = i2 * 7;\n      const bitEnd = bitStart + 7;\n      const wordStart = Math.floor(bitStart / 32);\n      const bitOffset = bitStart - wordStart * 32;\n      const firstWord = value << bitOffset & 4294967295;\n      sh1Array[base + wordStart] |= firstWord;\n      if (bitEnd > wordStart * 32 + 32) {\n        const secondWord = value >>> 32 - bitOffset & 4294967295;\n        sh1Array[base + wordStart + 1] |= secondWord;\n      }\n    }\n  }\n  function encodeSh2Rgb(sh2Array, index, sh2Rgb, encoding) {\n    const sh2Min = (encoding == null ? void 0 : encoding.sh2Min) ?? -1;\n    const sh2Max = (encoding == null ? void 0 : encoding.sh2Max) ?? 1;\n    const sh2Mid = 0.5 * (sh2Min + sh2Max);\n    const sh2Scale = 2 / (sh2Max - sh2Min);\n    sh2Array[index * 4 + 0] = packSint8Bytes(\n      (sh2Rgb[0] - sh2Mid) * sh2Scale,\n      (sh2Rgb[1] - sh2Mid) * sh2Scale,\n      (sh2Rgb[2] - sh2Mid) * sh2Scale,\n      (sh2Rgb[3] - sh2Mid) * sh2Scale\n    );\n    sh2Array[index * 4 + 1] = packSint8Bytes(\n      (sh2Rgb[4] - sh2Mid) * sh2Scale,\n      (sh2Rgb[5] - sh2Mid) * sh2Scale,\n      (sh2Rgb[6] - sh2Mid) * sh2Scale,\n      (sh2Rgb[7] - sh2Mid) * sh2Scale\n    );\n    sh2Array[index * 4 + 2] = packSint8Bytes(\n      (sh2Rgb[8] - sh2Mid) * sh2Scale,\n      (sh2Rgb[9] - sh2Mid) * sh2Scale,\n      (sh2Rgb[10] - sh2Mid) * sh2Scale,\n      (sh2Rgb[11] - sh2Mid) * sh2Scale\n    );\n    sh2Array[index * 4 + 3] = packSint8Bytes(\n      (sh2Rgb[12] - sh2Mid) * sh2Scale,\n      (sh2Rgb[13] - sh2Mid) * sh2Scale,\n      (sh2Rgb[14] - sh2Mid) * sh2Scale,\n      0\n    );\n  }\n  function encodeSh3Rgb(sh3Array, index, sh3Rgb, encoding) {\n    const sh3Min = (encoding == null ? void 0 : encoding.sh3Min) ?? -1;\n    const sh3Max = (encoding == null ? void 0 : encoding.sh3Max) ?? 1;\n    const sh3Mid = 0.5 * (sh3Min + sh3Max);\n    const sh3Scale = 62 / (sh3Max - sh3Min);\n    const base = index * 4;\n    for (let i2 = 0; i2 < 21; ++i2) {\n      const s = (sh3Rgb[i2] - sh3Mid) * sh3Scale;\n      const value = Math.round(Math.max(-31, Math.min(31, s))) & 63;\n      const bitStart = i2 * 6;\n      const bitEnd = bitStart + 6;\n      const wordStart = Math.floor(bitStart / 32);\n      const bitOffset = bitStart - wordStart * 32;\n      const firstWord = value << bitOffset & 4294967295;\n      sh3Array[base + wordStart] |= firstWord;\n      if (bitEnd > wordStart * 32 + 32) {\n        const secondWord = value >>> 32 - bitOffset & 4294967295;\n        sh3Array[base + wordStart + 1] |= secondWord;\n      }\n    }\n  }\n  function decompressPartialGzip(fileBytes, numBytes) {\n    const chunks = [];\n    let totalBytes = 0;\n    let result = null;\n    const gunzip = new Gunzip((data, final) => {\n      chunks.push(data);\n      totalBytes += data.length;\n      if (final || totalBytes >= numBytes) {\n        const allBytes = new Uint8Array(totalBytes);\n        let offset2 = 0;\n        for (const chunk of chunks) {\n          allBytes.set(chunk, offset2);\n          offset2 += chunk.length;\n        }\n        result = allBytes.slice(0, numBytes);\n      }\n    });\n    const CHUNK_SIZE = 1024;\n    let offset = 0;\n    while (result == null && offset < fileBytes.length) {\n      const chunk = fileBytes.slice(offset, offset + CHUNK_SIZE);\n      gunzip.push(chunk, false);\n      offset += CHUNK_SIZE;\n    }\n    if (result == null) {\n      gunzip.push(new Uint8Array(), true);\n      if (result == null) {\n        throw new Error("Failed to decompress partial gzip");\n      }\n    }\n    return result;\n  }\n  class GunzipReader {\n    constructor({\n      fileBytes,\n      chunkBytes = 64 * 1024\n    }) {\n      this.fileBytes = fileBytes;\n      this.chunkBytes = chunkBytes;\n      this.chunks = [];\n      this.totalBytes = 0;\n      const ds = new DecompressionStream("gzip");\n      const decompressionStream = new Blob([fileBytes]).stream().pipeThrough(ds);\n      this.reader = decompressionStream.getReader();\n    }\n    async read(numBytes) {\n      while (this.totalBytes < numBytes) {\n        const { value: chunk, done: readerDone } = await this.reader.read();\n        if (readerDone) {\n          break;\n        }\n        this.chunks.push(chunk);\n        this.totalBytes += chunk.length;\n      }\n      if (this.totalBytes < numBytes) {\n        throw new Error(\n          `Unexpected EOF: needed ${numBytes}, got ${this.totalBytes}`\n        );\n      }\n      const allBytes = new Uint8Array(this.totalBytes);\n      let outOffset = 0;\n      for (const chunk of this.chunks) {\n        allBytes.set(chunk, outOffset);\n        outOffset += chunk.length;\n      }\n      const result = allBytes.subarray(0, numBytes);\n      this.chunks = [allBytes.subarray(numBytes)];\n      this.totalBytes -= numBytes;\n      return result;\n    }\n  }\n  function decodeAntiSplat(fileBytes, initNumSplats, splatCallback) {\n    const numSplats = Math.floor(fileBytes.length / 32);\n    if (numSplats * 32 !== fileBytes.length) {\n      throw new Error("Invalid .splat file size");\n    }\n    initNumSplats(numSplats);\n    const f32 = new Float32Array(fileBytes.buffer);\n    for (let i2 = 0; i2 < numSplats; ++i2) {\n      const i322 = i2 * 32;\n      const i8 = i2 * 8;\n      const x2 = f32[i8 + 0];\n      const y = f32[i8 + 1];\n      const z = f32[i8 + 2];\n      const scaleX = f32[i8 + 3];\n      const scaleY = f32[i8 + 4];\n      const scaleZ = f32[i8 + 5];\n      const r = fileBytes[i322 + 24] / 255;\n      const g = fileBytes[i322 + 25] / 255;\n      const b = fileBytes[i322 + 26] / 255;\n      const opacity = fileBytes[i322 + 27] / 255;\n      const quatW = (fileBytes[i322 + 28] - 128) / 128;\n      const quatX = (fileBytes[i322 + 29] - 128) / 128;\n      const quatY = (fileBytes[i322 + 30] - 128) / 128;\n      const quatZ = (fileBytes[i322 + 31] - 128) / 128;\n      splatCallback(\n        i2,\n        x2,\n        y,\n        z,\n        scaleX,\n        scaleY,\n        scaleZ,\n        quatX,\n        quatY,\n        quatZ,\n        quatW,\n        opacity,\n        r,\n        g,\n        b\n      );\n    }\n  }\n  function unpackAntiSplat(fileBytes, splatEncoding) {\n    let numSplats = 0;\n    let maxSplats = 0;\n    let packedArray = new Uint32Array(0);\n    decodeAntiSplat(\n      fileBytes,\n      (cbNumSplats) => {\n        numSplats = cbNumSplats;\n        maxSplats = computeMaxSplats(numSplats);\n        packedArray = new Uint32Array(maxSplats * 4);\n      },\n      (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {\n        setPackedSplat(\n          packedArray,\n          index,\n          x2,\n          y,\n          z,\n          scaleX,\n          scaleY,\n          scaleZ,\n          quatX,\n          quatY,\n          quatZ,\n          quatW,\n          opacity,\n          r,\n          g,\n          b,\n          splatEncoding\n        );\n      }\n    );\n    return { packedArray, numSplats };\n  }\n  const KSPLAT_COMPRESSION = {\n    0: {\n      bytesPerCenter: 12,\n      bytesPerScale: 12,\n      bytesPerRotation: 16,\n      bytesPerColor: 4,\n      bytesPerSphericalHarmonicsComponent: 4,\n      scaleOffsetBytes: 12,\n      rotationOffsetBytes: 24,\n      colorOffsetBytes: 40,\n      sphericalHarmonicsOffsetBytes: 44,\n      scaleRange: 1\n    },\n    1: {\n      bytesPerCenter: 6,\n      bytesPerScale: 6,\n      bytesPerRotation: 8,\n      bytesPerColor: 4,\n      bytesPerSphericalHarmonicsComponent: 2,\n      scaleOffsetBytes: 6,\n      rotationOffsetBytes: 12,\n      colorOffsetBytes: 20,\n      sphericalHarmonicsOffsetBytes: 24,\n      scaleRange: 32767\n    },\n    2: {\n      bytesPerCenter: 6,\n      bytesPerScale: 6,\n      bytesPerRotation: 8,\n      bytesPerColor: 4,\n      bytesPerSphericalHarmonicsComponent: 1,\n      scaleOffsetBytes: 6,\n      rotationOffsetBytes: 12,\n      colorOffsetBytes: 20,\n      sphericalHarmonicsOffsetBytes: 24,\n      scaleRange: 32767\n    }\n  };\n  const KSPLAT_SH_DEGREE_TO_COMPONENTS = {\n    0: 0,\n    1: 9,\n    2: 24,\n    3: 45\n  };\n  function decodeKsplat(fileBytes, initNumSplats, splatCallback, shCallback) {\n    var _a2;\n    const HEADER_BYTES = 4096;\n    const SECTION_BYTES = 1024;\n    let headerOffset = 0;\n    const header = new DataView(fileBytes.buffer, headerOffset, HEADER_BYTES);\n    headerOffset += HEADER_BYTES;\n    const versionMajor = header.getUint8(0);\n    const versionMinor = header.getUint8(1);\n    if (versionMajor !== 0 || versionMinor < 1) {\n      throw new Error(\n        `Unsupported .ksplat version: ${versionMajor}.${versionMinor}`\n      );\n    }\n    const maxSectionCount = header.getUint32(4, true);\n    header.getUint32(16, true);\n    const compressionLevel = header.getUint16(20, true);\n    if (compressionLevel < 0 || compressionLevel > 2) {\n      throw new Error(`Invalid .ksplat compression level: ${compressionLevel}`);\n    }\n    const minSphericalHarmonicsCoeff = header.getFloat32(36, true) || -1.5;\n    const maxSphericalHarmonicsCoeff = header.getFloat32(40, true) || 1.5;\n    let sectionBase = HEADER_BYTES + maxSectionCount * SECTION_BYTES;\n    for (let section = 0; section < maxSectionCount; ++section) {\n      let getSh = function(splatOffset, component) {\n        if (compressionLevel === 0) {\n          return data.getFloat32(\n            splatOffset + sphericalHarmonicsOffsetBytes + component * 4,\n            true\n          );\n        }\n        if (compressionLevel === 1) {\n          return fromHalf(\n            data.getUint16(\n              splatOffset + sphericalHarmonicsOffsetBytes + component * 2,\n              true\n            )\n          );\n        }\n        const t = data.getUint8(splatOffset + sphericalHarmonicsOffsetBytes + component) / 255;\n        return minSphericalHarmonicsCoeff + t * (maxSphericalHarmonicsCoeff - minSphericalHarmonicsCoeff);\n      };\n      const section2 = new DataView(fileBytes.buffer, headerOffset, SECTION_BYTES);\n      headerOffset += SECTION_BYTES;\n      const sectionSplatCount = section2.getUint32(0, true);\n      const sectionMaxSplatCount = section2.getUint32(4, true);\n      const bucketSize = section2.getUint32(8, true);\n      const bucketCount = section2.getUint32(12, true);\n      const bucketBlockSize = section2.getFloat32(16, true);\n      const bucketStorageSizeBytes = section2.getUint16(20, true);\n      const compressionScaleRange = (section2.getUint32(24, true) || ((_a2 = KSPLAT_COMPRESSION[compressionLevel]) == null ? void 0 : _a2.scaleRange)) ?? 1;\n      const fullBucketCount = section2.getUint32(32, true);\n      const fullBucketSplats = fullBucketCount * bucketSize;\n      const partiallyFilledBucketCount = section2.getUint32(36, true);\n      const bucketsMetaDataSizeBytes = partiallyFilledBucketCount * 4;\n      const bucketsStorageSizeBytes = bucketStorageSizeBytes * bucketCount + bucketsMetaDataSizeBytes;\n      const sphericalHarmonicsDegree = section2.getUint16(40, true);\n      const shComponents = KSPLAT_SH_DEGREE_TO_COMPONENTS[sphericalHarmonicsDegree];\n      const {\n        bytesPerCenter,\n        bytesPerScale,\n        bytesPerRotation,\n        bytesPerColor,\n        bytesPerSphericalHarmonicsComponent,\n        scaleOffsetBytes,\n        rotationOffsetBytes,\n        colorOffsetBytes,\n        sphericalHarmonicsOffsetBytes\n      } = KSPLAT_COMPRESSION[compressionLevel];\n      const bytesPerSplat = bytesPerCenter + bytesPerScale + bytesPerRotation + bytesPerColor + shComponents * bytesPerSphericalHarmonicsComponent;\n      const splatDataStorageSizeBytes = bytesPerSplat * sectionMaxSplatCount;\n      const storageSizeBytes = splatDataStorageSizeBytes + bucketsStorageSizeBytes;\n      const sh1Index = [0, 3, 6, 1, 4, 7, 2, 5, 8];\n      const sh2Index = [\n        9,\n        14,\n        19,\n        10,\n        15,\n        20,\n        11,\n        16,\n        21,\n        12,\n        17,\n        22,\n        13,\n        18,\n        23\n      ];\n      const sh3Index = [\n        24,\n        31,\n        38,\n        25,\n        32,\n        39,\n        26,\n        33,\n        40,\n        27,\n        34,\n        41,\n        28,\n        35,\n        42,\n        29,\n        36,\n        43,\n        30,\n        37,\n        44\n      ];\n      const sh1 = sphericalHarmonicsDegree >= 1 ? new Float32Array(3 * 3) : void 0;\n      const sh2 = sphericalHarmonicsDegree >= 2 ? new Float32Array(5 * 3) : void 0;\n      const sh3 = sphericalHarmonicsDegree >= 3 ? new Float32Array(7 * 3) : void 0;\n      const compressionScaleFactor = bucketBlockSize / 2 / compressionScaleRange;\n      const bucketsBase = sectionBase + bucketsMetaDataSizeBytes;\n      const dataBase = sectionBase + bucketsStorageSizeBytes;\n      const data = new DataView(\n        fileBytes.buffer,\n        dataBase,\n        splatDataStorageSizeBytes\n      );\n      const bucketArray = new Float32Array(\n        fileBytes.buffer,\n        bucketsBase,\n        bucketCount * 3\n      );\n      const partiallyFilledBucketLengths = new Uint32Array(\n        fileBytes.buffer,\n        sectionBase,\n        partiallyFilledBucketCount\n      );\n      let partialBucketIndex = fullBucketCount;\n      let partialBucketBase = fullBucketSplats;\n      for (let i2 = 0; i2 < sectionSplatCount; ++i2) {\n        const splatOffset = i2 * bytesPerSplat;\n        let bucketIndex;\n        if (i2 < fullBucketSplats) {\n          bucketIndex = Math.floor(i2 / bucketSize);\n        } else {\n          const bucketLength = partiallyFilledBucketLengths[partialBucketIndex - fullBucketCount];\n          if (i2 >= partialBucketBase + bucketLength) {\n            partialBucketIndex += 1;\n            partialBucketBase += bucketLength;\n          }\n          bucketIndex = partialBucketIndex;\n        }\n        const x2 = compressionLevel === 0 ? data.getFloat32(splatOffset + 0, true) : (data.getUint16(splatOffset + 0, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 0];\n        const y = compressionLevel === 0 ? data.getFloat32(splatOffset + 4, true) : (data.getUint16(splatOffset + 2, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 1];\n        const z = compressionLevel === 0 ? data.getFloat32(splatOffset + 8, true) : (data.getUint16(splatOffset + 4, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 2];\n        const scaleX = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 0, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 0, true));\n        const scaleY = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 4, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 2, true));\n        const scaleZ = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 8, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 4, true));\n        const quatW = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 0, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 0, true)\n        );\n        const quatX = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 4, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 2, true)\n        );\n        const quatY = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 8, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 4, true)\n        );\n        const quatZ = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 12, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 6, true)\n        );\n        const r = data.getUint8(splatOffset + colorOffsetBytes + 0) / 255;\n        const g = data.getUint8(splatOffset + colorOffsetBytes + 1) / 255;\n        const b = data.getUint8(splatOffset + colorOffsetBytes + 2) / 255;\n        const opacity = data.getUint8(splatOffset + colorOffsetBytes + 3) / 255;\n        splatCallback(\n          i2,\n          x2,\n          y,\n          z,\n          scaleX,\n          scaleY,\n          scaleZ,\n          quatX,\n          quatY,\n          quatZ,\n          quatW,\n          opacity,\n          r,\n          g,\n          b\n        );\n        if (sphericalHarmonicsDegree >= 1 && sh1) {\n          for (const [i22, key] of sh1Index.entries()) {\n            sh1[i22] = getSh(splatOffset, key);\n          }\n          if (sh2) {\n            for (const [i22, key] of sh2Index.entries()) {\n              sh2[i22] = getSh(splatOffset, key);\n            }\n          }\n          if (sh3) {\n            for (const [i22, key] of sh3Index.entries()) {\n              sh3[i22] = getSh(splatOffset, key);\n            }\n          }\n          shCallback == null ? void 0 : shCallback(i2, sh1, sh2, sh3);\n        }\n      }\n      sectionBase += storageSizeBytes;\n    }\n  }\n  function unpackKsplat(fileBytes, splatEncoding) {\n    var _a2;\n    const HEADER_BYTES = 4096;\n    const SECTION_BYTES = 1024;\n    let headerOffset = 0;\n    const header = new DataView(fileBytes.buffer, headerOffset, HEADER_BYTES);\n    headerOffset += HEADER_BYTES;\n    const versionMajor = header.getUint8(0);\n    const versionMinor = header.getUint8(1);\n    if (versionMajor !== 0 || versionMinor < 1) {\n      throw new Error(\n        `Unsupported .ksplat version: ${versionMajor}.${versionMinor}`\n      );\n    }\n    const maxSectionCount = header.getUint32(4, true);\n    const splatCount = header.getUint32(16, true);\n    const compressionLevel = header.getUint16(20, true);\n    if (compressionLevel < 0 || compressionLevel > 2) {\n      throw new Error(`Invalid .ksplat compression level: ${compressionLevel}`);\n    }\n    const minSphericalHarmonicsCoeff = header.getFloat32(36, true) || -1.5;\n    const maxSphericalHarmonicsCoeff = header.getFloat32(40, true) || 1.5;\n    const numSplats = splatCount;\n    const maxSplats = computeMaxSplats(numSplats);\n    const packedArray = new Uint32Array(maxSplats * 4);\n    const extra = {};\n    let sectionBase = HEADER_BYTES + maxSectionCount * SECTION_BYTES;\n    for (let section = 0; section < maxSectionCount; ++section) {\n      let getSh = function(splatOffset, component) {\n        if (compressionLevel === 0) {\n          return data.getFloat32(\n            splatOffset + sphericalHarmonicsOffsetBytes + component * 4,\n            true\n          );\n        }\n        if (compressionLevel === 1) {\n          return fromHalf(\n            data.getUint16(\n              splatOffset + sphericalHarmonicsOffsetBytes + component * 2,\n              true\n            )\n          );\n        }\n        const t = data.getUint8(splatOffset + sphericalHarmonicsOffsetBytes + component) / 255;\n        return minSphericalHarmonicsCoeff + t * (maxSphericalHarmonicsCoeff - minSphericalHarmonicsCoeff);\n      };\n      const section2 = new DataView(fileBytes.buffer, headerOffset, SECTION_BYTES);\n      headerOffset += SECTION_BYTES;\n      const sectionSplatCount = section2.getUint32(0, true);\n      const sectionMaxSplatCount = section2.getUint32(4, true);\n      const bucketSize = section2.getUint32(8, true);\n      const bucketCount = section2.getUint32(12, true);\n      const bucketBlockSize = section2.getFloat32(16, true);\n      const bucketStorageSizeBytes = section2.getUint16(20, true);\n      const compressionScaleRange = (section2.getUint32(24, true) || ((_a2 = KSPLAT_COMPRESSION[compressionLevel]) == null ? void 0 : _a2.scaleRange)) ?? 1;\n      const fullBucketCount = section2.getUint32(32, true);\n      const fullBucketSplats = fullBucketCount * bucketSize;\n      const partiallyFilledBucketCount = section2.getUint32(36, true);\n      const bucketsMetaDataSizeBytes = partiallyFilledBucketCount * 4;\n      const bucketsStorageSizeBytes = bucketStorageSizeBytes * bucketCount + bucketsMetaDataSizeBytes;\n      const sphericalHarmonicsDegree = section2.getUint16(40, true);\n      const shComponents = KSPLAT_SH_DEGREE_TO_COMPONENTS[sphericalHarmonicsDegree];\n      const {\n        bytesPerCenter,\n        bytesPerScale,\n        bytesPerRotation,\n        bytesPerColor,\n        bytesPerSphericalHarmonicsComponent,\n        scaleOffsetBytes,\n        rotationOffsetBytes,\n        colorOffsetBytes,\n        sphericalHarmonicsOffsetBytes\n      } = KSPLAT_COMPRESSION[compressionLevel];\n      const bytesPerSplat = bytesPerCenter + bytesPerScale + bytesPerRotation + bytesPerColor + shComponents * bytesPerSphericalHarmonicsComponent;\n      const splatDataStorageSizeBytes = bytesPerSplat * sectionMaxSplatCount;\n      const storageSizeBytes = splatDataStorageSizeBytes + bucketsStorageSizeBytes;\n      const sh1Index = [0, 3, 6, 1, 4, 7, 2, 5, 8];\n      const sh2Index = [\n        9,\n        14,\n        19,\n        10,\n        15,\n        20,\n        11,\n        16,\n        21,\n        12,\n        17,\n        22,\n        13,\n        18,\n        23\n      ];\n      const sh3Index = [\n        24,\n        31,\n        38,\n        25,\n        32,\n        39,\n        26,\n        33,\n        40,\n        27,\n        34,\n        41,\n        28,\n        35,\n        42,\n        29,\n        36,\n        43,\n        30,\n        37,\n        44\n      ];\n      const sh1 = sphericalHarmonicsDegree >= 1 ? new Float32Array(3 * 3) : void 0;\n      const sh2 = sphericalHarmonicsDegree >= 2 ? new Float32Array(5 * 3) : void 0;\n      const sh3 = sphericalHarmonicsDegree >= 3 ? new Float32Array(7 * 3) : void 0;\n      const compressionScaleFactor = bucketBlockSize / 2 / compressionScaleRange;\n      const bucketsBase = sectionBase + bucketsMetaDataSizeBytes;\n      const dataBase = sectionBase + bucketsStorageSizeBytes;\n      const data = new DataView(\n        fileBytes.buffer,\n        dataBase,\n        splatDataStorageSizeBytes\n      );\n      const bucketArray = new Float32Array(\n        fileBytes.buffer,\n        bucketsBase,\n        bucketCount * 3\n      );\n      const partiallyFilledBucketLengths = new Uint32Array(\n        fileBytes.buffer,\n        sectionBase,\n        partiallyFilledBucketCount\n      );\n      let partialBucketIndex = fullBucketCount;\n      let partialBucketBase = fullBucketSplats;\n      for (let i2 = 0; i2 < sectionSplatCount; ++i2) {\n        const splatOffset = i2 * bytesPerSplat;\n        let bucketIndex;\n        if (i2 < fullBucketSplats) {\n          bucketIndex = Math.floor(i2 / bucketSize);\n        } else {\n          const bucketLength = partiallyFilledBucketLengths[partialBucketIndex - fullBucketCount];\n          if (i2 >= partialBucketBase + bucketLength) {\n            partialBucketIndex += 1;\n            partialBucketBase += bucketLength;\n          }\n          bucketIndex = partialBucketIndex;\n        }\n        const x2 = compressionLevel === 0 ? data.getFloat32(splatOffset + 0, true) : (data.getUint16(splatOffset + 0, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 0];\n        const y = compressionLevel === 0 ? data.getFloat32(splatOffset + 4, true) : (data.getUint16(splatOffset + 2, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 1];\n        const z = compressionLevel === 0 ? data.getFloat32(splatOffset + 8, true) : (data.getUint16(splatOffset + 4, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 2];\n        const scaleX = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 0, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 0, true));\n        const scaleY = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 4, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 2, true));\n        const scaleZ = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 8, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 4, true));\n        const quatW = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 0, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 0, true)\n        );\n        const quatX = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 4, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 2, true)\n        );\n        const quatY = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 8, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 4, true)\n        );\n        const quatZ = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 12, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 6, true)\n        );\n        const r = data.getUint8(splatOffset + colorOffsetBytes + 0) / 255;\n        const g = data.getUint8(splatOffset + colorOffsetBytes + 1) / 255;\n        const b = data.getUint8(splatOffset + colorOffsetBytes + 2) / 255;\n        const opacity = data.getUint8(splatOffset + colorOffsetBytes + 3) / 255;\n        setPackedSplat(\n          packedArray,\n          i2,\n          x2,\n          y,\n          z,\n          scaleX,\n          scaleY,\n          scaleZ,\n          quatX,\n          quatY,\n          quatZ,\n          quatW,\n          opacity,\n          r,\n          g,\n          b,\n          splatEncoding\n        );\n        if (sphericalHarmonicsDegree >= 1) {\n          if (sh1) {\n            if (!extra.sh1) {\n              extra.sh1 = new Uint32Array(numSplats * 2);\n            }\n            for (const [i22, key] of sh1Index.entries()) {\n              sh1[i22] = getSh(splatOffset, key);\n            }\n            encodeSh1Rgb(extra.sh1, i2, sh1, splatEncoding);\n          }\n          if (sh2) {\n            if (!extra.sh2) {\n              extra.sh2 = new Uint32Array(numSplats * 4);\n            }\n            for (const [i22, key] of sh2Index.entries()) {\n              sh2[i22] = getSh(splatOffset, key);\n            }\n            encodeSh2Rgb(extra.sh2, i2, sh2, splatEncoding);\n          }\n          if (sh3) {\n            if (!extra.sh3) {\n              extra.sh3 = new Uint32Array(numSplats * 4);\n            }\n            for (const [i22, key] of sh3Index.entries()) {\n              sh3[i22] = getSh(splatOffset, key);\n            }\n            encodeSh3Rgb(extra.sh3, i2, sh3, splatEncoding);\n          }\n        }\n      }\n      sectionBase += storageSizeBytes;\n    }\n    return { packedArray, numSplats, extra };\n  }\n  const PLY_PROPERTY_TYPES = [\n    "char",\n    "uchar",\n    "short",\n    "ushort",\n    "int",\n    "uint",\n    "float",\n    "double"\n  ];\n  const _PlyReader = class _PlyReader {\n    // Create a PlyReader from a Uint8Array/ArrayBuffer, no parsing done yet\n    constructor({ fileBytes }) {\n      this.header = "";\n      this.littleEndian = true;\n      this.elements = {};\n      this.comments = [];\n      this.data = null;\n      this.numSplats = 0;\n      this.fileBytes = fileBytes instanceof ArrayBuffer ? new Uint8Array(fileBytes) : fileBytes;\n    }\n    // Identify and parse the PLY text header (assumed to be <64KB in size).\n    // this.elements will contain all the elements in the file, typically\n    // "vertex" contains the Gsplat data.\n    async parseHeader() {\n      const bufferStream = new ReadableStream({\n        start: (controller) => {\n          controller.enqueue(this.fileBytes.slice(0, 65536));\n          controller.close();\n        }\n      });\n      const decoder = bufferStream.pipeThrough(new TextDecoderStream()).getReader();\n      this.header = "";\n      const headerTerminator = "end_header\\n";\n      while (true) {\n        const { value, done } = await decoder.read();\n        if (done) {\n          throw new Error("Failed to read header");\n        }\n        this.header += value;\n        const endHeader = this.header.indexOf(headerTerminator);\n        if (endHeader >= 0) {\n          this.header = this.header.slice(0, endHeader + headerTerminator.length);\n          break;\n        }\n      }\n      const headerLen = new TextEncoder().encode(this.header).length;\n      this.data = new DataView(this.fileBytes.buffer, headerLen);\n      this.elements = {};\n      let curElement = null;\n      this.comments = [];\n      this.header.trim().split("\\n").forEach((line, lineIndex) => {\n        const trimmedLine = line.trim();\n        if (lineIndex === 0) {\n          if (trimmedLine !== "ply") {\n            throw new Error("Invalid PLY header");\n          }\n          return;\n        }\n        if (trimmedLine.length === 0) {\n          return;\n        }\n        const fields = trimmedLine.split(" ");\n        switch (fields[0]) {\n          case "format":\n            if (fields[1] === "binary_little_endian") {\n              this.littleEndian = true;\n            } else if (fields[1] === "binary_big_endian") {\n              this.littleEndian = false;\n            } else {\n              throw new Error(`Unsupported PLY format: ${fields[1]}`);\n            }\n            if (fields[2] !== "1.0") {\n              throw new Error(`Unsupported PLY version: ${fields[2]}`);\n            }\n            break;\n          case "end_header":\n            break;\n          case "comment":\n            this.comments.push(trimmedLine.slice("comment ".length));\n            break;\n          case "element": {\n            const name = fields[1];\n            curElement = {\n              name,\n              count: Number.parseInt(fields[2]),\n              properties: {}\n            };\n            this.elements[name] = curElement;\n            break;\n          }\n          case "property":\n            if (curElement == null) {\n              throw new Error("Property must be inside an element");\n            }\n            if (fields[1] === "list") {\n              curElement.properties[fields[4]] = {\n                isList: true,\n                type: fields[3],\n                countType: fields[2]\n              };\n            } else {\n              curElement.properties[fields[2]] = {\n                isList: false,\n                type: fields[1]\n              };\n            }\n            break;\n        }\n      });\n      if (this.elements.vertex) {\n        this.numSplats = this.elements.vertex.count;\n      }\n    }\n    parseData(elementCallback) {\n      let offset = 0;\n      const data = this.data;\n      if (data == null) {\n        throw new Error("No data to parse");\n      }\n      for (const elementName in this.elements) {\n        const element = this.elements[elementName];\n        const { count, properties } = element;\n        const item = createEmptyItem(properties);\n        const parseFn = createParseFn(properties, this.littleEndian);\n        const callback = elementCallback(element) ?? (() => {\n        });\n        for (let index = 0; index < count; index++) {\n          offset = parseFn(data, offset, item);\n          callback(index, item);\n        }\n      }\n    }\n    // Parse all the Gsplat data in the PLY file in go, invoking the given\n    // callbacks for each Gsplat.\n    parseSplats(splatCallback, shCallback) {\n      if (this.elements.vertex == null) {\n        throw new Error("No vertex element found");\n      }\n      let isSuperSplat = false;\n      const ssChunks = [];\n      let numSh = 0;\n      let sh1Props = [];\n      let sh2Props = [];\n      let sh3Props = [];\n      let sh1 = void 0;\n      let sh2 = void 0;\n      let sh3 = void 0;\n      function prepareSh() {\n        const num_f_rest = NUM_SH_TO_NUM_F_REST[numSh];\n        sh1Props = new Array(3).fill(null).flatMap((_, k) => [0, 1, 2].map((_2, d) => k + d * num_f_rest / 3));\n        sh2Props = new Array(5).fill(null).flatMap(\n          (_, k) => [0, 1, 2].map((_2, d) => 3 + k + d * num_f_rest / 3)\n        );\n        sh3Props = new Array(7).fill(null).flatMap(\n          (_, k) => [0, 1, 2].map((_2, d) => 8 + k + d * num_f_rest / 3)\n        );\n        sh1 = numSh >= 1 ? new Float32Array(3 * 3) : void 0;\n        sh2 = numSh >= 2 ? new Float32Array(5 * 3) : void 0;\n        sh3 = numSh >= 3 ? new Float32Array(7 * 3) : void 0;\n      }\n      function ssShCallback(index, item) {\n        if (!sh1) {\n          throw new Error("Missing sh1");\n        }\n        const sh = item.f_rest;\n        for (let i2 = 0; i2 < sh1Props.length; i2++) {\n          sh1[i2] = sh[sh1Props[i2]] * 8 / 255 - 4;\n        }\n        if (sh2) {\n          for (let i2 = 0; i2 < sh2Props.length; i2++) {\n            sh2[i2] = sh[sh2Props[i2]] * 8 / 255 - 4;\n          }\n        }\n        if (sh3) {\n          for (let i2 = 0; i2 < sh3Props.length; i2++) {\n            sh3[i2] = sh[sh3Props[i2]] * 8 / 255 - 4;\n          }\n        }\n        shCallback == null ? void 0 : shCallback(index, sh1, sh2, sh3);\n      }\n      function initSuperSplat(element) {\n        const {\n          min_x,\n          min_y,\n          min_z,\n          max_x,\n          max_y,\n          max_z,\n          min_scale_x,\n          min_scale_y,\n          min_scale_z,\n          max_scale_x,\n          max_scale_y,\n          max_scale_z\n        } = element.properties;\n        if (!min_x || !min_y || !min_z || !max_x || !max_y || !max_z || !min_scale_x || !min_scale_y || !min_scale_z || !max_scale_x || !max_scale_y || !max_scale_z) {\n          throw new Error("Missing PLY chunk properties");\n        }\n        isSuperSplat = true;\n        return (index, item) => {\n          const {\n            min_x: min_x2,\n            min_y: min_y2,\n            min_z: min_z2,\n            max_x: max_x2,\n            max_y: max_y2,\n            max_z: max_z2,\n            min_scale_x: min_scale_x2,\n            min_scale_y: min_scale_y2,\n            min_scale_z: min_scale_z2,\n            max_scale_x: max_scale_x2,\n            max_scale_y: max_scale_y2,\n            max_scale_z: max_scale_z2,\n            min_r,\n            min_g,\n            min_b,\n            max_r,\n            max_g,\n            max_b\n          } = item;\n          ssChunks.push({\n            min_x: min_x2,\n            min_y: min_y2,\n            min_z: min_z2,\n            max_x: max_x2,\n            max_y: max_y2,\n            max_z: max_z2,\n            min_scale_x: min_scale_x2,\n            min_scale_y: min_scale_y2,\n            min_scale_z: min_scale_z2,\n            max_scale_x: max_scale_x2,\n            max_scale_y: max_scale_y2,\n            max_scale_z: max_scale_z2,\n            min_r,\n            min_g,\n            min_b,\n            max_r,\n            max_g,\n            max_b\n          });\n        };\n      }\n      function decodeSuperSplat(element) {\n        if (shCallback && element.name === "sh") {\n          numSh = getNumSh(element.properties);\n          prepareSh();\n          return ssShCallback;\n        }\n        if (element.name !== "vertex") {\n          return null;\n        }\n        const { packed_position, packed_rotation, packed_scale, packed_color } = element.properties;\n        if (!packed_position || !packed_rotation || !packed_scale || !packed_color) {\n          throw new Error(\n            "Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color"\n          );\n        }\n        const SQRT2 = Math.sqrt(2);\n        return (index, item) => {\n          const chunk = ssChunks[index >>> 8];\n          if (chunk == null) {\n            throw new Error("Missing PLY chunk");\n          }\n          const {\n            min_x,\n            min_y,\n            min_z,\n            max_x,\n            max_y,\n            max_z,\n            min_scale_x,\n            min_scale_y,\n            min_scale_z,\n            max_scale_x,\n            max_scale_y,\n            max_scale_z,\n            min_r,\n            min_g,\n            min_b,\n            max_r,\n            max_g,\n            max_b\n          } = chunk;\n          const { packed_position: packed_position2, packed_rotation: packed_rotation2, packed_scale: packed_scale2, packed_color: packed_color2 } = item;\n          const x2 = (packed_position2 >>> 21 & 2047) / 2047 * (max_x - min_x) + min_x;\n          const y = (packed_position2 >>> 11 & 1023) / 1023 * (max_y - min_y) + min_y;\n          const z = (packed_position2 & 2047) / 2047 * (max_z - min_z) + min_z;\n          const r0 = ((packed_rotation2 >>> 20 & 1023) / 1023 - 0.5) * SQRT2;\n          const r1 = ((packed_rotation2 >>> 10 & 1023) / 1023 - 0.5) * SQRT2;\n          const r2 = ((packed_rotation2 & 1023) / 1023 - 0.5) * SQRT2;\n          const rr = Math.sqrt(Math.max(0, 1 - r0 * r0 - r1 * r1 - r2 * r2));\n          const rOrder = packed_rotation2 >>> 30;\n          const quatX = rOrder === 0 ? r0 : rOrder === 1 ? rr : r1;\n          const quatY = rOrder <= 1 ? r1 : rOrder === 2 ? rr : r2;\n          const quatZ = rOrder <= 2 ? r2 : rr;\n          const quatW = rOrder === 0 ? rr : r0;\n          const scaleX = Math.exp(\n            (packed_scale2 >>> 21 & 2047) / 2047 * (max_scale_x - min_scale_x) + min_scale_x\n          );\n          const scaleY = Math.exp(\n            (packed_scale2 >>> 11 & 1023) / 1023 * (max_scale_y - min_scale_y) + min_scale_y\n          );\n          const scaleZ = Math.exp(\n            (packed_scale2 & 2047) / 2047 * (max_scale_z - min_scale_z) + min_scale_z\n          );\n          const r = (packed_color2 >>> 24 & 255) / 255 * ((max_r ?? 1) - (min_r ?? 0)) + (min_r ?? 0);\n          const g = (packed_color2 >>> 16 & 255) / 255 * ((max_g ?? 1) - (min_g ?? 0)) + (min_g ?? 0);\n          const b = (packed_color2 >>> 8 & 255) / 255 * ((max_b ?? 1) - (min_b ?? 0)) + (min_b ?? 0);\n          const opacity = (packed_color2 & 255) / 255;\n          splatCallback(\n            index,\n            x2,\n            y,\n            z,\n            scaleX,\n            scaleY,\n            scaleZ,\n            quatX,\n            quatY,\n            quatZ,\n            quatW,\n            opacity,\n            r,\n            g,\n            b\n          );\n        };\n      }\n      const elementCallback = (element) => {\n        if (element.name === "chunk") {\n          return initSuperSplat(element);\n        }\n        if (isSuperSplat) {\n          return decodeSuperSplat(element);\n        }\n        if (element.name !== "vertex") {\n          return null;\n        }\n        const {\n          x: x2,\n          y,\n          z,\n          scale_0,\n          scale_1,\n          scale_2,\n          rot_0,\n          rot_1,\n          rot_2,\n          rot_3,\n          opacity,\n          f_dc_0,\n          f_dc_1,\n          f_dc_2,\n          red,\n          green,\n          blue,\n          alpha\n        } = element.properties;\n        if (!x2 || !y || !z) {\n          throw new Error("Missing PLY properties: x, y, z");\n        }\n        const hasScales = scale_0 && scale_1 && scale_2;\n        const hasRots = rot_0 && rot_1 && rot_2 && rot_3;\n        const alphaDiv = alpha != null ? FIELD_SCALE[alpha.type] : 1;\n        const redDiv = red != null ? FIELD_SCALE[red.type] : 1;\n        const greenDiv = green != null ? FIELD_SCALE[green.type] : 1;\n        const blueDiv = blue != null ? FIELD_SCALE[blue.type] : 1;\n        numSh = getNumSh(element.properties);\n        prepareSh();\n        return (index, item) => {\n          const scaleX = hasScales ? Math.exp(item.scale_0) : _PlyReader.defaultPointScale;\n          const scaleY = hasScales ? Math.exp(item.scale_1) : _PlyReader.defaultPointScale;\n          const scaleZ = hasScales ? Math.exp(item.scale_2) : _PlyReader.defaultPointScale;\n          const quatX = hasRots ? item.rot_1 : 0;\n          const quatY = hasRots ? item.rot_2 : 0;\n          const quatZ = hasRots ? item.rot_3 : 0;\n          const quatW = hasRots ? item.rot_0 : 1;\n          const op = opacity != null ? 1 / (1 + Math.exp(-item.opacity)) : alpha != null ? item.alpha / alphaDiv : 1;\n          const r = f_dc_0 != null ? item.f_dc_0 * SH_C0$1 + 0.5 : red != null ? item.red / redDiv : 1;\n          const g = f_dc_1 != null ? item.f_dc_1 * SH_C0$1 + 0.5 : green != null ? item.green / greenDiv : 1;\n          const b = f_dc_2 != null ? item.f_dc_2 * SH_C0$1 + 0.5 : blue != null ? item.blue / blueDiv : 1;\n          splatCallback(\n            index,\n            item.x,\n            item.y,\n            item.z,\n            scaleX,\n            scaleY,\n            scaleZ,\n            quatX,\n            quatY,\n            quatZ,\n            quatW,\n            op,\n            r,\n            g,\n            b\n          );\n          if (shCallback && sh1) {\n            const sh = item.f_rest;\n            if (sh1) {\n              for (let i2 = 0; i2 < sh1Props.length; i2++) {\n                sh1[i2] = sh[sh1Props[i2]];\n              }\n            }\n            if (sh2) {\n              for (let i2 = 0; i2 < sh2Props.length; i2++) {\n                sh2[i2] = sh[sh2Props[i2]];\n              }\n            }\n            if (sh3) {\n              for (let i2 = 0; i2 < sh3Props.length; i2++) {\n                sh3[i2] = sh[sh3Props[i2]];\n              }\n            }\n            shCallback(index, sh1, sh2, sh3);\n          }\n        };\n      };\n      this.parseData(elementCallback);\n    }\n    // Inject RGBA values into original PLY file, which can be used to modify\n    // the color/opacity of the Gsplats and write out the modified PLY file.\n    injectRgba(rgba) {\n      let offset = 0;\n      const data = this.data;\n      if (data == null) {\n        throw new Error("No parsed data");\n      }\n      if (rgba.length !== this.numSplats * 4) {\n        throw new Error("Invalid RGBA array length");\n      }\n      for (const elementName in this.elements) {\n        const element = this.elements[elementName];\n        const { count, properties } = element;\n        const parsers = [];\n        let rgbaOffset = 0;\n        const isVertex = elementName === "vertex";\n        if (isVertex) {\n          for (const name of ["opacity", "f_dc_0", "f_dc_1", "f_dc_2"]) {\n            if (!properties[name] || properties[name].type !== "float") {\n              throw new Error(`Can\'t injectRgba due to property: ${name}`);\n            }\n          }\n        }\n        for (const [propertyName, property] of Object.entries(properties)) {\n          if (!property.isList) {\n            if (isVertex) {\n              if (propertyName === "f_dc_0" || propertyName === "f_dc_1" || propertyName === "f_dc_2") {\n                const component = Number.parseInt(\n                  propertyName.slice("f_dc_".length)\n                );\n                parsers.push(() => {\n                  const value = (rgba[rgbaOffset + component] / 255 - 0.5) / SH_C0$1;\n                  SET_FIELD[property.type](\n                    data,\n                    offset,\n                    this.littleEndian,\n                    value\n                  );\n                });\n              } else if (propertyName === "opacity") {\n                parsers.push(() => {\n                  const value = Math.max(\n                    -100,\n                    Math.min(\n                      100,\n                      -Math.log(1 / (rgba[rgbaOffset + 3] / 255) - 1)\n                    )\n                  );\n                  SET_FIELD[property.type](\n                    data,\n                    offset,\n                    this.littleEndian,\n                    value\n                  );\n                });\n              }\n            }\n            parsers.push(() => {\n              offset += FIELD_BYTES[property.type];\n            });\n          } else {\n            parsers.push(() => {\n              const length = PARSE_FIELD[property.countType](\n                data,\n                offset,\n                this.littleEndian\n              );\n              offset += FIELD_BYTES[property.countType];\n              offset += length * FIELD_BYTES[property.type];\n            });\n          }\n        }\n        for (let index = 0; index < count; index++) {\n          for (const parser of parsers) {\n            parser();\n          }\n          if (isVertex) {\n            rgbaOffset += 4;\n          }\n        }\n      }\n    }\n  };\n  _PlyReader.defaultPointScale = 1e-3;\n  let PlyReader = _PlyReader;\n  const SH_C0$1 = 0.28209479177387814;\n  const PARSE_FIELD = {\n    char: (data, offset, littleEndian) => {\n      return data.getInt8(offset);\n    },\n    uchar: (data, offset, littleEndian) => {\n      return data.getUint8(offset);\n    },\n    short: (data, offset, littleEndian) => {\n      return data.getInt16(offset, littleEndian);\n    },\n    ushort: (data, offset, littleEndian) => {\n      return data.getUint16(offset, littleEndian);\n    },\n    int: (data, offset, littleEndian) => {\n      return data.getInt32(offset, littleEndian);\n    },\n    uint: (data, offset, littleEndian) => {\n      return data.getUint32(offset, littleEndian);\n    },\n    float: (data, offset, littleEndian) => {\n      return data.getFloat32(offset, littleEndian);\n    },\n    double: (data, offset, littleEndian) => {\n      return data.getFloat64(offset, littleEndian);\n    }\n  };\n  const SET_FIELD = {\n    char: (data, offset, littleEndian, value) => {\n      data.setInt8(offset, value);\n    },\n    uchar: (data, offset, littleEndian, value) => {\n      data.setUint8(offset, value);\n    },\n    short: (data, offset, littleEndian, value) => {\n      data.setInt16(offset, value, littleEndian);\n    },\n    ushort: (data, offset, littleEndian, value) => {\n      data.setUint16(offset, value, littleEndian);\n    },\n    int: (data, offset, littleEndian, value) => {\n      data.setInt32(offset, value, littleEndian);\n    },\n    uint: (data, offset, littleEndian, value) => {\n      data.setUint32(offset, value, littleEndian);\n    },\n    float: (data, offset, littleEndian, value) => {\n      data.setFloat32(offset, value, littleEndian);\n    },\n    double: (data, offset, littleEndian, value) => {\n      data.setFloat64(offset, value, littleEndian);\n    }\n  };\n  const FIELD_BYTES = {\n    char: 1,\n    uchar: 1,\n    short: 2,\n    ushort: 2,\n    int: 4,\n    uint: 4,\n    float: 4,\n    double: 8\n  };\n  const FIELD_SCALE = {\n    char: 127,\n    uchar: 255,\n    short: 32767,\n    ushort: 65535,\n    int: 2147483647,\n    uint: 4294967295,\n    float: 1,\n    double: 1\n  };\n  const NUM_F_REST_TO_NUM_SH = {\n    0: 0,\n    9: 1,\n    24: 2,\n    45: 3\n  };\n  const NUM_SH_TO_NUM_F_REST = {\n    0: 0,\n    1: 9,\n    2: 24,\n    3: 45\n  };\n  const F_REST_REGEX = /^f_rest_([0-9]{1,2})$/;\n  function createEmptyItem(properties) {\n    const item = {};\n    for (const [propertyName, property] of Object.entries(properties)) {\n      if (F_REST_REGEX.test(propertyName)) {\n        item.f_rest = new Array(getNumSh(properties));\n      } else {\n        item[propertyName] = property.isList ? [] : 0;\n      }\n    }\n    return item;\n  }\n  function createParseFn(properties, littleEndian) {\n    if (safeToCompile(properties)) {\n      return createCompiledParserFn(properties, littleEndian);\n    }\n    return createDynamicParserFn(properties, littleEndian);\n  }\n  const UNSAFE_EVAL_ALLOWED = (() => {\n    try {\n      new Function("return 42;");\n    } catch (e) {\n      return false;\n    }\n    return true;\n  })();\n  const PROPERTY_NAME_REGEX = /^[a-zA-Z0-9_]+$/;\n  function safeToCompile(properties) {\n    if (!UNSAFE_EVAL_ALLOWED) {\n      return false;\n    }\n    for (const [propertyName, property] of Object.entries(properties)) {\n      if (!PROPERTY_NAME_REGEX.test(propertyName)) {\n        return false;\n      }\n      if (property.isList && !PLY_PROPERTY_TYPES.includes(property.countType)) {\n        return false;\n      }\n      if (!PLY_PROPERTY_TYPES.includes(property.type)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function createCompiledParserFn(properties, littleEndian) {\n    const parserSrc = ["let list;"];\n    for (const [propertyName, property] of Object.entries(properties)) {\n      const fRestMatch = propertyName.match(F_REST_REGEX);\n      if (fRestMatch) {\n        const fRestIndex = +fRestMatch[1];\n        parserSrc.push(\n          /*js*/\n          `\n        item.f_rest[${fRestIndex}] = PARSE_FIELD[\'${property.type}\'](data, offset, ${littleEndian});\n        offset += ${FIELD_BYTES[property.type]};\n      `\n        );\n      } else if (!property.isList) {\n        parserSrc.push(\n          /*js*/\n          `\n        item[\'${propertyName}\'] = PARSE_FIELD[\'${property.type}\'](data, offset, ${littleEndian});\n        offset += ${FIELD_BYTES[property.type]};\n      `\n        );\n      } else {\n        parserSrc.push(\n          /*js*/\n          `\n        list = item[\'${propertyName}\'];\n        list.length = PARSE_FIELD[\'${property.countType}\'](data, offset, ${littleEndian});\n        offset += ${FIELD_BYTES[property.countType]};\n        for (let i = 0; i < list.length; i++) {\n          list[i] = PARSE_FIELD[\'${property.type}\'](data, offset, ${littleEndian});\n          offset += ${FIELD_BYTES[property.type]};\n        }\n      `\n        );\n      }\n    }\n    parserSrc.push("return offset;");\n    const fn = new Function(\n      "data",\n      "offset",\n      "item",\n      "PARSE_FIELD",\n      parserSrc.join("\\n")\n    );\n    return (data, offset, item) => fn(data, offset, item, PARSE_FIELD);\n  }\n  function createDynamicParserFn(properties, littleEndian) {\n    const parsers = [];\n    for (const [propertyName, property] of Object.entries(properties)) {\n      const fRestMatch = propertyName.match(F_REST_REGEX);\n      if (fRestMatch) {\n        const fRestIndex = +fRestMatch[1];\n        parsers.push(\n          (data, offset, item) => {\n            item.f_rest[fRestIndex] = PARSE_FIELD[property.type](\n              data,\n              offset,\n              littleEndian\n            );\n            return offset + FIELD_BYTES[property.type];\n          }\n        );\n      } else if (!property.isList) {\n        parsers.push(\n          (data, offset, item) => {\n            item[propertyName] = PARSE_FIELD[property.type](\n              data,\n              offset,\n              littleEndian\n            );\n            return offset + FIELD_BYTES[property.type];\n          }\n        );\n      } else {\n        parsers.push(\n          (data, offset, item) => {\n            const list = item[propertyName];\n            list.length = PARSE_FIELD[property.countType](\n              data,\n              offset,\n              littleEndian\n            );\n            let currentOffset = offset + FIELD_BYTES[property.countType];\n            for (let i2 = 0; i2 < list.length; i2++) {\n              list[i2] = PARSE_FIELD[property.type](\n                data,\n                currentOffset,\n                littleEndian\n              );\n              currentOffset += FIELD_BYTES[property.type];\n            }\n            return currentOffset;\n          }\n        );\n      }\n    }\n    return (data, offset, item) => {\n      let currentOffset = offset;\n      for (let parserIndex = 0; parserIndex < parsers.length; parserIndex++) {\n        currentOffset = parsers[parserIndex](data, currentOffset, item);\n      }\n      return currentOffset;\n    };\n  }\n  function getNumSh(properties) {\n    let num_f_rest = 0;\n    while (properties[`f_rest_${num_f_rest}`]) {\n      num_f_rest += 1;\n    }\n    const numSh = NUM_F_REST_TO_NUM_SH[num_f_rest];\n    if (numSh == null) {\n      throw new Error(`Unsupported number of SH coefficients: ${num_f_rest}`);\n    }\n    return numSh;\n  }\n  var SplatFileType = /* @__PURE__ */ ((SplatFileType2) => {\n    SplatFileType2["PLY"] = "ply";\n    SplatFileType2["SPZ"] = "spz";\n    SplatFileType2["SPLAT"] = "splat";\n    SplatFileType2["KSPLAT"] = "ksplat";\n    SplatFileType2["PCSOGS"] = "pcsogs";\n    SplatFileType2["PCSOGSZIP"] = "pcsogszip";\n    return SplatFileType2;\n  })(SplatFileType || {});\n  function getSplatFileType(fileBytes) {\n    const view = new DataView(fileBytes.buffer);\n    if ((view.getUint32(0, true) & 16777215) === 7957616) {\n      return "ply";\n    }\n    if ((view.getUint32(0, true) & 16777215) === 559903) {\n      const header = decompressPartialGzip(fileBytes, 4);\n      const gView = new DataView(header.buffer);\n      if (gView.getUint32(0, true) === 1347635022) {\n        return "spz";\n      }\n      return void 0;\n    }\n    if (view.getUint32(0, true) === 67324752) {\n      if (tryPcSogsZip(fileBytes)) {\n        return "pcsogszip";\n      }\n      return void 0;\n    }\n    return void 0;\n  }\n  function getFileExtension(pathOrUrl) {\n    const noTrailing = pathOrUrl.split(/[?#]/, 1)[0];\n    const lastSlash = Math.max(\n      noTrailing.lastIndexOf("/"),\n      noTrailing.lastIndexOf("\\\\")\n    );\n    const filename = noTrailing.slice(lastSlash + 1);\n    const lastDot = filename.lastIndexOf(".");\n    if (lastDot <= 0 || lastDot === filename.length - 1) {\n      return "";\n    }\n    return filename.slice(lastDot + 1).toLowerCase();\n  }\n  function getSplatFileTypeFromPath(pathOrUrl) {\n    const extension = getFileExtension(pathOrUrl);\n    if (extension === "ply") {\n      return "ply";\n    }\n    if (extension === "spz") {\n      return "spz";\n    }\n    if (extension === "splat") {\n      return "splat";\n    }\n    if (extension === "ksplat") {\n      return "ksplat";\n    }\n    if (extension === "sog") {\n      return "pcsogszip";\n    }\n    return void 0;\n  }\n  function tryPcSogs(input) {\n    try {\n      let text;\n      if (typeof input === "string") {\n        text = input;\n      } else {\n        const fileBytes = input instanceof ArrayBuffer ? new Uint8Array(input) : input;\n        if (fileBytes.length > 65536) {\n          return void 0;\n        }\n        text = new TextDecoder().decode(fileBytes);\n      }\n      const json = JSON.parse(text);\n      if (!json || typeof json !== "object" || Array.isArray(json)) {\n        return void 0;\n      }\n      const isVersion2 = json.version === 2;\n      for (const key of ["means", "scales", "quats", "sh0"]) {\n        if (!json[key] || typeof json[key] !== "object" || Array.isArray(json[key])) {\n          return void 0;\n        }\n        if (isVersion2) {\n          if (!json[key].files) {\n            return void 0;\n          }\n          if ((key === "scales" || key === "sh0") && !json[key].codebook) {\n            return void 0;\n          }\n          if (key === "means" && (!json[key].mins || !json[key].maxs)) {\n            return void 0;\n          }\n        } else {\n          if (!json[key].shape || !json[key].files) {\n            return void 0;\n          }\n          if (key !== "quats" && (!json[key].mins || !json[key].maxs)) {\n            return void 0;\n          }\n        }\n      }\n      return json;\n    } catch {\n      return void 0;\n    }\n  }\n  function tryPcSogsZip(input) {\n    try {\n      const fileBytes = input instanceof ArrayBuffer ? new Uint8Array(input) : input;\n      let metaFilename = null;\n      const unzipped = unzipSync(fileBytes, {\n        filter: ({ name }) => {\n          const filename = name.split(/[\\\\/]/).pop();\n          if (filename === "meta.json") {\n            metaFilename = name;\n            return true;\n          }\n          return false;\n        }\n      });\n      if (!metaFilename) {\n        return void 0;\n      }\n      const json = tryPcSogs(unzipped[metaFilename]);\n      if (!json) {\n        return void 0;\n      }\n      return { name: metaFilename, json };\n    } catch {\n      return void 0;\n    }\n  }\n  class SplatData {\n    constructor({ maxSplats = 1 } = {}) {\n      this.numSplats = 0;\n      this.maxSplats = getTextureSize(maxSplats).maxSplats;\n      this.centers = new Float32Array(this.maxSplats * 3);\n      this.scales = new Float32Array(this.maxSplats * 3);\n      this.quaternions = new Float32Array(this.maxSplats * 4);\n      this.opacities = new Float32Array(this.maxSplats);\n      this.colors = new Float32Array(this.maxSplats * 3);\n    }\n    pushSplat() {\n      const index = this.numSplats;\n      this.ensureIndex(index);\n      this.numSplats += 1;\n      return index;\n    }\n    unpushSplat(index) {\n      if (index === this.numSplats - 1) {\n        this.numSplats -= 1;\n      } else {\n        throw new Error("Cannot unpush splat from non-last position");\n      }\n    }\n    ensureCapacity(numSplats) {\n      if (numSplats > this.maxSplats) {\n        const targetSplats = Math.max(numSplats, this.maxSplats * 2);\n        const newCenters = new Float32Array(targetSplats * 3);\n        const newScales = new Float32Array(targetSplats * 3);\n        const newQuaternions = new Float32Array(targetSplats * 4);\n        const newOpacities = new Float32Array(targetSplats);\n        const newColors = new Float32Array(targetSplats * 3);\n        newCenters.set(this.centers);\n        newScales.set(this.scales);\n        newQuaternions.set(this.quaternions);\n        newOpacities.set(this.opacities);\n        newColors.set(this.colors);\n        this.centers = newCenters;\n        this.scales = newScales;\n        this.quaternions = newQuaternions;\n        this.opacities = newOpacities;\n        this.colors = newColors;\n        if (this.sh1) {\n          const newSh1 = new Float32Array(targetSplats * 9);\n          newSh1.set(this.sh1);\n          this.sh1 = newSh1;\n        }\n        if (this.sh2) {\n          const newSh2 = new Float32Array(targetSplats * 15);\n          newSh2.set(this.sh2);\n          this.sh2 = newSh2;\n        }\n        if (this.sh3) {\n          const newSh3 = new Float32Array(targetSplats * 21);\n          newSh3.set(this.sh3);\n          this.sh3 = newSh3;\n        }\n        this.maxSplats = targetSplats;\n      }\n    }\n    ensureIndex(index) {\n      this.ensureCapacity(index + 1);\n    }\n    setCenter(index, x2, y, z) {\n      this.centers[index * 3] = x2;\n      this.centers[index * 3 + 1] = y;\n      this.centers[index * 3 + 2] = z;\n    }\n    setScale(index, scaleX, scaleY, scaleZ) {\n      this.scales[index * 3] = scaleX;\n      this.scales[index * 3 + 1] = scaleY;\n      this.scales[index * 3 + 2] = scaleZ;\n    }\n    setQuaternion(index, x2, y, z, w) {\n      this.quaternions[index * 4] = x2;\n      this.quaternions[index * 4 + 1] = y;\n      this.quaternions[index * 4 + 2] = z;\n      this.quaternions[index * 4 + 3] = w;\n    }\n    setOpacity(index, opacity) {\n      this.opacities[index] = opacity;\n    }\n    setColor(index, r, g, b) {\n      this.colors[index * 3] = r;\n      this.colors[index * 3 + 1] = g;\n      this.colors[index * 3 + 2] = b;\n    }\n    setSh1(index, sh1) {\n      if (!this.sh1) {\n        this.sh1 = new Float32Array(this.maxSplats * 9);\n      }\n      for (let j = 0; j < 9; ++j) {\n        this.sh1[index * 9 + j] = sh1[j];\n      }\n    }\n    setSh2(index, sh2) {\n      if (!this.sh2) {\n        this.sh2 = new Float32Array(this.maxSplats * 15);\n      }\n      for (let j = 0; j < 15; ++j) {\n        this.sh2[index * 15 + j] = sh2[j];\n      }\n    }\n    setSh3(index, sh3) {\n      if (!this.sh3) {\n        this.sh3 = new Float32Array(this.maxSplats * 21);\n      }\n      for (let j = 0; j < 21; ++j) {\n        this.sh3[index * 21 + j] = sh3[j];\n      }\n    }\n  }\n  async function unpackPcSogs(json, extraFiles, splatEncoding) {\n    const isVersion2 = "version" in json;\n    if (!isVersion2 && json.quats.encoding !== "quaternion_packed") {\n      throw new Error("Unsupported quaternion encoding");\n    }\n    const numSplats = isVersion2 ? json.count : json.means.shape[0];\n    const maxSplats = computeMaxSplats(numSplats);\n    const packedArray = new Uint32Array(maxSplats * 4);\n    const extra = {};\n    const meansPromise = Promise.all([\n      decodeImageRgba(extraFiles[json.means.files[0]]),\n      decodeImageRgba(extraFiles[json.means.files[1]])\n    ]).then((means) => {\n      for (let i2 = 0; i2 < numSplats; ++i2) {\n        const i4 = i2 * 4;\n        const fx = (means[0][i4 + 0] + (means[1][i4 + 0] << 8)) / 65535;\n        const fy = (means[0][i4 + 1] + (means[1][i4 + 1] << 8)) / 65535;\n        const fz = (means[0][i4 + 2] + (means[1][i4 + 2] << 8)) / 65535;\n        let x2 = json.means.mins[0] + (json.means.maxs[0] - json.means.mins[0]) * fx;\n        let y = json.means.mins[1] + (json.means.maxs[1] - json.means.mins[1]) * fy;\n        let z = json.means.mins[2] + (json.means.maxs[2] - json.means.mins[2]) * fz;\n        x2 = Math.sign(x2) * (Math.exp(Math.abs(x2)) - 1);\n        y = Math.sign(y) * (Math.exp(Math.abs(y)) - 1);\n        z = Math.sign(z) * (Math.exp(Math.abs(z)) - 1);\n        setPackedSplatCenter(packedArray, i2, x2, y, z);\n      }\n    });\n    const scalesPromise = decodeImageRgba(extraFiles[json.scales.files[0]]).then(\n      (scales) => {\n        let xLookup;\n        let yLookup;\n        let zLookup;\n        if (isVersion2) {\n          xLookup = yLookup = zLookup = json.scales.codebook.map((x2) => Math.exp(x2));\n        } else {\n          xLookup = new Array(256).fill(0).map(\n            (_, i2) => json.scales.mins[0] + (json.scales.maxs[0] - json.scales.mins[0]) * (i2 / 255)\n          ).map((x2) => Math.exp(x2));\n          yLookup = new Array(256).fill(0).map(\n            (_, i2) => json.scales.mins[1] + (json.scales.maxs[1] - json.scales.mins[1]) * (i2 / 255)\n          ).map((x2) => Math.exp(x2));\n          zLookup = new Array(256).fill(0).map(\n            (_, i2) => json.scales.mins[2] + (json.scales.maxs[2] - json.scales.mins[2]) * (i2 / 255)\n          ).map((x2) => Math.exp(x2));\n        }\n        for (let i2 = 0; i2 < numSplats; ++i2) {\n          const i4 = i2 * 4;\n          setPackedSplatScales(\n            packedArray,\n            i2,\n            xLookup[scales[i4 + 0]],\n            yLookup[scales[i4 + 1]],\n            zLookup[scales[i4 + 2]],\n            splatEncoding\n          );\n        }\n      }\n    );\n    const quatsPromise = decodeImageRgba(extraFiles[json.quats.files[0]]).then(\n      (quats) => {\n        const SQRT2 = Math.sqrt(2);\n        const lookup = new Array(256).fill(0).map((_, i2) => (i2 / 255 - 0.5) * SQRT2);\n        for (let i2 = 0; i2 < numSplats; ++i2) {\n          const i4 = i2 * 4;\n          const r0 = lookup[quats[i4 + 0]];\n          const r1 = lookup[quats[i4 + 1]];\n          const r2 = lookup[quats[i4 + 2]];\n          const rr = Math.sqrt(Math.max(0, 1 - r0 * r0 - r1 * r1 - r2 * r2));\n          const rOrder = quats[i4 + 3] - 252;\n          const quatX = rOrder === 0 ? r0 : rOrder === 1 ? rr : r1;\n          const quatY = rOrder <= 1 ? r1 : rOrder === 2 ? rr : r2;\n          const quatZ = rOrder <= 2 ? r2 : rr;\n          const quatW = rOrder === 0 ? rr : r0;\n          setPackedSplatQuat(packedArray, i2, quatX, quatY, quatZ, quatW);\n        }\n      }\n    );\n    const sh0Promise = decodeImageRgba(extraFiles[json.sh0.files[0]]).then(\n      (sh0) => {\n        const SH_C02 = 0.28209479177387814;\n        let rLookup;\n        let gLookup;\n        let bLookup;\n        let aLookup;\n        if (isVersion2) {\n          rLookup = gLookup = bLookup = json.sh0.codebook.map((x2) => SH_C02 * x2 + 0.5);\n          aLookup = new Array(256).fill(0).map((_, i2) => i2 / 255);\n        } else {\n          rLookup = new Array(256).fill(0).map(\n            (_, i2) => json.sh0.mins[0] + (json.sh0.maxs[0] - json.sh0.mins[0]) * (i2 / 255)\n          ).map((x2) => SH_C02 * x2 + 0.5);\n          gLookup = new Array(256).fill(0).map(\n            (_, i2) => json.sh0.mins[1] + (json.sh0.maxs[1] - json.sh0.mins[1]) * (i2 / 255)\n          ).map((x2) => SH_C02 * x2 + 0.5);\n          bLookup = new Array(256).fill(0).map(\n            (_, i2) => json.sh0.mins[2] + (json.sh0.maxs[2] - json.sh0.mins[2]) * (i2 / 255)\n          ).map((x2) => SH_C02 * x2 + 0.5);\n          aLookup = new Array(256).fill(0).map(\n            (_, i2) => json.sh0.mins[3] + (json.sh0.maxs[3] - json.sh0.mins[3]) * (i2 / 255)\n          ).map((x2) => 1 / (1 + Math.exp(-x2)));\n        }\n        for (let i2 = 0; i2 < numSplats; ++i2) {\n          const i4 = i2 * 4;\n          setPackedSplatRgba(\n            packedArray,\n            i2,\n            rLookup[sh0[i4 + 0]],\n            gLookup[sh0[i4 + 1]],\n            bLookup[sh0[i4 + 2]],\n            aLookup[sh0[i4 + 3]],\n            splatEncoding\n          );\n        }\n      }\n    );\n    const promises = [meansPromise, scalesPromise, quatsPromise, sh0Promise];\n    if (json.shN) {\n      const useSH3 = isVersion2 ? json.shN.bands >= 3 : json.shN.shape[1] >= 48 - 3;\n      const useSH2 = isVersion2 ? json.shN.bands >= 2 : json.shN.shape[1] >= 27 - 3;\n      const useSH1 = isVersion2 ? json.shN.bands >= 1 : json.shN.shape[1] >= 12 - 3;\n      if (useSH1) extra.sh1 = new Uint32Array(numSplats * 2);\n      if (useSH2) extra.sh2 = new Uint32Array(numSplats * 4);\n      if (useSH3) extra.sh3 = new Uint32Array(numSplats * 4);\n      const sh1 = new Float32Array(9);\n      const sh2 = new Float32Array(15);\n      const sh3 = new Float32Array(21);\n      const shN = json.shN;\n      const shNPromise = Promise.all([\n        decodeImage(extraFiles[json.shN.files[0]]),\n        decodeImage(extraFiles[json.shN.files[1]])\n      ]).then(([centroids, labels]) => {\n        const lookup = "codebook" in shN ? shN.codebook : new Array(256).fill(0).map((_, i2) => shN.mins + (shN.maxs - shN.mins) * (i2 / 255));\n        for (let i2 = 0; i2 < numSplats; ++i2) {\n          const i4 = i2 * 4;\n          const label = labels.rgba[i4 + 0] + (labels.rgba[i4 + 1] << 8);\n          const col = (label & 63) * 15;\n          const row = label >>> 6;\n          const offset = row * centroids.width + col;\n          for (let d = 0; d < 3; ++d) {\n            if (useSH1) {\n              for (let k = 0; k < 3; ++k) {\n                sh1[k * 3 + d] = lookup[centroids.rgba[(offset + k) * 4 + d]];\n              }\n            }\n            if (useSH2) {\n              for (let k = 0; k < 5; ++k) {\n                sh2[k * 3 + d] = lookup[centroids.rgba[(offset + 3 + k) * 4 + d]];\n              }\n            }\n            if (useSH3) {\n              for (let k = 0; k < 7; ++k) {\n                sh3[k * 3 + d] = lookup[centroids.rgba[(offset + 8 + k) * 4 + d]];\n              }\n            }\n          }\n          if (useSH1)\n            encodeSh1Rgb(extra.sh1, i2, sh1, splatEncoding);\n          if (useSH2)\n            encodeSh2Rgb(extra.sh2, i2, sh2, splatEncoding);\n          if (useSH3)\n            encodeSh3Rgb(extra.sh3, i2, sh3, splatEncoding);\n        }\n      });\n      promises.push(shNPromise);\n    }\n    await Promise.all(promises);\n    return { packedArray, numSplats, extra };\n  }\n  let offscreenGlContext = null;\n  async function decodeImage(fileBytes) {\n    if (!offscreenGlContext) {\n      const canvas = new OffscreenCanvas(1, 1);\n      offscreenGlContext = canvas.getContext("webgl2");\n      if (!offscreenGlContext) {\n        throw new Error("Failed to create WebGL2 context");\n      }\n    }\n    const imageBlob = new Blob([fileBytes]);\n    const bitmap = await createImageBitmap(imageBlob, {\n      premultiplyAlpha: "none"\n    });\n    const gl = offscreenGlContext;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, bitmap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture,\n      0\n    );\n    const data = new Uint8Array(bitmap.width * bitmap.height * 4);\n    gl.readPixels(\n      0,\n      0,\n      bitmap.width,\n      bitmap.height,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      data\n    );\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(framebuffer);\n    return { rgba: data, width: bitmap.width, height: bitmap.height };\n  }\n  async function decodeImageRgba(fileBytes) {\n    const { rgba } = await decodeImage(fileBytes);\n    return rgba;\n  }\n  async function unpackPcSogsZip(fileBytes, splatEncoding) {\n    var _a2;\n    const nameJson = tryPcSogsZip(fileBytes);\n    if (!nameJson) {\n      throw new Error("Invalid PC SOGS zip file");\n    }\n    const { name, json } = nameJson;\n    const lastSlash = name.lastIndexOf("/");\n    const lastBackslash = name.lastIndexOf("\\\\");\n    const prefix = name.slice(0, Math.max(lastSlash, lastBackslash) + 1);\n    const fileMap = /* @__PURE__ */ new Map();\n    const refFiles = [\n      ...json.means.files,\n      ...json.scales.files,\n      ...json.quats.files,\n      ...json.sh0.files,\n      ...((_a2 = json.shN) == null ? void 0 : _a2.files) ?? []\n    ];\n    for (const file of refFiles) {\n      fileMap.set(prefix + file, file);\n    }\n    const unzipped = await new Promise(\n      (resolve, reject) => {\n        unzip(\n          fileBytes,\n          {\n            filter: ({ name: name2 }) => {\n              return fileMap.has(name2);\n            }\n          },\n          (err2, files) => {\n            if (err2) {\n              reject(err2);\n            } else {\n              resolve(files);\n            }\n          }\n        );\n      }\n    );\n    const extraFiles = {};\n    for (const [full, name2] of fileMap.entries()) {\n      extraFiles[name2] = unzipped[full];\n    }\n    return await unpackPcSogs(json, extraFiles, splatEncoding);\n  }\n  class SpzReader {\n    constructor({ fileBytes }) {\n      this.version = -1;\n      this.numSplats = 0;\n      this.shDegree = 0;\n      this.fractionalBits = 0;\n      this.flags = 0;\n      this.flagAntiAlias = false;\n      this.reserved = 0;\n      this.headerParsed = false;\n      this.parsed = false;\n      this.fileBytes = fileBytes instanceof ArrayBuffer ? new Uint8Array(fileBytes) : fileBytes;\n      this.reader = new GunzipReader({ fileBytes: this.fileBytes });\n    }\n    async parseHeader() {\n      if (this.headerParsed) {\n        throw new Error("SPZ file header already parsed");\n      }\n      const header = new DataView((await this.reader.read(16)).buffer);\n      if (header.getUint32(0, true) !== 1347635022) {\n        throw new Error("Invalid SPZ file");\n      }\n      this.version = header.getUint32(4, true);\n      if (this.version < 1 || this.version > 3) {\n        throw new Error(`Unsupported SPZ version: ${this.version}`);\n      }\n      this.numSplats = header.getUint32(8, true);\n      this.shDegree = header.getUint8(12);\n      this.fractionalBits = header.getUint8(13);\n      this.flags = header.getUint8(14);\n      this.flagAntiAlias = (this.flags & 1) !== 0;\n      this.reserved = header.getUint8(15);\n      this.headerParsed = true;\n      this.parsed = false;\n    }\n    async parseSplats(centerCallback, alphaCallback, rgbCallback, scalesCallback, quatCallback, shCallback) {\n      if (!this.headerParsed) {\n        throw new Error("SPZ file header must be parsed first");\n      }\n      if (this.parsed) {\n        throw new Error("SPZ file already parsed");\n      }\n      this.parsed = true;\n      if (this.version === 1) {\n        const centerBytes = await this.reader.read(this.numSplats * 3 * 2);\n        const centerUint16 = new Uint16Array(centerBytes.buffer);\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          const i3 = i2 * 3;\n          const x2 = fromHalf(centerUint16[i3]);\n          const y = fromHalf(centerUint16[i3 + 1]);\n          const z = fromHalf(centerUint16[i3 + 2]);\n          centerCallback == null ? void 0 : centerCallback(i2, x2, y, z);\n        }\n      } else if (this.version === 2 || this.version === 3) {\n        const fixed = 1 << this.fractionalBits;\n        const centerBytes = await this.reader.read(this.numSplats * 3 * 3);\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          const i9 = i2 * 9;\n          const x2 = ((centerBytes[i9 + 2] << 24 | centerBytes[i9 + 1] << 16 | centerBytes[i9] << 8) >> 8) / fixed;\n          const y = ((centerBytes[i9 + 5] << 24 | centerBytes[i9 + 4] << 16 | centerBytes[i9 + 3] << 8) >> 8) / fixed;\n          const z = ((centerBytes[i9 + 8] << 24 | centerBytes[i9 + 7] << 16 | centerBytes[i9 + 6] << 8) >> 8) / fixed;\n          centerCallback == null ? void 0 : centerCallback(i2, x2, y, z);\n        }\n      } else {\n        throw new Error("Unreachable");\n      }\n      {\n        const bytes = await this.reader.read(this.numSplats);\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          alphaCallback == null ? void 0 : alphaCallback(i2, bytes[i2] / 255);\n        }\n      }\n      {\n        const rgbBytes = await this.reader.read(this.numSplats * 3);\n        const scale = SH_C0 / 0.15;\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          const i3 = i2 * 3;\n          const r = (rgbBytes[i3] / 255 - 0.5) * scale + 0.5;\n          const g = (rgbBytes[i3 + 1] / 255 - 0.5) * scale + 0.5;\n          const b = (rgbBytes[i3 + 2] / 255 - 0.5) * scale + 0.5;\n          rgbCallback == null ? void 0 : rgbCallback(i2, r, g, b);\n        }\n      }\n      {\n        const scalesBytes = await this.reader.read(this.numSplats * 3);\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          const i3 = i2 * 3;\n          const scaleX = Math.exp(scalesBytes[i3] / 16 - 10);\n          const scaleY = Math.exp(scalesBytes[i3 + 1] / 16 - 10);\n          const scaleZ = Math.exp(scalesBytes[i3 + 2] / 16 - 10);\n          scalesCallback == null ? void 0 : scalesCallback(i2, scaleX, scaleY, scaleZ);\n        }\n      }\n      if (this.version === 3) {\n        const maxValue = 1 / Math.sqrt(2);\n        const quatBytes = await this.reader.read(this.numSplats * 4);\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          const i3 = i2 * 4;\n          const quaternion = [0, 0, 0, 0];\n          const values = [\n            quatBytes[i3],\n            quatBytes[i3 + 1],\n            quatBytes[i3 + 2],\n            quatBytes[i3 + 3]\n          ];\n          const combinedValues = values[0] + (values[1] << 8) + (values[2] << 16) + (values[3] << 24);\n          const valueMask = (1 << 9) - 1;\n          const largestIndex = combinedValues >>> 30;\n          let remainingValues = combinedValues;\n          let sumSquares = 0;\n          for (let i22 = 3; i22 >= 0; --i22) {\n            if (i22 !== largestIndex) {\n              const value = remainingValues & valueMask;\n              const sign = remainingValues >>> 9 & 1;\n              remainingValues = remainingValues >>> 10;\n              quaternion[i22] = maxValue * (value / valueMask);\n              quaternion[i22] = sign === 0 ? quaternion[i22] : -quaternion[i22];\n              sumSquares += quaternion[i22] * quaternion[i22];\n            }\n          }\n          const square = 1 - sumSquares;\n          quaternion[largestIndex] = Math.sqrt(Math.max(square, 0));\n          quatCallback == null ? void 0 : quatCallback(\n            i2,\n            quaternion[0],\n            quaternion[1],\n            quaternion[2],\n            quaternion[3]\n          );\n        }\n      } else {\n        const quatBytes = await this.reader.read(this.numSplats * 3);\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          const i3 = i2 * 3;\n          const quatX = quatBytes[i3] / 127.5 - 1;\n          const quatY = quatBytes[i3 + 1] / 127.5 - 1;\n          const quatZ = quatBytes[i3 + 2] / 127.5 - 1;\n          const quatW = Math.sqrt(\n            Math.max(0, 1 - quatX * quatX - quatY * quatY - quatZ * quatZ)\n          );\n          quatCallback == null ? void 0 : quatCallback(i2, quatX, quatY, quatZ, quatW);\n        }\n      }\n      if (shCallback && this.shDegree >= 1) {\n        const sh1 = new Float32Array(3 * 3);\n        const sh2 = this.shDegree >= 2 ? new Float32Array(5 * 3) : void 0;\n        const sh3 = this.shDegree >= 3 ? new Float32Array(7 * 3) : void 0;\n        const shBytes = await this.reader.read(\n          this.numSplats * SH_DEGREE_TO_VECS[this.shDegree] * 3\n        );\n        let offset = 0;\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          for (let j = 0; j < 9; ++j) {\n            sh1[j] = (shBytes[offset + j] - 128) / 128;\n          }\n          offset += 9;\n          if (sh2) {\n            for (let j = 0; j < 15; ++j) {\n              sh2[j] = (shBytes[offset + j] - 128) / 128;\n            }\n            offset += 15;\n          }\n          if (sh3) {\n            for (let j = 0; j < 21; ++j) {\n              sh3[j] = (shBytes[offset + j] - 128) / 128;\n            }\n            offset += 21;\n          }\n          shCallback == null ? void 0 : shCallback(i2, sh1, sh2, sh3);\n        }\n      }\n    }\n  }\n  const SH_DEGREE_TO_VECS = { 1: 3, 2: 8, 3: 15 };\n  const SH_C0 = 0.28209479177387814;\n  const SPZ_MAGIC = 1347635022;\n  const SPZ_VERSION = 3;\n  const FLAG_ANTIALIASED = 1;\n  class SpzWriter {\n    constructor({\n      numSplats,\n      shDegree,\n      fractionalBits = 12,\n      flagAntiAlias = true\n    }) {\n      this.clippedCount = 0;\n      const splatSize = 9 + // Position\n      1 + // Opacity\n      3 + // Scale\n      3 + // DC-rgb\n      4 + // Rotation\n      (shDegree >= 1 ? 9 : 0) + (shDegree >= 2 ? 15 : 0) + (shDegree >= 3 ? 21 : 0);\n      const bufferSize = 16 + numSplats * splatSize;\n      this.buffer = new ArrayBuffer(bufferSize);\n      this.view = new DataView(this.buffer);\n      this.view.setUint32(0, SPZ_MAGIC, true);\n      this.view.setUint32(4, SPZ_VERSION, true);\n      this.view.setUint32(8, numSplats, true);\n      this.view.setUint8(12, shDegree);\n      this.view.setUint8(13, fractionalBits);\n      this.view.setUint8(14, flagAntiAlias ? FLAG_ANTIALIASED : 0);\n      this.view.setUint8(15, 0);\n      this.numSplats = numSplats;\n      this.shDegree = shDegree;\n      this.fractionalBits = fractionalBits;\n      this.fraction = 1 << fractionalBits;\n      this.flagAntiAlias = flagAntiAlias;\n    }\n    setCenter(index, x2, y, z) {\n      const xRounded = Math.round(x2 * this.fraction);\n      const xInt = Math.max(-8388607, Math.min(8388607, xRounded));\n      const yRounded = Math.round(y * this.fraction);\n      const yInt = Math.max(-8388607, Math.min(8388607, yRounded));\n      const zRounded = Math.round(z * this.fraction);\n      const zInt = Math.max(-8388607, Math.min(8388607, zRounded));\n      const clipped = xRounded !== xInt || yRounded !== yInt || zRounded !== zInt;\n      if (clipped) {\n        this.clippedCount += 1;\n      }\n      const i9 = index * 9;\n      const base = 16 + i9;\n      this.view.setUint8(base, xInt & 255);\n      this.view.setUint8(base + 1, xInt >> 8 & 255);\n      this.view.setUint8(base + 2, xInt >> 16 & 255);\n      this.view.setUint8(base + 3, yInt & 255);\n      this.view.setUint8(base + 4, yInt >> 8 & 255);\n      this.view.setUint8(base + 5, yInt >> 16 & 255);\n      this.view.setUint8(base + 6, zInt & 255);\n      this.view.setUint8(base + 7, zInt >> 8 & 255);\n      this.view.setUint8(base + 8, zInt >> 16 & 255);\n    }\n    setAlpha(index, alpha) {\n      const base = 16 + this.numSplats * 9 + index;\n      this.view.setUint8(\n        base,\n        Math.max(0, Math.min(255, Math.round(alpha * 255)))\n      );\n    }\n    static scaleRgb(r) {\n      const v = ((r - 0.5) / (SH_C0 / 0.15) + 0.5) * 255;\n      return Math.max(0, Math.min(255, Math.round(v)));\n    }\n    setRgb(index, r, g, b) {\n      const base = 16 + this.numSplats * 10 + index * 3;\n      this.view.setUint8(base, SpzWriter.scaleRgb(r));\n      this.view.setUint8(base + 1, SpzWriter.scaleRgb(g));\n      this.view.setUint8(base + 2, SpzWriter.scaleRgb(b));\n    }\n    setScale(index, scaleX, scaleY, scaleZ) {\n      const base = 16 + this.numSplats * 13 + index * 3;\n      this.view.setUint8(\n        base,\n        Math.max(0, Math.min(255, Math.round((Math.log(scaleX) + 10) * 16)))\n      );\n      this.view.setUint8(\n        base + 1,\n        Math.max(0, Math.min(255, Math.round((Math.log(scaleY) + 10) * 16)))\n      );\n      this.view.setUint8(\n        base + 2,\n        Math.max(0, Math.min(255, Math.round((Math.log(scaleZ) + 10) * 16)))\n      );\n    }\n    setQuat(index, ...q) {\n      const base = 16 + this.numSplats * 16 + index * 4;\n      const quat = normalize(q);\n      let iLargest = 0;\n      for (let i2 = 1; i2 < 4; ++i2) {\n        if (Math.abs(quat[i2]) > Math.abs(quat[iLargest])) {\n          iLargest = i2;\n        }\n      }\n      const negate = quat[iLargest] < 0 ? 1 : 0;\n      let comp = iLargest;\n      for (let i2 = 0; i2 < 4; ++i2) {\n        if (i2 !== iLargest) {\n          const negbit = (quat[i2] < 0 ? 1 : 0) ^ negate;\n          const mag = Math.floor(\n            ((1 << 9) - 1) * (Math.abs(quat[i2]) / Math.SQRT1_2) + 0.5\n          );\n          comp = comp << 10 | negbit << 9 | mag;\n        }\n      }\n      this.view.setUint8(base, comp & 255);\n      this.view.setUint8(base + 1, comp >> 8 & 255);\n      this.view.setUint8(base + 2, comp >> 16 & 255);\n      this.view.setUint8(base + 3, comp >>> 24 & 255);\n    }\n    static quantizeSh(sh, bits2) {\n      const value = Math.round(sh * 128) + 128;\n      const bucketSize = 1 << 8 - bits2;\n      const quantized = Math.floor((value + bucketSize / 2) / bucketSize) * bucketSize;\n      return Math.max(0, Math.min(255, quantized));\n    }\n    setSh(index, sh1, sh2, sh3) {\n      const shVecs = SH_DEGREE_TO_VECS[this.shDegree] || 0;\n      const base1 = 16 + this.numSplats * 20 + index * shVecs * 3;\n      for (let j = 0; j < 9; ++j) {\n        this.view.setUint8(base1 + j, SpzWriter.quantizeSh(sh1[j], 5));\n      }\n      if (sh2) {\n        const base2 = base1 + 9;\n        for (let j = 0; j < 15; ++j) {\n          this.view.setUint8(base2 + j, SpzWriter.quantizeSh(sh2[j], 4));\n        }\n        if (sh3) {\n          const base3 = base2 + 15;\n          for (let j = 0; j < 21; ++j) {\n            this.view.setUint8(base3 + j, SpzWriter.quantizeSh(sh3[j], 4));\n          }\n        }\n      }\n    }\n    async finalize() {\n      const input = new Uint8Array(this.buffer);\n      const stream = new ReadableStream({\n        async start(controller) {\n          controller.enqueue(input);\n          controller.close();\n        }\n      });\n      const compressed = stream.pipeThrough(new CompressionStream("gzip"));\n      const response = new Response(compressed);\n      const buffer = await response.arrayBuffer();\n      console.log(\n        "Compressed",\n        input.length,\n        "bytes to",\n        buffer.byteLength,\n        "bytes"\n      );\n      return new Uint8Array(buffer);\n    }\n  }\n  async function transcodeSpz(input) {\n    var _a2, _b2, _c;\n    const splats = new SplatData();\n    const {\n      inputs,\n      clipXyz,\n      maxSh,\n      fractionalBits = 12,\n      opacityThreshold\n    } = input;\n    for (const input2 of inputs) {\n      let transformPos = function(pos) {\n        pos.multiplyScalar(scale);\n        pos.applyQuaternion(quaternion);\n        pos.add(translate);\n        return pos;\n      }, transformScales = function(scales) {\n        scales.multiplyScalar(scale);\n        return scales;\n      }, transformQuaternion = function(quat) {\n        quat.premultiply(quaternion);\n        return quat;\n      }, withinClip = function(p) {\n        return !clip || clip.containsPoint(p);\n      }, withinOpacity = function(opacity) {\n        return opacityThreshold !== void 0 ? opacity >= opacityThreshold : true;\n      };\n      const scale = ((_a2 = input2.transform) == null ? void 0 : _a2.scale) ?? 1;\n      const quaternion = new Quaternion().fromArray(\n        ((_b2 = input2.transform) == null ? void 0 : _b2.quaternion) ?? [0, 0, 0, 1]\n      );\n      const translate = new Vector3().fromArray(\n        ((_c = input2.transform) == null ? void 0 : _c.translate) ?? [0, 0, 0]\n      );\n      const clip = clipXyz ? new Box3(\n        new Vector3().fromArray(clipXyz.min),\n        new Vector3().fromArray(clipXyz.max)\n      ) : void 0;\n      let fileType = input2.fileType;\n      if (!fileType) {\n        fileType = getSplatFileType(input2.fileBytes);\n        if (!fileType && input2.pathOrUrl) {\n          fileType = getSplatFileTypeFromPath(input2.pathOrUrl);\n        }\n      }\n      switch (fileType) {\n        case SplatFileType.PLY: {\n          const ply = new PlyReader({ fileBytes: input2.fileBytes });\n          await ply.parseHeader();\n          let lastIndex = null;\n          ply.parseSplats(\n            (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {\n              const center = transformPos(new Vector3(x2, y, z));\n              if (withinClip(center) && withinOpacity(opacity)) {\n                lastIndex = splats.pushSplat();\n                splats.setCenter(lastIndex, center.x, center.y, center.z);\n                const scales = transformScales(\n                  new Vector3(scaleX, scaleY, scaleZ)\n                );\n                splats.setScale(lastIndex, scales.x, scales.y, scales.z);\n                const quaternion2 = transformQuaternion(\n                  new Quaternion(quatX, quatY, quatZ, quatW)\n                );\n                splats.setQuaternion(\n                  lastIndex,\n                  quaternion2.x,\n                  quaternion2.y,\n                  quaternion2.z,\n                  quaternion2.w\n                );\n                splats.setOpacity(lastIndex, opacity);\n                splats.setColor(lastIndex, r, g, b);\n              } else {\n                lastIndex = null;\n              }\n            },\n            (index, sh1, sh2, sh3) => {\n              if (sh1 && lastIndex !== null) {\n                splats.setSh1(lastIndex, sh1);\n              }\n              if (sh2 && lastIndex !== null) {\n                splats.setSh2(lastIndex, sh2);\n              }\n              if (sh3 && lastIndex !== null) {\n                splats.setSh3(lastIndex, sh3);\n              }\n            }\n          );\n          break;\n        }\n        case SplatFileType.SPZ: {\n          const spz2 = new SpzReader({ fileBytes: input2.fileBytes });\n          await spz2.parseHeader();\n          const mapping = new Int32Array(spz2.numSplats);\n          mapping.fill(-1);\n          const centers = new Float32Array(spz2.numSplats * 3);\n          const center = new Vector3();\n          spz2.parseSplats(\n            (index, x2, y, z) => {\n              const center2 = transformPos(new Vector3(x2, y, z));\n              centers[index * 3] = center2.x;\n              centers[index * 3 + 1] = center2.y;\n              centers[index * 3 + 2] = center2.z;\n            },\n            (index, alpha) => {\n              center.fromArray(centers, index * 3);\n              if (withinClip(center) && withinOpacity(alpha)) {\n                mapping[index] = splats.pushSplat();\n                splats.setCenter(mapping[index], center.x, center.y, center.z);\n                splats.setOpacity(mapping[index], alpha);\n              }\n            },\n            (index, r, g, b) => {\n              if (mapping[index] >= 0) {\n                splats.setColor(mapping[index], r, g, b);\n              }\n            },\n            (index, scaleX, scaleY, scaleZ) => {\n              if (mapping[index] >= 0) {\n                const scales = transformScales(\n                  new Vector3(scaleX, scaleY, scaleZ)\n                );\n                splats.setScale(mapping[index], scales.x, scales.y, scales.z);\n              }\n            },\n            (index, quatX, quatY, quatZ, quatW) => {\n              if (mapping[index] >= 0) {\n                const quaternion2 = transformQuaternion(\n                  new Quaternion(quatX, quatY, quatZ, quatW)\n                );\n                splats.setQuaternion(\n                  mapping[index],\n                  quaternion2.x,\n                  quaternion2.y,\n                  quaternion2.z,\n                  quaternion2.w\n                );\n              }\n            },\n            (index, sh1, sh2, sh3) => {\n              if (mapping[index] >= 0) {\n                splats.setSh1(mapping[index], sh1);\n                if (sh2) {\n                  splats.setSh2(mapping[index], sh2);\n                }\n                if (sh3) {\n                  splats.setSh3(mapping[index], sh3);\n                }\n              }\n            }\n          );\n          break;\n        }\n        case SplatFileType.SPLAT:\n          decodeAntiSplat(\n            input2.fileBytes,\n            (numSplats) => {\n            },\n            (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {\n              const center = transformPos(new Vector3(x2, y, z));\n              if (withinClip(center) && withinOpacity(opacity)) {\n                const index2 = splats.pushSplat();\n                splats.setCenter(index2, center.x, center.y, center.z);\n                const scales = transformScales(\n                  new Vector3(scaleX, scaleY, scaleZ)\n                );\n                splats.setScale(index2, scales.x, scales.y, scales.z);\n                const quaternion2 = transformQuaternion(\n                  new Quaternion(quatX, quatY, quatZ, quatW)\n                );\n                splats.setQuaternion(\n                  index2,\n                  quaternion2.x,\n                  quaternion2.y,\n                  quaternion2.z,\n                  quaternion2.w\n                );\n                splats.setOpacity(index2, opacity);\n                splats.setColor(index2, r, g, b);\n              }\n            }\n          );\n          break;\n        case SplatFileType.KSPLAT: {\n          let lastIndex = null;\n          decodeKsplat(\n            input2.fileBytes,\n            (numSplats) => {\n            },\n            (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {\n              const center = transformPos(new Vector3(x2, y, z));\n              if (withinClip(center) && withinOpacity(opacity)) {\n                lastIndex = splats.pushSplat();\n                splats.setCenter(lastIndex, center.x, center.y, center.z);\n                const scales = transformScales(\n                  new Vector3(scaleX, scaleY, scaleZ)\n                );\n                splats.setScale(lastIndex, scales.x, scales.y, scales.z);\n                const quaternion2 = transformQuaternion(\n                  new Quaternion(quatX, quatY, quatZ, quatW)\n                );\n                splats.setQuaternion(\n                  lastIndex,\n                  quaternion2.x,\n                  quaternion2.y,\n                  quaternion2.z,\n                  quaternion2.w\n                );\n                splats.setOpacity(lastIndex, opacity);\n                splats.setColor(lastIndex, r, g, b);\n              } else {\n                lastIndex = null;\n              }\n            },\n            (index, sh1, sh2, sh3) => {\n              if (lastIndex !== null) {\n                splats.setSh1(lastIndex, sh1);\n                if (sh2) {\n                  splats.setSh2(lastIndex, sh2);\n                }\n                if (sh3) {\n                  splats.setSh3(lastIndex, sh3);\n                }\n              }\n            }\n          );\n          break;\n        }\n        default:\n          throw new Error(`transcodeSpz not implemented for ${fileType}`);\n      }\n    }\n    const shDegree = Math.min(\n      maxSh ?? 3,\n      splats.sh3 ? 3 : splats.sh2 ? 2 : splats.sh1 ? 1 : 0\n    );\n    const spz = new SpzWriter({\n      numSplats: splats.numSplats,\n      shDegree,\n      fractionalBits,\n      flagAntiAlias: true\n    });\n    for (let i2 = 0; i2 < splats.numSplats; ++i2) {\n      const i3 = i2 * 3;\n      const i4 = i2 * 4;\n      spz.setCenter(\n        i2,\n        splats.centers[i3],\n        splats.centers[i3 + 1],\n        splats.centers[i3 + 2]\n      );\n      spz.setScale(\n        i2,\n        splats.scales[i3],\n        splats.scales[i3 + 1],\n        splats.scales[i3 + 2]\n      );\n      spz.setQuat(\n        i2,\n        splats.quaternions[i4],\n        splats.quaternions[i4 + 1],\n        splats.quaternions[i4 + 2],\n        splats.quaternions[i4 + 3]\n      );\n      spz.setAlpha(i2, splats.opacities[i2]);\n      spz.setRgb(\n        i2,\n        splats.colors[i3],\n        splats.colors[i3 + 1],\n        splats.colors[i3 + 2]\n      );\n      if (splats.sh1 && shDegree >= 1) {\n        spz.setSh(\n          i2,\n          splats.sh1.slice(i2 * 9, (i2 + 1) * 9),\n          shDegree >= 2 && splats.sh2 ? splats.sh2.slice(i2 * 15, (i2 + 1) * 15) : void 0,\n          shDegree >= 3 && splats.sh3 ? splats.sh3.slice(i2 * 21, (i2 + 1) * 21) : void 0\n        );\n      }\n    }\n    const spzBytes = await spz.finalize();\n    return { fileBytes: spzBytes, clippedCount: spz.clippedCount };\n  }\n  async function onMessage(event) {\n    const { name, args, id } = event.data;\n    let result = void 0;\n    let error = void 0;\n    try {\n      switch (name) {\n        case "unpackPly": {\n          const { packedArray, fileBytes, splatEncoding } = args;\n          const decoded = await unpackPly({\n            packedArray,\n            fileBytes,\n            splatEncoding\n          });\n          result = {\n            id,\n            numSplats: decoded.numSplats,\n            packedArray: decoded.packedArray,\n            extra: decoded.extra\n          };\n          break;\n        }\n        case "decodeSpz": {\n          const { fileBytes, splatEncoding } = args;\n          const decoded = await unpackSpz(fileBytes, splatEncoding);\n          result = {\n            id,\n            numSplats: decoded.numSplats,\n            packedArray: decoded.packedArray,\n            extra: decoded.extra\n          };\n          break;\n        }\n        case "decodeAntiSplat": {\n          const { fileBytes, splatEncoding } = args;\n          const decoded = unpackAntiSplat(fileBytes, splatEncoding);\n          result = {\n            id,\n            numSplats: decoded.numSplats,\n            packedArray: decoded.packedArray\n          };\n          break;\n        }\n        case "decodeKsplat": {\n          const { fileBytes, splatEncoding } = args;\n          const decoded = unpackKsplat(fileBytes, splatEncoding);\n          result = {\n            id,\n            numSplats: decoded.numSplats,\n            packedArray: decoded.packedArray,\n            extra: decoded.extra\n          };\n          break;\n        }\n        case "decodePcSogs": {\n          const { fileBytes, extraFiles, splatEncoding } = args;\n          const json = JSON.parse(\n            new TextDecoder().decode(fileBytes)\n          );\n          const decoded = await unpackPcSogs(json, extraFiles, splatEncoding);\n          result = {\n            id,\n            numSplats: decoded.numSplats,\n            packedArray: decoded.packedArray,\n            extra: decoded.extra\n          };\n          break;\n        }\n        case "decodePcSogsZip": {\n          const { fileBytes, splatEncoding } = args;\n          const decoded = await unpackPcSogsZip(fileBytes, splatEncoding);\n          result = {\n            id,\n            numSplats: decoded.numSplats,\n            packedArray: decoded.packedArray,\n            extra: decoded.extra\n          };\n          break;\n        }\n        case "sortSplats": {\n          const { totalSplats, readback, ordering } = args;\n          result = {\n            id,\n            readback,\n            ...sortSplats({ totalSplats, readback, ordering })\n          };\n          break;\n        }\n        case "sortDoubleSplats": {\n          const { numSplats, readback, ordering } = args;\n          {\n            result = {\n              id,\n              readback,\n              ordering,\n              activeSplats: sort_splats(numSplats, readback, ordering)\n            };\n          }\n          break;\n        }\n        case "sort32Splats": {\n          const { numSplats, readback, ordering } = args;\n          {\n            result = {\n              id,\n              readback,\n              ordering,\n              activeSplats: sort32_splats(numSplats, readback, ordering)\n            };\n          }\n          break;\n        }\n        case "transcodeSpz": {\n          const input = args;\n          const spzBytes = await transcodeSpz(input);\n          result = {\n            id,\n            fileBytes: spzBytes,\n            input\n          };\n          break;\n        }\n        default: {\n          throw new Error(`Unknown name: ${name}`);\n        }\n      }\n    } catch (e) {\n      error = e;\n      console.error(error);\n    }\n    self.postMessage(\n      { id, result, error },\n      { transfer: getArrayBuffers(result) }\n    );\n  }\n  async function unpackPly({\n    packedArray,\n    fileBytes,\n    splatEncoding\n  }) {\n    const ply = new PlyReader({ fileBytes });\n    await ply.parseHeader();\n    const numSplats = ply.numSplats;\n    const extra = {};\n    ply.parseSplats(\n      (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {\n        setPackedSplat(\n          packedArray,\n          index,\n          x2,\n          y,\n          z,\n          scaleX,\n          scaleY,\n          scaleZ,\n          quatX,\n          quatY,\n          quatZ,\n          quatW,\n          opacity,\n          r,\n          g,\n          b,\n          splatEncoding\n        );\n      },\n      (index, sh1, sh2, sh3) => {\n        if (sh1) {\n          if (!extra.sh1) {\n            extra.sh1 = new Uint32Array(numSplats * 2);\n          }\n          encodeSh1Rgb(extra.sh1, index, sh1, splatEncoding);\n        }\n        if (sh2) {\n          if (!extra.sh2) {\n            extra.sh2 = new Uint32Array(numSplats * 4);\n          }\n          encodeSh2Rgb(extra.sh2, index, sh2, splatEncoding);\n        }\n        if (sh3) {\n          if (!extra.sh3) {\n            extra.sh3 = new Uint32Array(numSplats * 4);\n          }\n          encodeSh3Rgb(extra.sh3, index, sh3, splatEncoding);\n        }\n      }\n    );\n    return { packedArray, numSplats, extra };\n  }\n  async function unpackSpz(fileBytes, splatEncoding) {\n    const spz = new SpzReader({ fileBytes });\n    await spz.parseHeader();\n    const numSplats = spz.numSplats;\n    const maxSplats = computeMaxSplats(numSplats);\n    const packedArray = new Uint32Array(maxSplats * 4);\n    const extra = {};\n    await spz.parseSplats(\n      (index, x2, y, z) => {\n        setPackedSplatCenter(packedArray, index, x2, y, z);\n      },\n      (index, alpha) => {\n        setPackedSplatOpacity(packedArray, index, alpha);\n      },\n      (index, r, g, b) => {\n        setPackedSplatRgb(packedArray, index, r, g, b, splatEncoding);\n      },\n      (index, scaleX, scaleY, scaleZ) => {\n        setPackedSplatScales(\n          packedArray,\n          index,\n          scaleX,\n          scaleY,\n          scaleZ,\n          splatEncoding\n        );\n      },\n      (index, quatX, quatY, quatZ, quatW) => {\n        setPackedSplatQuat(packedArray, index, quatX, quatY, quatZ, quatW);\n      },\n      (index, sh1, sh2, sh3) => {\n        if (sh1) {\n          if (!extra.sh1) {\n            extra.sh1 = new Uint32Array(numSplats * 2);\n          }\n          encodeSh1Rgb(extra.sh1, index, sh1, splatEncoding);\n        }\n        if (sh2) {\n          if (!extra.sh2) {\n            extra.sh2 = new Uint32Array(numSplats * 4);\n          }\n          encodeSh2Rgb(extra.sh2, index, sh2, splatEncoding);\n        }\n        if (sh3) {\n          if (!extra.sh3) {\n            extra.sh3 = new Uint32Array(numSplats * 4);\n          }\n          encodeSh3Rgb(extra.sh3, index, sh3, splatEncoding);\n        }\n      }\n    );\n    return { packedArray, numSplats, extra };\n  }\n  const DEPTH_INFINITY_F16 = 31744;\n  const DEPTH_SIZE_16 = DEPTH_INFINITY_F16 + 1;\n  let depthArray16 = null;\n  function sortSplats({\n    totalSplats,\n    readback,\n    ordering\n  }) {\n    if (!depthArray16) {\n      depthArray16 = new Uint32Array(DEPTH_SIZE_16);\n    }\n    depthArray16.fill(0);\n    const readbackUint32 = readback.map((layer) => new Uint32Array(layer.buffer));\n    const layerSize = readbackUint32[0].length;\n    const numLayers = Math.ceil(totalSplats / layerSize);\n    let layerBase = 0;\n    for (let layer = 0; layer < numLayers; ++layer) {\n      const readbackLayer = readbackUint32[layer];\n      const layerSplats = Math.min(readbackLayer.length, totalSplats - layerBase);\n      for (let i2 = 0; i2 < layerSplats; ++i2) {\n        const pri = readbackLayer[i2] & 32767;\n        if (pri < DEPTH_INFINITY_F16) {\n          depthArray16[pri] += 1;\n        }\n      }\n      layerBase += layerSplats;\n    }\n    let activeSplats = 0;\n    for (let j = 0; j < DEPTH_SIZE_16; ++j) {\n      const nextIndex = activeSplats + depthArray16[j];\n      depthArray16[j] = activeSplats;\n      activeSplats = nextIndex;\n    }\n    layerBase = 0;\n    for (let layer = 0; layer < numLayers; ++layer) {\n      const readbackLayer = readbackUint32[layer];\n      const layerSplats = Math.min(readbackLayer.length, totalSplats - layerBase);\n      for (let i2 = 0; i2 < layerSplats; ++i2) {\n        const pri = readbackLayer[i2] & 32767;\n        if (pri < DEPTH_INFINITY_F16) {\n          ordering[depthArray16[pri]] = layerBase + i2;\n          depthArray16[pri] += 1;\n        }\n      }\n      layerBase += layerSplats;\n    }\n    if (depthArray16[DEPTH_SIZE_16 - 1] !== activeSplats) {\n      throw new Error(\n        `Expected ${activeSplats} active splats but got ${depthArray16[DEPTH_SIZE_16 - 1]}`\n      );\n    }\n    return { activeSplats, ordering };\n  }\n  const messageBuffer = [];\n  function bufferMessage(event) {\n    messageBuffer.push(event);\n  }\n  async function initialize() {\n    self.addEventListener("message", bufferMessage);\n    await __wbg_init();\n    self.removeEventListener("message", bufferMessage);\n    self.addEventListener("message", onMessage);\n    for (const event of messageBuffer) {\n      onMessage(event);\n    }\n    messageBuffer.length = 0;\n  }\n  initialize().catch(console.error);\n})();\n//# sourceMappingURL=worker-BES6FxMm.js.map\n',sz="undefined"!=typeof self&&self.Blob&&new Blob([rz],{type:"text/javascript;charset=utf-8"});function az(t){let e;try{if(e=sz&&(self.URL||self.webkitURL).createObjectURL(sz),!e)throw"";const n=new Worker(e,{name:null==t?void 0:t.name});return n.addEventListener("error",()=>{(self.URL||self.webkitURL).revokeObjectURL(e)}),n}catch(e){return new Worker("data:text/javascript;charset=utf-8,"+encodeURIComponent(rz),{name:null==t?void 0:t.name})}finally{e&&(self.URL||self.webkitURL).revokeObjectURL(e)}}class oz{constructor(){this.messages={},this.messageIdNext=0,this.worker=new az,this.worker.onmessage=t=>this.onMessage(t)}makeMessageId(){return++this.messageIdNext}makeMessagePromiseId(){const t=this.makeMessageId(),e=new Promise((e,n)=>{this.messages[t]={resolve:e,reject:n}});return{id:t,promise:e}}onMessage(t){const{id:e,result:n,error:i}=t.data,r=this.messages[e];r&&(delete this.messages[e],i?r.reject(i):r.resolve(n))}async call(t,e){const{id:n,promise:i}=this.makeMessagePromiseId();return this.worker.postMessage({name:t,args:e,id:n},{transfer:ZP(e)}),i}}let lz=4,cz=0;const hz=[],Az=[];async function uz(t){const e=await async function(){const t=hz.shift();if(t)return t;if(cz<lz){const t=new oz;return cz+=1,t}return new Promise(t=>{Az.push(t)})}();try{return await t(e)}finally{!function(t){if(cz>lz)return void(cz-=1);const e=Az.shift();e?e(t):hz.push(t)}(e)}}class dz extends wh{constructor(t){super(t),this.fileLoader=new Bh(t)}load(t,e,n,i){const r=this.manager.resolveURL((this.path??"")+(t??"")),s=new Headers(this.requestHeader),a=this.withCredentials?"include":"same-origin",o=new Request(r,{headers:s,credentials:a});let l=this.fileType;this.manager.itemStart(r),pz(o,n).then(async t=>{var i;const o=[new ProgressEvent("progress",{lengthComputable:!0,loaded:t.byteLength,total:t.byteLength})];function c(){if(n){const t=o.every(t=>t.lengthComputable||0===t.loaded&&0===t.total),e=o.reduce((t,e)=>t+e.loaded,0),i=o.reduce((t,e)=>t+e.total,0);n(new ProgressEvent("progress",{lengthComputable:t,loaded:e,total:i}))}}const h={},A=[],u=vz(t);if("pcsogs"===l&&void 0===u)throw new Error("Invalid PC SOGS file");if(void 0!==u){l="pcsogs";for(const t of["means","scales","quats","sh0","shN"]){const e=u[t];if(e)for(const t of e.files){const e=new URL(t,r).toString(),n=o.length;o.push(new ProgressEvent("progress")),this.manager.itemStart(e);const i=pz(new Request(e,{headers:s,credentials:a}),t=>{o[n]=t,c()}).then(e=>{h[t]=e}).catch(t=>{throw this.manager.itemError(e),t}).finally(()=>{this.manager.itemEnd(e)});A.push(i)}}}if(await Promise.all(A),e){const n=(null==(i=this.packedSplats)?void 0:i.splatEncoding)??Iz,s=await xz({input:t,extraFiles:h,fileType:l,pathOrUrl:r,splatEncoding:n});this.packedSplats?(this.packedSplats.initialize(s),e(this.packedSplats)):e(new wz(s))}}).catch(t=>{this.manager.itemError(r),null==i||i(t)}).finally(()=>{this.manager.itemEnd(r)})}async loadAsync(t,e){return new Promise((n,i)=>{this.load(t,t=>{n(t)},e,i)})}parse(t){return new LO({packedSplats:t})}}async function pz(t,e){const n=await fetch(t);if(!n.ok)throw new Error(`${n.status} "${n.statusText}" fetching URL: ${t.url}`);if(!n.body)throw new Error(`Response body is null for URL: ${t.url}`);const i=n.body.getReader(),r=Number.parseInt(n.headers.get("Content-Length")||"0"),s=Number.isNaN(r)?0:r;let a=0;const o=[];for(;;){const{done:t,value:n}=await i.read();if(t)break;o.push(n),a+=n.length,e&&e(new ProgressEvent("progress",{lengthComputable:0!==s,loaded:a,total:s}))}const l=new Uint8Array(a);let c=0;for(const t of o)l.set(t,c),c+=t.length;return l.buffer}var gz=(t=>(t.PLY="ply",t.SPZ="spz",t.SPLAT="splat",t.KSPLAT="ksplat",t.PCSOGS="pcsogs",t.PCSOGSZIP="pcsogszip",t))(gz||{});function fz(t){const e=new DataView(t.buffer);if(7957616==(16777215&e.getUint32(0,!0)))return"ply";if(559903==(16777215&e.getUint32(0,!0))){const e=IL(t,4);return 1347635022===new DataView(e.buffer).getUint32(0,!0)?"spz":void 0}return 67324752===e.getUint32(0,!0)&&function(t){try{const e=t instanceof ArrayBuffer?new Uint8Array(t):t;let n=null;const i=function(t,e){for(var n={},i=t.length-22;101010256!=fR(t,i);--i)(!i||t.length-i>65558)&&uR(13);var r=gR(t,i+8);if(!r)return{};var s=fR(t,i+16),a=4294967295==s||65535==r;if(a){var o=fR(t,i-12);(a=101075792==fR(t,o))&&(r=fR(t,o+32),s=fR(t,o+48))}for(var l=e&&e.filter,c=0;c<r;++c){var h=ER(t,s,a),A=h[0],u=h[1],d=h[2],p=h[3],g=h[4],f=h[5],m=IR(t,f);s=g,l&&!l({name:p,size:u,originalSize:d,compression:A})||(A?8==A?n[p]=vR(t.subarray(m,m+u),{out:new zD(d)}):uR(14,"unknown compression type "+A):n[p]=hR(t,m,m+u))}return n}(e,{filter:({name:t})=>"meta.json"===t.split(/[\\/]/).pop()&&(n=t,!0)});if(!n)return;const r=vz(i[n]);if(!r)return;return{name:n,json:r}}catch{return}}(t)?"pcsogszip":void 0}function mz(t){const e=function(t){const e=t.split(/[?#]/,1)[0],n=Math.max(e.lastIndexOf("/"),e.lastIndexOf("\\")),i=e.slice(n+1),r=i.lastIndexOf(".");return r<=0||r===i.length-1?"":i.slice(r+1).toLowerCase()}(t);return"ply"===e?"ply":"spz"===e?"spz":"splat"===e?"splat":"ksplat"===e?"ksplat":"sog"===e?"pcsogszip":void 0}function yz(t){return void 0!==vz(t)}function vz(t){try{let e;if("string"==typeof t)e=t;else{const n=t instanceof ArrayBuffer?new Uint8Array(t):t;if(n.length>65536)return;e=(new TextDecoder).decode(n)}const n=JSON.parse(e);if(!n||"object"!=typeof n||Array.isArray(n))return;const i=2===n.version;for(const t of["means","scales","quats","sh0"]){if(!n[t]||"object"!=typeof n[t]||Array.isArray(n[t]))return;if(i){if(!n[t].files)return;if(("scales"===t||"sh0"===t)&&!n[t].codebook)return;if(!("means"!==t||n[t].mins&&n[t].maxs))return}else{if(!n[t].shape||!n[t].files)return;if(!("quats"===t||n[t].mins&&n[t].maxs))return}}return n}catch{return}}async function xz({input:t,extraFiles:e,fileType:n,pathOrUrl:i,splatEncoding:r}){const s=t instanceof ArrayBuffer?new Uint8Array(t):t;let a=n;switch(n||(a=fz(s),!a&&i&&(a=mz(i))),a){case"ply":{const t=new VO({fileBytes:s});await t.parseHeader();const e=rL(t.numSplats).maxSplats,n={fileBytes:s,packedArray:new Uint32Array(4*e),splatEncoding:r};return await uz(async t=>{const{packedArray:e,numSplats:i,extra:r}=await t.call("unpackPly",n);return{packedArray:e,numSplats:i,extra:r}})}case"spz":return await uz(async t=>{const{packedArray:e,numSplats:n,extra:i}=await t.call("decodeSpz",{fileBytes:s,splatEncoding:r});return{packedArray:e,numSplats:n,extra:i}});case"splat":return await uz(async t=>{const{packedArray:e,numSplats:n}=await t.call("decodeAntiSplat",{fileBytes:s,splatEncoding:r});return{packedArray:e,numSplats:n}});case"ksplat":return await uz(async t=>{const{packedArray:e,numSplats:n,extra:i}=await t.call("decodeKsplat",{fileBytes:s,splatEncoding:r});return{packedArray:e,numSplats:n,extra:i}});case"pcsogs":return await uz(async t=>{const{packedArray:n,numSplats:i,extra:a}=await t.call("decodePcSogs",{fileBytes:s,extraFiles:e,splatEncoding:r});return{packedArray:n,numSplats:i,extra:a}});case"pcsogszip":return await uz(async t=>{const{packedArray:e,numSplats:n,extra:i}=await t.call("decodePcSogsZip",{fileBytes:s,splatEncoding:r});return{packedArray:e,numSplats:n,extra:i}});default:throw new Error(`Unknown splat file type: ${a}`)}}class Cz{constructor({maxSplats:t=1}={}){this.numSplats=0,this.maxSplats=rL(t).maxSplats,this.centers=new Float32Array(3*this.maxSplats),this.scales=new Float32Array(3*this.maxSplats),this.quaternions=new Float32Array(4*this.maxSplats),this.opacities=new Float32Array(this.maxSplats),this.colors=new Float32Array(3*this.maxSplats)}pushSplat(){const t=this.numSplats;return this.ensureIndex(t),this.numSplats+=1,t}unpushSplat(t){if(t!==this.numSplats-1)throw new Error("Cannot unpush splat from non-last position");this.numSplats-=1}ensureCapacity(t){if(t>this.maxSplats){const e=Math.max(t,2*this.maxSplats),n=new Float32Array(3*e),i=new Float32Array(3*e),r=new Float32Array(4*e),s=new Float32Array(e),a=new Float32Array(3*e);if(n.set(this.centers),i.set(this.scales),r.set(this.quaternions),s.set(this.opacities),a.set(this.colors),this.centers=n,this.scales=i,this.quaternions=r,this.opacities=s,this.colors=a,this.sh1){const t=new Float32Array(9*e);t.set(this.sh1),this.sh1=t}if(this.sh2){const t=new Float32Array(15*e);t.set(this.sh2),this.sh2=t}if(this.sh3){const t=new Float32Array(21*e);t.set(this.sh3),this.sh3=t}this.maxSplats=e}}ensureIndex(t){this.ensureCapacity(t+1)}setCenter(t,e,n,i){this.centers[3*t]=e,this.centers[3*t+1]=n,this.centers[3*t+2]=i}setScale(t,e,n,i){this.scales[3*t]=e,this.scales[3*t+1]=n,this.scales[3*t+2]=i}setQuaternion(t,e,n,i,r){this.quaternions[4*t]=e,this.quaternions[4*t+1]=n,this.quaternions[4*t+2]=i,this.quaternions[4*t+3]=r}setOpacity(t,e){this.opacities[t]=e}setColor(t,e,n,i){this.colors[3*t]=e,this.colors[3*t+1]=n,this.colors[3*t+2]=i}setSh1(t,e){this.sh1||(this.sh1=new Float32Array(9*this.maxSplats));for(let n=0;n<9;++n)this.sh1[9*t+n]=e[n]}setSh2(t,e){this.sh2||(this.sh2=new Float32Array(15*this.maxSplats));for(let n=0;n<15;++n)this.sh2[15*t+n]=e[n]}setSh3(t,e){this.sh3||(this.sh3=new Float32Array(21*this.maxSplats));for(let n=0;n<21;++n)this.sh3[21*t+n]=e[n]}}const Iz={rgbMin:0,rgbMax:1,lnScaleMin:MR,lnScaleMax:TR,sh1Min:-1,sh1Max:1,sh2Min:-1,sh2Max:1,sh3Min:-1,sh3Max:1},Ez=class t{constructor(t={}){this.maxSplats=0,this.numSplats=0,this.packedArray=null,this.isInitialized=!1,this.target=null,this.source=null,this.needsUpdate=!0,this.extra={},this.dyno=new _z({packedSplats:this}),this.dynoRgbMinMaxLnScaleMinMax=new uP({key:"rgbMinMaxLnScaleMinMax",value:new Li(0,1,MR,TR),update:t=>{var e,n,i,r;return t.set((null==(e=this.splatEncoding)?void 0:e.rgbMin)??0,(null==(n=this.splatEncoding)?void 0:n.rgbMax)??1,(null==(i=this.splatEncoding)?void 0:i.lnScaleMin)??MR,(null==(r=this.splatEncoding)?void 0:r.lnScaleMax)??TR),t}}),this.dynoSh1MinMax=new rP({key:"sh1MinMax",value:new li(-1,1),update:t=>{var e,n;return t.set((null==(e=this.splatEncoding)?void 0:e.sh1Min)??-1,(null==(n=this.splatEncoding)?void 0:n.sh1Max)??1),t}}),this.dynoSh2MinMax=new rP({key:"sh2MinMax",value:new li(-1,1),update:t=>{var e,n;return t.set((null==(e=this.splatEncoding)?void 0:e.sh2Min)??-1,(null==(n=this.splatEncoding)?void 0:n.sh2Max)??1),t}}),this.dynoSh3MinMax=new rP({key:"sh3MinMax",value:new li(-1,1),update:t=>{var e,n;return t.set((null==(e=this.splatEncoding)?void 0:e.sh3Min)??-1,(null==(n=this.splatEncoding)?void 0:n.sh3Max)??1),t}}),this.initialized=Promise.resolve(this),this.reinitialize(t)}reinitialize(t){this.isInitialized=!1,this.extra={},this.splatEncoding=t.splatEncoding,t.url||t.fileBytes||t.construct?this.initialized=this.asyncInitialize(t).then(()=>(this.isInitialized=!0,this)):(this.initialize(t),this.isInitialized=!0,this.initialized=Promise.resolve(this))}initialize(t){t.packedArray?(this.packedArray=t.packedArray,this.maxSplats=Math.floor(this.packedArray.length/4),this.maxSplats=Math.floor(this.maxSplats/UR)*UR,this.numSplats=Math.min(this.maxSplats,t.numSplats??Number.POSITIVE_INFINITY)):(this.maxSplats=t.maxSplats??0,this.numSplats=0),this.extra=t.extra??{}}async asyncInitialize(t){const{url:e,fileBytes:n,construct:i}=t;if(e){const t=new dz;t.packedSplats=this,await t.loadAsync(e)}else if(n){const i=await xz({input:n,fileType:t.fileType,pathOrUrl:t.fileName??e,splatEncoding:t.splatEncoding??Iz});this.initialize(i)}if(i){const t=i(this);t instanceof Promise&&await t}}dispose(){this.target&&(this.target.dispose(),this.target=null),this.source&&(this.source.dispose(),this.source=null)}ensureSplats(t){const e=t<=this.maxSplats?this.maxSplats:Math.max(t,2*this.maxSplats),n=this.packedArray?this.packedArray.length/4:0;if(!this.packedArray||e>n){this.maxSplats=rL(e).maxSplats;const t=new Uint32Array(4*this.maxSplats);this.packedArray&&t.set(this.packedArray),this.packedArray=t}return this.packedArray}ensureSplatsSh(t,e){let n,i;if(0===t)return this.ensureSplats(e);if(1===t)n=2,i="sh1";else if(2===t)n=4,i="sh2";else{if(3!==t)throw new Error(`Invalid level: ${t}`);n=4,i="sh3"}let r=this.extra[i]?this.extra[i].length/n:0;const s=e<=r?r:Math.max(e,2*r);if(!this.extra[i]||s>r){r=rL(s).maxSplats;const t=new Uint32Array(r*n);this.extra[i]&&t.set(this.extra[i]),this.extra[i]=t}return this.extra[i]}getSplat(t){if(!this.packedArray||t>=this.numSplats)throw new Error("Invalid index");return iL(this.packedArray,t,this.splatEncoding)}setSplat(t,e,n,i,r,s){tL(this.ensureSplats(t+1),t,e.x,e.y,e.z,n.x,n.y,n.z,i.x,i.y,i.z,i.w,r,s.r,s.g,s.b),this.numSplats=Math.max(this.numSplats,t+1)}pushSplat(t,e,n,i,r){tL(this.ensureSplats(this.numSplats+1),this.numSplats,t.x,t.y,t.z,e.x,e.y,e.z,n.x,n.y,n.z,n.w,i,r.r,r.g,r.b),++this.numSplats}forEachSplat(t){if(this.packedArray&&this.numSplats)for(let e=0;e<this.numSplats;++e){const n=iL(this.packedArray,e,this.splatEncoding);t(e,n.center,n.scales,n.quaternion,n.opacity,n.color)}}ensureGenerate(t){if(this.target&&(t??1)<=this.maxSplats)return!1;this.dispose();const e=rL(t??1),{width:n,height:i,depth:r}=e;return this.maxSplats=e.maxSplats,this.target=new Oi(n,i,r,{depthBuffer:!1,stencilBuffer:!1,generateMipmaps:!1,magFilter:bt,minFilter:bt}),this.target.texture.format=se,this.target.texture.type=zt,this.target.texture.internalFormat="RGBA32UI",this.target.scissorTest=!0,!0}generateMapping(t){let e=0;const n=t.map(t=>{const n=e,i=Math.ceil(t/UR)*UR;return e+=i,{base:n,count:t}});return{maxSplats:e,mapping:n}}getTexture(){return this.target?this.target.texture:this.source||this.packedArray?this.maybeUpdateSource():t.getEmpty()}maybeUpdateSource(){if(!this.packedArray)throw new Error("No packed splats");if(this.needsUpdate||!this.source){if(this.needsUpdate=!1,this.source){const{width:t,height:e,depth:n}=this.source.image;this.maxSplats!==t*e*n&&(this.source.dispose(),this.source=null)}if(this.source)this.packedArray.buffer!==this.source.image.data.buffer&&(this.source.image.data=new Uint8Array(this.packedArray.buffer));else{const{width:t,height:e,depth:n}=rL(this.maxSplats);this.source=new ki(this.packedArray,t,e,n),this.source.format=se,this.source.type=zt,this.source.internalFormat="RGBA32UI",this.source.needsUpdate=!0}this.source.needsUpdate=!0}return this.source}static getEmpty(){if(!t.emptySource){const{width:e,height:n,depth:i,maxSplats:r}=rL(1),s=new Uint32Array(4*r);t.emptySource=new ki(s,e,n,i),t.emptySource.format=se,t.emptySource.type=zt,t.emptySource.internalFormat="RGBA32UI",t.emptySource.needsUpdate=!0}return t.emptySource}prepareProgramMaterial(e){let n=t.generatorProgram.get(e);if(!n){const i=yU({index:"int"},{output:"uvec4"},({index:t})=>{e.inputs.index=t;const n=e.outputs.gsplat;return{output:qU(n,this.dynoRgbMinMaxLnScaleMinMax)}});t.programTemplate||(t.programTemplate=new bL("precision highp float;\r\nprecision highp int;\r\nprecision highp sampler2D;\r\nprecision highp usampler2D;\r\nprecision highp isampler2D;\r\nprecision highp sampler2DArray;\r\nprecision highp usampler2DArray;\r\nprecision highp isampler2DArray;\r\nprecision highp sampler3D;\r\nprecision highp usampler3D;\r\nprecision highp isampler3D;\n\n#include <splatDefines>\n\nuniform uint targetLayer;\r\nuniform int targetBase;\r\nuniform int targetCount;\n\nout uvec4 target;\n\n{{ GLOBALS }}\n\nvoid produceSplat(int index) {\r\n    {{ STATEMENTS }}\r\n}\n\nvoid main() {\r\n    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);\r\n    int index = targetIndex - targetBase;\n\n    if ((index >= 0) && (index < targetCount)) {\r\n        produceSplat(index);\r\n    } else {\r\n        target = uvec4(0u, 0u, 0u, 0u);\r\n    }\r\n}")),n=new _L({graph:i,inputs:{index:"index"},outputs:{output:"target"},template:t.programTemplate}),Object.assign(n.uniforms,{targetLayer:{value:0},targetBase:{value:0},targetCount:{value:0}}),t.generatorProgram.set(e,n)}const i=n.prepareMaterial();return t.fullScreenQuad.material=i,{program:n,material:i}}saveRenderState(t){return{xrEnabled:t.xr.enabled,autoClear:t.autoClear}}resetRenderState(t,e){t.setRenderTarget(null),t.xr.enabled=e.xrEnabled,t.autoClear=e.autoClear}generate({generator:e,base:n,count:i,renderer:r}){if(!this.target)throw new Error("Target must be initialized with ensureSplats");if(n+i>this.maxSplats)throw new Error("Base + count exceeds maxSplats");const{program:s,material:a}=this.prepareProgramMaterial(e);s.update();const o=this.saveRenderState(r),l=Math.ceil((n+i)/UR)*UR,c=UR*PR;for(a.uniforms.targetBase.value=n,a.uniforms.targetCount.value=i;n<l;){const e=Math.floor(n/c);a.uniforms.targetLayer.value=e;const i=e*c,s=Math.floor((n-i)/UR),o=Math.min(PR,Math.ceil((l-i)/UR));this.target.scissor.set(0,s,UR,o-s),r.setRenderTarget(this.target,e),r.xr.enabled=!1,r.autoClear=!1,t.fullScreenQuad.render(r),n+=UR*(o-s)}return this.resetRenderState(r,o),{nextBase:l}}};Ez.emptySource=null,Ez.programTemplate=null,Ez.generatorProgram=new Map,Ez.fullScreenQuad=new OD(new Vc({visible:!1}));let wz=Ez;class _z extends XU{constructor({packedSplats:t}={}){super({key:"packedSplats",type:BU,globals:()=>[PU],value:{texture:wz.getEmpty(),numSplats:0,rgbMinMaxLnScaleMinMax:new Li(0,1,MR,TR)},update:t=>{var e,n,i,r,s,a,o,l,c,h;return t.texture=(null==(e=this.packedSplats)?void 0:e.getTexture())??wz.getEmpty(),t.numSplats=(null==(n=this.packedSplats)?void 0:n.numSplats)??0,t.rgbMinMaxLnScaleMinMax.set((null==(r=null==(i=this.packedSplats)?void 0:i.splatEncoding)?void 0:r.rgbMin)??0,(null==(a=null==(s=this.packedSplats)?void 0:s.splatEncoding)?void 0:a.rgbMax)??1,(null==(l=null==(o=this.packedSplats)?void 0:o.splatEncoding)?void 0:l.lnScaleMin)??MR,(null==(h=null==(c=this.packedSplats)?void 0:c.splatEncoding)?void 0:h.lnScaleMax)??TR),t}}),this.packedSplats=t}}class bz extends iA{constructor(t,e){super(),this.ordering=t,this.setAttribute("position",new Cs(Bz,3)),this.setIndex(new Cs(Sz,1)),this._maxInstanceCount=t.length,this.instanceCount=e,this.attribute=new no(t,1,!1,1),this.attribute.setUsage(Pn),this.setAttribute("splatIndex",this.attribute)}update(t,e){this.ordering=t,this.attribute.array=t,this.instanceCount=e,this.attribute.addUpdateRange(0,e),this.attribute.needsUpdate=!0}}const Bz=new Float32Array([-1,-1,0,1,-1,0,1,1,0,-1,1,0]),Sz=new Uint16Array([0,1,2,0,2,3]),Mz=class t{constructor(t){if(this.lastTime=null,this.encodeLinear=!1,this.superXY=1,this.display=null,this.sorting=null,this.pending=null,this.sortingCheck=!1,this.readback16=new Uint16Array(0),this.readback32=new Uint32Array(0),this.spark=t.spark,this.camera=t.camera,this.viewToWorld=t.viewToWorld??new fr,t.target){const{width:e,height:n,doubleBuffer:i}=t.target,r=Math.max(1,Math.min(4,t.target.superXY??1));if(this.superXY=r,e*r>8192||n*r>8192)throw new Error("Target size too large");this.target=new Ni(e*r,n*r,{format:Kt,type:Lt,colorSpace:an}),i&&(this.back=new Ni(e*r,n*r,{format:Kt,type:Lt,colorSpace:an})),this.encodeLinear=!0}this.onTextureUpdated=t.onTextureUpdated,this.sortRadial=t.sortRadial??!0,this.sortDistance=t.sortDistance,this.sortCoorient=t.sortCoorient,this.depthBias=t.depthBias,this.sort360=t.sort360,this.sort32=t.sort32,this.stochastic=t.stochastic??!1,this.orderingFreelist=new $P({allocate:t=>new Uint32Array(t),valid:(t,e)=>t.length===e}),this.autoUpdate=!1,this.setAutoUpdate(t.autoUpdate??!1)}dispose(){var t;this.setAutoUpdate(!1),this.target&&(this.target.dispose(),this.target=void 0),this.back&&(this.back.dispose(),this.back=void 0),this.display&&(this.spark.releaseAccumulator(this.display.accumulator),this.display.geometry.dispose(),this.display=null),(null==(t=this.pending)?void 0:t.accumulator)&&(this.spark.releaseAccumulator(this.pending.accumulator),this.pending=null)}setAutoUpdate(t){!this.autoUpdate&&t?this.spark.autoViewpoints.push(this):this.autoUpdate&&!t&&(this.spark.autoViewpoints=this.spark.autoViewpoints.filter(t=>t!==this)),this.autoUpdate=t}async prepare({scene:t,camera:e,viewToWorld:n,update:i,forceOrigin:r}){var s;for(n?this.viewToWorld=n:(this.camera=e??this.camera,this.camera&&(this.camera.updateMatrixWorld(),this.viewToWorld=this.camera.matrixWorld.clone()));i??1;){const e=r?this.viewToWorld:void 0;if(this.spark.updateInternal({scene:t,originToWorld:e}))break;await new Promise(t=>setTimeout(t,10))}const a=this.spark.active;a!==(null==(s=this.display)?void 0:s.accumulator)&&(this.spark.active.refCount+=1),await this.sortUpdate({accumulator:a,viewToWorld:this.viewToWorld})}renderTarget({scene:t,camera:e}){var n;const i=this.back??this.target;if(!i)throw new Error("Must initialize SparkViewpoint with target");if(!(e=e??this.camera))throw new Error("Must provide camera");if(e instanceof la){const t=(new la).copy(e,!1);t.aspect=i.width/i.height,t.updateProjectionMatrix(),e=t}this.viewToWorld=e.matrixWorld.clone();try{this.spark.renderer.setRenderTarget(i),this.spark.prepareViewpoint(this),this.spark.renderer.render(t,e)}finally{this.spark.prepareViewpoint(this.spark.defaultView),this.spark.renderer.setRenderTarget(null)}i!==this.target&&([this.target,this.back]=[this.back,this.target]),null==(n=this.onTextureUpdated)||n.call(this,i.texture)}async readTarget(){if(!this.target)throw new Error("Must initialize SparkViewpoint with target");const{width:t,height:e}=this.target,n=t*e*4;(!this.superPixels||this.superPixels.length<n)&&(this.superPixels=new Uint8Array(n)),await this.spark.renderer.readRenderTargetPixelsAsync(this.target,0,0,t,e,this.superPixels);const{superXY:i}=this;if(1===i)return this.superPixels;const r=t/i,s=e/i,a=r*s*4;(!this.pixels||this.pixels.length<a)&&(this.pixels=new Uint8Array(a));const{superPixels:o,pixels:l}=this,c=i*i;for(let t=0;t<s;t++){const e=t*r;for(let n=0;n<r;n++){const r=n*i;let s=0,a=0,h=0,A=0;for(let e=0;e<i;e++){const n=(t*i+e)*this.target.width;for(let t=0;t<i;t++){const e=4*(n+r+t);s+=o[e],a+=o[e+1],h+=o[e+2],A+=o[e+3]}}const u=4*(e+n);l[u]=s/c,l[u+1]=a/c,l[u+2]=h/c,l[u+3]=A/c}}return l}async prepareRenderPixels({scene:t,camera:e,viewToWorld:n,update:i,forceOrigin:r}){return await this.prepare({scene:t,camera:e,viewToWorld:n,update:i,forceOrigin:r}),this.renderTarget({scene:t,camera:e}),this.readTarget()}autoPoll({accumulator:t}){var e,n,i,r;this.camera&&(this.camera.updateMatrixWorld(),this.viewToWorld=this.camera.matrixWorld.clone());let s=!1,a=!1;if(this.display){if(t){s=!0;const{mappingVersion:e}=this.display.accumulator;t.mappingVersion===e&&(this.spark.releaseAccumulator(this.display.accumulator),this.display.accumulator=t,a=!0)}}else s=!0;const o=(null==(e=this.sorting)?void 0:e.viewToWorld)??(null==(n=this.display)?void 0:n.viewToWorld);o&&!fL({matrix1:this.viewToWorld,matrix2:o,maxDistance:this.sortDistance??.01,minCoorient:this.sortCoorient??this.sortRadial?.99:.999})&&(s=!0),s&&(t&&(t.refCount+=1),t&&(null==(i=this.pending)?void 0:i.accumulator)&&this.pending.accumulator!==(null==(r=this.display)?void 0:r.accumulator)&&this.spark.releaseAccumulator(this.pending.accumulator),this.pending={accumulator:t,viewToWorld:this.viewToWorld,displayed:a},this.driveSort())}async driveSort(){for(var t;;){if(this.sorting||!this.pending)return;const{viewToWorld:e,displayed:n}=this.pending;let i=this.pending.accumulator??(null==(t=this.display)?void 0:t.accumulator);if(i||(i=this.spark.active,i.refCount+=1),this.pending=null,!i)throw new Error("No accumulator to sort");this.sorting={viewToWorld:e},await this.sortUpdate({accumulator:i,viewToWorld:e,displayed:n}),this.sorting=null}}async sortUpdate({accumulator:e,viewToWorld:n,displayed:i=!1}){if(this.sortingCheck)throw new Error("Only one sort at a time");this.sortingCheck=!0,e=e??this.spark.active;const{numSplats:r,maxSplats:s}=e.splats;let a=0,o=this.orderingFreelist.alloc(s);if(this.stochastic){a=r;for(let t=0;t<r;++t)o[t]=t}else if(r>0){const{reader:i,doubleSortReader:l,sort32Reader:c,dynoSortRadial:h,dynoOrigin:A,dynoDirection:u,dynoDepthBias:d,dynoSort360:p,dynoSplats:g}=t.makeSorter(),f=this.sort32??!1;let m;if(f)this.readback32=i.ensureBuffer(s,this.readback32),m=this.readback32;else{const t=Math.ceil(s/2);this.readback16=i.ensureBuffer(t,this.readback16),m=this.readback16}const y=e.toWorld.clone().invert(),v=n.clone().premultiply(y);h.value=!!this.sort360||this.sortRadial,A.value.set(0,0,0).applyMatrix4(v),u.value.set(0,0,-1).applyMatrix4(v).sub(A.value).normalize(),d.value=this.depthBias??1,p.value=this.sort360??!1,g.packedSplats=e.splats;const x=f?c:l,C=f?r:Math.ceil(r/2);await i.renderReadback({renderer:this.spark.renderer,reader:x,count:C,readback:m});const I=await uz(async t=>{const e=f?"sort32Splats":"sortDoubleSplats";return t.call(e,{maxSplats:s,numSplats:r,readback:m,ordering:o})});f?this.readback32=I.readback:this.readback16=I.readback,o=I.ordering,a=I.activeSplats}this.updateDisplay({accumulator:e,viewToWorld:n,ordering:o,activeSplats:a,displayed:i}),this.sortingCheck=!1}updateDisplay({accumulator:t,viewToWorld:e,ordering:n,activeSplats:i,displayed:r=!1}){if(this.display){r||t===this.display.accumulator||(this.spark.releaseAccumulator(this.display.accumulator),this.display.accumulator=t),this.display.viewToWorld=e;const s=this.display.geometry.ordering;s.length===n.length?this.display.geometry.update(n,i):(this.display.geometry.dispose(),this.display.geometry=new bz(n,i)),this.orderingFreelist.free(s)}else this.display={accumulator:t,viewToWorld:e,geometry:new bz(n,i)};this.spark.viewpoint===this&&this.spark.prepareViewpoint(this)}static makeSorter(){if(!t.dynos){const e=new KU({value:!0}),n=new lP({value:new hi}),i=new lP({value:new hi}),r=new tP({value:1}),s=new KU({value:!1}),a=new _z,o=new gO,l=yU({index:"int"},{rgba8:"vec4"},({index:t})=>{if(!t)throw new Error("No index");const o={sortRadial:e,sortOrigin:n,sortDirection:i,sortDepthBias:r,sort360:s},l=aF(t,uU("int",2)),c=Dz({gsplat:SU(a,l),...o}),h=Dz({gsplat:SU(a,rF(l,uU("int",1))),...o}),A=ZN({vectorType:"vec2",x:c,y:h});return{rgba8:mN(fN(A))}}),c=yU({index:"int"},{rgba8:"vec4"},({index:t})=>{if(!t)throw new Error("No index");const o={sortRadial:e,sortOrigin:n,sortDirection:i,sortDepthBias:r,sort360:s},l=Dz({gsplat:SU(a,t),...o});return{rgba8:mN(gN(l))}});t.dynos={dynoSortRadial:e,dynoOrigin:n,dynoDirection:i,dynoDepthBias:r,dynoSort360:s,dynoSplats:a,reader:o,doubleSortReader:l,sort32Reader:c}}return t.dynos}};Mz.EMPTY_TEXTURE=new Pi,Mz.dynos=null;let Tz=Mz;const Qz=IU("\n  float computeSort(Gsplat gsplat, bool sortRadial, vec3 sortOrigin, vec3 sortDirection, float sortDepthBias, bool sort360) {\n    if (!isGsplatActive(gsplat.flags)) {\n      return INFINITY;\n    }\n\n    vec3 center = gsplat.center - sortOrigin;\n    float biasedDepth = dot(center, sortDirection) + sortDepthBias;\n    if (!sort360 && (biasedDepth <= 0.0)) {\n      return INFINITY;\n    }\n\n    return sortRadial ? length(center) : biasedDepth;\n  }\n");function Dz({gsplat:t,sortRadial:e,sortOrigin:n,sortDirection:i,sortDepthBias:r,sort360:s}){return vU({inTypes:{gsplat:bU,sortRadial:"bool",sortOrigin:"vec3",sortDirection:"vec3",sortDepthBias:"float",sort360:"bool"},outTypes:{metric:"float"},globals:()=>[UU,Qz],inputs:{gsplat:t,sortRadial:e,sortOrigin:n,sortDirection:i,sortDepthBias:r,sort360:s},statements:({inputs:t,outputs:e})=>{const{gsplat:n,sortRadial:i,sortOrigin:r,sortDirection:s,sortDepthBias:a,sort360:o}=t;return CU(`\n        ${e.metric} = computeSort(${n}, ${i}, ${r}, ${s}, ${a}, ${o});\n      `)}}).outputs.metric}class Rz{constructor(){this.splats=new wz,this.toWorld=new fr,this.mapping=[],this.refCount=0,this.splatsVersion=-1,this.mappingVersion=-1}ensureGenerate(t){this.splats.ensureGenerate(t)&&(this.mapping=[])}generateSplats({renderer:t,modifier:e,generators:n,forceUpdate:i,originToWorld:r}){const s=this.mapping.reduce((t,e)=>(t.set(e.node,e),t),new Map);let a=0,o=0;for(const{node:r,generator:l,version:c,base:h,count:A}of n){const n=s.get(r);if((i||l!==(null==n?void 0:n.generator)||c!==(null==n?void 0:n.version)||h!==(null==n?void 0:n.base)||A!==(null==n?void 0:n.count))&&l&&A>0){const n=e.apply(l);try{this.splats.generate({generator:n,base:h,count:A,renderer:t})}catch(t){r.generator=void 0,r.generatorError=t}a+=1}o=Math.max(o,h+A)}return this.splats.numSplats=o,this.toWorld=r,this.mapping=n,0!==a}hasCorrespondence(t){return this.mapping.length===t.mapping.length&&this.mapping.every(({node:e,base:n,count:i},r)=>{const{node:s,base:a,count:o}=t.mapping[r];return e===s&&n===a&&i===o})}}let Uz=null;const Pz=class t extends Xs{constructor(e){const n=t.makeUniforms(),i=(Uz||($u.splatDefines="const float LN_SCALE_MIN = -12.0;\r\nconst float LN_SCALE_MAX = 9.0;\n\nconst uint SPLAT_TEX_WIDTH_BITS = 11u;\r\nconst uint SPLAT_TEX_HEIGHT_BITS = 11u;\r\nconst uint SPLAT_TEX_DEPTH_BITS = 11u;\r\nconst uint SPLAT_TEX_LAYER_BITS = SPLAT_TEX_WIDTH_BITS + SPLAT_TEX_HEIGHT_BITS;\n\nconst uint SPLAT_TEX_WIDTH = 1u << SPLAT_TEX_WIDTH_BITS;\r\nconst uint SPLAT_TEX_HEIGHT = 1u << SPLAT_TEX_HEIGHT_BITS;\r\nconst uint SPLAT_TEX_DEPTH = 1u << SPLAT_TEX_DEPTH_BITS;\n\nconst uint SPLAT_TEX_WIDTH_MASK = SPLAT_TEX_WIDTH - 1u;\r\nconst uint SPLAT_TEX_HEIGHT_MASK = SPLAT_TEX_HEIGHT - 1u;\r\nconst uint SPLAT_TEX_DEPTH_MASK = SPLAT_TEX_DEPTH - 1u;\n\nconst uint F16_INF = 0x7c00u;\r\nconst float PI = 3.1415926535897932384626433832795;\n\nconst float INFINITY = 1.0 / 0.0;\r\nconst float NEG_INFINITY = -INFINITY;\n\nfloat sqr(float x) {\r\n    return x * x;\r\n}\n\nfloat pow4(float x) {\r\n    float x2 = x * x;\r\n    return x2 * x2;\r\n}\n\nfloat pow8(float x) {\r\n    float x4 = pow4(x);\r\n    return x4 * x4;\r\n}\n\nvec3 srgbToLinear(vec3 rgb) {\r\n    return pow(rgb, vec3(2.2));\r\n}\n\nvec3 linearToSrgb(vec3 rgb) {\r\n    return pow(rgb, vec3(1.0 / 2.2));\r\n}\n\nuint encodeQuatOctXy88R8(vec4 q) {\r\n    \n    if (q.w < 0.0) {\r\n        q = -q;\r\n    }\r\n    \n    float theta = 2.0 * acos(q.w);\r\n    float halfTheta = theta * 0.5;\r\n    float s = sin(halfTheta);\r\n    \n    vec3 axis = (abs(s) < 1e-6) ? vec3(1.0, 0.0, 0.0) : q.xyz / s;\r\n    \r\n    \n    \n    float sum = abs(axis.x) + abs(axis.y) + abs(axis.z);\r\n    vec2 p = vec2(axis.x, axis.y) / sum;\r\n    \n    if (axis.z < 0.0) {\r\n        float oldPx = p.x;\r\n        p.x = (1.0 - abs(p.y)) * (p.x >= 0.0 ? 1.0 : -1.0);\r\n        p.y = (1.0 - abs(oldPx)) * (p.y >= 0.0 ? 1.0 : -1.0);\r\n    }\r\n    \n    float u_f = p.x * 0.5 + 0.5;\r\n    float v_f = p.y * 0.5 + 0.5;\r\n    \n    uint quantU = uint(clamp(round(u_f * 255.0), 0.0, 255.0));\r\n    uint quantV = uint(clamp(round(v_f * 255.0), 0.0, 255.0));\r\n    \r\n    \n    \n    uint angleInt = uint(clamp(round((theta / 3.14159265359) * 255.0), 0.0, 255.0));\r\n    \r\n    \n    return (angleInt << 16u) | (quantV << 8u) | quantU;\r\n}\n\nvec4 decodeQuatOctXy88R8(uint encoded) {\r\n    \n    uint quantU = encoded & uint(0xFFu);               \n    uint quantV = (encoded >> 8u) & uint(0xFFu);         \n    uint angleInt = encoded >> 16u;                      \n\n    \n    float u_f = float(quantU) / 255.0;\r\n    float v_f = float(quantV) / 255.0;\r\n    vec2 f = vec2(u_f * 2.0 - 1.0, v_f * 2.0 - 1.0);\n\n    vec3 axis = vec3(f.xy, 1.0 - abs(f.x) - abs(f.y));\r\n    float t = max(-axis.z, 0.0);\r\n    axis.x += (axis.x >= 0.0) ? -t : t;\r\n    axis.y += (axis.y >= 0.0) ? -t : t;\r\n    axis = normalize(axis);\r\n    \r\n    \n    float theta = (float(angleInt) / 255.0) * 3.14159265359;\r\n    float halfTheta = theta * 0.5;\r\n    float s = sin(halfTheta);\r\n    float w = cos(halfTheta);\r\n    \r\n    return vec4(axis * s, w);\r\n}\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\nuvec4 packSplatEncoding(\r\n    vec3 center, vec3 scales, vec4 quaternion, vec4 rgba, vec4 rgbMinMaxLnScaleMinMax\r\n) {\r\n    float rgbMin = rgbMinMaxLnScaleMinMax.x;\r\n    float rgbMax = rgbMinMaxLnScaleMinMax.y;\r\n    vec3 encRgb = (rgba.rgb - vec3(rgbMin)) / (rgbMax - rgbMin);\r\n    uvec4 uRgba = uvec4(round(clamp(vec4(encRgb, rgba.a) * 255.0, 0.0, 255.0)));\n\n    uint uQuat = encodeQuatOctXy88R8(quaternion);\r\n    \n    \n    uvec3 uQuat3 = uvec3(uQuat & 0xffu, (uQuat >> 8u) & 0xffu, (uQuat >> 16u) & 0xffu);\n\n    \n    float lnScaleMin = rgbMinMaxLnScaleMinMax.z;\r\n    float lnScaleMax = rgbMinMaxLnScaleMinMax.w;\r\n    float lnScaleScale = 254.0 / (lnScaleMax - lnScaleMin);\r\n    uvec3 uScales = uvec3(\r\n        (scales.x == 0.0) ? 0u : uint(round(clamp((log(scales.x) - lnScaleMin) * lnScaleScale, 0.0, 254.0))) + 1u,\r\n        (scales.y == 0.0) ? 0u : uint(round(clamp((log(scales.y) - lnScaleMin) * lnScaleScale, 0.0, 254.0))) + 1u,\r\n        (scales.z == 0.0) ? 0u : uint(round(clamp((log(scales.z) - lnScaleMin) * lnScaleScale, 0.0, 254.0))) + 1u\r\n    );\n\n    \n    uint word0 = uRgba.r | (uRgba.g << 8u) | (uRgba.b << 16u) | (uRgba.a << 24u);\r\n    uint word1 = packHalf2x16(center.xy);\r\n    uint word2 = packHalf2x16(vec2(center.z, 0.0)) | (uQuat3.x << 16u) | (uQuat3.y << 24u);\r\n    uint word3 = uScales.x | (uScales.y << 8u) | (uScales.z << 16u) | (uQuat3.z << 24u);\r\n    return uvec4(word0, word1, word2, word3);\r\n}\n\nuvec4 packSplat(vec3 center, vec3 scales, vec4 quaternion, vec4 rgba) {\r\n    return packSplatEncoding(center, scales, quaternion, rgba, vec4(0.0, 1.0, LN_SCALE_MIN, LN_SCALE_MAX));\r\n}\n\nvoid unpackSplatEncoding(uvec4 packed, out vec3 center, out vec3 scales, out vec4 quaternion, out vec4 rgba, vec4 rgbMinMaxLnScaleMinMax) {\r\n    uint word0 = packed.x, word1 = packed.y, word2 = packed.z, word3 = packed.w;\n\n    uvec4 uRgba = uvec4(word0 & 0xffu, (word0 >> 8u) & 0xffu, (word0 >> 16u) & 0xffu, (word0 >> 24u) & 0xffu);\r\n    float rgbMin = rgbMinMaxLnScaleMinMax.x;\r\n    float rgbMax = rgbMinMaxLnScaleMinMax.y;\r\n    rgba = (vec4(uRgba) / 255.0);\r\n    rgba.rgb = rgba.rgb * (rgbMax - rgbMin) + rgbMin;\n\n    center = vec4(\r\n        unpackHalf2x16(word1),\r\n        unpackHalf2x16(word2 & 0xffffu)\r\n    ).xyz;\n\n    uvec3 uScales = uvec3(word3 & 0xffu, (word3 >> 8u) & 0xffu, (word3 >> 16u) & 0xffu);\r\n    float lnScaleMin = rgbMinMaxLnScaleMinMax.z;\r\n    float lnScaleMax = rgbMinMaxLnScaleMinMax.w;\r\n    float lnScaleScale = (lnScaleMax - lnScaleMin) / 254.0;\r\n    scales = vec3(\r\n        (uScales.x == 0u) ? 0.0 : exp(lnScaleMin + float(uScales.x - 1u) * lnScaleScale),\r\n        (uScales.y == 0u) ? 0.0 : exp(lnScaleMin + float(uScales.y - 1u) * lnScaleScale),\r\n        (uScales.z == 0u) ? 0.0 : exp(lnScaleMin + float(uScales.z - 1u) * lnScaleScale)\r\n    );\r\n\n    uint uQuat = ((word2 >> 16u) & 0xFFFFu) | ((word3 >> 8u) & 0xFF0000u);\r\n    quaternion = decodeQuatOctXy88R8(uQuat);\r\n    \n    \n}\n\nvoid unpackSplat(uvec4 packed, out vec3 center, out vec3 scales, out vec4 quaternion, out vec4 rgba) {\r\n    unpackSplatEncoding(packed, center, scales, quaternion, rgba, vec4(0.0, 1.0, LN_SCALE_MIN, LN_SCALE_MAX));\r\n}\n\nvec3 quatVec(vec4 q, vec3 v) {\r\n    \n    vec3 t = 2.0 * cross(q.xyz, v);\r\n    return v + q.w * t + cross(q.xyz, t);\r\n}\n\nvec4 quatQuat(vec4 q1, vec4 q2) {\r\n    return vec4(\r\n        q1.w * q2.x + q1.x * q2.w + q1.y * q2.z - q1.z * q2.y,\r\n        q1.w * q2.y - q1.x * q2.z + q1.y * q2.w + q1.z * q2.x,\r\n        q1.w * q2.z + q1.x * q2.y - q1.y * q2.x + q1.z * q2.w,\r\n        q1.w * q2.w - q1.x * q2.x - q1.y * q2.y - q1.z * q2.z\r\n    );\r\n}\n\nmat3 scaleQuaternionToMatrix(vec3 s, vec4 q) {\r\n    \n    return mat3(\r\n        s.x * (1.0 - 2.0 * (q.y * q.y + q.z * q.z)),\r\n        s.x * (2.0 * (q.x * q.y + q.w * q.z)),\r\n        s.x * (2.0 * (q.x * q.z - q.w * q.y)),\r\n        s.y * (2.0 * (q.x * q.y - q.w * q.z)),\r\n        s.y * (1.0 - 2.0 * (q.x * q.x + q.z * q.z)),\r\n        s.y * (2.0 * (q.y * q.z + q.w * q.x)),\r\n        s.z * (2.0 * (q.x * q.z + q.w * q.y)),\r\n        s.z * (2.0 * (q.y * q.z - q.w * q.x)),\r\n        s.z * (1.0 - 2.0 * (q.x * q.x + q.y * q.y))\r\n    );\r\n}\n\nvec4 slerp(vec4 q1, vec4 q2, float t) {\r\n    \n    float cosHalfTheta = dot(q1, q2);\n\n    \n    if (abs(cosHalfTheta) >= 0.999) {\r\n        return q1;\r\n    }\r\n    \r\n    \n    \n    if (cosHalfTheta < 0.0) {\r\n        q2 = -q2;\r\n        cosHalfTheta = -cosHalfTheta;\r\n    }\n\n    \n    float halfTheta = acos(cosHalfTheta);\r\n    float sinHalfTheta = sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n\n    \n    float ratioA = sin((1.0 - t) * halfTheta) / sinHalfTheta;\r\n    float ratioB = sin(t * halfTheta) / sinHalfTheta;\n\n    \n    return q1 * ratioA + q2 * ratioB;\r\n}\n\nivec3 splatTexCoord(int index) {\r\n    uint x = uint(index) & SPLAT_TEX_WIDTH_MASK;\r\n    uint y = (uint(index) >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK;\r\n    uint z = uint(index) >> SPLAT_TEX_LAYER_BITS;\r\n    return ivec3(x, y, z);\r\n}",Uz={splatVertex:"precision highp float;\r\nprecision highp int;\r\nprecision highp usampler2DArray;\n\n#include <splatDefines>\n\nattribute uint splatIndex;\n\nout vec4 vRgba;\r\nout vec2 vSplatUv;\r\nout vec3 vNdc;\r\nflat out uint vSplatIndex;\n\nuniform vec2 renderSize;\r\nuniform uint numSplats;\r\nuniform vec4 renderToViewQuat;\r\nuniform vec3 renderToViewPos;\r\nuniform float maxStdDev;\r\nuniform float minPixelRadius;\r\nuniform float maxPixelRadius;\r\nuniform float time;\r\nuniform float deltaTime;\r\nuniform bool debugFlag;\r\nuniform float minAlpha;\r\nuniform bool stochastic;\r\nuniform bool enable2DGS;\r\nuniform float blurAmount;\r\nuniform float preBlurAmount;\r\nuniform float focalDistance;\r\nuniform float apertureAngle;\r\nuniform float clipXY;\r\nuniform float focalAdjustment;\n\nuniform usampler2DArray packedSplats;\r\nuniform vec4 rgbMinMaxLnScaleMinMax;\n\nvoid main() {\r\n    \n    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n\n    if (uint(gl_InstanceID) >= numSplats) {\r\n        return;\r\n    }\n\n    ivec3 texCoord;\r\n    if (stochastic) {\r\n        texCoord = ivec3(\r\n            uint(gl_InstanceID) & SPLAT_TEX_WIDTH_MASK,\r\n            (uint(gl_InstanceID) >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK,\r\n            (uint(gl_InstanceID) >> SPLAT_TEX_LAYER_BITS)\r\n        );\r\n    } else {\r\n        if (splatIndex == 0xffffffffu) {\r\n            \n            return;\r\n        }\r\n        texCoord = ivec3(\r\n            splatIndex & SPLAT_TEX_WIDTH_MASK,\r\n            (splatIndex >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK,\r\n            splatIndex >> SPLAT_TEX_LAYER_BITS\r\n        );\r\n    }\r\n    uvec4 packed = texelFetch(packedSplats, texCoord, 0);\n\n    vec3 center, scales;\r\n    vec4 quaternion, rgba;\r\n    unpackSplatEncoding(packed, center, scales, quaternion, rgba, rgbMinMaxLnScaleMinMax);\n\n    if (rgba.a < minAlpha) {\r\n        return;\r\n    }\r\n    bvec3 zeroScales = equal(scales, vec3(0.0));\r\n    if (all(zeroScales)) {\r\n        return;\r\n    }\n\n    \n    vec3 viewCenter = quatVec(renderToViewQuat, center) + renderToViewPos;\n\n    \n    if (viewCenter.z >= 0.0) {\r\n        return;\r\n    }\n\n    \n    vec4 clipCenter = projectionMatrix * vec4(viewCenter, 1.0);\n\n    \n    if (abs(clipCenter.z) >= clipCenter.w) {\r\n        return;\r\n    }\n\n    \n    float clip = clipXY * clipCenter.w;\r\n    if (abs(clipCenter.x) > clip || abs(clipCenter.y) > clip) {\r\n        return;\r\n    }\n\n    \n    vSplatIndex = splatIndex;\n\n    \n    vec4 viewQuaternion = quatQuat(renderToViewQuat, quaternion);\n\n    if (enable2DGS && any(zeroScales)) {\r\n        vRgba = rgba;\r\n        vSplatUv = position.xy * maxStdDev;\n\n        vec3 offset;\r\n        if (zeroScales.z) {\r\n            offset = vec3(vSplatUv.xy * scales.xy, 0.0);\r\n        } else if (zeroScales.y) {\r\n            offset = vec3(vSplatUv.x * scales.x, 0.0, vSplatUv.y * scales.z);\r\n        } else {\r\n            offset = vec3(0.0, vSplatUv.xy * scales.yz);\r\n        }\n\n        vec3 viewPos = viewCenter + quatVec(viewQuaternion, offset);\r\n        gl_Position = projectionMatrix * vec4(viewPos, 1.0);\r\n        vNdc = gl_Position.xyz / gl_Position.w;\r\n        return;\r\n    }\n\n    \n    vec3 ndcCenter = clipCenter.xyz / clipCenter.w;\n\n    \n    mat3 RS = scaleQuaternionToMatrix(scales, viewQuaternion);\r\n    mat3 cov3D = RS * transpose(RS);\n\n    \n    vec2 scaledRenderSize = renderSize * focalAdjustment;\r\n    vec2 focal = 0.5 * scaledRenderSize * vec2(projectionMatrix[0][0], projectionMatrix[1][1]);\n\n    mat3 J;\r\n    if(isOrthographic) {\r\n        J = mat3(\r\n            focal.x, 0.0, 0.0,\r\n            0.0, focal.y, 0.0,\r\n            0.0, 0.0, 0.0\r\n        );\r\n    } else {\r\n        float invZ = 1.0 / viewCenter.z;\r\n        vec2 J1 = focal * invZ;\r\n        vec2 J2 = -(J1 * viewCenter.xy) * invZ;\r\n        J = mat3(\r\n            J1.x, 0.0, J2.x,\r\n            0.0, J1.y, J2.y,\r\n            0.0, 0.0, 0.0\r\n        );\r\n    }\n\n    \n    \n    \n    \n    \n    \n    \n    mat3 cov2D = transpose(J) * cov3D * J;\r\n    float a = cov2D[0][0];\r\n    float d = cov2D[1][1];\r\n    float b = cov2D[0][1];\n\n    \n    a += preBlurAmount;\r\n    d += preBlurAmount;\n\n    float fullBlurAmount = blurAmount;\r\n    if ((focalDistance > 0.0) && (apertureAngle > 0.0)) {\r\n        float focusRadius = maxPixelRadius;\r\n        if (viewCenter.z < 0.0) {\r\n            float focusBlur = abs((-viewCenter.z - focalDistance) / viewCenter.z);\r\n            float apertureRadius = focal.x * tan(0.5 * apertureAngle);\r\n            focusRadius = focusBlur * apertureRadius;\r\n        }\r\n        fullBlurAmount = clamp(sqr(focusRadius), blurAmount, sqr(maxPixelRadius));\r\n    }\n\n    \n    float detOrig = a * d - b * b;\r\n    a += fullBlurAmount;\r\n    d += fullBlurAmount;\r\n    float det = a * d - b * b;\n\n    \n    float blurAdjust = sqrt(max(0.0, detOrig / det));\r\n    rgba.a *= blurAdjust;\r\n    if (rgba.a < minAlpha) {\r\n        return;\r\n    }\n\n    \n    float eigenAvg = 0.5 * (a + d);\r\n    float eigenDelta = sqrt(max(0.0, eigenAvg * eigenAvg - det));\r\n    float eigen1 = eigenAvg + eigenDelta;\r\n    float eigen2 = eigenAvg - eigenDelta;\n\n    vec2 eigenVec1 = normalize(vec2((abs(b) < 0.001) ? 1.0 : b, eigen1 - a));\r\n    vec2 eigenVec2 = vec2(eigenVec1.y, -eigenVec1.x);\n\n    float scale1 = min(maxPixelRadius, maxStdDev * sqrt(eigen1));\r\n    float scale2 = min(maxPixelRadius, maxStdDev * sqrt(eigen2));\r\n    if (scale1 < minPixelRadius && scale2 < minPixelRadius) {\r\n        return;\r\n    }\n\n    \n    vec2 pixelOffset = position.x * eigenVec1 * scale1 + position.y * eigenVec2 * scale2;\r\n    vec2 ndcOffset = (2.0 / scaledRenderSize) * pixelOffset;\r\n    vec3 ndc = vec3(ndcCenter.xy + ndcOffset, ndcCenter.z);\n\n    vRgba = rgba;\r\n    vSplatUv = position.xy * maxStdDev;\r\n    vNdc = ndc;\r\n    gl_Position = vec4(ndc.xy * clipCenter.w, clipCenter.zw);\r\n}",splatFragment:"precision highp float;\r\nprecision highp int;\n\n#include <splatDefines>\n\nuniform float near;\r\nuniform float far;\r\nuniform bool encodeLinear;\r\nuniform float time;\r\nuniform bool debugFlag;\r\nuniform float maxStdDev;\r\nuniform float minAlpha;\r\nuniform bool stochastic;\r\nuniform bool disableFalloff;\r\nuniform float falloff;\n\nuniform bool splatTexEnable;\r\nuniform sampler3D splatTexture;\r\nuniform mat2 splatTexMul;\r\nuniform vec2 splatTexAdd;\r\nuniform float splatTexNear;\r\nuniform float splatTexFar;\r\nuniform float splatTexMid;\n\nout vec4 fragColor;\n\nin vec4 vRgba;\r\nin vec2 vSplatUv;\r\nin vec3 vNdc;\r\nflat in uint vSplatIndex;\n\nvoid main() {\r\n    vec4 rgba = vRgba;\n\n    float z = dot(vSplatUv, vSplatUv);\r\n    if (!splatTexEnable) {\r\n        if (z > (maxStdDev * maxStdDev)) {\r\n            discard;\r\n        }\r\n    } else {\r\n        vec2 uv = splatTexMul * vSplatUv + splatTexAdd;\r\n        float ndcZ = vNdc.z;\r\n        float depth = (2.0 * near * far) / (far + near - ndcZ * (far - near));\r\n        float clampedFar = max(splatTexFar, splatTexNear);\r\n        float clampedDepth = clamp(depth, splatTexNear, clampedFar);\r\n        float logDepth = log2(clampedDepth + 1.0);\r\n        float logNear = log2(splatTexNear + 1.0);\r\n        float logFar = log2(clampedFar + 1.0);\n\n        float texZ;\r\n        if (splatTexMid > 0.0) {\r\n            float clampedMid = clamp(splatTexMid, splatTexNear, clampedFar);\r\n            float logMid = log2(clampedMid + 1.0);\r\n            texZ = (clampedDepth <= clampedMid) ?\r\n                (0.5 * ((logDepth - logNear) / (logMid - logNear))) :\r\n                (0.5 * ((logDepth - logMid) / (logFar - logMid)) + 0.5);\r\n        } else {\r\n            texZ = (logDepth - logNear) / (logFar - logNear);\r\n        }\n\n        vec4 modulate = texture(splatTexture, vec3(uv, 1.0 - texZ));\r\n        rgba *= modulate;\r\n    }\n\n    rgba.a *= mix(1.0, exp(-0.5 * z), falloff);\n\n    if (rgba.a < minAlpha) {\r\n        discard;\r\n    }\r\n    if (encodeLinear) {\r\n        rgba.rgb = srgbToLinear(rgba.rgb);\r\n    }\n\n    if (stochastic) {\r\n        const bool STEADY = false;\r\n        uint uTime = STEADY ? 0u : floatBitsToUint(time);\r\n        uvec2 coord = uvec2(gl_FragCoord.xy);\r\n        uint state = uTime + 0x9e3779b9u * coord.x + 0x85ebca6bu * coord.y + 0xc2b2ae35u * uint(vSplatIndex);\r\n        state = state * 747796405u + 2891336453u;\r\n        uint hash = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;\r\n        hash = (hash >> 22u) ^ hash;\r\n        float rand = float(hash) / 4294967296.0;\r\n        if (rand < rgba.a) {\r\n            fragColor = vec4(rgba.rgb, 1.0);\r\n        } else {\r\n            discard;\r\n        }\r\n    } else {\r\n        #ifdef PREMULTIPLIED_ALPHA\r\n            fragColor = vec4(rgba.rgb * rgba.a, rgba.a);\r\n        #else\r\n            fragColor = rgba;\r\n        #endif\r\n    }\r\n}"}),Uz),r=e.premultipliedAlpha??!0,s=new ia({glslVersion:Vn,vertexShader:i.splatVertex,fragmentShader:i.splatFragment,uniforms:n,premultipliedAlpha:r,transparent:!0,depthTest:!0,depthWrite:!1,side:E});super(Fz,s),this.splatTexture=null,this.autoViewpoints=[],this.rotateToAccumulator=new uP({value:new ci}),this.translateToAccumulator=new lP({value:new hi}),this.lastFrame=-1,this.lastUpdateTime=null,this.defaultCameras=[],this.lastStochastic=null,this.pendingUpdate={scene:null,originToWorld:new fr,timeoutId:-1},this.envViewpoint=null,this.frustumCulled=!1,this.renderer=e.renderer,this.material=s,this.uniforms=n;const a=yU({gsplat:bU},{gsplat:bU},({gsplat:t})=>{if(!t)throw new Error("gsplat not defined");return{gsplat:t=RU(t,{rotate:this.rotateToAccumulator,translate:this.translateToAccumulator})}});this.modifier=new DO(a),this.premultipliedAlpha=r,this.autoUpdate=e.autoUpdate??!0,this.preUpdate=e.preUpdate??!1,this.needsUpdate=!1,this.originDistance=e.originDistance??1,this.maxStdDev=e.maxStdDev??Math.sqrt(8),this.minPixelRadius=e.minPixelRadius??0,this.maxPixelRadius=e.maxPixelRadius??512,this.minAlpha=e.minAlpha??1/255*.5,this.enable2DGS=e.enable2DGS??!1,this.preBlurAmount=e.preBlurAmount??0,this.blurAmount=e.blurAmount??.3,this.focalDistance=e.focalDistance??0,this.apertureAngle=e.apertureAngle??0,this.falloff=e.falloff??1,this.clipXY=e.clipXY??1.4,this.focalAdjustment=e.focalAdjustment??1,this.splatEncoding=e.splatEncoding??{...Iz},this.active=new Rz,this.accumulatorCount=1,this.freeAccumulators=[];for(let t=0;t<1;++t)this.freeAccumulators.push(new Rz),this.accumulatorCount+=1;this.defaultView=new Tz({...e.view,autoUpdate:!0,spark:this}),this.viewpoint=this.defaultView,this.prepareViewpoint(this.viewpoint),this.clock=e.clock?hL(e.clock):new vA}static makeUniforms(){return{renderSize:{value:new li},near:{value:.1},far:{value:1e3},numSplats:{value:0},renderToViewQuat:{value:new ci},renderToViewPos:{value:new hi},maxStdDev:{value:1},minPixelRadius:{value:0},maxPixelRadius:{value:512},minAlpha:{value:1/255*.5},stochastic:{value:!1},enable2DGS:{value:!1},preBlurAmount:{value:0},blurAmount:{value:.3},focalDistance:{value:0},apertureAngle:{value:0},falloff:{value:1},clipXY:{value:1.4},focalAdjustment:{value:1},splatTexEnable:{value:!1},splatTexture:{type:"t",value:t.EMPTY_SPLAT_TEXTURE},splatTexMul:{value:new su},splatTexAdd:{value:new li},splatTexNear:{value:.1},splatTexFar:{value:1e3},splatTexMid:{value:0},packedSplats:{type:"t",value:wz.getEmpty()},rgbMinMaxLnScaleMinMax:{value:new Li},time:{value:0},deltaTime:{value:0},encodeLinear:{value:!1},debugFlag:{value:!1}}}canAllocAccumulator(){return this.freeAccumulators.length>0||this.accumulatorCount<5}maybeAllocAccumulator(){let t=this.freeAccumulators.pop();if(void 0===t){if(this.accumulatorCount>=5)return null;t=new Rz,this.accumulatorCount+=1}return t.refCount=1,t}releaseAccumulator(t){t.refCount-=1,0===t.refCount&&this.freeAccumulators.push(t)}newViewpoint(t){return new Tz({...t,spark:this})}onBeforeRender(e,n,i){var r,s;const a=this.time??this.clock.getElapsedTime(),o=a-(this.viewpoint.lastTime??a);this.viewpoint.lastTime=a;const l=e.info.render.frame,c=l!==this.lastFrame;this.lastFrame=l;const h=this.viewpoint;if(h===this.defaultView){if(c)if(e.xr.isPresenting){const t=e.xr.getCamera().cameras;this.defaultCameras=t.map(t=>t.matrixWorld),this.defaultView.viewToWorld=function(t){if(0===t.length)return null;const e=new hi,n=new ci,i=new hi,r=[],s=[];for(const a of t)a.decompose(e,n,i),r.push(e),s.push(n);return(new fr).compose(uL(r),dL(s),new hi(1,1,1))}(this.defaultCameras)??new fr}else this.defaultView.viewToWorld=i.matrixWorld.clone(),this.defaultCameras=[this.defaultView.viewToWorld];this.autoUpdate&&this.update({scene:n,viewToWorld:this.defaultView.viewToWorld})}if(c&&(this.material.premultipliedAlpha!==this.premultipliedAlpha&&(this.material.premultipliedAlpha=this.premultipliedAlpha,this.material.needsUpdate=!0),this.uniforms.time.value=a,this.uniforms.deltaTime.value=o,this.uniforms.debugFlag.value=performance.now()/1e3%2<1,h.display&&h.stochastic&&(this.geometry.instanceCount=this.uniforms.numSplats.value)),h.target)this.uniforms.renderSize.value.set(h.target.width,h.target.height);else{const t=e.getDrawingBufferSize(this.uniforms.renderSize.value);if(1===t.x&&1===t.y){const n=null==(r=e.xr.getSession())?void 0:r.renderState.baseLayer;n&&(t.x=n.framebufferWidth,t.y=n.framebufferHeight)}}const A=i;if(this.uniforms.near.value=A.near,this.uniforms.far.value=A.far,this.uniforms.encodeLinear.value=h.encodeLinear,this.uniforms.maxStdDev.value=this.maxStdDev,this.uniforms.minPixelRadius.value=this.minPixelRadius,this.uniforms.maxPixelRadius.value=this.maxPixelRadius,this.uniforms.minAlpha.value=this.minAlpha,this.uniforms.stochastic.value=h.stochastic,this.uniforms.enable2DGS.value=this.enable2DGS,this.uniforms.preBlurAmount.value=this.preBlurAmount,this.uniforms.blurAmount.value=this.blurAmount,this.uniforms.focalDistance.value=this.focalDistance,this.uniforms.apertureAngle.value=this.apertureAngle,this.uniforms.falloff.value=this.falloff,this.uniforms.clipXY.value=this.clipXY,this.uniforms.focalAdjustment.value=this.focalAdjustment,this.lastStochastic!==!h.stochastic&&(this.lastStochastic=!h.stochastic,this.material.transparent=!h.stochastic,this.material.depthWrite=h.stochastic,this.material.needsUpdate=!0),this.splatTexture){const{enable:e,texture:n,multiply:i,add:r,near:s,far:a,mid:o}=this.splatTexture;e&&n?(this.uniforms.splatTexEnable.value=!0,this.uniforms.splatTexture.value=n,i?this.uniforms.splatTexMul.value.fromArray(i.elements):this.uniforms.splatTexMul.value.set(.5/this.maxStdDev,0,0,.5/this.maxStdDev),this.uniforms.splatTexAdd.value.set((null==r?void 0:r.x)??.5,(null==r?void 0:r.y)??.5),this.uniforms.splatTexNear.value=s??this.uniforms.near.value,this.uniforms.splatTexFar.value=a??this.uniforms.far.value,this.uniforms.splatTexMid.value=o??0):(this.uniforms.splatTexEnable.value=!1,this.uniforms.splatTexture.value=t.EMPTY_SPLAT_TEXTURE)}else this.uniforms.splatTexEnable.value=!1,this.uniforms.splatTexture.value=t.EMPTY_SPLAT_TEXTURE;const u=(null==(s=h.display)?void 0:s.accumulator.toWorld)??new fr,d=i.matrixWorld.clone().invert();u.clone().premultiply(d).decompose(this.uniforms.renderToViewPos.value,this.uniforms.renderToViewQuat.value,new hi)}prepareViewpoint(t){var e,n,i,r;if(this.viewpoint=t??this.viewpoint,this.viewpoint.display){const{accumulator:t,geometry:s}=this.viewpoint.display;this.uniforms.numSplats.value=t.splats.numSplats,this.uniforms.packedSplats.value=t.splats.getTexture(),this.uniforms.rgbMinMaxLnScaleMinMax.value.set((null==(e=t.splats.splatEncoding)?void 0:e.rgbMin)??0,(null==(n=t.splats.splatEncoding)?void 0:n.rgbMax)??1,(null==(i=t.splats.splatEncoding)?void 0:i.lnScaleMin)??MR,(null==(r=t.splats.splatEncoding)?void 0:r.lnScaleMax)??TR),this.geometry=s,this.material.transparent=!this.viewpoint.stochastic,this.material.depthWrite=this.viewpoint.stochastic,this.material.needsUpdate=!0}else this.uniforms.numSplats.value=0,this.uniforms.packedSplats.value=wz.getEmpty(),this.geometry=Fz}update({scene:t,viewToWorld:e}){const n=this.matrixWorld;this.preUpdate?this.updateInternal({scene:t,originToWorld:n.clone(),viewToWorld:e}):(this.pendingUpdate.scene=t,this.pendingUpdate.originToWorld.copy(n),-1===this.pendingUpdate.timeoutId&&(this.pendingUpdate.timeoutId=setTimeout(()=>{const{scene:t,originToWorld:n}=this.pendingUpdate;this.pendingUpdate.scene=null,this.pendingUpdate.timeoutId=-1,this.updateInternal({scene:t,originToWorld:n,viewToWorld:e})&&this.renderer.getContext().flush()},1)))}updateInternal({scene:t,originToWorld:e,viewToWorld:n}){var i;if(!this.canAllocAccumulator())return!1;e||(e=this.active.toWorld),n=n??e.clone();const r=this.time??this.clock.getElapsedTime(),s=r-(this.lastUpdateTime??r);this.lastUpdateTime=r;const a=this.active.mapping.reduce((t,e)=>(t.set(e.node,e),t),new Map),{generators:o,visibleGenerators:l,globalEdits:c}=this.compileScene(t);for(const t of o)null==(i=t.frameUpdate)||i.call(t,{object:t,time:r,deltaTime:s,viewToWorld:n,globalEdits:c});const h=new Set(l.map(t=>t.uuid));for(const t of o){const e=a.get(t),n=t.generator&&h.has(t.uuid)?t.numSplats:0;(this.needsUpdate||t.generator!==(null==e?void 0:e.generator)||n!==(null==e?void 0:e.count))&&t.updateVersion()}const A=!fL({matrix1:e,matrix2:this.active.toWorld,maxDistance:this.originDistance}),u=this.needsUpdate||A||o.length!==a.size||o.some(t=>{var e;return t.version!==(null==(e=a.get(t))?void 0:e.version)});this.needsUpdate=!1;let d=null;if(u){if(d=this.maybeAllocAccumulator(),!d)throw new Error("Unreachable");const t=!fL({matrix1:e,matrix2:this.active.toWorld,maxDistance:1e-5,minCoorient:.99999}),n=l.map((t,e)=>{const n=a.get(t);return n?[t.version-n.version,n.base,t]:[Number.POSITIVE_INFINITY,t.version,t]}).sort((t,e)=>t[0]!==e[0]?t[0]-e[0]:t[1]-e[1]).map(([t,e,n])=>n),i=n.map(t=>t.numSplats),{maxSplats:r,mapping:s}=d.splats.generateMapping(i),o=n.map((t,e)=>{const{base:n,count:i}=s[e];return{node:t,generator:t.generator,version:t.version,base:n,count:i}});e.clone().invert().decompose(this.translateToAccumulator.value,this.rotateToAccumulator.value,new hi),d.ensureGenerate(r),d.splats.splatEncoding={...this.splatEncoding},d.generateSplats({renderer:this.renderer,modifier:this.modifier,generators:o,forceUpdate:t,originToWorld:e}),d.splatsVersion=this.active.splatsVersion+1;const c=d.hasCorrespondence(this.active);d.mappingVersion=this.active.mappingVersion+(c?0:1),this.releaseAccumulator(this.active),this.active=d,this.prepareViewpoint()}return setTimeout(()=>{for(const t of this.autoViewpoints)t.autoPoll({accumulator:d??void 0})},1),!0}compileScene(t){const e=[];t.traverse(t=>{t instanceof UO&&e.push(t)});const n=[];t.traverseVisible(t=>{t instanceof UO&&n.push(t)});const i=new Set;return t.traverseVisible(t=>{if(t instanceof bO){let e=t.parent;for(;null!=e&&!(e instanceof LO);)e=e.parent;null==e&&i.add(t)}}),{generators:e,visibleGenerators:n,globalEdits:Array.from(i)}}async renderEnvMap({renderer:e,scene:n,worldCenter:i,size:r=256,near:s=.1,far:a=1e3,hideObjects:o=[],update:l=!1}){var c,h;if(this.envViewpoint||(this.envViewpoint=this.newViewpoint({sort360:!0})),!t.cubeRender||t.cubeRender.target.width!==r||t.cubeRender.near!==s||t.cubeRender.far!==a){t.cubeRender&&t.cubeRender.target.dispose();const e=new ua(r,{format:Kt,generateMipmaps:!0,minFilter:Pt}),n=new ha(s,a,e);t.cubeRender={target:e,camera:n,near:s,far:a}}t.pmrem||(t.pmrem=new Id(e??this.renderer));const A=(new fr).setPosition(i);await(null==(c=this.envViewpoint)?void 0:c.prepare({scene:n,viewToWorld:A,update:l}));const{target:u,camera:d}=t.cubeRender;d.position.copy(i);const p=new Map;for(const t of o)p.set(t,t.visible),t.visible=!1;this.prepareViewpoint(this.envViewpoint),d.update(e??this.renderer,n),this.prepareViewpoint(this.defaultView);for(const[t,e]of p.entries())t.visible=e;return null==(h=t.pmrem)?void 0:h.fromCubemap(u.texture).texture}recurseSetEnvMap(t,e){t.traverse(t=>{if(t instanceof Xs)if(Array.isArray(t.material))for(const n of t.material)n instanceof qc&&(n.envMap=e);else t.material instanceof qc&&(t.material.envMap=e)})}getRgba({generator:t,rgba:e}){const n=this.active.mapping.find(({node:e})=>e===t);if(!n)throw new Error("Generator not found");return(e=e??new mO).fromPackedSplats({packedSplats:this.active.splats,base:n.base,count:n.count,renderer:this.renderer}),e}async readRgba({generator:t,rgba:e}){return(e=this.getRgba({generator:t,rgba:e})).read()}};Pz.cubeRender=null,Pz.pmrem=null,Pz.EMPTY_SPLAT_TEXTURE=new zi;let Lz=Pz;const Fz=new bz(new Uint32Array(1),0);function Nz(t,e,n){const i=Math.floor(t.length/32);if(32*i!==t.length)throw new Error("Invalid .splat file size");const r=new Float32Array(t.buffer);for(let e=0;e<i;++e){const i=32*e,s=8*e,a=r[s+0],o=r[s+1],l=r[s+2],c=r[s+3],h=r[s+4],A=r[s+5],u=t[i+24]/255,d=t[i+25]/255,p=t[i+26]/255,g=t[i+27]/255,f=(t[i+28]-128)/128;n(e,a,o,l,c,h,A,(t[i+29]-128)/128,(t[i+30]-128)/128,(t[i+31]-128)/128,f,g,u,d,p)}}yU({packedSplats:BU,index:"int"},{gsplat:bU},({packedSplats:t,index:e})=>{if(!t||!e)throw new Error("Invalid input");return{gsplat:SU(t,e)}});const kz={0:{bytesPerCenter:12,bytesPerScale:12,bytesPerRotation:16,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:4,scaleOffsetBytes:12,rotationOffsetBytes:24,colorOffsetBytes:40,sphericalHarmonicsOffsetBytes:44,scaleRange:1},1:{bytesPerCenter:6,bytesPerScale:6,bytesPerRotation:8,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:2,scaleOffsetBytes:6,rotationOffsetBytes:12,colorOffsetBytes:20,sphericalHarmonicsOffsetBytes:24,scaleRange:32767},2:{bytesPerCenter:6,bytesPerScale:6,bytesPerRotation:8,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:1,scaleOffsetBytes:6,rotationOffsetBytes:12,colorOffsetBytes:20,sphericalHarmonicsOffsetBytes:24,scaleRange:32767}},Oz={0:0,1:9,2:24,3:45};function zz(t,e,n,i){var r;const s=4096,a=1024;let o=0;const l=new DataView(t.buffer,o,s);o+=s;const c=l.getUint8(0),h=l.getUint8(1);if(0!==c||h<1)throw new Error(`Unsupported .ksplat version: ${c}.${h}`);const A=l.getUint32(4,!0);l.getUint32(16,!0);const u=l.getUint16(20,!0);if(u<0||u>2)throw new Error(`Invalid .ksplat compression level: ${u}`);const d=l.getFloat32(36,!0)||-1.5,p=l.getFloat32(40,!0)||1.5;let g=s+A*a;for(let e=0;e<A;++e){let e=function(t,e){if(0===u)return W.getFloat32(t+U+4*e,!0);if(1===u)return WP(W.getUint16(t+U+2*e,!0));const n=W.getUint8(t+U+e)/255;return d+n*(p-d)};const s=new DataView(t.buffer,o,a);o+=a;const l=s.getUint32(0,!0),c=s.getUint32(4,!0),h=s.getUint32(8,!0),A=s.getUint32(12,!0),f=s.getFloat32(16,!0),m=s.getUint16(20,!0),y=(s.getUint32(24,!0)||(null==(r=kz[u])?void 0:r.scaleRange))??1,v=s.getUint32(32,!0),x=v*h,C=s.getUint32(36,!0),I=4*C,E=m*A+I,w=s.getUint16(40,!0),_=Oz[w],{bytesPerCenter:b,bytesPerScale:B,bytesPerRotation:S,bytesPerColor:M,bytesPerSphericalHarmonicsComponent:T,scaleOffsetBytes:Q,rotationOffsetBytes:D,colorOffsetBytes:R,sphericalHarmonicsOffsetBytes:U}=kz[u],P=b+B+S+M+_*T,L=P*c,F=L+E,N=[0,3,6,1,4,7,2,5,8],k=[9,14,19,10,15,20,11,16,21,12,17,22,13,18,23],O=[24,31,38,25,32,39,26,33,40,27,34,41,28,35,42,29,36,43,30,37,44],z=w>=1?new Float32Array(9):void 0,G=w>=2?new Float32Array(15):void 0,H=w>=3?new Float32Array(21):void 0,V=f/2/y,q=g+I,Y=g+E,W=new DataView(t.buffer,Y,L),J=new Float32Array(t.buffer,q,3*A),j=new Uint32Array(t.buffer,g,C);let X=v,K=x;for(let t=0;t<l;++t){const r=t*P;let s;if(t<x)s=Math.floor(t/h);else{const e=j[X-v];t>=K+e&&(X+=1,K+=e),s=X}const a=0===u?W.getFloat32(r+0,!0):(W.getUint16(r+0,!0)-y)*V+J[3*s+0],o=0===u?W.getFloat32(r+4,!0):(W.getUint16(r+2,!0)-y)*V+J[3*s+1],l=0===u?W.getFloat32(r+8,!0):(W.getUint16(r+4,!0)-y)*V+J[3*s+2],c=0===u?W.getFloat32(r+Q+0,!0):WP(W.getUint16(r+Q+0,!0)),A=0===u?W.getFloat32(r+Q+4,!0):WP(W.getUint16(r+Q+2,!0)),d=0===u?W.getFloat32(r+Q+8,!0):WP(W.getUint16(r+Q+4,!0)),p=0===u?W.getFloat32(r+D+0,!0):WP(W.getUint16(r+D+0,!0)),g=0===u?W.getFloat32(r+D+4,!0):WP(W.getUint16(r+D+2,!0)),f=0===u?W.getFloat32(r+D+8,!0):WP(W.getUint16(r+D+4,!0)),m=0===u?W.getFloat32(r+D+12,!0):WP(W.getUint16(r+D+6,!0)),C=W.getUint8(r+R+0)/255,I=W.getUint8(r+R+1)/255,E=W.getUint8(r+R+2)/255;if(n(t,a,o,l,c,A,d,g,f,m,p,W.getUint8(r+R+3)/255,C,I,E),w>=1&&z){for(const[t,n]of N.entries())z[t]=e(r,n);if(G)for(const[t,n]of k.entries())G[t]=e(r,n);if(H)for(const[t,n]of O.entries())H[t]=e(r,n);null==i||i(t,z,G,H)}}g+=F}}class Gz{constructor({fileBytes:t}){this.version=-1,this.numSplats=0,this.shDegree=0,this.fractionalBits=0,this.flags=0,this.flagAntiAlias=!1,this.reserved=0,this.headerParsed=!1,this.parsed=!1,this.fileBytes=t instanceof ArrayBuffer?new Uint8Array(t):t,this.reader=new EL({fileBytes:this.fileBytes})}async parseHeader(){if(this.headerParsed)throw new Error("SPZ file header already parsed");const t=new DataView((await this.reader.read(16)).buffer);if(1347635022!==t.getUint32(0,!0))throw new Error("Invalid SPZ file");if(this.version=t.getUint32(4,!0),this.version<1||this.version>3)throw new Error(`Unsupported SPZ version: ${this.version}`);this.numSplats=t.getUint32(8,!0),this.shDegree=t.getUint8(12),this.fractionalBits=t.getUint8(13),this.flags=t.getUint8(14),this.flagAntiAlias=!!(1&this.flags),this.reserved=t.getUint8(15),this.headerParsed=!0,this.parsed=!1}async parseSplats(t,e,n,i,r,s){if(!this.headerParsed)throw new Error("SPZ file header must be parsed first");if(this.parsed)throw new Error("SPZ file already parsed");if(this.parsed=!0,1===this.version){const e=await this.reader.read(3*this.numSplats*2),n=new Uint16Array(e.buffer);for(let e=0;e<this.numSplats;e++){const i=3*e,r=WP(n[i]),s=WP(n[i+1]),a=WP(n[i+2]);null==t||t(e,r,s,a)}}else{if(2!==this.version&&3!==this.version)throw new Error("Unreachable");{const e=1<<this.fractionalBits,n=await this.reader.read(3*this.numSplats*3);for(let i=0;i<this.numSplats;i++){const r=9*i,s=((n[r+2]<<24|n[r+1]<<16|n[r]<<8)>>8)/e,a=((n[r+5]<<24|n[r+4]<<16|n[r+3]<<8)>>8)/e,o=((n[r+8]<<24|n[r+7]<<16|n[r+6]<<8)>>8)/e;null==t||t(i,s,a,o)}}}{const t=await this.reader.read(this.numSplats);for(let n=0;n<this.numSplats;n++)null==e||e(n,t[n]/255)}{const t=await this.reader.read(3*this.numSplats),e=Vz/.15;for(let i=0;i<this.numSplats;i++){const r=3*i,s=(t[r]/255-.5)*e+.5,a=(t[r+1]/255-.5)*e+.5,o=(t[r+2]/255-.5)*e+.5;null==n||n(i,s,a,o)}}{const t=await this.reader.read(3*this.numSplats);for(let e=0;e<this.numSplats;e++){const n=3*e,r=Math.exp(t[n]/16-10),s=Math.exp(t[n+1]/16-10),a=Math.exp(t[n+2]/16-10);null==i||i(e,r,s,a)}}if(3===this.version){const t=1/Math.sqrt(2),e=await this.reader.read(4*this.numSplats);for(let n=0;n<this.numSplats;n++){const i=4*n,s=[0,0,0,0],a=[e[i],e[i+1],e[i+2],e[i+3]],o=a[0]+(a[1]<<8)+(a[2]<<16)+(a[3]<<24),l=511,c=o>>>30;let h=o,A=0;for(let e=3;e>=0;--e)if(e!==c){const n=h&l,i=h>>>9&1;h>>>=10,s[e]=t*(n/l),s[e]=0===i?s[e]:-s[e],A+=s[e]*s[e]}const u=1-A;s[c]=Math.sqrt(Math.max(u,0)),null==r||r(n,s[0],s[1],s[2],s[3])}}else{const t=await this.reader.read(3*this.numSplats);for(let e=0;e<this.numSplats;e++){const n=3*e,i=t[n]/127.5-1,s=t[n+1]/127.5-1,a=t[n+2]/127.5-1,o=Math.sqrt(Math.max(0,1-i*i-s*s-a*a));null==r||r(e,i,s,a,o)}}if(s&&this.shDegree>=1){const t=new Float32Array(9),e=this.shDegree>=2?new Float32Array(15):void 0,n=this.shDegree>=3?new Float32Array(21):void 0,i=await this.reader.read(this.numSplats*Hz[this.shDegree]*3);let r=0;for(let a=0;a<this.numSplats;a++){for(let e=0;e<9;++e)t[e]=(i[r+e]-128)/128;if(r+=9,e){for(let t=0;t<15;++t)e[t]=(i[r+t]-128)/128;r+=15}if(n){for(let t=0;t<21;++t)n[t]=(i[r+t]-128)/128;r+=21}null==s||s(a,t,e,n)}}}}const Hz={1:3,2:8,3:15},Vz=.28209479177387814;class qz{constructor({numSplats:t,shDegree:e,fractionalBits:n=12,flagAntiAlias:i=!0}){this.clippedCount=0;const r=16+t*(20+(e>=1?9:0)+(e>=2?15:0)+(e>=3?21:0));this.buffer=new ArrayBuffer(r),this.view=new DataView(this.buffer),this.view.setUint32(0,1347635022,!0),this.view.setUint32(4,3,!0),this.view.setUint32(8,t,!0),this.view.setUint8(12,e),this.view.setUint8(13,n),this.view.setUint8(14,i?1:0),this.view.setUint8(15,0),this.numSplats=t,this.shDegree=e,this.fractionalBits=n,this.fraction=1<<n,this.flagAntiAlias=i}setCenter(t,e,n,i){const r=Math.round(e*this.fraction),s=Math.max(-8388607,Math.min(8388607,r)),a=Math.round(n*this.fraction),o=Math.max(-8388607,Math.min(8388607,a)),l=Math.round(i*this.fraction),c=Math.max(-8388607,Math.min(8388607,l));(r!==s||a!==o||l!==c)&&(this.clippedCount+=1);const h=16+9*t;this.view.setUint8(h,255&s),this.view.setUint8(h+1,s>>8&255),this.view.setUint8(h+2,s>>16&255),this.view.setUint8(h+3,255&o),this.view.setUint8(h+4,o>>8&255),this.view.setUint8(h+5,o>>16&255),this.view.setUint8(h+6,255&c),this.view.setUint8(h+7,c>>8&255),this.view.setUint8(h+8,c>>16&255)}setAlpha(t,e){const n=16+9*this.numSplats+t;this.view.setUint8(n,Math.max(0,Math.min(255,Math.round(255*e))))}static scaleRgb(t){const e=255*((t-.5)/(Vz/.15)+.5);return Math.max(0,Math.min(255,Math.round(e)))}setRgb(t,e,n,i){const r=16+10*this.numSplats+3*t;this.view.setUint8(r,qz.scaleRgb(e)),this.view.setUint8(r+1,qz.scaleRgb(n)),this.view.setUint8(r+2,qz.scaleRgb(i))}setScale(t,e,n,i){const r=16+13*this.numSplats+3*t;this.view.setUint8(r,Math.max(0,Math.min(255,Math.round(16*(Math.log(e)+10))))),this.view.setUint8(r+1,Math.max(0,Math.min(255,Math.round(16*(Math.log(n)+10))))),this.view.setUint8(r+2,Math.max(0,Math.min(255,Math.round(16*(Math.log(i)+10)))))}setQuat(t,...e){const n=16+16*this.numSplats+4*t,i=qP(e);let r=0;for(let t=1;t<4;++t)Math.abs(i[t])>Math.abs(i[r])&&(r=t);const s=i[r]<0?1:0;let a=r;for(let t=0;t<4;++t)t!==r&&(a=a<<10|((i[t]<0?1:0)^s)<<9|Math.floor(Math.abs(i[t])/Math.SQRT1_2*511+.5));this.view.setUint8(n,255&a),this.view.setUint8(n+1,a>>8&255),this.view.setUint8(n+2,a>>16&255),this.view.setUint8(n+3,a>>>24&255)}static quantizeSh(t,e){const n=Math.round(128*t)+128,i=1<<8-e,r=Math.floor((n+i/2)/i)*i;return Math.max(0,Math.min(255,r))}setSh(t,e,n,i){const r=Hz[this.shDegree]||0,s=16+20*this.numSplats+t*r*3;for(let t=0;t<9;++t)this.view.setUint8(s+t,qz.quantizeSh(e[t],5));if(n){const t=s+9;for(let e=0;e<15;++e)this.view.setUint8(t+e,qz.quantizeSh(n[e],4));if(i){const e=t+15;for(let t=0;t<21;++t)this.view.setUint8(e+t,qz.quantizeSh(i[t],4))}}}async finalize(){const t=new Uint8Array(this.buffer),e=new ReadableStream({async start(e){e.enqueue(t),e.close()}}).pipeThrough(new CompressionStream("gzip")),n=new Response(e),i=await n.arrayBuffer();return console.log("Compressed",t.length,"bytes to",i.byteLength,"bytes"),new Uint8Array(i)}}async function Yz(t){var e,n,i;const r=new Cz,{inputs:s,clipXyz:a,maxSh:o,fractionalBits:l=12,opacityThreshold:c}=t;for(const t of s){let s=function(t){return t.multiplyScalar(u),t.applyQuaternion(d),t.add(p),t},o=function(t){return t.multiplyScalar(u),t},l=function(t){return t.premultiply(d),t},h=function(t){return!g||g.containsPoint(t)},A=function(t){return void 0===c||t>=c};const u=(null==(e=t.transform)?void 0:e.scale)??1,d=(new ci).fromArray((null==(n=t.transform)?void 0:n.quaternion)??[0,0,0,1]),p=(new hi).fromArray((null==(i=t.transform)?void 0:i.translate)??[0,0,0]),g=a?new Hi((new hi).fromArray(a.min),(new hi).fromArray(a.max)):void 0;let f=t.fileType;switch(f||(f=fz(t.fileBytes),!f&&t.pathOrUrl&&(f=mz(t.pathOrUrl))),f){case gz.PLY:{const e=new VO({fileBytes:t.fileBytes});await e.parseHeader();let n=null;e.parseSplats((t,e,i,a,c,u,d,p,g,f,m,y,v,x,C)=>{const I=s(new hi(e,i,a));if(h(I)&&A(y)){n=r.pushSplat(),r.setCenter(n,I.x,I.y,I.z);const t=o(new hi(c,u,d));r.setScale(n,t.x,t.y,t.z);const e=l(new ci(p,g,f,m));r.setQuaternion(n,e.x,e.y,e.z,e.w),r.setOpacity(n,y),r.setColor(n,v,x,C)}else n=null},(t,e,i,s)=>{e&&null!==n&&r.setSh1(n,e),i&&null!==n&&r.setSh2(n,i),s&&null!==n&&r.setSh3(n,s)});break}case gz.SPZ:{const e=new Gz({fileBytes:t.fileBytes});await e.parseHeader();const n=new Int32Array(e.numSplats);n.fill(-1);const i=new Float32Array(3*e.numSplats),a=new hi;e.parseSplats((t,e,n,r)=>{const a=s(new hi(e,n,r));i[3*t]=a.x,i[3*t+1]=a.y,i[3*t+2]=a.z},(t,e)=>{a.fromArray(i,3*t),h(a)&&A(e)&&(n[t]=r.pushSplat(),r.setCenter(n[t],a.x,a.y,a.z),r.setOpacity(n[t],e))},(t,e,i,s)=>{n[t]>=0&&r.setColor(n[t],e,i,s)},(t,e,i,s)=>{if(n[t]>=0){const a=o(new hi(e,i,s));r.setScale(n[t],a.x,a.y,a.z)}},(t,e,i,s,a)=>{if(n[t]>=0){const o=l(new ci(e,i,s,a));r.setQuaternion(n[t],o.x,o.y,o.z,o.w)}},(t,e,i,s)=>{n[t]>=0&&(r.setSh1(n[t],e),i&&r.setSh2(n[t],i),s&&r.setSh3(n[t],s))});break}case gz.SPLAT:Nz(t.fileBytes,0,(t,e,n,i,a,c,u,d,p,g,f,m,y,v,x)=>{const C=s(new hi(e,n,i));if(h(C)&&A(m)){const t=r.pushSplat();r.setCenter(t,C.x,C.y,C.z);const e=o(new hi(a,c,u));r.setScale(t,e.x,e.y,e.z);const n=l(new ci(d,p,g,f));r.setQuaternion(t,n.x,n.y,n.z,n.w),r.setOpacity(t,m),r.setColor(t,y,v,x)}});break;case gz.KSPLAT:{let e=null;zz(t.fileBytes,0,(t,n,i,a,c,u,d,p,g,f,m,y,v,x,C)=>{const I=s(new hi(n,i,a));if(h(I)&&A(y)){e=r.pushSplat(),r.setCenter(e,I.x,I.y,I.z);const t=o(new hi(c,u,d));r.setScale(e,t.x,t.y,t.z);const n=l(new ci(p,g,f,m));r.setQuaternion(e,n.x,n.y,n.z,n.w),r.setOpacity(e,y),r.setColor(e,v,x,C)}else e=null},(t,n,i,s)=>{null!==e&&(r.setSh1(e,n),i&&r.setSh2(e,i),s&&r.setSh3(e,s))});break}default:throw new Error(`transcodeSpz not implemented for ${f}`)}}const h=Math.min(o??3,r.sh3?3:r.sh2?2:r.sh1?1:0),A=new qz({numSplats:r.numSplats,shDegree:h,fractionalBits:l,flagAntiAlias:!0});for(let t=0;t<r.numSplats;++t){const e=3*t,n=4*t;A.setCenter(t,r.centers[e],r.centers[e+1],r.centers[e+2]),A.setScale(t,r.scales[e],r.scales[e+1],r.scales[e+2]),A.setQuat(t,r.quaternions[n],r.quaternions[n+1],r.quaternions[n+2],r.quaternions[n+3]),A.setAlpha(t,r.opacities[t]),A.setRgb(t,r.colors[e],r.colors[e+1],r.colors[e+2]),r.sh1&&h>=1&&A.setSh(t,r.sh1.slice(9*t,9*(t+1)),h>=2&&r.sh2?r.sh2.slice(15*t,15*(t+1)):void 0,h>=3&&r.sh3?r.sh3.slice(21*t,21*(t+1)):void 0)}return{fileBytes:await A.finalize(),clippedCount:A.clippedCount}}class Wz{constructor(t){this.mesh=t.mesh,this.numSplats=t.numSplats??this.mesh.numSplats;const{width:e,height:n,depth:i,maxSplats:r}=rL(this.numSplats);this.skinData=new Uint16Array(4*r),this.skinTexture=new ki(this.skinData,e,n,i),this.skinTexture.format=se,this.skinTexture.type=kt,this.skinTexture.internalFormat="RGBA16UI",this.skinTexture.needsUpdate=!0,this.numBones=t.numBones??256,this.boneData=new Float32Array(16*this.numBones),this.boneTexture=new Za(this.boneData,4,this.numBones,Kt,Gt),this.boneTexture.internalFormat="RGBA32F",this.boneTexture.needsUpdate=!0,this.uniform=new XU({key:"skinning",type:Jz,globals:()=>[jz],value:{numSplats:this.numSplats,numBones:this.numBones,skinTexture:this.skinTexture,boneTexture:this.boneTexture}})}modify(t){return function(t,e){return new fU({inTypes:{gsplat:bU,skinning:Jz},outTypes:{gsplat:bU},globals:()=>[jz,Xz],inputs:{gsplat:t,skinning:e},statements:({inputs:t,outputs:e})=>{const{skinning:n}=t,{gsplat:i}=e;return CU(`\n        ${i} = ${t.gsplat};\n        if (isGsplatActive(${i}.flags)) {\n          applyGsplatSkinning(\n            ${n}.numSplats, ${n}.numBones,\n            ${n}.skinTexture, ${n}.boneTexture,\n            ${i}.index, ${i}.center, ${i}.quaternion\n          );\n        }\n      `)}}).outputs.gsplat}(t,this.uniform)}setRestQuatPos(t,e,n){const i=16*t;this.boneData[i+0]=e.x,this.boneData[i+1]=e.y,this.boneData[i+2]=e.z,this.boneData[i+3]=e.w,this.boneData[i+4]=n.x,this.boneData[i+5]=n.y,this.boneData[i+6]=n.z,this.boneData[i+7]=0,this.boneData[i+8]=0,this.boneData[i+9]=0,this.boneData[i+10]=0,this.boneData[i+11]=1,this.boneData[i+12]=0,this.boneData[i+13]=0,this.boneData[i+14]=0,this.boneData[i+15]=0}setBoneQuatPos(t,e,n){const i=16*t,r=new ci(this.boneData[i+0],this.boneData[i+1],this.boneData[i+2],this.boneData[i+3]),s=new hi(this.boneData[i+4],this.boneData[i+5],this.boneData[i+6]),a=r.clone().invert(),o=n.clone().sub(s);o.applyQuaternion(a),a.multiply(e);const l=new ci(o.x,o.y,o.z,0).multiply(r);this.boneData[i+8]=a.x,this.boneData[i+9]=a.y,this.boneData[i+10]=a.z,this.boneData[i+11]=a.w,this.boneData[i+12]=.5*l.x,this.boneData[i+13]=.5*l.y,this.boneData[i+14]=.5*l.z,this.boneData[i+15]=.5*l.w}setSplatBones(t,e,n){const i=4*t;this.skinData[i+0]=Math.min(255,Math.max(0,Math.round(255*n.x)))+(e.x<<8),this.skinData[i+1]=Math.min(255,Math.max(0,Math.round(255*n.y)))+(e.y<<8),this.skinData[i+2]=Math.min(255,Math.max(0,Math.round(255*n.z)))+(e.z<<8),this.skinData[i+3]=Math.min(255,Math.max(0,Math.round(255*n.w)))+(e.w<<8)}updateBones(){this.boneTexture.needsUpdate=!0,this.mesh.needsUpdate=!0}}const Jz={type:"GsplatSkinning"},jz=IU("\n  struct GsplatSkinning {\n    int numSplats;\n    int numBones;\n    usampler2DArray skinTexture;\n    sampler2D boneTexture;\n  };\n"),Xz=IU("\n  void applyGsplatSkinning(\n    int numSplats, int numBones,\n    usampler2DArray skinTexture, sampler2D boneTexture,\n    int splatIndex, inout vec3 center, inout vec4 quaternion\n  ) {\n    if ((splatIndex < 0) || (splatIndex >= numSplats)) {\n      return;\n    }\n\n    uvec4 skinData = texelFetch(skinTexture, splatTexCoord(splatIndex), 0);\n\n    float weights[4];\n    weights[0] = float(skinData.x & 0xffu) / 255.0;\n    weights[1] = float(skinData.y & 0xffu) / 255.0;\n    weights[2] = float(skinData.z & 0xffu) / 255.0;\n    weights[3] = float(skinData.w & 0xffu) / 255.0;\n\n    uint boneIndices[4];\n    boneIndices[0] = (skinData.x >> 8u) & 0xffu;\n    boneIndices[1] = (skinData.y >> 8u) & 0xffu;\n    boneIndices[2] = (skinData.z >> 8u) & 0xffu;\n    boneIndices[3] = (skinData.w >> 8u) & 0xffu;\n\n    vec4 quat = vec4(0.0);\n    vec4 dual = vec4(0.0);\n    for (int i = 0; i < 4; i++) {\n      if (weights[i] > 0.0) {\n        int boneIndex = int(boneIndices[i]);\n        vec4 boneQuat = vec4(0.0, 0.0, 0.0, 1.0);\n        vec4 boneDual = vec4(0.0);\n        if (boneIndex < numBones) {\n          boneQuat = texelFetch(boneTexture, ivec2(2, boneIndex), 0);\n          boneDual = texelFetch(boneTexture, ivec2(3, boneIndex), 0);\n        }\n\n        if ((i > 0) && (dot(quat, boneQuat) < 0.0)) {\n          // Flip sign if next blend is pointing in the opposite direction\n          boneQuat = -boneQuat;\n          boneDual = -boneDual;\n        }\n        quat += weights[i] * boneQuat;\n        dual += weights[i] * boneDual;\n      }\n    }\n\n    // Normalize dual quaternion\n    float norm = length(quat);\n    quat /= norm;\n    dual /= norm;\n    vec3 translate = vec3(\n      2.0 * (-dual.w * quat.x + dual.x * quat.w - dual.y * quat.z + dual.z * quat.y),\n      2.0 * (-dual.w * quat.y + dual.x * quat.z + dual.y * quat.w - dual.z * quat.x),\n      2.0 * (-dual.w * quat.z - dual.x * quat.y + dual.y * quat.x + dual.z * quat.w)\n    );\n\n    center = quatVec(quat, center) + translate;\n    quaternion = quatQuat(quat, quaternion);\n  }\n");function Kz({splats:t,extents:e,stepSize:n=1,pointRadius:i=.01,pointShadowScale:r=2,opacity:s=1,color:a}){const o=1e-6,l=new hi,c=new hi,h=new ci(0,0,0,1);null==a&&(a=(t,e)=>t.set(.55+.45*Math.cos(1*e.x),.55+.45*Math.cos(1*e.y),.55+.45*Math.cos(1*e.z)));const A=new ls;for(let u=e.min.z;u<e.max.z+o;u+=n)for(let d=e.min.y;d<e.max.y+o;d+=n)for(let p=e.min.x;p<e.max.x+o;p+=n){l.set(p,d,u);for(let e=0;e<2;++e)c.setScalar(i*(e?1:r)),e?"function"==typeof a?a(A,l):A.copy(a):A.setScalar(0),t.pushSplat(l,c,h,s,A)}}function Zz({splats:t,scale:e=.25,axisRadius:n=.0075,axisShadowScale:i=2,origins:r=[new hi]}){const s=new hi,a=new hi,o=new ci(0,0,0,1),l=new ls;for(const c of r)for(let r=0;r<3;++r){s.set(c.x+(0===r?e:0),c.y+(1===r?e:0),c.z+(2===r?e:0));for(let c=0;c<2;++c)a.set((0===r?e:n)*(c?1:i),(1===r?e:n)*(c?1:i),(2===r?e:n)*(c?1:i)),l.setRGB(0===c?0:0===r?1:0,0===c?0:1===r?1:0,0===c?0:2===r?1:0),t.pushSplat(s,a,o,1,l)}}function $z({splats:t,origin:e=new hi,radius:n=1,maxDepth:i=3,filter:r=null,pointRadius:s=.02,pointThickness:a=.001,color:o=new ls(1,1,1)}){const l={};function c(t){if(r&&!r(t))return;const e=`${t.x},${t.y},${t.z}`;l[e]||(l[e]=t)}function h(t,e,n,r){if(c(e),c(n),c(r),t>=i)return;const s=(new hi).addVectors(e,n).normalize(),a=(new hi).addVectors(n,r).normalize(),o=(new hi).addVectors(r,e).normalize();h(t+1,e,s,o),h(t+1,s,n,a),h(t+1,o,a,r),h(t+1,s,a,o)}for(const t of[-1,1])for(const e of[-1,1])for(const n of[-1,1])h(0,new hi(t,0,0),new hi(0,e,0),new hi(0,0,n));const A=Object.values(l),u=new hi(s,s,a),d=new ci,p="function"==typeof o?new ls:o;for(const i of A)d.setFromUnitVectors(new hi(0,0,-1),i),"function"==typeof o&&o(p,i),i.multiplyScalar(n),i.add(e),t.pushSplat(i,u,d,1,p)}function tG({text:t,font:e,fontSize:n,color:i,rgb:r,dotRadius:s,textAlign:a,lineHeight:o,objectScale:l}){e=e??"Arial",n=n??32,i=i??new ls(1,1,1),s=s??.8,a=a??"start",o=o??1,l=l??1;const c=t.split("\n"),h=document.createElement("canvas"),A=h.getContext("2d");if(!A)throw new Error("Failed to create canvas context");A.font=`${n}px ${e}`,A.textAlign=a;const u=A.measureText(""),d=u.fontBoundingBoxAscent+u.fontBoundingBoxDescent;let p=Number.POSITIVE_INFINITY,g=Number.NEGATIVE_INFINITY,f=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY;for(let t=0;t<c.length;++t){const e=A.measureText(c[t]),n=d*o*t;p=Math.min(p,-e.actualBoundingBoxLeft),g=Math.max(g,e.actualBoundingBoxRight),f=Math.min(f,n-e.actualBoundingBoxAscent),m=Math.max(m,n+e.actualBoundingBoxDescent)}const y=Math.floor(p),v=Math.floor(f),x=Math.ceil(g)-y,C=Math.ceil(m)-v;h.width=x,h.height=C,A.font=`${n}px ${e}`,A.textAlign=a,A.textBaseline="alphabetic",A.fillStyle="#FFFFFF";for(let t=0;t<c.length;++t){const e=d*o*t-v;A.fillText(c[t],-y,e)}const I=A.getImageData(0,0,x,C),E=new Uint8Array(I.data.buffer),w=new wz,_=new hi,b=(new hi).setScalar(s*l),B=new ci(0,0,0,1);r=r??new ls(1,1,1);let S=0;for(let t=0;t<C;++t)for(let e=0;e<x;++e){const n=E[S+3];if(n>0){const i=n/255;_.set(e-.5*(x-1),.5*(C-1)-t,0),_.multiplyScalar(l),w.pushSplat(_,b,B,i,r)}S+=4}const M=new LO({packedSplats:w});return M.recolor=i,M}function eG({url:t,dotRadius:e,subXY:n,forEachSplat:i}){return e=e??.8,n=Math.max(1,Math.floor(n??1)),new LO({constructSplats:async r=>new Promise((s,a)=>{const o=new Image;o.crossOrigin="anonymous",o.onerror=a,o.onload=()=>{const{width:t,height:l}=o,c=document.createElement("canvas");c.width=t,c.height=l;const h=c.getContext("2d");if(!h)return void a(new Error("Failed to create canvas context"));h.imageSmoothingEnabled=!0,h.imageSmoothingQuality="high";const A=Math.round(t/n),u=Math.round(l/n);h.drawImage(o,0,0,A,u);try{const t=h.getImageData(0,0,A,u),n=new Uint8Array(t.data.buffer),a=new hi,o=(new hi).setScalar(e),l=new ci(0,0,0,1),c=new ls;let d=0;for(let t=0;t<u;++t)for(let s=0;s<A;++s){const h=4*d,p=n[h+3];if(p>0){let g=p/255;c.set(n[h+0]/255,n[h+1]/255,n[h+2]/255),a.set(s-.5*(A-1),.5*(u-1)-t,0),o.setScalar(e),l.set(0,0,0,1);let f=!0;if(i){const t=i(A,u,d,a,o,l,g,c);g=t??g,f=null!==t}f&&r.pushSplat(a,o,l,g,c)}d+=1}s()}catch(t){a(t)}},o.src=t})})}const nG={box:new Hi(new hi(-1,-1,-1),new hi(1,1,1)),density:100,fallDirection:new hi(-1,-3,1).normalize(),fallVelocity:.02,wanderScale:.04,wanderVariance:2,color1:new ls(1,1,1),color2:new ls(.5,.5,1),minScale:.001,maxScale:.005,anisoScale:new hi(1,1,1)},iG={box:new Hi(new hi(-2,-1,-2),new hi(2,5,2)),density:10,fallDirection:new hi(0,-1,0),fallVelocity:2,wanderScale:.1,wanderVariance:1,color1:new ls(1,1,1),color2:new ls(.25,.25,.5),minScale:.005,maxScale:.01,anisoScale:new hi(.1,1,.1)},rG=Object.freeze(Object.defineProperty({__proto__:null,DEFAULT_RAIN:iG,DEFAULT_SNOW:nG,snowBox:function({box:t,minY:e,numSplats:n,density:i,anisoScale:r,minScale:s,maxScale:a,fallDirection:o,fallVelocity:l,wanderScale:c,wanderVariance:h,color1:A,color2:u,opacity:d,onFrame:p}){const g=((t=t??new Hi(new hi(-1,-1,-1),new hi(1,1,1))).max.x-t.min.x)*(t.max.y-t.min.y)*(t.max.z-t.min.z);i=i??100,n=n??Math.max(1,Math.min(1e6,Math.round(g*i)));const f=JU(s??.001),m=JU(a??.005),y=jU(((null==r?void 0:r.clone())??new hi(1,1,1)).normalize()),v=jU((o??new hi(0,-1,0)).normalize()),x=JU(l??.02),C=JU(c??.01),I=JU(h??2),E=jU(A??new ls(1,1,1)),w=jU(u??new ls(.5,.5,1)),_=JU(d??1),b=JU(0),B=jU(new hi(0,0,0)),S=jU(t.min),M=jU(t.max),T=JU(e??Number.NEGATIVE_INFINITY),Q=sF(M,S),D=new UO({numSplats:n,generator:yU({index:"int"},{gsplat:bU},({index:t})=>{if(!t)throw new Error("index not defined");const e=_k(t),n=KN(e).outputs.w;let i=uN(e),r=AF(aF(n,uU("float",100)));r=Kk(aF(hU("float","PI"),r)),r=rF(f,aF(r,sF(m,f)));const s=aF(r,y),a=AF(aF(n,uU("float",10))),o=AF(n),l=dF(E,w,o),c=aF(l,a),h=_k(ZN({vectorType:"ivec2",x:t,y:uU("int",6837)}));let A=uN(h),u=aF(KN(h).outputs.w,I);u=rF(b,u),i=rF(i,B);const d=cF(i,uU("vec3",new hi(1,1,1)));i=rF(S,aF(Q,d));const p=uU("vec4",new ci(0,0,0,1));A=Kk(rF(uN(u),A)),A=aF(A,C);let g=rF(i,A),v=KN(g).outputs.y;v=uF(T,v),g=ZN({vector:g,y:v});let x=QU({flags:hU("uint","GSPLAT_FLAG_ACTIVE"),index:t,center:g,scales:s,quaternion:p,rgb:c,opacity:_});return x=R.applyGsplat(x),{gsplat:x}},{globals:()=>[UU]}),update:({object:t,time:e,deltaTime:n})=>{b.value=e,R.update(D);const i=v.value.clone().multiplyScalar(x.value*n);B.value.add(i),t.visible=_.value>0,null==p||p({object:t,time:e,deltaTime:n}),D.updateVersion()}}),R=new RO;return{snow:D,min:S,max:M,minY:T,color1:E,color2:w,opacity:_,fallVelocity:x,wanderVariance:I,wanderScale:C,fallDirection:v,minScale:f,maxScale:m,anisoScale:y}},staticBox:function({box:t,cells:e,dotScale:n,color:i,opacity:r}){e.x=Math.max(1,Math.round(e.x)),e.y=Math.max(1,Math.round(e.y)),e.z=Math.max(1,Math.round(e.z)),r=r??1;const s=e.x*e.y*e.z,a=uU("int",e.x),o=uU("int",e.y);uU("int",e.z);const l=JU(0),c=new UO({numSplats:s,generator:yU({index:"int"},{gsplat:bU},({index:s})=>{if(!s)throw new Error("index is undefined");const c=lF(s,a),A=oF(s,a),u=lF(A,o),d=oF(A,o),p=ZN({vectorType:"ivec3",x:c,y:u,z:d}),g=pN(l),f=ZN({vectorType:"ivec2",x:s,y:g}),m=wk(f),y=uU("vec3",t.min),v=uU("vec3",t.max),x=sF(v,y),C=oF(rF(uN(p),m),uU("vec3",e));let I,E,w;i?(I=uU("float",i.r),E=uU("float",i.g),w=uU("float",i.b)):({r:I,g:E,b:w}=KN(C).outputs);const _=ZN({vectorType:"vec4",r:I,g:E,b:w,a:uU("float",r)}),b=rF(y,aF(x,C)),B=uN(uU("float",n)),S=uU("vec4",new ci(0,0,0,1));let M=QU({flags:hU("uint","GSPLAT_FLAG_ACTIVE"),index:s,center:b,scales:B,quaternion:S,rgba:_});return M=h.applyGsplat(M),{gsplat:M}},{globals:()=>[UU]}),update:({time:t})=>{l.value=t,h.update(c),c.updateVersion()}}),h=new RO;return c}},Symbol.toStringTag,{value:"Module"}));function sG(t){return yU({gsplat:bU},{gsplat:bU},({gsplat:e})=>{if(!e)throw new Error("No gsplat input");let n=DU(e);const i=t.applyGsplat(e),r=TU(i).outputs.center,s=DU(i),a=jN(r,s),o=qF(a,uU("float",0));n=YF(o,hF(n),n);const l=rF(aF(n,uU("float",.5)),uU("float",.5));return{gsplat:e=QU({gsplat:e,rgb:l})}})}function aG(t,e,n,i){return yU({gsplat:bU},{gsplat:bU},({gsplat:r})=>{if(!r)throw new Error("No gsplat input");let{center:s}=TU(r).outputs;s=t.apply(s);const{z:a}=KN(s).outputs;let o=bk(hF(a),e,n);return o=YF(i,sF(uU("float",1),o),o),{gsplat:r=QU({gsplat:r,r:o,g:o,b:o})}})}const oG=Object.freeze(Object.defineProperty({__proto__:null,makeDepthColorModifier:aG,makeNormalColorModifier:sG,setDepthColor:function(t,e,n,i){t.enableWorldToView=!0;const r=uU("float",e),s=uU("float",n),a=uU("bool",i??!1);return t.worldModifier=aG(t.context.worldToView,r,s,a),t.updateGenerator(),{minDepth:r,maxDepth:s,reverse:a}},setWorldNormalColor:function(t){t.enableWorldToView=!0,t.worldModifier=sG(t.context.worldToView),t.updateGenerator()}},Symbol.toStringTag,{value:"Module"})),lG=class t{static createButton(e,n={}){const i=navigator.xr;if(!i)return null;const r=i,s=document.createElement("button");function a(){s.style.display="none",s.style.cursor="auto",s.style.left="calc(50% - 75px)",s.style.width="150px",s.onmouseenter=null,s.onmouseleave=null,s.onclick=null}var o;return e.xr.enabled=!0,e.xr.setReferenceSpaceType("local"),s.id="VRButton",s.style.display="none",(o=s).style.position="absolute",o.style.bottom="20px",o.style.padding="12px 6px",o.style.border="1px solid #fff",o.style.borderRadius="4px",o.style.background="rgba(0,0,0,0.1)",o.style.color="#fff",o.style.font="normal 13px sans-serif",o.style.textAlign="center",o.style.opacity="0.5",o.style.outline="none",o.style.zIndex="999",r.isSessionSupported("immersive-vr").then(i=>{i?function(){let t=null;async function i(n){console.log("onSessionStarted"),n.addEventListener("end",a),await e.xr.setSession(n),s.textContent="EXIT VR",t=n}function a(){console.log("onSessionEnded"),null==t||t.removeEventListener("end",a),s.textContent="ENTER VR",t=null}s.style.display="",s.style.cursor="pointer",s.style.left="calc(50% - 100px)",s.style.width="200px",s.style.height="100px",s.textContent="ENTER VR";const o={...n,optionalFeatures:[...n.optionalFeatures||[]]};s.onmouseenter=()=>{s.style.opacity="1.0"},s.onmouseleave=()=>{s.style.opacity="0.5"},s.onclick=()=>{null===t?(console.log("requesting session"),r.requestSession("immersive-vr",o).then(i)):(console.log("ending session"),t.end())}}():(a(),s.textContent="VR NOT SUPPORTED"),i&&t.xrSessionIsGranted&&s.click()}).catch(function(t){a(),console.warn("Exception when trying to call xr.isSessionSupported",t),s.textContent="VR NOT ALLOWED"}),s}static registerSessionGrantedListener(){const e=navigator.xr;if(!e)return null;const n=e;/WebXRViewer\//i.test(navigator.userAgent)||n.addEventListener("sessiongranted",()=>{t.xrSessionIsGranted=!0})}};lG.xrSessionIsGranted=!1;let cG=lG;cG.registerSessionGrantedListener();var hG=(t=>(t.w="wrist",t.t0="thumb-metacarpal",t.t1="thumb-phalanx-proximal",t.t2="thumb-phalanx-distal",t.t3="thumb-tip",t.i0="index-finger-metacarpal",t.i1="index-finger-phalanx-proximal",t.i2="index-finger-phalanx-intermediate",t.i3="index-finger-phalanx-distal",t.i4="index-finger-tip",t.m0="middle-finger-metacarpal",t.m1="middle-finger-phalanx-proximal",t.m2="middle-finger-phalanx-intermediate",t.m3="middle-finger-phalanx-distal",t.m4="middle-finger-tip",t.r0="ring-finger-metacarpal",t.r1="ring-finger-phalanx-proximal",t.r2="ring-finger-phalanx-intermediate",t.r3="ring-finger-phalanx-distal",t.r4="ring-finger-tip",t.p0="pinky-finger-metacarpal",t.p1="pinky-finger-phalanx-proximal",t.p2="pinky-finger-phalanx-intermediate",t.p3="pinky-finger-phalanx-distal",t.p4="pinky-finger-tip",t))(hG||{});const AG=Object.keys(hG),uG=AG.length,dG={w:0,t0:1,t1:2,t2:3,t3:4,i0:5,i1:6,i2:7,i3:8,i4:9,m0:10,m1:11,m2:12,m3:13,m4:14,r0:15,r1:16,r2:17,r3:18,r4:19,p0:20,p1:21,p2:22,p3:23,p4:24},pG={w:.02,t0:.02,t1:.014,t2:.0115,t3:.0085,i0:.022,i1:.012,i2:.0085,i3:.0075,i4:.0065,m0:.021,m1:.012,m2:.008,m3:.0075,m4:.0065,r0:.019,r1:.011,r2:.0075,r3:.007,r4:.006,p0:.012,p1:.01,p2:.007,p3:.0065,p4:.0055},gG=[["w","t0","t1","t2","t3"],["w","i0","i1","i2","i3","i4"],["w","m0","m1","m2","m3","m4"],["w","r0","r1","r2","r3","r4"],["w","p0","p1","p2","p3","p4"]],fG=[[8,10,8,6],[8,19,14,8,6],[8,19,14,8,6],[8,19,14,8,6],[8,19,14,8,6]],mG=["t3","i4","m4","r4","p4"],yG=["i4","m4","r4","p4"];var vG=(t=>(t.left="left",t.right="right",t))(vG||{});const xG=Object.keys(vG);class CG{constructor(){this.hands={},this.last={},this.values={},this.tests={},this.lastTests={},this.updated=!1}update({xr:t,xrFrame:e}){const n=t.getSession();if(!n)return;const i=t.getReferenceSpace();if(i&&e.getJointPose){this.last=this.hands,this.lastTests=this.tests,this.hands={},this.values={},this.tests={};for(const t of n.inputSources){if(!t.hand)continue;const n=t.handedness;this.hands[n]={};for(const r of AG){const s=t.hand.get(hG[r]);if(s){const t=e.getJointPose(s,i);if(t){const{position:e,orientation:i}=t.transform;this.hands[n][r]={position:new hi(e.x,e.y,e.z),quaternion:new ci(i.x,i.y,i.z,i.w),radius:t.radius||.001}}}}}for(const t of xG)for(const{key:e,value:n}of[{key:`${t}AllTips`,value:this.allTipsTouching(t)},{key:`${t}IndexThumb`,value:this.touching(t,"i4",t,"t3")},{key:`${t}MiddleThumb`,value:this.touching(t,"m4",t,"t3")},{key:`${t}RingThumb`,value:this.touching(t,"r4",t,"t3")},{key:`${t}PinkyThumb`,value:this.touching(t,"p4",t,"t3")},{key:`${t}TriTips`,value:this.triTipsTouching(t)}])this.values[e]=n,this.tests[e]=1===n||0!==n&&(this.lastTests[e]??!1)}}makeGhostMesh(){const t=new hi,e=new hi(.01,.01,.01),n=new ci(0,0,0,1),i=new ls(1,1,1),r=3*Math.PI;new ls(1,1,1);let s=1;const a=new LO({onFrame:()=>{let o=0;for(const l of xG){const c=this.hands[l];for(const[h,A]of gG.entries())for(let u=1;u<A.length;++u){const d=2*fG[h][u-1],p=u+1===A.length,g=null==c?void 0:c[A[u-1]],f=null==c?void 0:c[A[u]];for(let c=0;c<d;++c){const h=(c+.5)/d;if(s=0,g&&f){t.copy(g.position).lerp(f.position,h),n.copy(g.quaternion).slerp(f.quaternion,h);let a=(1-h)*pG[A[u-1]]+h*pG[A[u]];p&&h>.8&&(a*=Math.sqrt(1-((h-.8)/.2)**2)),e.set(.65*a,.5*a,.003),i.set(.55+.45*Math.sin(t.x*r),.55+.45*Math.sin(t.y*r),.55+.45*Math.sin(t.z*r)),"right"===l&&i.set(1-i.r,1-i.g,1-i.b),s=.75}a.packedSplats.setSplat(o,t,e,n,s,i),o+=1}}}a.packedSplats.numSplats=o,a.packedSplats.needsUpdate=!0,a.numSplats=o,a.updateVersion()}});return a}distance(t,e,n,i,r=!1){const s=r?this.last[t]:this.hands[t],a=r?this.last[n]:this.hands[n],o=null==s?void 0:s[e],l=null==a?void 0:a[i];return o&&l?o.position.distanceTo(l.position):Number.POSITIVE_INFINITY}separation(t,e,n,i,r=!1){const s=this.distance(t,e,n,i,r);return s===Number.POSITIVE_INFINITY?Number.POSITIVE_INFINITY:s-pG[e]-pG[i]}touching(t,e,n,i,r=!1){const s=this.separation(t,e,n,i,r);return s===Number.POSITIVE_INFINITY?Number.POSITIVE_INFINITY:1-Math.max(0,Math.min(1,s/.01-0))}allTipsTouching(t,e=!1){return Math.min(this.touching(t,"t3",t,"i4",e),this.touching(t,"i4",t,"m4",e),this.touching(t,"m4",t,"r4",e),this.touching(t,"r4",t,"p4",e))}triTipsTouching(t,e=!1){return Math.min(this.touching(t,"t3",t,"i4",e),this.touching(t,"i4",t,"m4",e),this.touching(t,"m4",t,"t3",e))}}class IG{constructor({xrHands:t,control:e,moveInertia:n,rotateInertia:i}){this.lastGrip={},this.lastPivot=new hi,this.rotateVelocity=0,this.velocity=new hi,this.xrHands=t,this.control=e,this.moveInertia=n??.5,this.rotateInertia=i??.5}update(t){var e,n,i,r,s;const a={};for(const t of xG){const o=this.xrHands.hands[t];o&&this.xrHands.tests[`${t}MiddleThumb`]&&(a[t]=(new hi).add((null==(e=o.t3)?void 0:e.position)??new hi).add((null==(n=o.i4)?void 0:n.position)??new hi).add((null==(i=o.m4)?void 0:i.position)??new hi).add((null==(r=o.r4)?void 0:r.position)??new hi).add((null==(s=o.p4)?void 0:s.position)??new hi).multiplyScalar(.2))}if(a.left&&a.right&&this.lastGrip.left&&this.lastGrip.right){const e=a.left.clone().add(a.right).multiplyScalar(.5),n=this.lastGrip.left.clone().add(this.lastGrip.right).multiplyScalar(.5);this.lastPivot=e;const i=e.clone().applyMatrix4(this.control.matrix);i.sub(n.clone().applyMatrix4(this.control.matrix)),i.multiplyScalar(1/t),this.velocity.lerp(i,1-Math.exp(-20*t));let r=Math.atan2(a.left.z-e.z,a.left.x-e.x)-Math.atan2(this.lastGrip.left.z-n.z,this.lastGrip.left.x-n.x);r>Math.PI?r-=2*Math.PI:r<-Math.PI&&(r+=2*Math.PI);const s=r/t,o=Math.exp(-20*t);this.rotateVelocity=this.rotateVelocity*o+s*(1-o)}else if(this.rotateVelocity*=Math.exp(-t/this.rotateInertia),a.left&&this.lastGrip.left){const e=a.left.clone().applyMatrix4(this.control.matrix);e.sub(this.lastGrip.left.clone().applyMatrix4(this.control.matrix)),e.multiplyScalar(1/t),this.velocity.lerp(e,1-Math.exp(-20*t))}else if(a.right&&this.lastGrip.right){const e=a.right.clone().applyMatrix4(this.control.matrix);e.sub(this.lastGrip.right.clone().applyMatrix4(this.control.matrix)),e.multiplyScalar(1/t),this.velocity.lerp(e,1-Math.exp(-20*t))}else this.velocity.multiplyScalar(Math.exp(-t/this.moveInertia));const o=this.lastPivot.clone().negate(),l=(new fr).makeTranslation(o).premultiply((new fr).makeRotationY(this.rotateVelocity*t)).premultiply((new fr).makeTranslation(this.lastPivot));this.control.matrix.multiply(l),this.control.matrix.decompose(this.control.position,this.control.quaternion,this.control.scale),this.control.updateMatrixWorld(!0),this.control.position.sub(this.velocity.clone().multiplyScalar(t)),this.lastGrip=a}}const EG={KeyW:new hi(0,0,-1),KeyS:new hi(0,0,1),KeyA:new hi(-1,0,0),KeyD:new hi(1,0,0),KeyR:new hi(0,1,0),KeyF:new hi(0,-1,0)},wG={ArrowUp:new hi(0,0,-1),ArrowDown:new hi(0,0,1),ArrowLeft:new hi(-1,0,0),ArrowRight:new hi(1,0,0),PageUp:new hi(0,1,0),PageDown:new hi(0,-1,0)},_G={KeyQ:new hi(0,0,1),KeyE:new hi(0,0,-1)},bG={Home:new hi(0,-1,0),End:new hi(0,1,0),Insert:new hi(-1,0,0),Delete:new hi(1,0,0)};class BG{constructor({canvas:t}){this.lastTime=0,this.fpsMovement=new SG({}),this.pointerControls=new MG({canvas:t})}update(t){const e=performance.now(),n=(e-(this.lastTime||e))/1e3;this.lastTime=e,this.fpsMovement.update(n,t),this.pointerControls.update(n,t)}}class SG{constructor({moveSpeed:t,rollSpeed:e,stickThreshold:n,rotateSpeed:i,keycodeMoveMapping:r,keycodeRotateMapping:s,gamepadMapping:a,capsMultiplier:o,shiftMultiplier:l,ctrlMultiplier:c,xr:h}={}){this.enable=!0,this.moveSpeed=t??1,this.rollSpeed=e??2,this.stickThreshold=n??.1,this.rotateSpeed=i??2,this.keycodeMoveMapping=r??{...EG,...wG},this.keycodeRotateMapping=s??{..._G,...bG},this.gamepadMapping=a??{4:"rollLeft",5:"rollRight",6:"ctrl",7:"shift"},this.capsMultiplier=o??10,this.shiftMultiplier=l??5,this.ctrlMultiplier=c??.2,this.xr=h,this.keydown={},this.keycode={},document.addEventListener("keydown",t=>{this.keydown[t.key]=!0,this.keycode[t.code]=!0}),document.addEventListener("keyup",t=>{this.keydown[t.key]=!1,this.keycode[t.code]=!1}),window.addEventListener("blur",()=>{this.keydown={},this.keycode={}})}update(t,e){var n,i;if(!this.enable)return;const r=[new li,new li],s=navigator.getGamepads()[0];s&&(r[0].set(s.axes[0],s.axes[1]),r[1].set(s.axes[2],s.axes[3]));const a=(null==s?void 0:s.buttons.map(t=>t.pressed))||[],o=Array.from((null==(i=null==(n=this.xr)?void 0:n.getSession())?void 0:i.inputSources)??[]);for(const t of o){const e=t.gamepad;if(e)switch(t.handedness){case"none":r[0].x+=e.axes[0],r[0].y+=e.axes[1],r[1].x+=e.axes[2],r[1].y+=e.axes[3];break;case"left":r[0].x+=e.axes[2],r[0].y+=e.axes[3];break;case"right":r[1].x+=e.axes[2],r[1].y+=e.axes[3]}}for(const t of r)t.x=Math.abs(t.x)>=this.stickThreshold?t.x:0,t.y=Math.abs(t.y)>=this.stickThreshold?t.y:0;const l=new hi(r[1].x,r[1].y,0).multiplyScalar(this.rotateSpeed);for(const[t,e]of Object.entries(this.keycodeRotateMapping))this.keycode[t]&&l.add(e);for(const t in this.gamepadMapping)if(a[Number.parseInt(t)])switch(this.gamepadMapping[t]){case"rollLeft":l.z+=1;break;case"rollRight":l.z-=1}if(l.multiply(new hi(this.rotateSpeed,this.rotateSpeed,this.rollSpeed)),l.manhattanLength()>0){l.multiplyScalar(t);const n=(new br).setFromQuaternion(e.quaternion,"YXZ");n.y-=l.x,n.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,n.x-l.y)),n.z=Math.max(-Math.PI,Math.min(Math.PI,n.z+l.z)),e.quaternion.setFromEuler(n)}const c=new hi(r[0].x,0,r[0].y);for(const[t,e]of Object.entries(this.keycodeMoveMapping))this.keycode[t]&&c.add(e);let h=1;this.keydown.CapsLock&&(h*=this.capsMultiplier),(this.keycode.ShiftLeft||this.keycode.ShiftRight)&&(h*=this.shiftMultiplier),(this.keycode.ControlLeft||this.keycode.ControlRight)&&(h*=this.ctrlMultiplier);for(const t in this.gamepadMapping)if(a[Number.parseInt(t)])switch(this.gamepadMapping[t]){case"shift":h*=this.shiftMultiplier;break;case"ctrl":h*=this.ctrlMultiplier}c.applyQuaternion(e.quaternion),e.position.add(c.multiplyScalar(this.moveSpeed*h*t))}}class MG{constructor({canvas:t,rotateSpeed:e,slideSpeed:n,scrollSpeed:i,swapRotateSlide:r,reverseRotate:s,reverseSlide:a,reverseSwipe:o,reverseScroll:l,moveInertia:c,rotateInertia:h,pointerRollScale:A,doublePress:u}){this.enable=!0,this.canvas=t,this.rotateSpeed=e??.002,this.slideSpeed=n??.006,this.scrollSpeed=i??.0015,this.swapRotateSlide=r??!1,this.reverseRotate=s??!1,this.reverseSlide=a??!1,this.reverseSwipe=o??!1,this.reverseScroll=l??!1,this.moveInertia=c??.15,this.rotateInertia=h??.15,this.pointerRollScale=A??1,this.doublePress=u??(()=>{}),this.doublePressLimitMs=400,this.doublePressDistance=50,this.lastUp=null,this.rotating=null,this.sliding=null,this.dualPress=!1,this.scroll=new hi,this.rotateVelocity=new hi,this.moveVelocity=new hi,t.addEventListener("pointerdown",e=>{const n=this.getPointerPosition(e),i=n.clone(),r=n.clone(),s=!this.swapRotateSlide&&!this.rotating&&("mouse"!==e.pointerType||0===e.button)||this.swapRotateSlide&&this.sliding&&!this.rotating&&("mouse"!==e.pointerType||1===e.button),{pointerId:a,timeStamp:o}=e;if(s)this.rotating={initial:i,last:r,position:n,pointerId:a,timeStamp:o},t.setPointerCapture(e.pointerId),this.dualPress=!1;else if(!this.sliding){const s="mouse"===e.pointerType?e.button:void 0;this.sliding={initial:i,last:r,position:n,pointerId:a,button:s,timeStamp:o},t.setPointerCapture(e.pointerId),this.dualPress=null!=this.rotating&&o-this.rotating.timeStamp<200}});const d=e=>{var n,i;(null==(n=this.rotating)?void 0:n.pointerId)===e.pointerId?(this.rotating=null,t.releasePointerCapture(e.pointerId),this.dualPress&&this.sliding&&(t.releasePointerCapture(this.sliding.pointerId),this.sliding=null)):(null==(i=this.sliding)?void 0:i.pointerId)===e.pointerId&&(this.sliding=null,t.releasePointerCapture(e.pointerId),this.dualPress&&this.rotating&&(t.releasePointerCapture(this.rotating.pointerId),this.rotating=null));const r=this.getPointerPosition(e),s=this.lastUp;if(this.lastUp={position:r,time:e.timeStamp},s&&s.position.distanceTo(r)<this.doublePressDistance){const t=e.timeStamp-s.time;t<this.doublePressLimitMs&&(this.lastUp=null,this.doublePress({position:r,intervalMs:t}))}};document.addEventListener("pointerup",d),document.addEventListener("pointercancel",d),document.addEventListener("pointermove",t=>{var e,n;(null==(e=this.rotating)?void 0:e.pointerId)===t.pointerId?this.rotating.position=this.getPointerPosition(t):(null==(n=this.sliding)?void 0:n.pointerId)===t.pointerId&&(this.sliding.position=this.getPointerPosition(t))}),t.addEventListener("contextmenu",t=>{t.preventDefault()}),t.addEventListener("wheel",t=>{this.scroll.add(new hi(t.deltaX,t.deltaY,t.deltaZ)),t.preventDefault()})}getPointerPosition(t){const e=this.canvas.getBoundingClientRect();return new li(t.clientX-e.left,t.clientY-e.top)}update(t,e){if(!this.enable)return;if(this.dualPress&&this.rotating&&this.sliding){const n=[this.rotating.position.clone().sub(this.rotating.last),this.sliding.position.clone().sub(this.sliding.last)],i=n[0].dot(n[1]);if(i>=.2){const i=n[0].clone().add(n[1]),r=new hi(i.x,-i.y,0);r.multiplyScalar(this.slideSpeed*(this.reverseSwipe?1:-1)),r.applyQuaternion(e.quaternion),e.position.add(r),this.moveVelocity=r.clone().multiplyScalar(1/t)}else if(i<=-.2){const i=this.sliding.last.clone().sub(this.rotating.last),r=i.length();i.multiplyScalar(1/r).normalize();const s=new li(-i.y,i.x),a=[n[0].dot(i),n[1].dot(i)],o=[n[0].dot(s),n[1].dot(s)],l=this.rotating.last.clone().add(this.sliding.last).multiplyScalar(.5);let c=new hi;if(e instanceof ra){const t=new li(l.x/this.canvas.clientWidth*2-1,-l.y/this.canvas.clientHeight*2+1),n=new ZA;n.setFromCamera(t,e),c=n.ray.direction}const h=a[1]-a[0],A=c.multiplyScalar(h*this.slideSpeed);e.position.add(A),this.moveVelocity=A.clone().multiplyScalar(1/t);const u=[Math.atan(o[0]/(-.5*r)),Math.atan(o[1]/(.5*r))],d=.5*(u[0]+u[1])*this.pointerRollScale,p=(new br).setFromQuaternion(e.quaternion,"YXZ");p.z=Math.max(-Math.PI,Math.min(Math.PI,p.z+.5*d)),e.quaternion.setFromEuler(p)}this.rotating.last.copy(this.rotating.position),this.sliding.last.copy(this.sliding.position)}else{const n=new hi;if(this.rotating&&!this.dualPress){const e=this.rotating.position.clone().sub(this.rotating.last);this.rotating.last.copy(this.rotating.position),n.set(e.x,e.y,0),n.multiplyScalar(this.rotateSpeed*(this.reverseRotate?-1:1)),this.rotateVelocity=n.clone().multiplyScalar(1/t)}else this.rotateVelocity.multiplyScalar(Math.exp(-t/this.rotateInertia)),n.addScaledVector(this.rotateVelocity,t);const i=(new br).setFromQuaternion(e.quaternion,"YXZ");if(i.y-=n.x,i.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,i.x-n.y)),i.z*=Math.exp(-0*t),e.quaternion.setFromEuler(i),this.sliding&&!this.dualPress){const n=this.sliding.position.clone().sub(this.sliding.last);this.sliding.last.copy(this.sliding.position);const i=2!==this.sliding.button?new hi(n.x,0,n.y):new hi(n.x,-n.y,0);i.multiplyScalar(this.slideSpeed*(this.reverseSlide?-1:1)),i.applyQuaternion(e.quaternion),e.position.add(i),this.moveVelocity=i.clone().multiplyScalar(1/t)}else this.moveVelocity.multiplyScalar(Math.exp(-t/this.moveInertia)),e.position.addScaledVector(this.moveVelocity,t)}const n=this.scroll.multiplyScalar(this.scrollSpeed);n.set(n.x,n.z,n.y),this.reverseScroll&&n.multiplyScalar(-1),n.applyQuaternion(e.quaternion),e.position.add(n),this.scroll.set(0,0,0)}}Ns.prototype.computeBoundsTree=BB,Ns.prototype.disposeBoundsTree=SB,Xs.prototype.raycast=wB,i.OrbitControls=class extends Ju{constructor(t,e=null){super(t,e),this.state=Ff,this.target=new hi,this.cursor=new hi,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:A.ROTATE,MIDDLE:A.DOLLY,RIGHT:A.PAN},this.touches={ONE:u.ROTATE,TWO:u.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new hi,this._lastQuaternion=new ci,this._lastTargetPosition=new hi,this._quat=(new ci).setFromUnitVectors(t.up,new hi(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new iu,this._sphericalDelta=new iu,this._scale=1,this._panOffset=new hi,this._rotateStart=new li,this._rotateEnd=new li,this._rotateDelta=new li,this._panStart=new li,this._panEnd=new li,this._panDelta=new li,this._dollyStart=new li,this._dollyEnd=new li,this._dollyDelta=new li,this._dollyDirection=new hi,this._mouse=new li,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=Of.bind(this),this._onPointerDown=kf.bind(this),this._onPointerUp=zf.bind(this),this._onContextMenu=Jf.bind(this),this._onMouseWheel=Vf.bind(this),this._onKeyDown=qf.bind(this),this._onTouchStart=Yf.bind(this),this._onTouchMove=Wf.bind(this),this._onMouseDown=Gf.bind(this),this._onMouseMove=Hf.bind(this),this._interceptControlDown=jf.bind(this),this._interceptControlUp=Xf.bind(this),null!==this.domElement&&this.connect(this.domElement),this.update()}connect(t){super.connect(t),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(t){t.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=t}stopListenToKeyEvents(){null!==this._domElementKeyEvents&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(Mf),this.update(),this.state=Ff}update(t=null){const e=this.object.position;Pf.copy(e).sub(this.target),Pf.applyQuaternion(this._quat),this._spherical.setFromVector3(Pf),this.autoRotate&&this.state===Ff&&this._rotateLeft(this._getAutoRotationAngle(t)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(n)&&isFinite(i)&&(n<-Math.PI?n+=Lf:n>Math.PI&&(n-=Lf),i<-Math.PI?i+=Lf:i>Math.PI&&(i-=Lf),this._spherical.theta=n<=i?Math.max(n,Math.min(i,this._spherical.theta)):this._spherical.theta>(n+i)/2?Math.max(n,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),!0===this.enableDamping?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const t=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=t!=this._spherical.radius}if(Pf.setFromSpherical(this._spherical),Pf.applyQuaternion(this._quatInverse),e.copy(this.target).add(Pf),this.object.lookAt(this.target),!0===this.enableDamping?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let t=null;if(this.object.isPerspectiveCamera){const e=Pf.length();t=this._clampDistance(e*this._scale);const n=e-t;this.object.position.addScaledVector(this._dollyDirection,n),this.object.updateMatrixWorld(),r=!!n}else if(this.object.isOrthographicCamera){const e=new hi(this._mouse.x,this._mouse.y,0);e.unproject(this.object);const n=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=n!==this.object.zoom;const i=new hi(this._mouse.x,this._mouse.y,0);i.unproject(this.object),this.object.position.sub(i).add(e),this.object.updateMatrixWorld(),t=Pf.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;null!==t&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(t).add(this.object.position):(Df.origin.copy(this.object.position),Df.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(Df.direction))<Uf?this.object.lookAt(this.target):(Rf.setFromNormalAndCoplanarPoint(this.object.up,this.target),Df.intersectPlane(Rf,this.target))))}else if(this.object.isOrthographicCamera){const t=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),t!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,!!(r||this._lastPosition.distanceToSquared(this.object.position)>Nf||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Nf||this._lastTargetPosition.distanceToSquared(this.target)>Nf)&&(this.dispatchEvent(Mf),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0)}_getAutoRotationAngle(t){return null!==t?Lf/60*this.autoRotateSpeed*t:Lf/60/60*this.autoRotateSpeed}_getZoomScale(t){const e=Math.abs(.01*t);return Math.pow(.95,this.zoomSpeed*e)}_rotateLeft(t){this._sphericalDelta.theta-=t}_rotateUp(t){this._sphericalDelta.phi-=t}_panLeft(t,e){Pf.setFromMatrixColumn(e,0),Pf.multiplyScalar(-t),this._panOffset.add(Pf)}_panUp(t,e){!0===this.screenSpacePanning?Pf.setFromMatrixColumn(e,1):(Pf.setFromMatrixColumn(e,0),Pf.crossVectors(this.object.up,Pf)),Pf.multiplyScalar(t),this._panOffset.add(Pf)}_pan(t,e){const n=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;Pf.copy(i).sub(this.target);let r=Pf.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*t*r/n.clientHeight,this.object.matrix),this._panUp(2*e*r/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(t*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(e*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(t,e){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),i=t-n.left,r=e-n.top,s=n.width,a=n.height;this._mouse.x=i/s*2-1,this._mouse.y=-r/a*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(t){return Math.max(this.minDistance,Math.min(this.maxDistance,t))}_handleMouseDownRotate(t){this._rotateStart.set(t.clientX,t.clientY)}_handleMouseDownDolly(t){this._updateZoomParameters(t.clientX,t.clientX),this._dollyStart.set(t.clientX,t.clientY)}_handleMouseDownPan(t){this._panStart.set(t.clientX,t.clientY)}_handleMouseMoveRotate(t){this._rotateEnd.set(t.clientX,t.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(Lf*this._rotateDelta.x/e.clientHeight),this._rotateUp(Lf*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(t){this._dollyEnd.set(t.clientX,t.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(t){this._panEnd.set(t.clientX,t.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(t){this._updateZoomParameters(t.clientX,t.clientY),t.deltaY<0?this._dollyIn(this._getZoomScale(t.deltaY)):t.deltaY>0&&this._dollyOut(this._getZoomScale(t.deltaY)),this.update()}_handleKeyDown(t){let e=!1;switch(t.code){case this.keys.UP:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(Lf*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),e=!0;break;case this.keys.BOTTOM:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(-Lf*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),e=!0;break;case this.keys.LEFT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(Lf*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),e=!0;break;case this.keys.RIGHT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(-Lf*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),e=!0}e&&(t.preventDefault(),this.update())}_handleTouchStartRotate(t){if(1===this._pointers.length)this._rotateStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._rotateStart.set(n,i)}}_handleTouchStartPan(t){if(1===this._pointers.length)this._panStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panStart.set(n,i)}}_handleTouchStartDolly(t){const e=this._getSecondPointerPosition(t),n=t.pageX-e.x,i=t.pageY-e.y,r=Math.sqrt(n*n+i*i);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enablePan&&this._handleTouchStartPan(t)}_handleTouchStartDollyRotate(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enableRotate&&this._handleTouchStartRotate(t)}_handleTouchMoveRotate(t){if(1==this._pointers.length)this._rotateEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._rotateEnd.set(n,i)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(Lf*this._rotateDelta.x/e.clientHeight),this._rotateUp(Lf*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(t){if(1===this._pointers.length)this._panEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panEnd.set(n,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(t){const e=this._getSecondPointerPosition(t),n=t.pageX-e.x,i=t.pageY-e.y,r=Math.sqrt(n*n+i*i);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const s=.5*(t.pageX+e.x),a=.5*(t.pageY+e.y);this._updateZoomParameters(s,a)}_handleTouchMoveDollyPan(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enablePan&&this._handleTouchMovePan(t)}_handleTouchMoveDollyRotate(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enableRotate&&this._handleTouchMoveRotate(t)}_addPointer(t){this._pointers.push(t.pointerId)}_removePointer(t){delete this._pointerPositions[t.pointerId];for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return void this._pointers.splice(e,1)}_isTrackingPointer(t){for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return!0;return!1}_trackPointer(t){let e=this._pointerPositions[t.pointerId];void 0===e&&(e=new li,this._pointerPositions[t.pointerId]=e),e.set(t.pageX,t.pageY)}_getSecondPointerPosition(t){const e=t.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[e]}_customWheelEvent(t){const e=t.deltaMode,n={clientX:t.clientX,clientY:t.clientY,deltaY:t.deltaY};switch(e){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100}return t.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}},i.EffectComposer=class{constructor(t,e){if(this.renderer=t,this._pixelRatio=t.getPixelRatio(),void 0===e){const n=t.getSize(new li);this._width=n.width,this._height=n.height,(e=new Ni(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Ht})).texture.name="EffectComposer.rt1"}else this._width=e.width,this._height=e.height;this.renderTarget1=e,this.renderTarget2=e.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new Lg(Qg),this.copyPass.material.blending=w,this.clock=new vA}swapBuffers(){const t=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=t}addPass(t){this.passes.push(t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(t,e){this.passes.splice(e,0,t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(t){const e=this.passes.indexOf(t);-1!==e&&this.passes.splice(e,1)}isLastEnabledPass(t){for(let e=t+1;e<this.passes.length;e++)if(this.passes[e].enabled)return!1;return!0}render(t){void 0===t&&(t=this.clock.getDelta());const e=this.renderer.getRenderTarget();let n=!1;for(let e=0,i=this.passes.length;e<i;e++){const i=this.passes[e];if(!1!==i.enabled){if(i.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(e),i.render(this.renderer,this.writeBuffer,this.readBuffer,t,n),i.needsSwap){if(n){const e=this.renderer.getContext(),n=this.renderer.state.buffers.stencil;n.setFunc(e.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,t),n.setFunc(e.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==Fg&&(i instanceof Fg?n=!0:i instanceof Ng&&(n=!1))}}this.renderer.setRenderTarget(e)}reset(t){if(void 0===t){const e=this.renderer.getSize(new li);this._pixelRatio=this.renderer.getPixelRatio(),this._width=e.width,this._height=e.height,(t=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(t,e){this._width=t,this._height=e;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(let t=0;t<this.passes.length;t++)this.passes[t].setSize(n,i)}setPixelRatio(t){this._pixelRatio=t,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}},i.RenderPass=class extends Dg{constructor(t,e,n=null,i=null,r=null){super(),this.scene=t,this.camera=e,this.overrideMaterial=n,this.clearColor=i,this.clearAlpha=r,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new ls}render(t,e,n){const i=t.autoClear;let r,s;t.autoClear=!1,null!==this.overrideMaterial&&(s=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),null!==this.clearColor&&(t.getClearColor(this._oldClearColor),t.setClearColor(this.clearColor,t.getClearAlpha())),null!==this.clearAlpha&&(r=t.getClearAlpha(),t.setClearAlpha(this.clearAlpha)),1==this.clearDepth&&t.clearDepth(),t.setRenderTarget(this.renderToScreen?null:n),!0===this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),t.render(this.scene,this.camera),null!==this.clearColor&&t.setClearColor(this._oldClearColor),null!==this.clearAlpha&&t.setClearAlpha(r),null!==this.overrideMaterial&&(this.scene.overrideMaterial=s),t.autoClear=i}},i.ShaderPass=Lg,i.GammaCorrectionShader={name:"GammaCorrectionShader",uniforms:{tDiffuse:{value:null}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 tex = texture2D( tDiffuse, vUv );\n\n\t\t\tgl_FragColor = sRGBTransferOETF( tex );\n\n\t\t}"},i.SAOPass=Hg,i.GTAOPass=ef,i.SobelOperatorShader=sf,i.SSRPass=uf,i.BokehPass=class extends Dg{constructor(t,e,n){super(),this.scene=t,this.camera=e;const i=void 0!==n.focus?n.focus:1,r=void 0!==n.aperture?n.aperture:.025,s=void 0!==n.maxblur?n.maxblur:1;this._renderTargetDepth=new Ni(1,1,{minFilter:bt,magFilter:bt,type:Ht}),this._renderTargetDepth.texture.name="BokehPass.depth",this._materialDepth=new Kc,this._materialDepth.depthPacking=$e,this._materialDepth.blending=w;const a=na.clone(pf);a.tDepth.value=this._renderTargetDepth.texture,a.focus.value=i,a.aspect.value=e.aspect,a.aperture.value=r,a.maxblur.value=s,a.nearClip.value=e.near,a.farClip.value=e.far,this.materialBokeh=new ia({defines:Object.assign({},df),uniforms:a,vertexShader:gf,fragmentShader:ff}),this.uniforms=a,this._fsQuad=new Pg(this.materialBokeh),this._oldClearColor=new ls}render(t,e,n){this.scene.overrideMaterial=this._materialDepth,t.getClearColor(this._oldClearColor);const i=t.getClearAlpha(),r=t.autoClear;t.autoClear=!1,t.setClearColor(16777215),t.setClearAlpha(1),t.setRenderTarget(this._renderTargetDepth),t.clear(),t.render(this.scene,this.camera),this.uniforms.tColor.value=n.texture,this.uniforms.nearClip.value=this.camera.near,this.uniforms.farClip.value=this.camera.far,this.renderToScreen?(t.setRenderTarget(null),this._fsQuad.render(t)):(t.setRenderTarget(e),t.clear(),this._fsQuad.render(t)),this.scene.overrideMaterial=null,t.setClearColor(this._oldClearColor),t.setClearAlpha(i),t.autoClear=r}setSize(t,e){this.materialBokeh.uniforms.aspect.value=t/e,this._renderTargetDepth.setSize(t,e)}dispose(){this._renderTargetDepth.dispose(),this._materialDepth.dispose(),this.materialBokeh.dispose(),this._fsQuad.dispose()}},i.CSM=class{constructor(t){this.camera=t.camera,this.parent=t.parent,this.cascades=t.cascades||3,this.maxFar=t.maxFar||1e5,this.mode=t.mode||"practical",this.shadowMapSize=t.shadowMapSize||2048,this.shadowBias=t.shadowBias||1e-6,this.lightDirection=t.lightDirection||new hi(1,-1,1).normalize(),this.lightIntensity=t.lightIntensity||3,this.lightNear=t.lightNear||1,this.lightFar=t.lightFar||2e3,this.lightMargin=t.lightMargin||200,this.customSplitsCallback=t.customSplitsCallback,this.fade=!1,this.mainFrustum=new yf({webGL:!0}),this.frustums=[],this.breaks=[],this.lights=[],this.shaders=new Map,this._createLights(),this.updateFrustums(),this._injectInclude()}_createLights(){for(let t=0;t<this.cascades;t++){const t=new Xh(16777215,this.lightIntensity);t.castShadow=!0,t.shadow.mapSize.width=this.shadowMapSize,t.shadow.mapSize.height=this.shadowMapSize,t.shadow.camera.near=this.lightNear,t.shadow.camera.far=this.lightFar,t.shadow.bias=this.shadowBias,this.parent.add(t),this.parent.add(t.target),this.lights.push(t)}}_initCascades(){const t=this.camera;t.updateProjectionMatrix(),this.mainFrustum.setFromProjectionMatrix(t.projectionMatrix,this.maxFar),this.mainFrustum.split(this.breaks,this.frustums)}_updateShadowBounds(){const t=this.frustums;for(let e=0;e<t.length;e++){const t=this.lights[e].shadow.camera,n=this.frustums[e],i=n.vertices.near,r=n.vertices.far,s=r[0];let a;a=s.distanceTo(r[2])>s.distanceTo(i[2])?r[2]:i[2];let o=s.distanceTo(a);if(this.fade){const t=this.camera,e=Math.max(t.far,this.maxFar),i=n.vertices.far[0].z/(e-t.near);o+=.25*Math.pow(i,2)*(e-t.near)}t.left=-o/2,t.right=o/2,t.top=o/2,t.bottom=-o/2,t.updateProjectionMatrix()}}_getBreaks(){const t=this.camera,e=Math.min(t.far,this.maxFar);switch(this.breaks.length=0,this.mode){case"uniform":n(this.cascades,t.near,e,this.breaks);break;case"logarithmic":i(this.cascades,t.near,e,this.breaks);break;case"practical":!function(t,e,r,s,a){wf.length=0,_f.length=0,i(t,e,r,_f),n(t,e,r,wf);for(let e=1;e<t;e++)a.push(oi.lerp(wf[e-1],_f[e-1],.5));a.push(1)}(this.cascades,t.near,e,0,this.breaks);break;case"custom":void 0===this.customSplitsCallback&&console.error("CSM: Custom split scheme callback not defined."),this.customSplitsCallback(this.cascades,t.near,e,this.breaks)}function n(t,e,n,i){for(let r=1;r<t;r++)i.push((e+(n-e)*r/t)/n);i.push(1)}function i(t,e,n,i){for(let r=1;r<t;r++)i.push(e*(n/e)**(r/t)/n);i.push(1)}}update(){const t=this.camera,e=this.frustums;bf.lookAt(new hi,this.lightDirection,Sf),Bf.copy(bf).invert();for(let n=0;n<e.length;n++){const i=this.lights[n],r=i.shadow.camera,s=(r.right-r.left)/this.shadowMapSize,a=(r.top-r.bottom)/this.shadowMapSize;xf.multiplyMatrices(Bf,t.matrixWorld),e[n].toSpace(xf,Cf);const o=Cf.vertices.near,l=Cf.vertices.far;Ef.makeEmpty();for(let t=0;t<4;t++)Ef.expandByPoint(o[t]),Ef.expandByPoint(l[t]);Ef.getCenter(If),If.z=Ef.max.z+this.lightMargin,If.x=Math.floor(If.x/s)*s,If.y=Math.floor(If.y/a)*a,If.applyMatrix4(bf),i.position.copy(If),i.target.position.copy(If),i.target.position.x+=this.lightDirection.x,i.target.position.y+=this.lightDirection.y,i.target.position.z+=this.lightDirection.z}}_injectInclude(){$u.lights_fragment_begin=vf.lights_fragment_begin,$u.lights_pars_begin=vf.lights_pars_begin}setupMaterial(t){t.defines=t.defines||{},t.defines.USE_CSM=1,t.defines.CSM_CASCADES=this.cascades,this.fade&&(t.defines.CSM_FADE="");const e=[],n=this,i=this.shaders;t.onBeforeCompile=function(r){const s=Math.min(n.camera.far,n.maxFar);n._getExtendedBreaks(e),r.uniforms.CSM_cascades={value:e},r.uniforms.cameraNear={value:n.camera.near},r.uniforms.shadowFar={value:s},i.set(t,r)},i.set(t,null)}_updateUniforms(){const t=Math.min(this.camera.far,this.maxFar);this.shaders.forEach(function(e,n){if(null!==e){const n=e.uniforms;this._getExtendedBreaks(n.CSM_cascades.value),n.cameraNear.value=this.camera.near,n.shadowFar.value=t}!this.fade&&"CSM_FADE"in n.defines?(delete n.defines.CSM_FADE,n.needsUpdate=!0):this.fade&&!("CSM_FADE"in n.defines)&&(n.defines.CSM_FADE="",n.needsUpdate=!0)},this)}_getExtendedBreaks(t){for(;t.length<this.breaks.length;)t.push(new li);t.length=this.breaks.length;for(let e=0;e<this.cascades;e++){const n=this.breaks[e],i=this.breaks[e-1]||0;t[e].x=i,t[e].y=n}}updateFrustums(){this._getBreaks(),this._initCascades(),this._updateShadowBounds(),this._updateUniforms()}remove(){for(let t=0;t<this.lights.length;t++)this.parent.remove(this.lights[t].target),this.parent.remove(this.lights[t])}dispose(){const t=this.shaders;t.forEach(function(t,e){delete e.onBeforeCompile,delete e.defines.USE_CSM,delete e.defines.CSM_CASCADES,delete e.defines.CSM_FADE,null!==t&&(delete t.uniforms.CSM_cascades,delete t.uniforms.cameraNear,delete t.uniforms.shadowFar),e.needsUpdate=!0}),t.clear()}},i.GLTFLoader=$f,i.GLTFExporter=Wm,i.OBJExporter=class{parse(t){let e="",n=0,i=0,r=0;const s=new hi,a=new ls,o=new hi,l=new li,c=[];return t.traverse(function(t){!0===t.isMesh&&function(t){let a=0,h=0,A=0;const u=t.geometry,d=new di,p=u.getAttribute("position"),g=u.getAttribute("normal"),f=u.getAttribute("uv"),m=u.getIndex();if(e+="o "+t.name+"\n",t.material&&t.material.name&&(e+="usemtl "+t.material.name+"\n"),void 0!==p)for(let n=0,i=p.count;n<i;n++,a++)s.fromBufferAttribute(p,n),s.applyMatrix4(t.matrixWorld),e+="v "+s.x+" "+s.y+" "+s.z+"\n";if(void 0!==f)for(let t=0,n=f.count;t<n;t++,A++)l.fromBufferAttribute(f,t),e+="vt "+l.x+" "+l.y+"\n";if(void 0!==g){d.getNormalMatrix(t.matrixWorld);for(let t=0,n=g.count;t<n;t++,h++)o.fromBufferAttribute(g,t),o.applyMatrix3(d).normalize(),e+="vn "+o.x+" "+o.y+" "+o.z+"\n"}if(null!==m)for(let t=0,s=m.count;t<s;t+=3){for(let e=0;e<3;e++){const s=m.getX(t+e)+1;c[e]=n+s+(g||f?"/"+(f?i+s:"")+(g?"/"+(r+s):""):"")}e+="f "+c.join(" ")+"\n"}else for(let t=0,s=p.count;t<s;t+=3){for(let e=0;e<3;e++){const s=t+e+1;c[e]=n+s+(g||f?"/"+(f?i+s:"")+(g?"/"+(r+s):""):"")}e+="f "+c.join(" ")+"\n"}n+=a,i+=A,r+=h}(t),!0===t.isLine&&function(t){let i=0;const r=t.geometry,a=t.type,o=r.getAttribute("position");if(e+="o "+t.name+"\n",void 0!==o)for(let n=0,r=o.count;n<r;n++,i++)s.fromBufferAttribute(o,n),s.applyMatrix4(t.matrixWorld),e+="v "+s.x+" "+s.y+" "+s.z+"\n";if("Line"===a){e+="l ";for(let t=1,i=o.count;t<=i;t++)e+=n+t+" ";e+="\n"}if("LineSegments"===a)for(let t=1,i=t+1,r=o.count;t<r;t+=2,i=t+1)e+="l "+(n+t)+" "+(n+i)+"\n";n+=i}(t),!0===t.isPoints&&function(t){let i=0;const r=t.geometry,o=r.getAttribute("position"),l=r.getAttribute("color");if(e+="o "+t.name+"\n",void 0!==o){for(let n=0,r=o.count;n<r;n++,i++)s.fromBufferAttribute(o,n),s.applyMatrix4(t.matrixWorld),e+="v "+s.x+" "+s.y+" "+s.z,void 0!==l&&(a.fromBufferAttribute(l,n),_i.workingToColorSpace(a,an),e+=" "+a.r+" "+a.g+" "+a.b),e+="\n";e+="p ";for(let t=1,i=o.count;t<=i;t++)e+=n+t+" ";e+="\n"}n+=i}(t)}),e}},i.DRACOLoader=class extends wh{constructor(t){super(t),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}}setDecoderPath(t){return this.decoderPath=t,this}setDecoderConfig(t){return this.decoderConfig=t,this}setWorkerLimit(t){return this.workerLimit=t,this}load(t,e,n,i){const r=new Bh(this.manager);r.setPath(this.path),r.setResponseType("arraybuffer"),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,t=>{this.parse(t,e,i)},n,i)}parse(t,e,n=()=>{}){this.decodeDracoFile(t,e,null,null,an,n).catch(n)}decodeDracoFile(t,e,n,i,r=on,s=()=>{}){const a={attributeIDs:n||this.defaultAttributeIDs,attributeTypes:i||this.defaultAttributeTypes,useUniqueIDs:!!n,vertexColorSpace:r};return this.decodeGeometry(t,a).then(e).catch(s)}decodeGeometry(t,e){const n=JSON.stringify(e);if(Iy.has(t)){const e=Iy.get(t);if(e.key===n)return e.promise;if(0===t.byteLength)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}let i;const r=this.workerNextTaskID++,s=t.byteLength,a=this._getWorker(r,s).then(n=>(i=n,new Promise((n,s)=>{i._callbacks[r]={resolve:n,reject:s},i.postMessage({type:"decode",id:r,taskConfig:e,buffer:t},[t])}))).then(t=>this._createGeometry(t.geometry));return a.catch(()=>!0).then(()=>{i&&r&&this._releaseTask(i,r)}),Iy.set(t,{key:n,promise:a}),a}_createGeometry(t){const e=new Ns;t.index&&e.setIndex(new Cs(t.index.array,1));for(let n=0;n<t.attributes.length;n++){const i=t.attributes[n],r=i.name,s=i.array,a=i.itemSize,o=new Cs(s,a);"color"===r&&(this._assignVertexColorSpace(o,i.vertexColorSpace),o.normalized=s instanceof Float32Array==0),e.setAttribute(r,o)}return e}_assignVertexColorSpace(t,e){if(e!==an)return;const n=new ls;for(let e=0,i=t.count;e<i;e++)n.fromBufferAttribute(t,e),_i.colorSpaceToWorking(n,an),t.setXYZ(e,n.r,n.g,n.b)}_loadLibrary(t,e){const n=new Bh(this.manager);return n.setPath(this.decoderPath),n.setResponseType(e),n.setWithCredentials(this.withCredentials),new Promise((e,i)=>{n.load(t,e,void 0,i)})}preload(){return this._initDecoder(),this}_initDecoder(){if(this.decoderPending)return this.decoderPending;const t="object"!=typeof WebAssembly||"js"===this.decoderConfig.type,e=[];return t?e.push(this._loadLibrary("draco_decoder.js","text")):(e.push(this._loadLibrary("draco_wasm_wrapper.js","text")),e.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(e).then(e=>{const n=e[0];t||(this.decoderConfig.wasmBinary=e[1]);const i=Ey.toString(),r=["/* draco decoder */",n,"","/* worker */",i.substring(i.indexOf("{")+1,i.lastIndexOf("}"))].join("\n");this.workerSourceURL=URL.createObjectURL(new Blob([r]))}),this.decoderPending}_getWorker(t,e){return this._initDecoder().then(()=>{if(this.workerPool.length<this.workerLimit){const t=new Worker(this.workerSourceURL);t._callbacks={},t._taskCosts={},t._taskLoad=0,t.postMessage({type:"init",decoderConfig:this.decoderConfig}),t.onmessage=function(e){const n=e.data;switch(n.type){case"decode":t._callbacks[n.id].resolve(n);break;case"error":t._callbacks[n.id].reject(n);break;default:console.error('THREE.DRACOLoader: Unexpected message, "'+n.type+'"')}},this.workerPool.push(t)}else this.workerPool.sort(function(t,e){return t._taskLoad>e._taskLoad?-1:1});const n=this.workerPool[this.workerPool.length-1];return n._taskCosts[t]=e,n._taskLoad+=e,n})}_releaseTask(t,e){t._taskLoad-=t._taskCosts[e],delete t._callbacks[e],delete t._taskCosts[e]}debug(){console.log("Task load: ",this.workerPool.map(t=>t._taskLoad))}dispose(){for(let t=0;t<this.workerPool.length;++t)this.workerPool[t].terminate();return this.workerPool.length=0,""!==this.workerSourceURL&&URL.revokeObjectURL(this.workerSourceURL),this}},i.KTX2Loader=LC,i.USDZExporter=class{constructor(){this.textureUtils=null}setTextureUtils(t){this.textureUtils=t}parse(t,e,n,i){this.parseAsync(t,i).then(e).catch(n)}async parseAsync(t,e={}){e=Object.assign({ar:{anchoring:{type:"plane"},planeAnchoring:{alignment:"horizontal"}},includeAnchoringProperties:!0,onlyVisible:!0,quickLookCompatible:!1,maxTextureSize:1024},e);const n=new Set,i={},r="model.usda";i[r]=null;const s=new Ev("Root","Xform"),a=new Ev("Scenes","Scope");a.addMetadata("kind",'"sceneLibrary"'),s.addChild(a);const o="Scene",l=new Ev(o,"Xform");let c;l.addMetadata("customData",["bool preliminary_collidesWithEnvironment = 0",`string sceneName = "${o}"`]),l.addMetadata("sceneName",`"${o}"`),e.includeAnchoringProperties&&(l.addProperty(`token preliminary:anchoring:type = "${e.ar.anchoring.type}"`),l.addProperty(`token preliminary:planeAnchoring:alignment = "${e.ar.planeAnchoring.alignment}"`)),a.addChild(l);const h={},A={};Bv(t,l,h,n,i,e);const u=function(t,e,n=!1){const i=new Ev("Materials");for(const r in t){const s=t[r];i.addChild(Pv(s,e,n))}return i}(h,A,e.quickLookCompatible);c='#usda 1.0\n(\n\tcustomLayerData = {\n\t\tstring creator = "Three.js USDZExporter"\n\t}\n\tdefaultPrim = "Root"\n\tmetersPerUnit = 1\n\tupAxis = "Y"\n)\n\n'+s.toString()+"\n\n"+u.toString(),i[r]=xv(c),c=null;for(const t in A){let n=A[t];if(!0===n.isCompressedTexture){if(null===this.textureUtils)throw new Error("THREE.USDZExporter: setTextureUtils() must be called to process compressed textures.");n=await this.textureUtils.decompress(n)}const r=_v(n.image,n.flipY,e.maxTextureSize),s=await new Promise(t=>r.toBlob(t,"image/png",1));i[`textures/Texture_${t}.png`]=new Uint8Array(await s.arrayBuffer())}let d=0;for(const t in i){const e=i[t];d+=34+t.length;const n=63&d;if(4!==n){const r=new Uint8Array(64-n);i[t]=[e,{extra:{12345:r}}]}d=e.length}return function(t,e){e||(e={});var n={},i=[];mv(t,"",n,e);var r=0,s=0;for(var a in n){var o=n[a],l=o[0],c=o[1],h=0==c.level?0:8,A=(E=xv(a)).length,u=c.comment,d=u&&xv(u),p=d&&d.length,g=Cv(c.extra);A>65535&&$y(11);var f=h?gv(l,c):l,m=f.length,y=Av();y.p(l),i.push(dv(c,{size:l.length,crc:y.d(),c:f,f:E,m:d,u:A!=a.length||d&&u.length!=p,o:r,compression:h})),r+=30+A+g+m,s+=76+2*(A+g)+(p||0)+m}for(var v=new wy(s+22),x=r,C=s-r,I=0;I<i.length;++I){var E=i[I];Iv(v,E.o,E,E.f,E.u,E.c.length);var w=30+E.f.length+Cv(E.extra);v.set(E.c,E.o+w),Iv(v,r,E,E.f,E.u,E.c.length,E.o,E.m),r+=16+w+(E.m?E.m.length:0)}return function(t,e,n,i,r){pv(t,e,101010256),pv(t,e+8,n),pv(t,e+10,n),pv(t,e+12,i),pv(t,e+16,r)}(v,r,i.length,C,x),v}(i,{level:0})}},i.Line2=class extends hx{constructor(t=new Ax,e=new Wv({color:16777215*Math.random()})){super(t,e),this.isLine2=!0,this.type="Line2"}},i.LineMaterial=Wv,i.LineGeometry=Ax,i.ConvexGeometry=class extends Ns{constructor(t=[]){super();const e=[],n=[],i=(new mx).setFromPoints(t).faces;for(let t=0;t<i.length;t++){const r=i[t];let s=r.edge;do{const t=s.head().point;e.push(t.x,t.y,t.z),n.push(r.normal.x,r.normal.y,r.normal.z),s=s.next}while(s!==r.edge)}this.setAttribute("position",new Ts(e,3)),this.setAttribute("normal",new Ts(n,3))}},i.BufferGeometryUtils=r.BufferGeometryUtils,i.GeometryUtils=s.GeometryUtils,i.UnrealBloomPass=rf,i.Reflector=Ix,i.RGBELoader=class extends Ex{constructor(t){console.warn("RGBELoader has been deprecated. Please use HDRLoader instead."),super(t)}},i.EXRLoader=class extends Rh{constructor(t){super(t),this.type=Ht,this.outputFormat=Kt}parse(t){const e=65536,n=14,i=65537,r=Math.pow(2.7182818,2.2),s={l:0,c:0,lc:0};function a(t,e,n,i,r){for(;n<t;)e=e<<8|O(i,r),n+=8;n-=t,s.l=e>>n&(1<<t)-1,s.c=e,s.lc=n}const o=new Array(59);function l(t){return 63&t}function c(t){return t>>6}const h={c:0,lc:0};function A(t,e,n,i){t=t<<8|O(n,i),e+=8,h.c=t,h.lc=e}const u={c:0,lc:0};function d(t,e,n,i,r,s,a,o,l){if(t==e){i<8&&(A(n,i,r,s),n=h.c,i=h.lc);let t=n>>(i-=8);if(t=new Uint8Array([t])[0],o.value+t>l)return!1;const e=a[o.value-1];for(;t-- >0;)a[o.value++]=e}else{if(!(o.value<l))return!1;a[o.value++]=t}u.c=n,u.lc=i}function p(t){return 65535&t}function g(t){const e=p(t);return e>32767?e-65536:e}const f={a:0,b:0};function m(t,e){const n=g(t),i=g(e),r=n+(1&i)+(i>>1),s=r,a=r-i;f.a=s,f.b=a}function y(t,e){const n=p(t),i=p(e),r=n-(i>>1)&65535,s=i+r-32768&65535;f.a=s,f.b=r}function v(t,e,n,i,r,s,a){const o=a<16384,l=n>r?r:n;let c,h,A=1;for(;A<=l;)A<<=1;for(A>>=1,c=A,A>>=1;A>=1;){h=0;const a=h+s*(r-c),l=s*A,u=s*c,d=i*A,p=i*c;let g,v,x,C;for(;h<=a;h+=u){let r=h;const s=h+i*(n-c);for(;r<=s;r+=p){const n=r+d,i=r+l,s=i+d;o?(m(t[r+e],t[i+e]),g=f.a,x=f.b,m(t[n+e],t[s+e]),v=f.a,C=f.b,m(g,v),t[r+e]=f.a,t[n+e]=f.b,m(x,C),t[i+e]=f.a,t[s+e]=f.b):(y(t[r+e],t[i+e]),g=f.a,x=f.b,y(t[n+e],t[s+e]),v=f.a,C=f.b,y(g,v),t[r+e]=f.a,t[n+e]=f.b,y(x,C),t[i+e]=f.a,t[s+e]=f.b)}if(n&A){const n=r+l;o?m(t[r+e],t[n+e]):y(t[r+e],t[n+e]),g=f.a,t[n+e]=f.b,t[r+e]=g}}if(r&A){let r=h;const s=h+i*(n-c);for(;r<=s;r+=p){const n=r+d;o?m(t[r+e],t[n+e]):y(t[r+e],t[n+e]),g=f.a,t[n+e]=f.b,t[r+e]=g}}c=A,A>>=1}return h}function x(t,e,r,p,g,f){const m=r.value,y=k(e,r),v=k(e,r);r.value+=4;const x=k(e,r);if(r.value+=4,y<0||y>=i||v<0||v>=i)throw new Error("Something wrong with HUF_ENCSIZE");const C=new Array(i),I=new Array(16384);if(function(t){for(let e=0;e<16384;e++)t[e]={},t[e].len=0,t[e].lit=0,t[e].p=null}(I),function(t,e,n,r,l,c){const h=e;let A=0,u=0;for(;r<=l;r++){if(h.value-e.value>n)return!1;a(6,A,u,t,h);const i=s.l;if(A=s.c,u=s.lc,c[r]=i,63==i){if(h.value-e.value>n)throw new Error("Something wrong with hufUnpackEncTable");a(8,A,u,t,h);let i=s.l+6;if(A=s.c,u=s.lc,r+i>l+1)throw new Error("Something wrong with hufUnpackEncTable");for(;i--;)c[r++]=0;r--}else if(i>=59){let t=i-59+2;if(r+t>l+1)throw new Error("Something wrong with hufUnpackEncTable");for(;t--;)c[r++]=0;r--}}!function(t){for(let t=0;t<=58;++t)o[t]=0;for(let e=0;e<i;++e)o[t[e]]+=1;let e=0;for(let t=58;t>0;--t){const n=e+o[t]>>1;o[t]=e,e=n}for(let e=0;e<i;++e){const n=t[e];n>0&&(t[e]=n|o[n]++<<6)}}(c)}(t,r,p-(r.value-m),y,v,C),x>8*(p-(r.value-m)))throw new Error("Something wrong with hufUncompress");!function(t,e,i,r){for(;e<=i;e++){const i=c(t[e]),s=l(t[e]);if(i>>s)throw new Error("Invalid table entry");if(s>n){const t=r[i>>s-n];if(t.len)throw new Error("Invalid table entry");if(t.lit++,t.p){const e=t.p;t.p=new Array(t.lit);for(let n=0;n<t.lit-1;++n)t.p[n]=e[n]}else t.p=new Array(1);t.p[t.lit-1]=e}else if(s){let t=0;for(let a=1<<n-s;a>0;a--){const a=r[(i<<n-s)+t];if(a.len||a.p)throw new Error("Invalid table entry");a.len=s,a.lit=e,t++}}}}(C,y,v,I),function(t,e,i,r,s,a,o,p,g){let f=0,m=0;const y=o,v=Math.trunc(r.value+(s+7)/8);for(;r.value<v;)for(A(f,m,i,r),f=h.c,m=h.lc;m>=n;){const s=e[f>>m-n&16383];if(s.len)m-=s.len,d(s.lit,a,f,m,i,r,p,g,y),f=u.c,m=u.lc;else{if(!s.p)throw new Error("hufDecode issues");let e;for(e=0;e<s.lit;e++){const n=l(t[s.p[e]]);for(;m<n&&r.value<v;)A(f,m,i,r),f=h.c,m=h.lc;if(m>=n&&c(t[s.p[e]])==(f>>m-n&(1<<n)-1)){m-=n,d(s.p[e],a,f,m,i,r,p,g,y),f=u.c,m=u.lc;break}}if(e==s.lit)throw new Error("hufDecode issues")}}const x=8-s&7;for(f>>=x,m-=x;m>0;){const t=e[f<<n-m&16383];if(!t.len)throw new Error("hufDecode issues");m-=t.len,d(t.lit,a,f,m,i,r,p,g,y),f=u.c,m=u.lc}}(C,I,t,r,x,v,f,g,{value:0})}function C(t){for(let e=1;e<t.length;e++){const n=t[e-1]+t[e]-128;t[e]=n}}function I(t,e){let n=0,i=Math.floor((t.length+1)/2),r=0;const s=t.length-1;for(;!(r>s||(e[r++]=t[n++],r>s));)e[r++]=t[i++]}function E(t){let e=t.byteLength;const n=new Array;let i=0;const r=new DataView(t);for(;e>0;){const t=r.getInt8(i++);if(t<0){const s=-t;e-=s+1;for(let t=0;t<s;t++)n.push(r.getUint8(i++))}else{const s=t;e-=2;const a=r.getUint8(i++);for(let t=0;t<s+1;t++)n.push(a)}}return n}function w(t,e,n,i,r,s){const a=new DataView(s.buffer),o=n[t],l=o.width,c=o.height,h=Math.ceil(l/8),A=Math.ceil(c/8),u=Math.floor(l/8),d=l-8*(h-1),p=c-8*(A-1),g={value:0};let f=0;const m=new Float32Array(64),y=new Uint16Array(64),v=new Uint16Array(64*h);for(let n=0;n<A;++n){let s=8;n==A-1&&(s=p);for(let t=0;t<h;++t)y.fill(0),y[0]=r[f++],_(g,i,y),b(y,m),B(m),M(m,v,64*t);for(let i=8*n;i<8*n+s;++i){let n=e[t][i];for(let t=0;t<u;++t){const e=64*t+8*(7&i);for(let t=0;t<8;++t)a.setUint16(n+2*t*o.type,v[e+t],!0);n+=16*o.type}if(h!=u){const t=64*u+8*(7&i);for(let e=0;e<d;++e)a.setUint16(n+2*e*o.type,v[t+e],!0)}}}o.decoded=!0}function _(t,e,n){let i,r=1;for(;r<64;)i=e[t.value],65280==i?r=64:i>>8==255?r+=255&i:(n[r]=i,r++),t.value++}function b(t,e){e[0]=q(t[0]),e[1]=q(t[1]),e[2]=q(t[5]),e[3]=q(t[6]),e[4]=q(t[14]),e[5]=q(t[15]),e[6]=q(t[27]),e[7]=q(t[28]),e[8]=q(t[2]),e[9]=q(t[4]),e[10]=q(t[7]),e[11]=q(t[13]),e[12]=q(t[16]),e[13]=q(t[26]),e[14]=q(t[29]),e[15]=q(t[42]),e[16]=q(t[3]),e[17]=q(t[8]),e[18]=q(t[12]),e[19]=q(t[17]),e[20]=q(t[25]),e[21]=q(t[30]),e[22]=q(t[41]),e[23]=q(t[43]),e[24]=q(t[9]),e[25]=q(t[11]),e[26]=q(t[18]),e[27]=q(t[24]),e[28]=q(t[31]),e[29]=q(t[40]),e[30]=q(t[44]),e[31]=q(t[53]),e[32]=q(t[10]),e[33]=q(t[19]),e[34]=q(t[23]),e[35]=q(t[32]),e[36]=q(t[39]),e[37]=q(t[45]),e[38]=q(t[52]),e[39]=q(t[54]),e[40]=q(t[20]),e[41]=q(t[22]),e[42]=q(t[33]),e[43]=q(t[38]),e[44]=q(t[46]),e[45]=q(t[51]),e[46]=q(t[55]),e[47]=q(t[60]),e[48]=q(t[21]),e[49]=q(t[34]),e[50]=q(t[37]),e[51]=q(t[47]),e[52]=q(t[50]),e[53]=q(t[56]),e[54]=q(t[59]),e[55]=q(t[61]),e[56]=q(t[35]),e[57]=q(t[36]),e[58]=q(t[48]),e[59]=q(t[49]),e[60]=q(t[57]),e[61]=q(t[58]),e[62]=q(t[62]),e[63]=q(t[63])}function B(t){const e=.5*Math.cos(.7853975),n=.5*Math.cos(3.14159/16),i=.5*Math.cos(3.14159/8),r=.5*Math.cos(3*3.14159/16),s=.5*Math.cos(.981746875),a=.5*Math.cos(3*3.14159/8),o=.5*Math.cos(1.374445625),l=new Array(4),c=new Array(4),h=new Array(4),A=new Array(4);for(let u=0;u<8;++u){const d=8*u;l[0]=i*t[d+2],l[1]=a*t[d+2],l[2]=i*t[d+6],l[3]=a*t[d+6],c[0]=n*t[d+1]+r*t[d+3]+s*t[d+5]+o*t[d+7],c[1]=r*t[d+1]-o*t[d+3]-n*t[d+5]-s*t[d+7],c[2]=s*t[d+1]-n*t[d+3]+o*t[d+5]+r*t[d+7],c[3]=o*t[d+1]-s*t[d+3]+r*t[d+5]-n*t[d+7],h[0]=e*(t[d+0]+t[d+4]),h[3]=e*(t[d+0]-t[d+4]),h[1]=l[0]+l[3],h[2]=l[1]-l[2],A[0]=h[0]+h[1],A[1]=h[3]+h[2],A[2]=h[3]-h[2],A[3]=h[0]-h[1],t[d+0]=A[0]+c[0],t[d+1]=A[1]+c[1],t[d+2]=A[2]+c[2],t[d+3]=A[3]+c[3],t[d+4]=A[3]-c[3],t[d+5]=A[2]-c[2],t[d+6]=A[1]-c[1],t[d+7]=A[0]-c[0]}for(let u=0;u<8;++u)l[0]=i*t[16+u],l[1]=a*t[16+u],l[2]=i*t[48+u],l[3]=a*t[48+u],c[0]=n*t[8+u]+r*t[24+u]+s*t[40+u]+o*t[56+u],c[1]=r*t[8+u]-o*t[24+u]-n*t[40+u]-s*t[56+u],c[2]=s*t[8+u]-n*t[24+u]+o*t[40+u]+r*t[56+u],c[3]=o*t[8+u]-s*t[24+u]+r*t[40+u]-n*t[56+u],h[0]=e*(t[u]+t[32+u]),h[3]=e*(t[u]-t[32+u]),h[1]=l[0]+l[3],h[2]=l[1]-l[2],A[0]=h[0]+h[1],A[1]=h[3]+h[2],A[2]=h[3]-h[2],A[3]=h[0]-h[1],t[0+u]=A[0]+c[0],t[8+u]=A[1]+c[1],t[16+u]=A[2]+c[2],t[24+u]=A[3]+c[3],t[32+u]=A[3]-c[3],t[40+u]=A[2]-c[2],t[48+u]=A[1]-c[1],t[56+u]=A[0]-c[0]}function S(t){for(let e=0;e<64;++e){const n=t[0][e],i=t[1][e],r=t[2][e];t[0][e]=n+1.5747*r,t[1][e]=n-.1873*i-.4682*r,t[2][e]=n+1.8556*i}}function M(t,e,n){for(let i=0;i<64;++i)e[n+i]=ms.toHalfFloat(T(t[i]))}function T(t){return t<=1?Math.sign(t)*Math.pow(Math.abs(t),2.2):Math.sign(t)*Math.pow(r,Math.abs(t)-1)}function Q(t){return new DataView(t.array.buffer,t.offset.value,t.size)}function D(t){const e=t.viewer.buffer.slice(t.offset.value,t.offset.value+t.size),n=new Uint8Array(E(e)),i=new Uint8Array(n.length);return C(n),I(n,i),new DataView(i.buffer)}function R(t){const e=fv(t.array.slice(t.offset.value,t.offset.value+t.size)),n=new Uint8Array(e.length);return C(e),I(e,n),new DataView(n.buffer)}function U(t){const n=t.viewer,i={value:t.offset.value},r=new Uint16Array(t.columns*t.lines*(t.inputChannels.length*t.type)),s=new Uint8Array(8192);let a=0;const o=new Array(t.inputChannels.length);for(let e=0,n=t.inputChannels.length;e<n;e++)o[e]={},o[e].start=a,o[e].end=o[e].start,o[e].nx=t.columns,o[e].ny=t.lines,o[e].size=t.type,a+=o[e].nx*o[e].ny*o[e].size;const l=Y(n,i),c=Y(n,i);if(c>=8192)throw new Error("Something is wrong with PIZ_COMPRESSION BITMAP_SIZE");if(l<=c)for(let t=0;t<c-l+1;t++)s[t+l]=z(n,i);const h=new Uint16Array(e),A=function(t,n){let i=0;for(let r=0;r<e;++r)(0==r||t[r>>3]&1<<(7&r))&&(n[i++]=r);const r=i-1;for(;i<e;)n[i++]=0;return r}(s,h),u=k(n,i);x(t.array,n,i,u,r,a);for(let e=0;e<t.inputChannels.length;++e){const t=o[e];for(let n=0;n<o[e].size;++n)v(r,t.start+n,t.nx,t.size,t.ny,t.nx*t.size,A)}!function(t,e,n){for(let i=0;i<n;++i)e[i]=t[e[i]]}(h,r,a);let d=0;const p=new Uint8Array(r.buffer.byteLength);for(let e=0;e<t.lines;e++)for(let e=0;e<t.inputChannels.length;e++){const t=o[e],n=t.nx*t.size,i=new Uint8Array(r.buffer,2*t.end,2*n);p.set(i,d),d+=2*n,t.end+=n}return new DataView(p.buffer)}function P(t){const e=fv(t.array.slice(t.offset.value,t.offset.value+t.size)),n=t.inputChannels.length*t.lines*t.columns*t.totalBytes,i=new ArrayBuffer(n),r=new DataView(i);let s=0,a=0;const o=new Array(4);for(let n=0;n<t.lines;n++)for(let n=0;n<t.inputChannels.length;n++){let i=0;switch(t.inputChannels[n].pixelType){case 1:o[0]=s,o[1]=o[0]+t.columns,s=o[1]+t.columns;for(let n=0;n<t.columns;++n)i+=e[o[0]++]<<8|e[o[1]++],r.setUint16(a,i,!0),a+=2;break;case 2:o[0]=s,o[1]=o[0]+t.columns,o[2]=o[1]+t.columns,s=o[2]+t.columns;for(let n=0;n<t.columns;++n)i+=e[o[0]++]<<24|e[o[1]++]<<16|e[o[2]++]<<8,r.setUint32(a,i,!0),a+=4}}return r}function L(t){const e=t.viewer,n={value:t.offset.value},i=new Uint8Array(t.columns*t.lines*(t.inputChannels.length*t.type*2)),r={version:G(e,n),unknownUncompressedSize:G(e,n),unknownCompressedSize:G(e,n),acCompressedSize:G(e,n),dcCompressedSize:G(e,n),rleCompressedSize:G(e,n),rleUncompressedSize:G(e,n),rleRawSize:G(e,n),totalAcUncompressedCount:G(e,n),totalDcUncompressedCount:G(e,n),acCompression:G(e,n)};if(r.version<2)throw new Error("EXRLoader.parse: "+et.compression+" version "+r.version+" is unsupported");const s=new Array;let a=Y(e,n)-2;for(;a>0;){const t=F(e.buffer,n),i=z(e,n),r=i>>2&3,o=new Int8Array([(i>>4)-1])[0],l=z(e,n);s.push({name:t,index:o,type:l,compression:r}),a-=t.length+3}const o=et.channels,l=new Array(t.inputChannels.length);for(let e=0;e<t.inputChannels.length;++e){const n=l[e]={},i=o[e];n.name=i.name,n.compression=0,n.decoded=!1,n.type=i.pixelType,n.pLinear=i.pLinear,n.width=t.columns,n.height=t.lines}const c={idx:new Array(3)};for(let e=0;e<t.inputChannels.length;++e){const t=l[e];for(let n=0;n<s.length;++n){const i=s[n];t.name==i.name&&(t.compression=i.compression,i.index>=0&&(c.idx[i.index]=e),t.offset=e)}}let h,A,u;if(r.acCompressedSize>0)switch(r.acCompression){case 0:h=new Uint16Array(r.totalAcUncompressedCount),x(t.array,e,n,r.acCompressedSize,h,r.totalAcUncompressedCount);break;case 1:const i=fv(t.array.slice(n.value,n.value+r.totalAcUncompressedCount));h=new Uint16Array(i.buffer),n.value+=r.totalAcUncompressedCount}if(r.dcCompressedSize>0){const e={array:t.array,offset:n,size:r.dcCompressedSize};A=new Uint16Array(R(e).buffer),n.value+=r.dcCompressedSize}r.rleRawSize>0&&(u=E(fv(t.array.slice(n.value,n.value+r.rleCompressedSize)).buffer),n.value+=r.rleCompressedSize);let d=0;const p=new Array(l.length);for(let t=0;t<p.length;++t)p[t]=new Array;for(let e=0;e<t.lines;++e)for(let e=0;e<l.length;++e)p[e].push(d),d+=l[e].width*t.type*2;void 0!==c.idx[0]&&l[c.idx[0]]&&function(t,e,n,i,r,s){let a=new DataView(s.buffer);const o=n[t.idx[0]].width,l=n[t.idx[0]].height,c=Math.floor(o/8),h=Math.ceil(o/8),A=Math.ceil(l/8),u=o-8*(h-1),d=l-8*(A-1),p={value:0},g=new Array(3),f=new Array(3),m=new Array(3),y=new Array(3),v=new Array(3);for(let n=0;n<3;++n)v[n]=e[t.idx[n]],g[n]=n<1?0:g[n-1]+h*A,f[n]=new Float32Array(64),m[n]=new Uint16Array(64),y[n]=new Uint16Array(64*h);for(let e=0;e<A;++e){let s=8;e==A-1&&(s=d);let o=8;for(let t=0;t<h;++t){t==h-1&&(o=u);for(let t=0;t<3;++t)m[t].fill(0),m[t][0]=r[g[t]++],_(p,i,m[t]),b(m[t],f[t]),B(f[t]);S(f);for(let e=0;e<3;++e)M(f[e],y[e],64*t)}let l=0;for(let i=0;i<3;++i){const r=n[t.idx[i]].type;for(let t=8*e;t<8*e+s;++t){l=v[i][t];for(let e=0;e<c;++e){const n=64*e+8*(7&t);a.setUint16(l+0*r,y[i][n+0],!0),a.setUint16(l+2*r,y[i][n+1],!0),a.setUint16(l+4*r,y[i][n+2],!0),a.setUint16(l+6*r,y[i][n+3],!0),a.setUint16(l+8*r,y[i][n+4],!0),a.setUint16(l+10*r,y[i][n+5],!0),a.setUint16(l+12*r,y[i][n+6],!0),a.setUint16(l+14*r,y[i][n+7],!0),l+=16*r}}if(c!=h)for(let t=8*e;t<8*e+s;++t){const e=v[i][t]+8*c*2*r,n=64*c+8*(7&t);for(let t=0;t<o;++t)a.setUint16(e+2*t*r,y[i][n+t],!0)}}}const x=new Uint16Array(o);a=new DataView(s.buffer);for(let e=0;e<3;++e){n[t.idx[e]].decoded=!0;const i=n[t.idx[e]].type;if(2==n[e].type)for(let t=0;t<l;++t){const n=v[e][t];for(let t=0;t<o;++t)x[t]=a.getUint16(n+2*t*i,!0);for(let t=0;t<o;++t)a.setFloat32(n+2*t*i,q(x[t]),!0)}}}(c,p,l,h,A,i);for(let e=0;e<l.length;++e){const n=l[e];if(!n.decoded)switch(n.compression){case 2:let r=0,s=0;for(let a=0;a<t.lines;++a){let t=p[e][r];for(let e=0;e<n.width;++e){for(let e=0;e<2*n.type;++e)i[t++]=u[s+e*n.width*n.height];s++}r++}break;case 1:w(e,p,l,h,A,i);break;default:throw new Error("EXRLoader.parse: unsupported channel compression")}}return new DataView(i.buffer)}function F(t,e){const n=new Uint8Array(t);let i=0;for(;0!=n[e.value+i];)i+=1;const r=(new TextDecoder).decode(n.slice(e.value,e.value+i));return e.value=e.value+i+1,r}function N(t,e){const n=t.getInt32(e.value,!0);return e.value=e.value+4,n}function k(t,e){const n=t.getUint32(e.value,!0);return e.value=e.value+4,n}function O(t,e){const n=t[e.value];return e.value=e.value+1,n}function z(t,e){const n=t.getUint8(e.value);return e.value=e.value+1,n}const G=function(t,e){let n;return n="getBigInt64"in DataView.prototype?Number(t.getBigInt64(e.value,!0)):t.getUint32(e.value+4,!0)+Number(t.getUint32(e.value,!0)<<32),e.value+=8,n};function H(t,e){const n=t.getFloat32(e.value,!0);return e.value+=4,n}function V(t,e){return ms.toHalfFloat(H(t,e))}function q(t){const e=(31744&t)>>10,n=1023&t;return(t>>15?-1:1)*(e?31===e?n?NaN:1/0:Math.pow(2,e-15)*(1+n/1024):n/1024*6103515625e-14)}function Y(t,e){const n=t.getUint16(e.value,!0);return e.value+=2,n}function W(t,e){return q(Y(t,e))}function J(t,e,n,i,r){return"string"===i||"stringvector"===i||"iccProfile"===i?function(t,e,n){const i=(new TextDecoder).decode(new Uint8Array(t).slice(e.value,e.value+n));return e.value=e.value+n,i}(e,n,r):"chlist"===i?function(t,e,n,i){const r=n.value,s=[];for(;n.value<r+i-1;){const i=F(e,n),r=N(t,n),a=z(t,n);n.value+=3;const o=N(t,n),l=N(t,n);s.push({name:i,pixelType:r,pLinear:a,xSampling:o,ySampling:l})}return n.value+=1,s}(t,e,n,r):"chromaticities"===i?function(t,e){return{redX:H(t,e),redY:H(t,e),greenX:H(t,e),greenY:H(t,e),blueX:H(t,e),blueY:H(t,e),whiteX:H(t,e),whiteY:H(t,e)}}(t,n):"compression"===i?function(t,e){return["NO_COMPRESSION","RLE_COMPRESSION","ZIPS_COMPRESSION","ZIP_COMPRESSION","PIZ_COMPRESSION","PXR24_COMPRESSION","B44_COMPRESSION","B44A_COMPRESSION","DWAA_COMPRESSION","DWAB_COMPRESSION"][z(t,e)]}(t,n):"box2i"===i?function(t,e){return{xMin:N(t,e),yMin:N(t,e),xMax:N(t,e),yMax:N(t,e)}}(t,n):"envmap"===i?function(t,e){return["ENVMAP_LATLONG","ENVMAP_CUBE"][z(t,e)]}(t,n):"tiledesc"===i?function(t,e){const n=k(t,e),i=k(t,e),r=z(t,e);return{xSize:n,ySize:i,levelMode:["ONE_LEVEL","MIPMAP_LEVELS","RIPMAP_LEVELS"][15&r],roundingMode:["ROUND_DOWN","ROUND_UP"][r>>4]}}(t,n):"lineOrder"===i?function(t,e){return["INCREASING_Y","DECREASING_Y","RANDOM_Y"][z(t,e)]}(t,n):"float"===i?H(t,n):"v2f"===i?function(t,e){return[H(t,e),H(t,e)]}(t,n):"v3f"===i?function(t,e){return[H(t,e),H(t,e),H(t,e)]}(t,n):"int"===i?N(t,n):"rational"===i?function(t,e){return[N(t,e),k(t,e)]}(t,n):"timecode"===i?function(t,e){return[k(t,e),k(t,e)]}(t,n):"preview"===i?(n.value+=r,"skipped"):void(n.value+=r)}function j(t,e,n,i){const r=new Array(t);for(let s=0;s<t;s++){const t=1<<s;let a=e/t|0;"ROUND_UP"==i&&a*t<e&&(a+=1);const o=Math.max(a,1);r[s]=(o+n-1)/n|0}return r}function X(){const t=this,e=t.offset,n={value:0};for(let i=0;i<t.tileCount;i++){const i=N(t.viewer,e),r=N(t.viewer,e);e.value+=8,t.size=k(t.viewer,e);const s=i*t.blockWidth,a=r*t.blockHeight;t.columns=s+t.blockWidth>t.width?t.width-s:t.blockWidth,t.lines=a+t.blockHeight>t.height?t.height-a:t.blockHeight;const o=t.columns*t.totalBytes,l=t.size<t.lines*o?t.uncompress(t):Q(t);e.value+=t.size;for(let e=0;e<t.lines;e++){const i=e*t.columns*t.totalBytes;for(let r=0;r<t.inputChannels.length;r++){const o=et.channels[r].name,c=t.channelByteOffsets[o]*t.columns,h=t.decodeChannels[o];if(void 0===h)continue;n.value=i+c;const A=(t.height-(1+a+e))*t.outLineWidth;for(let e=0;e<t.columns;e++){const i=A+(e+s)*t.outputChannels+h;t.byteArray[i]=t.getter(l,n)}}}}}function K(){const t=this,e=t.offset,n={value:0};for(let i=0;i<t.height/t.blockHeight;i++){const r=N(t.viewer,e)-et.dataWindow.yMin;t.size=k(t.viewer,e),t.lines=r+t.blockHeight>t.height?t.height-r:t.blockHeight;const s=t.columns*t.totalBytes,a=t.size<t.lines*s?t.uncompress(t):Q(t);e.value+=t.size;for(let e=0;e<t.blockHeight;e++){const r=i*t.blockHeight,o=e+t.scanOrder(r);if(o>=t.height)continue;const l=e*s,c=(t.height-1-o)*t.outLineWidth;for(let e=0;e<t.inputChannels.length;e++){const i=et.channels[e].name,r=t.channelByteOffsets[i]*t.columns,s=t.decodeChannels[i];if(void 0!==s){n.value=l+r;for(let e=0;e<t.columns;e++){const i=c+e*t.outputChannels+s;t.byteArray[i]=t.getter(a,n)}}}}}}const Z={value:0},$=new DataView(t),tt=new Uint8Array(t),et=function(t,e,n){const i={};if(20000630!=t.getUint32(0,!0))throw new Error("THREE.EXRLoader: Provided file doesn't appear to be in OpenEXR format.");i.version=t.getUint8(4);const r=t.getUint8(5);i.spec={singleTile:!!(2&r),longName:!!(4&r),deepFormat:!!(8&r),multiPart:!!(16&r)},n.value=8;let s=!0;for(;s;){const r=F(e,n);if(""===r)s=!1;else{const s=F(e,n),a=J(t,e,n,s,k(t,n));void 0===a?console.warn(`THREE.EXRLoader: Skipped unknown header attribute type '${s}'.`):i[r]=a}}if(-7&r)throw console.error("THREE.EXRHeader:",i),new Error("THREE.EXRLoader: Provided file is currently unsupported.");return i}($,t,Z),nt=function(t,e,n,i,r,s){const a={size:0,viewer:e,array:n,offset:i,width:t.dataWindow.xMax-t.dataWindow.xMin+1,height:t.dataWindow.yMax-t.dataWindow.yMin+1,inputChannels:t.channels,channelByteOffsets:{},shouldExpand:!1,scanOrder:null,totalBytes:null,columns:null,lines:null,type:null,uncompress:null,getter:null,format:null,colorSpace:on};switch(t.compression){case"NO_COMPRESSION":a.blockHeight=1,a.uncompress=Q;break;case"RLE_COMPRESSION":a.blockHeight=1,a.uncompress=D;break;case"ZIPS_COMPRESSION":a.blockHeight=1,a.uncompress=R;break;case"ZIP_COMPRESSION":a.blockHeight=16,a.uncompress=R;break;case"PIZ_COMPRESSION":a.blockHeight=32,a.uncompress=U;break;case"PXR24_COMPRESSION":a.blockHeight=16,a.uncompress=P;break;case"DWAA_COMPRESSION":a.blockHeight=32,a.uncompress=L;break;case"DWAB_COMPRESSION":a.blockHeight=256,a.uncompress=L;break;default:throw new Error("EXRLoader.parse: "+t.compression+" is unsupported")}const o={};for(const e of t.channels)switch(e.name){case"Y":case"R":case"G":case"B":case"A":o[e.name]=!0,a.type=e.pixelType}let l=!1,c=!1;if(o.R&&o.G&&o.B)a.outputChannels=4;else{if(!o.Y)throw new Error("EXRLoader.parse: file contains unsupported data channels.");a.outputChannels=1}switch(a.outputChannels){case 4:s==Kt?(l=!o.A,a.format=Kt,a.colorSpace=on,a.outputChannels=4,a.decodeChannels={R:0,G:1,B:2,A:3}):s==ne?(a.format=ne,a.colorSpace=on,a.outputChannels=2,a.decodeChannels={R:0,G:1}):s==te?(a.format=te,a.colorSpace=on,a.outputChannels=1,a.decodeChannels={R:0}):c=!0;break;case 1:s==Kt?(l=!0,a.format=Kt,a.colorSpace=on,a.outputChannels=4,a.shouldExpand=!0,a.decodeChannels={Y:0}):s==ne?(a.format=ne,a.colorSpace=on,a.outputChannels=2,a.shouldExpand=!0,a.decodeChannels={Y:0}):s==te?(a.format=te,a.colorSpace=on,a.outputChannels=1,a.decodeChannels={Y:0}):c=!0;break;default:c=!0}if(c)throw new Error("EXRLoader.parse: invalid output format for specified file.");if(1==a.type)switch(r){case Gt:a.getter=W;break;case Ht:a.getter=Y}else{if(2!=a.type)throw new Error("EXRLoader.parse: unsupported pixelType "+a.type+" for "+t.compression+".");switch(r){case Gt:a.getter=H;break;case Ht:a.getter=V}}a.columns=a.width;const h=a.width*a.height*a.outputChannels;switch(r){case Gt:a.byteArray=new Float32Array(h),l&&a.byteArray.fill(1,0,h);break;case Ht:a.byteArray=new Uint16Array(h),l&&a.byteArray.fill(15360,0,h);break;default:console.error("THREE.EXRLoader: unsupported type: ",r)}let A=0;for(const e of t.channels)void 0!==a.decodeChannels[e.name]&&(a.channelByteOffsets[e.name]=A),A+=2*e.pixelType;if(a.totalBytes=A,a.outLineWidth=a.width*a.outputChannels,"INCREASING_Y"===t.lineOrder?a.scanOrder=t=>t:a.scanOrder=t=>a.height-1-t,t.spec.singleTile){a.blockHeight=t.tiles.ySize,a.blockWidth=t.tiles.xSize;const n=function(t,e,n){let i=0;switch(t.levelMode){case"ONE_LEVEL":i=1;break;case"MIPMAP_LEVELS":i=function(t,e){const n=Math.log2(t);return"ROUND_DOWN"==e?Math.floor(n):Math.ceil(n)}(Math.max(e,n),t.roundingMode)+1;break;case"RIPMAP_LEVELS":throw new Error("THREE.EXRLoader: RIPMAP_LEVELS tiles currently unsupported.")}return i}(t.tiles,a.width,a.height),r=j(n,a.width,t.tiles.xSize,t.tiles.roundingMode),s=j(n,a.height,t.tiles.ySize,t.tiles.roundingMode);a.tileCount=r[0]*s[0];for(let t=0;t<n;t++)for(let n=0;n<s[t];n++)for(let n=0;n<r[t];n++)G(e,i);a.decode=X.bind(a)}else{a.blockWidth=a.width;const t=Math.ceil(a.height/a.blockHeight);for(let n=0;n<t;n++)G(e,i);a.decode=K.bind(a)}return a}(et,$,tt,Z,this.type,this.outputFormat);if(nt.decode(),nt.shouldExpand){const t=nt.byteArray;if(this.outputFormat==Kt)for(let e=0;e<t.length;e+=4)t[e+2]=t[e+1]=t[e];else if(this.outputFormat==ne)for(let e=0;e<t.length;e+=2)t[e+1]=t[e]}return{header:et,width:nt.width,height:nt.height,data:nt.byteArray,format:nt.format,colorSpace:nt.colorSpace,type:this.type}}setDataType(t){return this.type=t,this}setOutputFormat(t){return this.outputFormat=t,this}load(t,e,n,i){return super.load(t,function(t,n){t.colorSpace=n.colorSpace,t.minFilter=Qt,t.magFilter=Qt,t.generateMipmaps=!1,t.flipY=!1,e&&e(t,n)},n,i)}},i.LightProbeHelper=class extends Xs{constructor(t,e=1){const n=new ia({type:"LightProbeHelperMaterial",uniforms:{sh:{value:t.sh.coefficients},intensity:{value:t.intensity}},vertexShader:"\n\n\t\t\t\tvarying vec3 vNormal;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvNormal = normalize( normalMatrix * normal );\n\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t\t}\n\n\t\t\t",fragmentShader:"\n\n\t\t\t\t#define RECIPROCAL_PI 0.318309886\n\n\t\t\t\tvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n\n\t\t\t\t\t// matrix is assumed to be orthogonal\n\n\t\t\t\t\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\t// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf,\n\t\t\t\tvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\n\t\t\t\t\t// normal is assumed to have unit length,\n\n\t\t\t\t\tfloat x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\t\t\t// band 0,\n\t\t\t\t\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\n\t\t\t\t\t// band 1,\n\t\t\t\t\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\t\t\t\t\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\t\t\t\t\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\n\t\t\t\t\t// band 2,\n\t\t\t\t\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\t\t\t\t\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\t\t\t\t\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\t\t\t\t\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\t\t\t\t\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\t\t\t\t\treturn result;\n\n\t\t\t\t}\n\n\t\t\t\tuniform vec3 sh[ 9 ]; // sh coefficients\n\n\t\t\t\tuniform float intensity; // light probe intensity\n\n\t\t\t\tvarying vec3 vNormal;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 normal = normalize( vNormal );\n\n\t\t\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t\t\t\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );\n\n\t\t\t\t\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;\n\n\t\t\t\t\tgl_FragColor = linearToOutputTexel( vec4( outgoingLight, 1.0 ) );\n\n\t\t\t\t}\n\n\t\t\t"});super(new Pc(1,32,16),n),this.lightProbe=t,this.size=e,this.type="LightProbeHelper",this.onBeforeRender()}dispose(){this.geometry.dispose(),this.material.dispose()}onBeforeRender(){this.position.copy(this.lightProbe.position),this.scale.set(1,1,1).multiplyScalar(this.size),this.material.uniforms.intensity.value=this.lightProbe.intensity}},i.LightProbeGenerator=class{static fromCubeTexture(t){let e=0;const n=new hi,i=new hi,r=new ls,s=[0,0,0,0,0,0,0,0,0],a=new $h,o=a.coefficients;for(let a=0;a<6;a++){const l=t.image[a],c=l.width,h=l.height,A=document.createElement("canvas");A.width=c,A.height=h;const u=A.getContext("2d");u.drawImage(l,0,0,c,h);const d=u.getImageData(0,0,c,h),p=d.data,g=d.width,f=2/g;for(let l=0,c=p.length;l<c;l+=4){r.setRGB(p[l]/255,p[l+1]/255,p[l+2]/255),wx(r,t.colorSpace);const c=l/4,h=(c%g+.5)*f-1,A=1-(Math.floor(c/g)+.5)*f;switch(a){case 0:n.set(-1,A,-h);break;case 1:n.set(1,A,h);break;case 2:n.set(-h,1,-A);break;case 3:n.set(-h,-1,A);break;case 4:n.set(-h,A,1);break;case 5:n.set(h,A,-1)}const u=n.lengthSq(),d=4/(Math.sqrt(u)*u);e+=d,i.copy(n).normalize(),$h.getBasisAt(i,s);for(let t=0;t<9;t++)o[t].x+=s[t]*r.r*d,o[t].y+=s[t]*r.g*d,o[t].z+=s[t]*r.b*d}}const l=4*Math.PI/e;for(let t=0;t<9;t++)o[t].x*=l,o[t].y*=l,o[t].z*=l;return new tA(a)}static async fromCubeRenderTarget(t,e){const n=t.coordinateSystem===qn?-1:1;let i=0;const r=new hi,s=new hi,a=new ls,o=[0,0,0,0,0,0,0,0,0],l=new $h,c=l.coefficients,h=e.texture.type,A=e.width;let u;t.isWebGLRenderer&&(u=h===Gt?new Float32Array(A*A*4):h===Ht?new Uint16Array(A*A*4):new Uint8Array(A*A*4));for(let l=0;l<6;l++){t.isWebGLRenderer?await t.readRenderTargetPixelsAsync(e,0,0,A,A,u,l):u=await t.readRenderTargetPixelsAsync(e,0,0,A,A,0,l);const d=2/A;for(let t=0,p=u.length;t<p;t+=4){let p,g,f;h===Gt?(p=u[t],g=u[t+1],f=u[t+2]):h===Ht?(p=ms.fromHalfFloat(u[t]),g=ms.fromHalfFloat(u[t+1]),f=ms.fromHalfFloat(u[t+2])):(p=u[t]/255,g=u[t+1]/255,f=u[t+2]/255),a.setRGB(p,g,f),wx(a,e.texture.colorSpace);const m=t/4,y=(1-(m%A+.5)*d)*n,v=1-(Math.floor(m/A)+.5)*d;switch(l){case 0:r.set(-1*n,v,y*n);break;case 1:r.set(1*n,v,-y*n);break;case 2:r.set(y,1,-v);break;case 3:r.set(y,-1,v);break;case 4:r.set(y,v,1);break;case 5:r.set(-y,v,-1)}const x=r.lengthSq(),C=4/(Math.sqrt(x)*x);i+=C,s.copy(r).normalize(),$h.getBasisAt(s,o);for(let t=0;t<9;t++)c[t].x+=o[t]*a.r*C,c[t].y+=o[t]*a.g*C,c[t].z+=o[t]*a.b*C}}const d=4*Math.PI/i;for(let t=0;t<9;t++)c[t].x*=d,c[t].y*=d,c[t].z*=d;return new tA(l)}},i.XREstimatedLight=class extends da{constructor(t,e=!0){super(),this.lightProbe=new tA,this.lightProbe.intensity=0,this.add(this.lightProbe),this.directionalLight=new Xh,this.directionalLight.intensity=0,this.add(this.directionalLight),this.environment=null;let n=null,i=!1;t.xr.addEventListener("sessionstart",()=>{const r=t.xr.getSession();"requestLightProbe"in r&&r.requestLightProbe({reflectionFormat:r.preferredReflectionFormat}).then(r=>{n=new _x(this,t,r,e,()=>{i=!0,this.dispatchEvent({type:"estimationstart"})})})}),t.xr.addEventListener("sessionend",()=>{n&&(n.dispose(),n=null),i&&this.dispatchEvent({type:"estimationend"})}),this.dispose=()=>{n&&(n.dispose(),n=null),this.remove(this.lightProbe),this.lightProbe=null,this.remove(this.directionalLight),this.directionalLight=null,this.environment=null}}},i.XRControllerModelFactory=class{constructor(t=null,e=null){this.gltfLoader=t,this.path="https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles",this._assetCache={},this.onLoad=e,this.gltfLoader||(this.gltfLoader=new $f)}setPath(t){return this.path=t,this}createControllerModel(t){const e=new Dx;let n=null;return t.addEventListener("connected",t=>{const i=t.data;"tracked-pointer"===i.targetRayMode&&i.gamepad&&!i.hand&&async function(t,e,n=null,i=!0){if(!t)throw new Error("No xrInputSource supplied");if(!e)throw new Error("No basePath supplied");const r=await async function(t){if(!t)throw new Error("No basePath supplied");return await Bx(`${t}/profilesList.json`)}(e);let s;if(t.profiles.some(t=>{const n=r[t];return n&&(s={profileId:t,profilePath:`${e}/${n.path}`,deprecated:!!n.deprecated}),!!s}),!s){if(!n)throw new Error("No matching profile name found");const t=r[n];if(!t)throw new Error(`No matching profile name found and default profile "${n}" missing.`);s={profileId:n,profilePath:`${e}/${t.path}`,deprecated:!!t.deprecated}}const a=await Bx(s.profilePath);let o;if(i){let e;if(e="any"===t.handedness?a.layouts[Object.keys(a.layouts)[0]]:a.layouts[t.handedness],!e)throw new Error(`No matching handedness, ${t.handedness}, in profile ${s.profileId}`);e.assetPath&&(o=s.profilePath.replace("profile.json",e.assetPath))}return{profile:a,assetPath:o}}(i,this.path,"generic-trigger").then(({profile:t,assetPath:r})=>{e.motionController=new Qx(i,t,r);const s=this._assetCache[e.motionController.assetUrl];if(s)n=s.scene.clone(),Rx(e,n),this.onLoad&&this.onLoad(n);else{if(!this.gltfLoader)throw new Error("GLTFLoader not set.");this.gltfLoader.setPath(""),this.gltfLoader.load(e.motionController.assetUrl,t=>{this._assetCache[e.motionController.assetUrl]=t,n=t.scene.clone(),Rx(e,n),this.onLoad&&this.onLoad(n)},null,()=>{throw new Error(`Asset ${e.motionController.assetUrl} missing or malformed.`)})}}).catch(t=>{console.warn(t)})}),t.addEventListener("disconnected",()=>{e.motionController=null,e.remove(n),n=null}),e}},i.XRHandModelFactory=class{constructor(t=null,e=null){this.gltfLoader=t,this.path=null,this.onLoad=e}setPath(t){return this.path=t,this}createHandModel(t,e){const n=new Nx(t);return t.addEventListener("connected",i=>{const r=i.data;r.hand&&!n.motionController&&(n.xrInputSource=r,void 0===e||"spheres"===e?n.motionController=new Lx(n,t,this.path,r.handedness,{primitive:"sphere"}):"boxes"===e?n.motionController=new Lx(n,t,this.path,r.handedness,{primitive:"box"}):"mesh"===e&&(n.motionController=new Fx(n,t,this.path,r.handedness,this.gltfLoader,this.onLoad))),t.visible=!0}),t.addEventListener("disconnected",()=>{t.visible=!1}),n}},i.TransformControls=class extends Ju{constructor(t,e=null){super(void 0,e);const n=new fI(this);this._root=n;const i=new mI;this._gizmo=i,n.add(i);const r=new yI;this._plane=r,n.add(r);const s=this;function a(t,e){let n=e;Object.defineProperty(s,t,{get:function(){return void 0!==n?n:e},set:function(e){n!==e&&(n=e,r[t]=e,i[t]=e,s.dispatchEvent({type:t+"-changed",value:e}),s.dispatchEvent(YC))}}),s[t]=e,r[t]=e,i[t]=e}a("camera",t),a("object",void 0),a("enabled",!0),a("axis",null),a("mode","translate"),a("translationSnap",null),a("rotationSnap",null),a("scaleSnap",null),a("space","world"),a("size",1),a("dragging",!1),a("showX",!0),a("showY",!0),a("showZ",!0),a("minX",-1/0),a("maxX",1/0),a("minY",-1/0),a("maxY",1/0),a("minZ",-1/0),a("maxZ",1/0);const o=new hi,l=new hi,c=new ci,h=new ci,A=new hi,u=new ci,d=new hi,p=new hi,g=new hi,f=new hi;a("worldPosition",o),a("worldPositionStart",l),a("worldQuaternion",c),a("worldQuaternionStart",h),a("cameraPosition",A),a("cameraQuaternion",u),a("pointStart",d),a("pointEnd",p),a("rotationAxis",g),a("rotationAngle",0),a("eye",f),this._offset=new hi,this._startNorm=new hi,this._endNorm=new hi,this._cameraScale=new hi,this._parentPosition=new hi,this._parentQuaternion=new ci,this._parentQuaternionInv=new ci,this._parentScale=new hi,this._worldScaleStart=new hi,this._worldQuaternionInv=new ci,this._worldScale=new hi,this._positionStart=new hi,this._quaternionStart=new ci,this._scaleStart=new hi,this._getPointer=XC.bind(this),this._onPointerDown=ZC.bind(this),this._onPointerHover=KC.bind(this),this._onPointerMove=$C.bind(this),this._onPointerUp=tI.bind(this),null!==e&&this.connect(e)}connect(t){super.connect(t),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="auto"}getHelper(){return this._root}pointerHover(t){if(void 0===this.object||!0===this.dragging)return;null!==t&&zC.setFromCamera(t,this.camera);const e=eI(this._gizmo.picker[this.mode],zC);this.axis=e?e.object.name:null}pointerDown(t){if(void 0!==this.object&&!0!==this.dragging&&(null==t||0===t.button)&&null!==this.axis){null!==t&&zC.setFromCamera(t,this.camera);const e=eI(this._plane,zC,!0);e&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(e.point).sub(this.worldPositionStart)),this.dragging=!0,WC.mode=this.mode,this.dispatchEvent(WC)}}pointerMove(t){const e=this.axis,n=this.mode,i=this.object;let r=this.space;if("scale"===n?r="local":"E"!==e&&"XYZE"!==e&&"XYZ"!==e||(r="world"),void 0===i||null===e||!1===this.dragging||null!==t&&-1!==t.button)return;null!==t&&zC.setFromCamera(t,this.camera);const s=eI(this._plane,zC,!0);if(s){if(this.pointEnd.copy(s.point).sub(this.worldPositionStart),"translate"===n)this._offset.copy(this.pointEnd).sub(this.pointStart),"local"===r&&"XYZ"!==e&&this._offset.applyQuaternion(this._worldQuaternionInv),-1===e.indexOf("X")&&(this._offset.x=0),-1===e.indexOf("Y")&&(this._offset.y=0),-1===e.indexOf("Z")&&(this._offset.z=0),"local"===r&&"XYZ"!==e?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),i.position.copy(this._offset).add(this._positionStart),this.translationSnap&&("local"===r&&(i.position.applyQuaternion(VC.copy(this._quaternionStart).invert()),-1!==e.search("X")&&(i.position.x=Math.round(i.position.x/this.translationSnap)*this.translationSnap),-1!==e.search("Y")&&(i.position.y=Math.round(i.position.y/this.translationSnap)*this.translationSnap),-1!==e.search("Z")&&(i.position.z=Math.round(i.position.z/this.translationSnap)*this.translationSnap),i.position.applyQuaternion(this._quaternionStart)),"world"===r&&(i.parent&&i.position.add(GC.setFromMatrixPosition(i.parent.matrixWorld)),-1!==e.search("X")&&(i.position.x=Math.round(i.position.x/this.translationSnap)*this.translationSnap),-1!==e.search("Y")&&(i.position.y=Math.round(i.position.y/this.translationSnap)*this.translationSnap),-1!==e.search("Z")&&(i.position.z=Math.round(i.position.z/this.translationSnap)*this.translationSnap),i.parent&&i.position.sub(GC.setFromMatrixPosition(i.parent.matrixWorld)))),i.position.x=Math.max(this.minX,Math.min(this.maxX,i.position.x)),i.position.y=Math.max(this.minY,Math.min(this.maxY,i.position.y)),i.position.z=Math.max(this.minZ,Math.min(this.maxZ,i.position.z));else if("scale"===n){if(-1!==e.search("XYZ")){let t=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(t*=-1),HC.set(t,t,t)}else GC.copy(this.pointStart),HC.copy(this.pointEnd),GC.applyQuaternion(this._worldQuaternionInv),HC.applyQuaternion(this._worldQuaternionInv),HC.divide(GC),-1===e.search("X")&&(HC.x=1),-1===e.search("Y")&&(HC.y=1),-1===e.search("Z")&&(HC.z=1);i.scale.copy(this._scaleStart).multiply(HC),this.scaleSnap&&(-1!==e.search("X")&&(i.scale.x=Math.round(i.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==e.search("Y")&&(i.scale.y=Math.round(i.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==e.search("Z")&&(i.scale.z=Math.round(i.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if("rotate"===n){this._offset.copy(this.pointEnd).sub(this.pointStart);const t=20/this.worldPosition.distanceTo(GC.setFromMatrixPosition(this.camera.matrixWorld));let n=!1;"XYZE"===e?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(GC.copy(this.rotationAxis).cross(this.eye))*t):"X"!==e&&"Y"!==e&&"Z"!==e||(this.rotationAxis.copy(qC[e]),GC.copy(qC[e]),"local"===r&&GC.applyQuaternion(this.worldQuaternion),GC.cross(this.eye),0===GC.length()?n=!0:this.rotationAngle=this._offset.dot(GC.normalize())*t),("E"===e||n)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),"local"===r&&"E"!==e&&"XYZE"!==e?(i.quaternion.copy(this._quaternionStart),i.quaternion.multiply(VC.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),i.quaternion.copy(VC.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),i.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(YC),this.dispatchEvent(jC)}}pointerUp(t){null!==t&&0!==t.button||(this.dragging&&null!==this.axis&&(JC.mode=this.mode,this.dispatchEvent(JC)),this.dragging=!1,this.axis=null)}dispose(){this.disconnect(),this._root.dispose()}attach(t){return this.object=t,this._root.visible=!0,this}detach(){return this.object=void 0,this.axis=null,this._root.visible=!1,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(YC),this.dispatchEvent(jC),this.pointStart.copy(this.pointEnd))}getRaycaster(){return zC}getMode(){return this.mode}setMode(t){this.mode=t}setTranslationSnap(t){this.translationSnap=t}setRotationSnap(t){this.rotationSnap=t}setScaleSnap(t){this.scaleSnap=t}setSize(t){this.size=t}setSpace(t){this.space=t}setColors(t,e,n,i){const r=this._gizmo.materialLib;r.xAxis.color.set(t),r.yAxis.color.set(e),r.zAxis.color.set(n),r.active.color.set(i),r.xAxisTransparent.color.set(t),r.yAxisTransparent.color.set(e),r.zAxisTransparent.color.set(n),r.activeTransparent.color.set(i),r.xAxis._color&&r.xAxis._color.set(t),r.yAxis._color&&r.yAxis._color.set(e),r.zAxis._color&&r.zAxis._color.set(n),r.active._color&&r.active._color.set(i),r.xAxisTransparent._color&&r.xAxisTransparent._color.set(t),r.yAxisTransparent._color&&r.yAxisTransparent._color.set(e),r.zAxisTransparent._color&&r.zAxisTransparent._color.set(n),r.activeTransparent._color&&r.activeTransparent._color.set(i)}},i.CSS3DRenderer=class{constructor(t={}){const e=this;let n,i,r,s;const a={camera:{style:""},objects:new WeakMap},o=void 0!==t.element?t.element:document.createElement("div");o.style.overflow="hidden",this.domElement=o;const l=document.createElement("div");l.style.transformOrigin="0 0",l.style.pointerEvents="none",o.appendChild(l);const c=document.createElement("div");function h(t){return Math.abs(t)<1e-10?0:t}function A(t){const e=t.elements;return"matrix3d("+h(e[0])+","+h(-e[1])+","+h(e[2])+","+h(e[3])+","+h(e[4])+","+h(-e[5])+","+h(e[6])+","+h(e[7])+","+h(e[8])+","+h(-e[9])+","+h(e[10])+","+h(e[11])+","+h(e[12])+","+h(-e[13])+","+h(e[14])+","+h(e[15])+")"}function u(t){const e=t.elements;return"translate(-50%,-50%)matrix3d("+h(e[0])+","+h(e[1])+","+h(e[2])+","+h(e[3])+","+h(-e[4])+","+h(-e[5])+","+h(-e[6])+","+h(-e[7])+","+h(e[8])+","+h(e[9])+","+h(e[10])+","+h(e[11])+","+h(e[12])+","+h(e[13])+","+h(e[14])+","+h(e[15])+")"}function d(t){t.isCSS3DObject&&(t.element.style.display="none");for(let e=0,n=t.children.length;e<n;e++)d(t.children[e])}function p(t,n,i,r){if(!1!==t.visible){if(t.isCSS3DObject){const r=!0===t.layers.test(i.layers),s=t.element;if(s.style.display=!0===r?"":"none",!0===r){let r;t.onBeforeRender(e,n,i),t.isCSS3DSprite?(Gv.copy(i.matrixWorldInverse),Gv.transpose(),0!==t.rotation2D&&Gv.multiply(Hv.makeRotationZ(t.rotation2D)),t.matrixWorld.decompose(kv,Ov,zv),Gv.setPosition(kv),Gv.scale(zv),Gv.elements[3]=0,Gv.elements[7]=0,Gv.elements[11]=0,Gv.elements[15]=1,r=u(Gv)):r=u(t.matrixWorld);const o=a.objects.get(t);if(void 0===o||o.style!==r){s.style.transform=r;const e={style:r};a.objects.set(t,e)}s.parentNode!==c&&c.appendChild(s),t.onAfterRender(e,n,i)}}for(let e=0,s=t.children.length;e<s;e++)p(t.children[e],n,i,r)}else d(t)}c.style.transformStyle="preserve-3d",l.appendChild(c),this.getSize=function(){return{width:n,height:i}},this.render=function(t,e){const o=e.projectionMatrix.elements[5]*s;let u,d;e.view&&e.view.enabled?(l.style.transform=`translate( ${-e.view.offsetX*(n/e.view.width)}px, ${-e.view.offsetY*(i/e.view.height)}px )`,l.style.transform+=`scale( ${e.view.fullWidth/e.view.width}, ${e.view.fullHeight/e.view.height} )`):l.style.transform="",!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),e.isOrthographicCamera&&(u=-(e.right+e.left)/2,d=(e.top+e.bottom)/2);const g=e.view&&e.view.enabled?e.view.height/e.view.fullHeight:1,f=e.isOrthographicCamera?`scale( ${g} )scale(`+o+")translate("+h(u)+"px,"+h(d)+"px)"+A(e.matrixWorldInverse):`scale( ${g} )translateZ(`+o+"px)"+A(e.matrixWorldInverse),m=(e.isPerspectiveCamera?"perspective("+o+"px) ":"")+f+"translate("+r+"px,"+s+"px)";a.camera.style!==m&&(c.style.transform=m,a.camera.style=m),p(t,t,e,f)},this.setSize=function(t,e){n=t,i=e,r=n/2,s=i/2,o.style.width=t+"px",o.style.height=e+"px",l.style.width=t+"px",l.style.height=e+"px",c.style.width=t+"px",c.style.height=e+"px"}}},i.CSS3DObject=class extends Hr{constructor(t=document.createElement("div")){super(),this.isCSS3DObject=!0,this.element=t,this.element.style.position="absolute",this.element.style.pointerEvents="auto",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.addEventListener("removed",function(){this.traverse(function(t){t.element instanceof t.element.ownerDocument.defaultView.Element&&null!==t.element.parentNode&&t.element.remove()})})}copy(t,e){return super.copy(t,e),this.element=t.element.cloneNode(!0),this}},l.TilesFadePlugin=class{get fadeDuration(){return this._fadeManager.duration}set fadeDuration(t){this._fadeManager.duration=Number(t)}get fadingTiles(){return this._fadeManager.fadeCount}constructor(t){t={maximumFadeOutTiles:50,fadeRootTiles:!1,fadeDuration:250,...t},this.name="FADE_TILES_PLUGIN",this.priority=-2,this.tiles=null,this.batchedMesh=null,this._quickFadeTiles=new Set,this._fadeManager=new yD,this._fadeMaterialManager=new CD,this._prevCameraTransforms=null,this._fadingOutCount=0,this.maximumFadeOutTiles=t.maximumFadeOutTiles,this.fadeRootTiles=t.fadeRootTiles,this.fadeDuration=t.fadeDuration}init(t){this._onLoadModel=({scene:t})=>{this._fadeMaterialManager.prepareScene(t)},this._onDisposeModel=({tile:t,scene:e})=>{this.tiles.visibleTiles.has(t)&&this._quickFadeTiles.add(t.parent),this._fadeManager.deleteObject(t),this._fadeMaterialManager.deleteScene(e)},this._onAddCamera=({camera:t})=>{this._prevCameraTransforms.set(t,new fr)},this._onDeleteCamera=({camera:t})=>{this._prevCameraTransforms.delete(t)},this._onTileVisibilityChange=({tile:t,visible:e})=>{const n=t.cached.scene;n&&(n.visible=!0),this.forEachBatchIds(t,(t,e,n)=>{e.setFadeAt(t,0,0),e.setVisibleAt(t,!1),n.batchedMesh.setVisibleAt(t,!1)})},this._onUpdateBefore=()=>{QD.call(this)},this._onUpdateAfter=()=>{DD.call(this)},t.addEventListener("load-model",this._onLoadModel),t.addEventListener("dispose-model",this._onDisposeModel),t.addEventListener("add-camera",this._onAddCamera),t.addEventListener("delete-camera",this._onDeleteCamera),t.addEventListener("update-before",this._onUpdateBefore),t.addEventListener("update-after",this._onUpdateAfter),t.addEventListener("tile-visibility-change",this._onTileVisibilityChange);const e=this._fadeManager;e.onFadeSetStart=()=>{t.dispatchEvent({type:"fade-start"}),t.dispatchEvent({type:"needs-render"})},e.onFadeSetComplete=()=>{t.dispatchEvent({type:"fade-end"}),t.dispatchEvent({type:"needs-render"})},e.onFadeComplete=(e,n)=>{this._fadeMaterialManager.setFade(e.cached.scene,0,0),this.forEachBatchIds(e,(t,e,i)=>{e.setFadeAt(t,0,0),e.setVisibleAt(t,!1),i.batchedMesh.setVisibleAt(t,n)}),n||(t.invokeOnePlugin(t=>t!==this&&t.setTileVisible&&t.setTileVisible(e,!1)),this._fadingOutCount--)};const n=new Map;t.cameras.forEach(t=>{n.set(t,new fr)}),t.forEachLoadedModel((t,e)=>{this._onLoadModel({scene:t})}),this.tiles=t,this._fadeManager=e,this._prevCameraTransforms=n}initBatchedMesh(){var t;const e=null==(t=this.tiles.getPluginByName("BATCHED_TILES_PLUGIN"))?void 0:t.batchedMesh;if(e){if(null===this.batchedMesh){this._onBatchedMeshDispose=()=>{this.batchedMesh.dispose(),this.batchedMesh.removeFromParent(),this.batchedMesh=null,e.removeEventListener("dispose",this._onBatchedMeshDispose)};const t=e.material.clone();t.onBeforeCompile=e.material.onBeforeCompile,this.batchedMesh=new ED(e,t),this.tiles.group.add(this.batchedMesh)}}else null!==this.batchedMesh&&(this._onBatchedMeshDispose(),this._onBatchedMeshDispose=null)}setTileVisible(t,e){const n=this._fadeManager,i=n.isFading(t);if(n.isFadingOut(t)&&this._fadingOutCount--,e?1===t.__depthFromRenderedParent?((t[_D]||this.fadeRootTiles)&&this._fadeManager.fadeIn(t),t[_D]=!0):this._fadeManager.fadeIn(t):(this._fadingOutCount++,n.fadeOut(t)),this._quickFadeTiles.has(t)&&(this._fadeManager.completeFade(t),this._quickFadeTiles.delete(t)),i)return!0;const r=this._fadeManager.isFading(t);return!(e||!r)}dispose(){const t=this.tiles;this._fadeManager.completeAllFades(),null!==this.batchedMesh&&this._onBatchedMeshDispose(),t.removeEventListener("load-model",this._onLoadModel),t.removeEventListener("dispose-model",this._onDisposeModel),t.removeEventListener("add-camera",this._onAddCamera),t.removeEventListener("delete-camera",this._onDeleteCamera),t.removeEventListener("update-before",this._onUpdateBefore),t.removeEventListener("update-after",this._onUpdateAfter),t.removeEventListener("tile-visibility-change",this._onTileVisibilityChange),t.forEachLoadedModel((t,e)=>{this._fadeManager.deleteObject(e),t&&(t.visible=!0)})}forEachBatchIds(t,e){if(this.initBatchedMesh(),this.batchedMesh){const n=this.tiles.getPluginByName("BATCHED_TILES_PLUGIN"),i=n.getTileBatchIds(t);i&&i.forEach(t=>{e(t,this.batchedMesh,n)})}}},l.ImplicitTilingPlugin=class{constructor(){this.name="IMPLICIT_TILING_PLUGIN"}init(t){this.tiles=t}preprocessNode(t,e,n){var i;t.implicitTiling?(t.__hasUnrenderableContent=!0,t.__hasRenderableContent=!1,t.__subtreeIdx=0,t.__implicitRoot=t,t.__x=0,t.__y=0,t.__z=0,t.__level=0):/.subtree$/i.test(null==(i=t.content)?void 0:i.uri)&&(t.__hasUnrenderableContent=!0,t.__hasRenderableContent=!1)}parseTile(t,e,n){if(/^subtree$/i.test(n)){const n=new FD(e);return n.workingPath=e.__basePath,n.fetchOptions=this.tiles.fetchOptions,n.parse(t)}}preprocessURL(t,e){if(e&&e.implicitTiling){const t=e.implicitTiling.subtrees.uri.replace("{level}",e.__level).replace("{x}",e.__x).replace("{y}",e.__y).replace("{z}",e.__z);return new URL(t,e.__basePath+"/").toString()}return t}disposeTile(t){var e;/.subtree$/i.test(null==(e=t.content)?void 0:e.uri)&&(t.children.forEach(t=>{this.tiles.processNodeQueue.remove(t)}),t.children.length=0,t.__childrenProcessed=0)}},l.DeepZoomImagePlugin=class extends hD{constructor(t={}){const{url:e,...n}=t;super(n),this.name="DZI_TILES_PLUGIN",this.imageSource=new RD({url:e})}},l.UpdateOnChangePlugin=class{constructor(){this.name="UPDATE_ON_CHANGE_PLUGIN",this.tiles=null,this.needsUpdate=!1,this.cameraMatrices=new Map}init(t){this.tiles=t,this._needsUpdateCallback=()=>{this.needsUpdate=!0},this._onCameraAdd=({camera:t})=>{this.needsUpdate=!0,this.cameraMatrices.set(t,new fr)},this._onCameraDelete=({camera:t})=>{this.needsUpdate=!0,this.cameraMatrices.delete(t)},t.addEventListener("needs-update",this._needsUpdateCallback),t.addEventListener("add-camera",this._onCameraAdd),t.addEventListener("delete-camera",this._onCameraDelete),t.addEventListener("camera-resolution-change",this._needsUpdateCallback),t.cameras.forEach(t=>{this._onCameraAdd({camera:t})})}doTilesNeedUpdate(){const t=this.tiles;let e=!1;this.cameraMatrices.forEach((n,i)=>{fD.copy(t.group.matrixWorld).premultiply(i.matrixWorldInverse).premultiply(i.projectionMatrixInverse),e=e||!fD.equals(n),n.copy(fD)});const n=this.needsUpdate;return this.needsUpdate=!1,n||e}preprocessNode(){this.needsUpdate=!0}dispose(){const t=this.tiles;t.removeEventListener("camera-resolution-change",this._needsUpdateCallback),t.removeEventListener("needs-update",this._needsUpdateCallback),t.removeEventListener("add-camera",this._onCameraAdd),t.removeEventListener("delete-camera",this._onCameraDelete)}},window.THREE=i,window.ThreeMeshUI=Mw,window.ThreeMeshBVH=o,window.TILES=l,window.SPARK=c,window.CustomShaderMaterial=class extends As{constructor({baseMaterial:t,vertexShader:e,fragmentShader:n,uniforms:i,patchMap:r,cacheKey:s,...a}){if(!t)throw new Error("CustomShaderMaterial: baseMaterial is required.");let o;if(function(t){try{new t}catch(t){if(t.message.indexOf("is not a constructor")>=0)return!1}return!0}(t)){const e=0===Object.keys(a).length;o=new t(e?void 0:a)}else o=t,Object.assign(o,a);if(["ShaderMaterial","RawShaderMaterial"].includes(o.type))throw new Error(`CustomShaderMaterial does not support ${o.type} as a base material.`);super(),this.uniforms={},this.vertexShader="",this.fragmentShader="";const l=o;l.name=`CustomShaderMaterial<${o.name||o.type}>`,l.update=this.update,l.__csm={prevOnBeforeCompile:o.onBeforeCompile,baseMaterial:o,vertexShader:e,fragmentShader:n,uniforms:i,patchMap:r,cacheKey:s};const c={...l.uniforms||{},...i||{}};l.uniforms=this.uniforms=c,l.vertexShader=this.vertexShader=e||"",l.fragmentShader=this.fragmentShader=n||"",l.update({fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:l.uniforms,patchMap:r,cacheKey:s}),Object.assign(this,l);const h=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(l));for(const t in h){const e=h[t];(e.get||e.set)&&Object.defineProperty(this,t,e)}return Object.defineProperty(this,"type",{get:()=>o.type,set(t){o.type=t}}),this}update({fragmentShader:t,vertexShader:e,uniforms:n,cacheKey:i,patchMap:r}){const s=zI(e||""),a=zI(t||""),o=this;n&&(o.uniforms=n),e&&(o.vertexShader=e),t&&(o.fragmentShader=t),Object.entries(OI).forEach(([t,e])=>{for(const n in e){const i=e[n];(a&&a.includes(i)||s&&s.includes(i))&&(o[t]||(o[t]=1))}});const l=o.__csm.prevOnBeforeCompile,c=(t,e,n)=>{let i,r="";if(e){const t=e.search(/void\s+main\s*\(\s*\)\s*{/);if(-1!==t){r=e.slice(0,t);let n=0,s=-1;for(let i=t;i<e.length;i++)if("{"===e[i]&&n++,"}"===e[i]&&(n--,0===n)){s=i;break}if(-1!==s){const n=e.slice(t,s+1);i=n.slice(n.indexOf("{")+1,-1)}}else r=e}if(n&&e&&e.includes(DI)&&i&&(i="csm_UnlitFac = 1.0;\n"+i),t.includes("//~CSM_DEFAULTS")){const e=(t=t.replace("void main() {",`\n          // THREE-CustomShaderMaterial by Faraz Shaikh: https://github.com/FarazzShaikh/THREE-CustomShaderMaterial\n  \n          ${r}\n          \n          void main() {\n          `)).lastIndexOf("//~CSM_MAIN_END");if(-1!==e){const n=`\n            ${i?`${i}`:""}\n            //~CSM_MAIN_END\n          `;t=t.slice(0,e)+n+t.slice(e)}}else{const e=/void\s*main\s*\(\s*\)\s*{/gm;t=t.replace(e,`\n          // THREE-CustomShaderMaterial by Faraz Shaikh: https://github.com/FarazzShaikh/THREE-CustomShaderMaterial\n  \n          //~CSM_DEFAULTS\n          \n    varying mat4 csm_internal_vModelViewMatrix;\n\n          \n    \n#ifdef IS_VERTEX\n    vec3 csm_Position;\n    vec4 csm_PositionRaw;\n    vec3 csm_Normal;\n\n    // csm_PointSize\n    #ifdef IS_POINTSMATERIAL\n        float csm_PointSize;\n    #endif\n#else\n    vec4 csm_DiffuseColor;\n    vec4 csm_FragColor;\n    float csm_UnlitFac;\n\n    // csm_Emissive, csm_Roughness, csm_Metalness\n    #if defined IS_MESHSTANDARDMATERIAL || defined IS_MESHPHYSICALMATERIAL\n        vec3 csm_Emissive;\n        float csm_Roughness;\n        float csm_Metalness;\n        float csm_Iridescence;\n        \n        #if defined IS_MESHPHYSICALMATERIAL\n            float csm_Clearcoat;\n            float csm_ClearcoatRoughness;\n            vec3 csm_ClearcoatNormal;\n            float csm_Transmission;\n            float csm_Thickness;\n        #endif\n    #endif\n\n    // csm_AO\n    #if defined IS_MESHSTANDARDMATERIAL || defined IS_MESHPHYSICALMATERIAL || defined IS_MESHBASICMATERIAL || defined IS_MESHLAMBERTMATERIAL || defined IS_MESHPHONGMATERIAL || defined IS_MESHTOONMATERIAL\n        float csm_AO;\n    #endif\n\n    // csm_FragNormal\n    #if defined IS_MESHLAMBERTMATERIAL || defined IS_MESHMATCAPMATERIAL || defined IS_MESHNORMALMATERIAL || defined IS_MESHPHONGMATERIAL || defined IS_MESHPHYSICALMATERIAL || defined IS_MESHSTANDARDMATERIAL || defined IS_MESHTOONMATERIAL || defined IS_SHADOWMATERIAL \n        vec3 csm_FragNormal;\n    #endif\n\n    float csm_DepthAlpha;\n#endif\n\n  \n          ${r}\n          \n          void main() {\n            {\n              \n\n#ifdef IS_VERTEX\n    // csm_Position & csm_PositionRaw\n    #ifdef IS_UNKNOWN\n        csm_Position = vec3(0.0);\n        csm_PositionRaw = vec4(0.0);\n        csm_Normal = vec3(0.0);\n    #else\n        csm_Position = position;\n        csm_PositionRaw = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n        csm_Normal = normal;\n    #endif\n\n    // csm_PointSize\n    #ifdef IS_POINTSMATERIAL\n        csm_PointSize = size;\n    #endif\n#else\n    csm_UnlitFac = 0.0;\n\n    // csm_DiffuseColor & csm_FragColor\n    #if defined IS_UNKNOWN || defined IS_SHADERMATERIAL || defined IS_MESHDEPTHMATERIAL || defined IS_MESHDISTANCEMATERIAL || defined IS_MESHNORMALMATERIAL || defined IS_SHADOWMATERIAL\n        csm_DiffuseColor = vec4(1.0, 0.0, 1.0, 1.0);\n        csm_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\n    #else\n        #ifdef USE_MAP\n            vec4 _csm_sampledDiffuseColor = texture2D(map, vMapUv);\n\n            #ifdef DECODE_VIDEO_TEXTURE\n            // inline sRGB decode (TODO: Remove this code when https://crbug.com/1256340 is solved)\n            _csm_sampledDiffuseColor = vec4(mix(pow(_csm_sampledDiffuseColor.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), _csm_sampledDiffuseColor.rgb * 0.0773993808, vec3(lessThanEqual(_csm_sampledDiffuseColor.rgb, vec3(0.04045)))), _csm_sampledDiffuseColor.w);\n            #endif\n\n            csm_DiffuseColor = vec4(diffuse, opacity) * _csm_sampledDiffuseColor;\n            csm_FragColor = vec4(diffuse, opacity) * _csm_sampledDiffuseColor;\n        #else\n            csm_DiffuseColor = vec4(diffuse, opacity);\n            csm_FragColor = vec4(diffuse, opacity);\n        #endif\n    #endif\n\n    // csm_Emissive, csm_Roughness, csm_Metalness\n    #if defined IS_MESHSTANDARDMATERIAL || defined IS_MESHPHYSICALMATERIAL\n        csm_Emissive = emissive;\n        csm_Roughness = roughness;\n        csm_Metalness = metalness;\n\n        #ifdef USE_IRIDESCENCE\n            csm_Iridescence = iridescence;\n        #else\n            csm_Iridescence = 0.0;\n        #endif\n\n        #if defined IS_MESHPHYSICALMATERIAL\n            #ifdef USE_CLEARCOAT\n                csm_Clearcoat = clearcoat;\n                csm_ClearcoatRoughness = clearcoatRoughness;\n            #else\n                csm_Clearcoat = 0.0;\n                csm_ClearcoatRoughness = 0.0;\n            #endif\n\n            #ifdef USE_TRANSMISSION\n                csm_Transmission = transmission;\n                csm_Thickness = thickness;\n            #else\n                csm_Transmission = 0.0;\n                csm_Thickness = 0.0;\n            #endif\n        #endif\n    #endif\n\n    // csm_AO\n    #if defined IS_MESHSTANDARDMATERIAL || defined IS_MESHPHYSICALMATERIAL || defined IS_MESHBASICMATERIAL || defined IS_MESHLAMBERTMATERIAL || defined IS_MESHPHONGMATERIAL || defined IS_MESHTOONMATERIAL\n        csm_AO = 0.0;\n    #endif\n\n    #if defined IS_MESHLAMBERTMATERIAL || defined IS_MESHMATCAPMATERIAL || defined IS_MESHNORMALMATERIAL || defined IS_MESHPHONGMATERIAL || defined IS_MESHPHYSICALMATERIAL || defined IS_MESHSTANDARDMATERIAL || defined IS_MESHTOONMATERIAL || defined IS_SHADOWMATERIAL \n        #ifdef FLAT_SHADED\n            vec3 fdx = dFdx( vViewPosition );\n            vec3 fdy = dFdy( vViewPosition );\n            csm_FragNormal = normalize( cross( fdx, fdy ) );\n        #else\n            csm_FragNormal = normalize(vNormal);\n            #ifdef DOUBLE_SIDED\n                csm_FragNormal *= gl_FrontFacing ? 1.0 : - 1.0;\n            #endif\n        #endif\n    #endif\n\n    csm_DepthAlpha = 1.0;\n#endif\n\n            }\n            ${n?"\n    \n":"\n    csm_internal_vModelViewMatrix = modelViewMatrix;\n"}\n\n            ${i?`${i}`:""}\n            //~CSM_MAIN_END\n          `)}return t};o.onBeforeCompile=(t,e)=>{null==l||l(t,e);const i=r||{},h=o.type,A=h?`#define IS_${h.toUpperCase()};\n`:"#define IS_UNKNOWN;\n";t.vertexShader=A+"#define IS_VERTEX\n"+t.vertexShader,t.fragmentShader=A+"#define IS_FRAGMENT\n"+t.fragmentShader;const u=e=>{for(const n in e){const i="*"===n||s&&s.includes(n);if("*"===n||a&&a.includes(n)||i){const i=NI[n];if(i&&"*"!==i&&(Array.isArray(i)?!i.includes(h):i!==h))return void console.error(`CustomShaderMaterial: ${n} is not available in ${h}. Shader cannot compile.`);const r=e[n];for(const e in r){const n=r[e];if("object"==typeof n){const i=n.type,r=n.value;"fs"===i?t.fragmentShader=t.fragmentShader.replace(e,r):"vs"===i&&(t.vertexShader=t.vertexShader.replace(e,r))}else n&&(t.vertexShader=t.vertexShader.replace(e,n),t.fragmentShader=t.fragmentShader.replace(e,n))}}}};u(kI),u(i),t.vertexShader=c(t.vertexShader,s,!1),t.fragmentShader=c(t.fragmentShader,a,!0),n&&(t.uniforms={...t.uniforms,...o.uniforms}),o.uniforms=t.uniforms};const h=o.customProgramCacheKey;o.customProgramCacheKey=()=>((null==i?void 0:i())||function(t){let e=0;for(let n=0;n<t.length;n++)e=t.charCodeAt(n)+(e<<6)+(e<<16)-e;return String(e>>>0)}((s||"")+(a||"")))+(null==h?void 0:h.call(o)),o.needsUpdate=!0}clone(){const t=this;return new t.constructor({baseMaterial:t.__csm.baseMaterial.clone(),vertexShader:t.__csm.vertexShader,fragmentShader:t.__csm.fragmentShader,uniforms:t.__csm.uniforms,patchMap:t.__csm.patchMap,cacheKey:t.__csm.cacheKey})}}})();